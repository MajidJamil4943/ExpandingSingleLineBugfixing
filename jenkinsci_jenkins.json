[
    {
        "commit_id": "f91ebb42382ae058d29da319c83bf42cef89b32d",
        "commit_message": "[JENKINS-73907] Fix double-escaped tooltips in \"Help for feature\" (#10000)\n\nCo-authored-by: Daniel Beck <daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f91ebb42382ae058d29da319c83bf42cef89b32d",
        "buggy_code": "assertThat(\"tooltip contains safe text\", jsResultString, containsString(\"lt;img src=x\"));",
        "fixed_code": "assertThat(\"tooltip contains safe text\", jsResultString, containsString(\" &lt;img src=x\"));",
        "patch": "@@ -49,7 +49,7 @@ private void noCrossSiteScriptingInHelp(String selector) throws Exception {\n \n         // assert leading space to identify unintentional double-escaping (&amp;lt;) as test failure\n         assertThat(\"tooltip does not contain dangerous HTML\", jsResultString, not(containsString(\" <img src=x\")));\n-        assertThat(\"tooltip contains safe text\", jsResultString, containsString(\"lt;img src=x\"));\n+        assertThat(\"tooltip contains safe text\", jsResultString, containsString(\" &lt;img src=x\"));\n     }\n \n     @TestExtension"
    },
    {
        "commit_id": "9e256de2d1e13dbf436a7cd51b8ed26d01b52a77",
        "commit_message": "[JENKINS-73845] Fix OperatingSystemEndOfLifeAdminMonitor endOfLifeDate displayed on first warning day (#9908)\n\n* [JENKINS-73845] Fix OperatingSystemEndOfLifeAdminMonitor endOfLifeDate displayed on first warning day\r\n\r\n* [JENKINS-73845] Add test\r\n\r\n* [JENKINS-73845] Improve test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9e256de2d1e13dbf436a7cd51b8ed26d01b52a77",
        "buggy_code": "if (startDate.isBefore(LocalDate.now())) {",
        "fixed_code": "if (!startDate.isAfter(LocalDate.now())) {",
        "patch": "@@ -145,7 +145,7 @@ void readOperatingSystemList(String initialOperatingSystemJson) throws IOExcepti\n             }\n \n             LOGGER.log(Level.FINE, \"Matched operating system {0}\", name);\n-            if (startDate.isBefore(LocalDate.now())) {\n+            if (!startDate.isAfter(LocalDate.now())) {\n                 this.operatingSystemName = name;\n                 this.documentationUrl = buildDocumentationUrl(this.operatingSystemName);\n                 this.endOfLifeDate = endOfLife.toString();"
    },
    {
        "commit_id": "d34b17ee4b85787be56a2d6f32186e3839d5482d",
        "commit_message": "[JENKINS-73835] Do not allow builds to be deleted while they are still running and ensure build discarders run after builds are fully complete (#9810)\n\n* [JENKINS-73835] Do not allow builds to be deleted while they are still running\r\n\r\n* [JENKINS-73835] Avoid redundant calls to Job.logRotate when builds complete and always call Job.logRotate after build finalization\r\n\r\n* [JENKINS-73835] Add issue reference to RunTest.buildsMayNotBeDeletedWhileRunning\r\n\r\n* [JENKINS-73835] Adjust DeleteBuildsCommandTest.deleteBuildsShouldSuccessEvenTheBuildIsRunning to match new behavior\r\n\r\n* [JENKINS-73835] Run/delete.jelly should check Run.isLogUpdated, not Run.isBuilding",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d34b17ee4b85787be56a2d6f32186e3839d5482d",
        "buggy_code": "if (r.isBuilding()) {",
        "fixed_code": "if (r.isLogUpdated()) {",
        "patch": "@@ -250,7 +250,7 @@ private boolean shouldKeepRun(Run r, Run lsb, Run lstb) {\n             LOGGER.log(FINER, \"{0} is not to be removed or purged of artifacts because it\u2019s the last stable build\", r);\n             return true;\n         }\n-        if (r.isBuilding()) {\n+        if (r.isLogUpdated()) {\n             LOGGER.log(FINER, \"{0} is not to be removed or purged of artifacts because it\u2019s still building\", r);\n             return true;\n         }"
    },
    {
        "commit_id": "9045a3db167a8f7294b2422ef39070aa71a3503c",
        "commit_message": "Fix PathRemoverTest timeout in RISC-V devices. (#9661)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9045a3db167a8f7294b2422ef39070aa71a3503c",
        "buggy_code": "@Rule public Timeout timeout = new Timeout(10, TimeUnit.SECONDS);",
        "fixed_code": "@Rule public Timeout timeout = new Timeout(30, TimeUnit.SECONDS);",
        "patch": "@@ -69,7 +69,7 @@\n public class PathRemoverTest {\n \n     @Rule public TemporaryFolder tmp = new TemporaryFolder();\n-    @Rule public Timeout timeout = new Timeout(10, TimeUnit.SECONDS);\n+    @Rule public Timeout timeout = new Timeout(30, TimeUnit.SECONDS);\n     @Rule public FileLockerRule locker = new FileLockerRule();\n \n     @Test"
    },
    {
        "commit_id": "dc36857468f76e74ea7686bd863b2943d0107223",
        "commit_message": "Cover new logic and fix check",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/dc36857468f76e74ea7686bd863b2943d0107223",
        "buggy_code": "return Jenkins.get().hasPermission(m.getRequiredPermission()) && m.isEnabled() && m.isActivated();",
        "fixed_code": "return m.hasRequiredPermission() && m.isEnabled() && m.isActivated();",
        "patch": "@@ -2360,7 +2360,7 @@ public List<AdministrativeMonitor> getActiveAdministrativeMonitors() {\n         }\n         return administrativeMonitors.stream().filter(m -> {\n             try {\n-                return Jenkins.get().hasPermission(m.getRequiredPermission()) && m.isEnabled() && m.isActivated();\n+                return m.hasRequiredPermission() && m.isEnabled() && m.isActivated();\n             } catch (Throwable x) {\n                 LOGGER.log(Level.WARNING, null, x);\n                 return false;"
    },
    {
        "commit_id": "16b5d210525f1e0b31d15b6cf4a06c291099e049",
        "commit_message": "[JENKINS-14789] Configurable interval for computer retention check (#7037)\n\n* [JENKINS-14789] Configurable interval for computer retention check\r\n\r\nAlso update the lower bound delay as returned by each RetentionStrategy\r\n from 1min to 0min. This is enabling check intervals of <1min to trigger\r\n a re-check in the next cycle (previously, the nextCheck tracking would\r\n defer the next re-check into the 2nd cycle -- one for the timer loop\r\n and once for the nextCheck timestamp).\r\n\r\nIncludes a bug fix:\r\n`CloudSlaveRetentionStrategy` tracks the agent timeout in milliseconds\r\n internally and returned the nextCheck delay as a tenth of that.\r\nThe nextCheck delay is consumed in minutes, leading to the max delay\r\n of one hour being used.\r\nFix: Convert the delay from milliseconds to minutes.\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Allow a check interval of one second\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Apply review feedback\r\n\r\n- Double down on JavaDoc\r\n- Migrate UI to jelly\r\n\r\nCo-Authored-By: Alexander Brandes <mc.cache@web.de>\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Store computerRetentionCheckInterval in model instance\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Add missing javadoc comment\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Add tests for model\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Use AperiodicWork for ComputerRetentionWork\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] limit computer retention check interval to 60s\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] apply review feedback\r\n\r\nCo-authored-by: Tim Jacomb <21194782+timja@users.noreply.github.com>\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\nCo-authored-by: Alexander Brandes <mc.cache@web.de>\r\nCo-authored-by: Tim Jacomb <21194782+timja@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/16b5d210525f1e0b31d15b6cf4a06c291099e049",
        "buggy_code": "return 1;",
        "fixed_code": "return 0;",
        "patch": "@@ -64,7 +64,7 @@ public long check(final AbstractCloudComputer c) {\n                 }\n             }\n         }\n-        return 1;\n+        return 0;\n     }\n \n     /**"
    },
    {
        "commit_id": "16b5d210525f1e0b31d15b6cf4a06c291099e049",
        "commit_message": "[JENKINS-14789] Configurable interval for computer retention check (#7037)\n\n* [JENKINS-14789] Configurable interval for computer retention check\r\n\r\nAlso update the lower bound delay as returned by each RetentionStrategy\r\n from 1min to 0min. This is enabling check intervals of <1min to trigger\r\n a re-check in the next cycle (previously, the nextCheck tracking would\r\n defer the next re-check into the 2nd cycle -- one for the timer loop\r\n and once for the nextCheck timestamp).\r\n\r\nIncludes a bug fix:\r\n`CloudSlaveRetentionStrategy` tracks the agent timeout in milliseconds\r\n internally and returned the nextCheck delay as a tenth of that.\r\nThe nextCheck delay is consumed in minutes, leading to the max delay\r\n of one hour being used.\r\nFix: Convert the delay from milliseconds to minutes.\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Allow a check interval of one second\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Apply review feedback\r\n\r\n- Double down on JavaDoc\r\n- Migrate UI to jelly\r\n\r\nCo-Authored-By: Alexander Brandes <mc.cache@web.de>\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Store computerRetentionCheckInterval in model instance\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Add missing javadoc comment\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Add tests for model\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] Use AperiodicWork for ComputerRetentionWork\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] limit computer retention check interval to 60s\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n* [JENKINS-14789] apply review feedback\r\n\r\nCo-authored-by: Tim Jacomb <21194782+timja@users.noreply.github.com>\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Jakob Ackermann <das7pad@outlook.com>\r\nCo-authored-by: Alexander Brandes <mc.cache@web.de>\r\nCo-authored-by: Tim Jacomb <21194782+timja@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/16b5d210525f1e0b31d15b6cf4a06c291099e049",
        "buggy_code": "return checkCycle();",
        "fixed_code": "return TimeUnit.MILLISECONDS.toMinutes(checkCycle());",
        "patch": "@@ -37,7 +37,7 @@ public long check(T c) {\n                 }\n             }\n         }\n-        return checkCycle();\n+        return TimeUnit.MILLISECONDS.toMinutes(checkCycle());\n     }\n \n     /**"
    },
    {
        "commit_id": "0419465f4dea7652dd9d85ae8a53a70a46fd834b",
        "commit_message": "Rewrite the build history widget (#9148)\n\n* Squashed commit of the following:\r\n\r\ncommit 1ce4cb39c7df313ad000225f1f06c21d9d55d7d8\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Apr 9 09:22:36 2024 +0100\r\n\r\n    Rename classes\r\n\r\ncommit 107d7947874a974fc16df00dcdef46a4d55ed0bc\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Apr 9 08:59:54 2024 +0100\r\n\r\n    Update HistoryWidget.java\r\n\r\ncommit 13575bc27caaf902c6685e8dfdb8ecd2ffc6e64a\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Apr 9 08:59:29 2024 +0100\r\n\r\n    Hide buttons\r\n\r\ncommit e5de5465814c810f9bb09722a00727f73b1158b9\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Apr 9 08:39:04 2024 +0100\r\n\r\n    Rename classes\r\n\r\ncommit 47c84afcd1c4e45f1e202a1a38fc68ef9ec8c702\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 23:21:36 2024 +0100\r\n\r\n    Add animation\r\n\r\ncommit e7432b693357b800b91bf355a610fbd3ab62223e\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 23:03:19 2024 +0100\r\n\r\n    Add navigation buttons\r\n\r\ncommit 448a09419a0706bd83fb73b555ef55c54916da13\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 22:29:32 2024 +0100\r\n\r\n    Update _dashboard.scss\r\n\r\ncommit bb85734be0884e7cb244b13267970722db2f8c05\r\nMerge: c451a7223c 27433f19f3\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 22:23:38 2024 +0100\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit c451a7223cfc68651d11c8f83134c0ee000db363\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:17:05 2024 +0100\r\n\r\n    Update _job.scss\r\n\r\ncommit 960b162dcd95715f6d1567f57d53fcf79591966d\r\nMerge: d020eb66e5 af655e3fdc\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:16:54 2024 +0100\r\n\r\n    Merge branch 'remove-table-usage' into new-build-history-2\r\n\r\ncommit af655e3fdce9d0aeb7d741a143777effffbd779f\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:13:38 2024 +0100\r\n\r\n    Init\r\n\r\ncommit d020eb66e54a63c880dc3c335485aff92c86aaad\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:09:57 2024 +0100\r\n\r\n    Update card.jelly\r\n\r\ncommit 81bc1d45f17adb021d67c15531d51b8421f78132\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:07:41 2024 +0100\r\n\r\n    Update _buttons.scss\r\n\r\ncommit 4023460b9aa9243f45870e98ca2299a91263bcce\r\nMerge: 875fb8fb4b da5f593fb0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:03:18 2024 +0100\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit 875fb8fb4baa86c45284d71ee6f5a2a39af68aa0\r\nMerge: 2dc9964871 fe60facf91\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Apr 6 19:29:20 2024 +0100\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit 2dc9964871734a6e8386392d32a13366bc3752e9\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Apr 5 22:17:08 2024 +0100\r\n\r\n    Reset files\r\n\r\ncommit 2da1e14f046e518bc9c22050ddf9f394d65bbc31\r\nMerge: dce466a846 b9fac75ac8\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Apr 5 22:14:46 2024 +0100\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit dce466a846b5e7bcad40625c8c5bcbd6c6477cf8\r\nMerge: 935c16e1c1 0eed048866\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Feb 28 13:55:35 2024 +0000\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit 935c16e1c1033c8e33fff49b0e47f9a47615f540\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Feb 18 17:54:32 2024 +0000\r\n\r\n    Update entry.jelly\r\n\r\ncommit 2a19a045970d65e446e4ce894d769fb27bdfd921\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Feb 18 17:51:58 2024 +0000\r\n\r\n    Rename classes\r\n\r\ncommit 3ef46abe52ba75573bb4e634ad3baad95c2b07ba\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Feb 18 17:29:25 2024 +0000\r\n\r\n    Update index.jelly\r\n\r\ncommit da0b2126cdc5f959905ae7eba514a68f891f6620\r\nMerge: 281fac04c0 9d9e2ab467\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Feb 18 17:27:12 2024 +0000\r\n\r\n    Merge branch 'revamp-dropdowns' into new-build-history-2\r\n\r\ncommit 281fac04c00e25ab05ff21c71ab30b263d0e3b9b\r\nMerge: 9c69bd02be a6423541f0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Feb 18 17:19:14 2024 +0000\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit 9d9e2ab4673136cb41f1cd948676fe2aaf8b0c52\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Feb 10 19:39:24 2024 +0000\r\n\r\n    Update templates.js\r\n\r\ncommit 1c19e431cee21bcbd43bfc1d5d675556dc9c5a4c\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Feb 10 19:38:13 2024 +0000\r\n\r\n    Add clazz\r\n\r\ncommit 8b944e9e3fe9369af00621c20a14d9d527cac12f\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Feb 10 15:19:30 2024 +0000\r\n\r\n    Update utils.js\r\n\r\ncommit 069fefbe36edca7203d3215bdd3d76868d9402fd\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Feb 10 13:23:16 2024 +0000\r\n\r\n    Linting\r\n\r\ncommit 72707122491b727296200ad9111f15f29ed826d2\r\nMerge: 9865811d38 a6423541f0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Feb 10 12:20:02 2024 +0000\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 9865811d3879c0f3450285303e70d8349d49aced\r\nMerge: 1e22c34016 86d39dd23b\r\nAuthor: Mark Waite <mark.earl.waite@gmail.com>\r\nDate:   Thu Jan 18 05:39:13 2024 -0700\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 9c69bd02bebcc13b695f112952a0ec97b297a8bb\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:56:49 2024 +0000\r\n\r\n    Push\r\n\r\ncommit 347e966aebbe013f171329c4fb00dee4acd27b33\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:53:52 2024 +0000\r\n\r\n    Update filter-build-history.js\r\n\r\ncommit 0b4a5dd5f4834824d70324b0698f9194a2ffb64b\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:49:54 2024 +0000\r\n\r\n    Renam\r\n\r\ncommit a8277bf932fc3ff5c99ec9f3496c05ed977e7990\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:46:53 2024 +0000\r\n\r\n    Fix\r\n\r\ncommit 855bf1317e8d7187cf4b2016f8571379c841ba91\r\nMerge: 61b0a87e6c 1eb29a8792\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:38:51 2024 +0000\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit 1e22c340167b851096e40bce0f3601e075ec0db5\r\nMerge: 44981c2a66 48661db9d1\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:33:14 2024 +0000\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 44981c2a6654374500781996e2215736878f9109\r\nMerge: 0075375c9a 1eb29a8792\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Jan 8 21:14:51 2024 +0000\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 0075375c9a82ac6f80e60eeb9d72e5c03a4e2f4f\r\nMerge: 2dd9e32fab 78cdaa9f29\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Jan 4 13:26:24 2024 +0000\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 2dd9e32fab3b699e5cd5130b0a37df02cf4e28de\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Jan 4 13:24:53 2024 +0000\r\n\r\n    Remove translations\r\n\r\ncommit 6800c8886a064faa7d23b7e77f759a74ce7f4075\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Jan 4 13:16:19 2024 +0000\r\n\r\n    Update header.jelly\r\n\r\ncommit 1c3961bb64ade88f1c327d48e100611c951bd1f7\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Jan 4 13:15:49 2024 +0000\r\n\r\n    Add additional docs\r\n\r\ncommit 163be529e7dc8c83a8796b8b782eb96ed6444366\r\nMerge: 4cc43e47f9 444f2de993\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Jan 3 21:22:20 2024 +0000\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 61b0a87e6c3412496e65269e20055d6123d9adb8\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 14 19:38:45 2023 +0000\r\n\r\n    More\r\n\r\ncommit dcd6aaa54576bd1524d071b4cbe75d51aa4244f8\r\nMerge: 0c40b9f3fc edce488000\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 14 19:38:25 2023 +0000\r\n\r\n    Merge branch 'stop-button' into new-build-history-2\r\n\r\ncommit edce4880007e6863f283e8cdebd42fbfa6edb734\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 14 16:06:00 2023 +0000\r\n\r\n    Tidy up\r\n\r\ncommit 157ba0b5bc9369317a393d1d6279752d3fa4cf59\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 14 16:04:46 2023 +0000\r\n\r\n    Fix i18n\r\n\r\ncommit a112bd90c16449ec3a82bf9ca0d64e51913950e5\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 22:57:17 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit 91751cf650143442c71f11f10092545dd1753cb0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 22:39:18 2023 +0000\r\n\r\n    Update executors.jelly\r\n\r\ncommit cd89aeabf45e530ab947bfda4e44e8e41945292d\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 22:31:06 2023 +0000\r\n\r\n    Fixes\r\n\r\ncommit 1384091663fcd4ba5d584f152dd20c7ea95b5c9b\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 22:28:54 2023 +0000\r\n\r\n    Init\r\n\r\ncommit 0c40b9f3fcb4f12fba2f0e0d45bffd94bb1e196b\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 16:50:53 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit 50fe8fc74312296ba6ae1b4a43f6a67680846970\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 13:13:10 2023 +0000\r\n\r\n    add view transitions\r\n\r\ncommit d1fd7a9a93b241e93b18ed97af696bd32997d8b7\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Dec 12 20:25:44 2023 +0000\r\n\r\n    Tidy up\r\n\r\ncommit 512b9a1baaa8482aa597785a92e6183316f60030\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Dec 12 19:29:16 2023 +0000\r\n\r\n    Push\r\n\r\ncommit 4f1569079c353c0eddd5f665867d4239a35d8797\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Dec 11 23:30:09 2023 +0000\r\n\r\n    push\r\n\r\ncommit ad75b0f10f5afae5b61e2ac97d44b51ede5801a4\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Dec 11 23:24:11 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit cec222e3bdd9104095abfaa82f07e953fa69d097\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Dec 11 23:23:52 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit 4cc43e47f94abd36690f666ec6d2737ddf7d1ba9\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Dec 10 16:04:28 2023 +0000\r\n\r\n    Add docs\r\n\r\ncommit a4c7f4f28cbced0f89af992095e19cdfcb9cd981\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Dec 10 16:00:23 2023 +0000\r\n\r\n    Update taglib\r\n\r\ncommit c01db44de32a02e9c2ec87807eb82fd575ae52e2\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Dec 10 15:56:50 2023 +0000\r\n\r\n    Init\r\n\r\ncommit 21bb3f4262cf65d30c48b76dc43b16a424d357ca\r\nMerge: d3e2920434 428d0e560a\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Dec 10 13:22:00 2023 +0000\r\n\r\n    Merge branch 'restyle-cards' into new-build-history-2\r\n\r\ncommit 428d0e560afcb2096a914debf21fcaba099a7ed8\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 7 20:17:10 2023 +0000\r\n\r\n    Lower weight\r\n\r\ncommit ac5c255530fbda6fb0143f0e3009948685ae1bf8\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 7 20:15:28 2023 +0000\r\n\r\n    Remove more bold weights\r\n\r\ncommit 2922a690bb3889faa2c95574181a47ffbb8e999d\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 7 20:11:33 2023 +0000\r\n\r\n    Update _style.scss\r\n\r\ncommit 9657d460acfbd9e1f70ec7bec66817717d264d6c\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 7 20:06:16 2023 +0000\r\n\r\n    Init\r\n\r\ncommit d3e2920434d44a45e968392c7617ad1ba140a062\r\nMerge: a2bd9a08b2 cabc8f67b9\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 7 19:50:43 2023 +0000\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit a2bd9a08b2679cc706f89cd12908197bf0244b13\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Nov 26 11:58:22 2023 +0000\r\n\r\n    Fixes\r\n\r\ncommit 7cda5049b75bc7e7d7dcc8516ac6b3983d17b3b0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 12:28:04 2023 +0000\r\n\r\n    Working build\r\n\r\ncommit abd994ebe9680f846e13029faa44a2119c861345\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 11:58:42 2023 +0000\r\n\r\n    Working build\r\n\r\ncommit 9b6defbf444b35127a81bb4cfd298f7648704e49\r\nMerge: 29fcb64a74 7a0e57e35c\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 11:51:24 2023 +0000\r\n\r\n    Merge branch 'progress-bar-new' into new-build-history-2\r\n\r\ncommit 29fcb64a74e37b445cde8b1847a6be988ad3b85c\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 11:51:10 2023 +0000\r\n\r\n    More\r\n\r\ncommit 2f946d3f6494223351fc9da3a98654b9a666f766\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 09:17:06 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit f5474b33429ff8615c74e7be0cf622904c177a65\r\nMerge: 00c3879a27 982bc48fa0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 09:16:14 2023 +0000\r\n\r\n    Merge branch 'use-symbols-for-build-status-new' into new-build-history-2\r\n\r\ncommit 982bc48fa0595221fac29f597090733b33be036a\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 09:15:56 2023 +0000\r\n\r\n    Fix app bar build status icon being incorrect\r\n\r\ncommit 00c3879a2740e40d81d65463028c82f32782fecf\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 09:12:10 2023 +0000\r\n\r\n    Fixes\r\n\r\ncommit a4960e9f2c9b9c17ec6f85fd24ef98ca7362455e\r\nMerge: d28aada2e1 c6f5db0be7\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 08:56:01 2023 +0000\r\n\r\n    Merge branch 'use-symbols-for-build-status-new' into new-build-history-2\r\n\r\ncommit d28aada2e1d5434a542d95afadc4c582a691319a\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 08:55:18 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit 1d24a19982838f50a6aa6b4510c0fe1090eef364\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 08:52:58 2023 +0000\r\n\r\n    Init\r\n\r\ncommit 7a0e57e35c71073258a5635ebba1a87d5456aeda\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 21:19:23 2023 +0000\r\n\r\n    More\r\n\r\ncommit 67d4264da9a9ff8539ea74f7462b111d7da46f82\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 21:17:09 2023 +0000\r\n\r\n    Update _spinner.scss\r\n\r\ncommit 9befc76209eede89b3e3fd9d124c6ac92ee75c81\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 21:07:55 2023 +0000\r\n\r\n    Update _spinner.scss\r\n\r\ncommit 528b46acb3be57f43cf18f09a46cd7caa4ba2120\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 21:01:06 2023 +0000\r\n\r\n    More\r\n\r\ncommit ea0c4878137141193ece81a1970007f34e603478\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 20:36:53 2023 +0000\r\n\r\n    Init\r\n\r\ncommit c6f5db0be74d9cf4ff979c19294349cf3a5ee590\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 17:52:28 2023 +0000\r\n\r\n    Fix icon position\r\n\r\ncommit 18a84076b5bae7969e6ce9af37dc69bc34b17277\r\nMerge: aea4d9786e a9c34d7393\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 09:58:54 2023 +0000\r\n\r\n    Merge branch 'master' into use-symbols-for-build-status-new\r\n\r\ncommit aea4d9786eb4f059c0c37a204361c4ff1d8c6a67\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 09:58:29 2023 +0000\r\n\r\n    Rename ID\r\n\r\ncommit 5f76f3840c2fe61d3937f947df0bdca293832fb7\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Nov 20 16:00:14 2023 +0000\r\n\r\n    Init\r\n\r\n* Update _job.scss\r\n\r\n* Lint\r\n\r\n* Update filter-build-history.js\r\n\r\n* Hide controls if not navigable\r\n\r\n* Update RunTest.java\r\n\r\n* Add basic JSDoc\r\n\r\n* Use dataset rather than attributes\r\n\r\n* Update filter-build-history.js\r\n\r\n* Rename JS\r\n\r\n* Update RunTest.java\r\n\r\n* Update jenkins-test-harness version (thanks again Tim!)\r\n\r\n* Update _job.scss\r\n\r\n* Remove unused SCSS\r\n\r\n* Update AbstractScmTagActionTest.java\r\n\r\n* Update builds-card.js\r\n\r\n* Update builds-card.js\r\n\r\n* Rewrite SCSS/Jelly to handle more complex scenarios\r\n\r\n* Lint\r\n\r\n* Tidy up\r\n\r\n* Update _side-panel-widgets.scss\r\n\r\n* Add background to card\r\n\r\n* Fix lint\r\n\r\n* Update queue-items.jelly\r\n\r\n* Fix cancel button\r\n\r\n* Update queue-items.jelly\r\n\r\n* Use debounce properly and adjust time to make it smoother\r\n\r\n* Use jenkins-hidden\r\n\r\n* Replace TODOs with comments, fix card controls showing when there are no builds\r\n\r\n* Add hidden text for previous/next buttons\r\n\r\n* Update builds-card.js\r\n\r\n* Add data-tooltip-append-to-parent=\"true\" to tooltips\r\n\r\n* Wrap badges\r\n\r\n* Fix relative expandable link\r\n\r\n* Use chevron-down rather than menu icon\r\n\r\n---------\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\nCo-authored-by: Tim Jacomb <21194782+timja@users.noreply.github.com>\r\nCo-authored-by: Tim Jacomb <timjacomb1@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0419465f4dea7652dd9d85ae8a53a70a46fd834b",
        "buggy_code": "htmlPage.executeJavaScript(\"document.querySelector('#buildHistory table .build-badge svg')._tippy.show()\");",
        "fixed_code": "htmlPage.executeJavaScript(\"document.querySelector('#jenkins-build-history .app-builds-container__item__inner__controls svg')._tippy.show()\");",
        "patch": "@@ -157,7 +157,7 @@ private void ensureXssIsPrevented(FreeStyleProject upProject, String validationP\n         HtmlPage htmlPage = wc.goTo(upProject.getUrl());\n \n         // trigger the tooltip display\n-        htmlPage.executeJavaScript(\"document.querySelector('#buildHistory table .build-badge svg')._tippy.show()\");\n+        htmlPage.executeJavaScript(\"document.querySelector('#jenkins-build-history .app-builds-container__item__inner__controls svg')._tippy.show()\");\n         wc.waitForBackgroundJavaScript(500);\n         ScriptResult result = htmlPage.executeJavaScript(\"document.querySelector('.tippy-content').innerHTML;\");\n         Object jsResult = result.getJavaScriptResult();"
    },
    {
        "commit_id": "0419465f4dea7652dd9d85ae8a53a70a46fd834b",
        "commit_message": "Rewrite the build history widget (#9148)\n\n* Squashed commit of the following:\r\n\r\ncommit 1ce4cb39c7df313ad000225f1f06c21d9d55d7d8\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Apr 9 09:22:36 2024 +0100\r\n\r\n    Rename classes\r\n\r\ncommit 107d7947874a974fc16df00dcdef46a4d55ed0bc\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Apr 9 08:59:54 2024 +0100\r\n\r\n    Update HistoryWidget.java\r\n\r\ncommit 13575bc27caaf902c6685e8dfdb8ecd2ffc6e64a\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Apr 9 08:59:29 2024 +0100\r\n\r\n    Hide buttons\r\n\r\ncommit e5de5465814c810f9bb09722a00727f73b1158b9\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Apr 9 08:39:04 2024 +0100\r\n\r\n    Rename classes\r\n\r\ncommit 47c84afcd1c4e45f1e202a1a38fc68ef9ec8c702\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 23:21:36 2024 +0100\r\n\r\n    Add animation\r\n\r\ncommit e7432b693357b800b91bf355a610fbd3ab62223e\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 23:03:19 2024 +0100\r\n\r\n    Add navigation buttons\r\n\r\ncommit 448a09419a0706bd83fb73b555ef55c54916da13\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 22:29:32 2024 +0100\r\n\r\n    Update _dashboard.scss\r\n\r\ncommit bb85734be0884e7cb244b13267970722db2f8c05\r\nMerge: c451a7223c 27433f19f3\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 22:23:38 2024 +0100\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit c451a7223cfc68651d11c8f83134c0ee000db363\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:17:05 2024 +0100\r\n\r\n    Update _job.scss\r\n\r\ncommit 960b162dcd95715f6d1567f57d53fcf79591966d\r\nMerge: d020eb66e5 af655e3fdc\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:16:54 2024 +0100\r\n\r\n    Merge branch 'remove-table-usage' into new-build-history-2\r\n\r\ncommit af655e3fdce9d0aeb7d741a143777effffbd779f\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:13:38 2024 +0100\r\n\r\n    Init\r\n\r\ncommit d020eb66e54a63c880dc3c335485aff92c86aaad\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:09:57 2024 +0100\r\n\r\n    Update card.jelly\r\n\r\ncommit 81bc1d45f17adb021d67c15531d51b8421f78132\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:07:41 2024 +0100\r\n\r\n    Update _buttons.scss\r\n\r\ncommit 4023460b9aa9243f45870e98ca2299a91263bcce\r\nMerge: 875fb8fb4b da5f593fb0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Apr 8 13:03:18 2024 +0100\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit 875fb8fb4baa86c45284d71ee6f5a2a39af68aa0\r\nMerge: 2dc9964871 fe60facf91\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Apr 6 19:29:20 2024 +0100\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit 2dc9964871734a6e8386392d32a13366bc3752e9\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Apr 5 22:17:08 2024 +0100\r\n\r\n    Reset files\r\n\r\ncommit 2da1e14f046e518bc9c22050ddf9f394d65bbc31\r\nMerge: dce466a846 b9fac75ac8\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Apr 5 22:14:46 2024 +0100\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit dce466a846b5e7bcad40625c8c5bcbd6c6477cf8\r\nMerge: 935c16e1c1 0eed048866\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Feb 28 13:55:35 2024 +0000\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit 935c16e1c1033c8e33fff49b0e47f9a47615f540\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Feb 18 17:54:32 2024 +0000\r\n\r\n    Update entry.jelly\r\n\r\ncommit 2a19a045970d65e446e4ce894d769fb27bdfd921\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Feb 18 17:51:58 2024 +0000\r\n\r\n    Rename classes\r\n\r\ncommit 3ef46abe52ba75573bb4e634ad3baad95c2b07ba\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Feb 18 17:29:25 2024 +0000\r\n\r\n    Update index.jelly\r\n\r\ncommit da0b2126cdc5f959905ae7eba514a68f891f6620\r\nMerge: 281fac04c0 9d9e2ab467\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Feb 18 17:27:12 2024 +0000\r\n\r\n    Merge branch 'revamp-dropdowns' into new-build-history-2\r\n\r\ncommit 281fac04c00e25ab05ff21c71ab30b263d0e3b9b\r\nMerge: 9c69bd02be a6423541f0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Feb 18 17:19:14 2024 +0000\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit 9d9e2ab4673136cb41f1cd948676fe2aaf8b0c52\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Feb 10 19:39:24 2024 +0000\r\n\r\n    Update templates.js\r\n\r\ncommit 1c19e431cee21bcbd43bfc1d5d675556dc9c5a4c\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Feb 10 19:38:13 2024 +0000\r\n\r\n    Add clazz\r\n\r\ncommit 8b944e9e3fe9369af00621c20a14d9d527cac12f\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Feb 10 15:19:30 2024 +0000\r\n\r\n    Update utils.js\r\n\r\ncommit 069fefbe36edca7203d3215bdd3d76868d9402fd\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Feb 10 13:23:16 2024 +0000\r\n\r\n    Linting\r\n\r\ncommit 72707122491b727296200ad9111f15f29ed826d2\r\nMerge: 9865811d38 a6423541f0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Feb 10 12:20:02 2024 +0000\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 9865811d3879c0f3450285303e70d8349d49aced\r\nMerge: 1e22c34016 86d39dd23b\r\nAuthor: Mark Waite <mark.earl.waite@gmail.com>\r\nDate:   Thu Jan 18 05:39:13 2024 -0700\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 9c69bd02bebcc13b695f112952a0ec97b297a8bb\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:56:49 2024 +0000\r\n\r\n    Push\r\n\r\ncommit 347e966aebbe013f171329c4fb00dee4acd27b33\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:53:52 2024 +0000\r\n\r\n    Update filter-build-history.js\r\n\r\ncommit 0b4a5dd5f4834824d70324b0698f9194a2ffb64b\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:49:54 2024 +0000\r\n\r\n    Renam\r\n\r\ncommit a8277bf932fc3ff5c99ec9f3496c05ed977e7990\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:46:53 2024 +0000\r\n\r\n    Fix\r\n\r\ncommit 855bf1317e8d7187cf4b2016f8571379c841ba91\r\nMerge: 61b0a87e6c 1eb29a8792\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:38:51 2024 +0000\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit 1e22c340167b851096e40bce0f3601e075ec0db5\r\nMerge: 44981c2a66 48661db9d1\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Jan 14 13:33:14 2024 +0000\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 44981c2a6654374500781996e2215736878f9109\r\nMerge: 0075375c9a 1eb29a8792\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Jan 8 21:14:51 2024 +0000\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 0075375c9a82ac6f80e60eeb9d72e5c03a4e2f4f\r\nMerge: 2dd9e32fab 78cdaa9f29\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Jan 4 13:26:24 2024 +0000\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 2dd9e32fab3b699e5cd5130b0a37df02cf4e28de\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Jan 4 13:24:53 2024 +0000\r\n\r\n    Remove translations\r\n\r\ncommit 6800c8886a064faa7d23b7e77f759a74ce7f4075\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Jan 4 13:16:19 2024 +0000\r\n\r\n    Update header.jelly\r\n\r\ncommit 1c3961bb64ade88f1c327d48e100611c951bd1f7\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Jan 4 13:15:49 2024 +0000\r\n\r\n    Add additional docs\r\n\r\ncommit 163be529e7dc8c83a8796b8b782eb96ed6444366\r\nMerge: 4cc43e47f9 444f2de993\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Jan 3 21:22:20 2024 +0000\r\n\r\n    Merge branch 'master' into revamp-dropdowns\r\n\r\ncommit 61b0a87e6c3412496e65269e20055d6123d9adb8\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 14 19:38:45 2023 +0000\r\n\r\n    More\r\n\r\ncommit dcd6aaa54576bd1524d071b4cbe75d51aa4244f8\r\nMerge: 0c40b9f3fc edce488000\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 14 19:38:25 2023 +0000\r\n\r\n    Merge branch 'stop-button' into new-build-history-2\r\n\r\ncommit edce4880007e6863f283e8cdebd42fbfa6edb734\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 14 16:06:00 2023 +0000\r\n\r\n    Tidy up\r\n\r\ncommit 157ba0b5bc9369317a393d1d6279752d3fa4cf59\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 14 16:04:46 2023 +0000\r\n\r\n    Fix i18n\r\n\r\ncommit a112bd90c16449ec3a82bf9ca0d64e51913950e5\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 22:57:17 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit 91751cf650143442c71f11f10092545dd1753cb0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 22:39:18 2023 +0000\r\n\r\n    Update executors.jelly\r\n\r\ncommit cd89aeabf45e530ab947bfda4e44e8e41945292d\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 22:31:06 2023 +0000\r\n\r\n    Fixes\r\n\r\ncommit 1384091663fcd4ba5d584f152dd20c7ea95b5c9b\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 22:28:54 2023 +0000\r\n\r\n    Init\r\n\r\ncommit 0c40b9f3fcb4f12fba2f0e0d45bffd94bb1e196b\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 16:50:53 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit 50fe8fc74312296ba6ae1b4a43f6a67680846970\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Wed Dec 13 13:13:10 2023 +0000\r\n\r\n    add view transitions\r\n\r\ncommit d1fd7a9a93b241e93b18ed97af696bd32997d8b7\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Dec 12 20:25:44 2023 +0000\r\n\r\n    Tidy up\r\n\r\ncommit 512b9a1baaa8482aa597785a92e6183316f60030\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Tue Dec 12 19:29:16 2023 +0000\r\n\r\n    Push\r\n\r\ncommit 4f1569079c353c0eddd5f665867d4239a35d8797\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Dec 11 23:30:09 2023 +0000\r\n\r\n    push\r\n\r\ncommit ad75b0f10f5afae5b61e2ac97d44b51ede5801a4\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Dec 11 23:24:11 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit cec222e3bdd9104095abfaa82f07e953fa69d097\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Dec 11 23:23:52 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit 4cc43e47f94abd36690f666ec6d2737ddf7d1ba9\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Dec 10 16:04:28 2023 +0000\r\n\r\n    Add docs\r\n\r\ncommit a4c7f4f28cbced0f89af992095e19cdfcb9cd981\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Dec 10 16:00:23 2023 +0000\r\n\r\n    Update taglib\r\n\r\ncommit c01db44de32a02e9c2ec87807eb82fd575ae52e2\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Dec 10 15:56:50 2023 +0000\r\n\r\n    Init\r\n\r\ncommit 21bb3f4262cf65d30c48b76dc43b16a424d357ca\r\nMerge: d3e2920434 428d0e560a\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Dec 10 13:22:00 2023 +0000\r\n\r\n    Merge branch 'restyle-cards' into new-build-history-2\r\n\r\ncommit 428d0e560afcb2096a914debf21fcaba099a7ed8\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 7 20:17:10 2023 +0000\r\n\r\n    Lower weight\r\n\r\ncommit ac5c255530fbda6fb0143f0e3009948685ae1bf8\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 7 20:15:28 2023 +0000\r\n\r\n    Remove more bold weights\r\n\r\ncommit 2922a690bb3889faa2c95574181a47ffbb8e999d\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 7 20:11:33 2023 +0000\r\n\r\n    Update _style.scss\r\n\r\ncommit 9657d460acfbd9e1f70ec7bec66817717d264d6c\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 7 20:06:16 2023 +0000\r\n\r\n    Init\r\n\r\ncommit d3e2920434d44a45e968392c7617ad1ba140a062\r\nMerge: a2bd9a08b2 cabc8f67b9\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Thu Dec 7 19:50:43 2023 +0000\r\n\r\n    Merge branch 'master' into new-build-history-2\r\n\r\ncommit a2bd9a08b2679cc706f89cd12908197bf0244b13\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sun Nov 26 11:58:22 2023 +0000\r\n\r\n    Fixes\r\n\r\ncommit 7cda5049b75bc7e7d7dcc8516ac6b3983d17b3b0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 12:28:04 2023 +0000\r\n\r\n    Working build\r\n\r\ncommit abd994ebe9680f846e13029faa44a2119c861345\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 11:58:42 2023 +0000\r\n\r\n    Working build\r\n\r\ncommit 9b6defbf444b35127a81bb4cfd298f7648704e49\r\nMerge: 29fcb64a74 7a0e57e35c\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 11:51:24 2023 +0000\r\n\r\n    Merge branch 'progress-bar-new' into new-build-history-2\r\n\r\ncommit 29fcb64a74e37b445cde8b1847a6be988ad3b85c\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 11:51:10 2023 +0000\r\n\r\n    More\r\n\r\ncommit 2f946d3f6494223351fc9da3a98654b9a666f766\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 09:17:06 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit f5474b33429ff8615c74e7be0cf622904c177a65\r\nMerge: 00c3879a27 982bc48fa0\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 09:16:14 2023 +0000\r\n\r\n    Merge branch 'use-symbols-for-build-status-new' into new-build-history-2\r\n\r\ncommit 982bc48fa0595221fac29f597090733b33be036a\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 09:15:56 2023 +0000\r\n\r\n    Fix app bar build status icon being incorrect\r\n\r\ncommit 00c3879a2740e40d81d65463028c82f32782fecf\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 09:12:10 2023 +0000\r\n\r\n    Fixes\r\n\r\ncommit a4960e9f2c9b9c17ec6f85fd24ef98ca7362455e\r\nMerge: d28aada2e1 c6f5db0be7\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 08:56:01 2023 +0000\r\n\r\n    Merge branch 'use-symbols-for-build-status-new' into new-build-history-2\r\n\r\ncommit d28aada2e1d5434a542d95afadc4c582a691319a\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 08:55:18 2023 +0000\r\n\r\n    Update _buttons.scss\r\n\r\ncommit 1d24a19982838f50a6aa6b4510c0fe1090eef364\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Sat Nov 25 08:52:58 2023 +0000\r\n\r\n    Init\r\n\r\ncommit 7a0e57e35c71073258a5635ebba1a87d5456aeda\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 21:19:23 2023 +0000\r\n\r\n    More\r\n\r\ncommit 67d4264da9a9ff8539ea74f7462b111d7da46f82\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 21:17:09 2023 +0000\r\n\r\n    Update _spinner.scss\r\n\r\ncommit 9befc76209eede89b3e3fd9d124c6ac92ee75c81\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 21:07:55 2023 +0000\r\n\r\n    Update _spinner.scss\r\n\r\ncommit 528b46acb3be57f43cf18f09a46cd7caa4ba2120\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 21:01:06 2023 +0000\r\n\r\n    More\r\n\r\ncommit ea0c4878137141193ece81a1970007f34e603478\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 20:36:53 2023 +0000\r\n\r\n    Init\r\n\r\ncommit c6f5db0be74d9cf4ff979c19294349cf3a5ee590\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 17:52:28 2023 +0000\r\n\r\n    Fix icon position\r\n\r\ncommit 18a84076b5bae7969e6ce9af37dc69bc34b17277\r\nMerge: aea4d9786e a9c34d7393\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 09:58:54 2023 +0000\r\n\r\n    Merge branch 'master' into use-symbols-for-build-status-new\r\n\r\ncommit aea4d9786eb4f059c0c37a204361c4ff1d8c6a67\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Fri Nov 24 09:58:29 2023 +0000\r\n\r\n    Rename ID\r\n\r\ncommit 5f76f3840c2fe61d3937f947df0bdca293832fb7\r\nAuthor: Jan Faracik <43062514+janfaracik@users.noreply.github.com>\r\nDate:   Mon Nov 20 16:00:14 2023 +0000\r\n\r\n    Init\r\n\r\n* Update _job.scss\r\n\r\n* Lint\r\n\r\n* Update filter-build-history.js\r\n\r\n* Hide controls if not navigable\r\n\r\n* Update RunTest.java\r\n\r\n* Add basic JSDoc\r\n\r\n* Use dataset rather than attributes\r\n\r\n* Update filter-build-history.js\r\n\r\n* Rename JS\r\n\r\n* Update RunTest.java\r\n\r\n* Update jenkins-test-harness version (thanks again Tim!)\r\n\r\n* Update _job.scss\r\n\r\n* Remove unused SCSS\r\n\r\n* Update AbstractScmTagActionTest.java\r\n\r\n* Update builds-card.js\r\n\r\n* Update builds-card.js\r\n\r\n* Rewrite SCSS/Jelly to handle more complex scenarios\r\n\r\n* Lint\r\n\r\n* Tidy up\r\n\r\n* Update _side-panel-widgets.scss\r\n\r\n* Add background to card\r\n\r\n* Fix lint\r\n\r\n* Update queue-items.jelly\r\n\r\n* Fix cancel button\r\n\r\n* Update queue-items.jelly\r\n\r\n* Use debounce properly and adjust time to make it smoother\r\n\r\n* Use jenkins-hidden\r\n\r\n* Replace TODOs with comments, fix card controls showing when there are no builds\r\n\r\n* Add hidden text for previous/next buttons\r\n\r\n* Update builds-card.js\r\n\r\n* Add data-tooltip-append-to-parent=\"true\" to tooltips\r\n\r\n* Wrap badges\r\n\r\n* Fix relative expandable link\r\n\r\n* Use chevron-down rather than menu icon\r\n\r\n---------\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\nCo-authored-by: Tim Jacomb <21194782+timja@users.noreply.github.com>\r\nCo-authored-by: Tim Jacomb <timjacomb1@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0419465f4dea7652dd9d85ae8a53a70a46fd834b",
        "buggy_code": "DomElement buildHistory = page.getElementById(\"buildHistory\");",
        "fixed_code": "DomElement buildHistory = page.getElementById(\"buildHistoryPage\");",
        "patch": "@@ -66,7 +66,7 @@ private String buildAndExtractTooltipAttribute(FreeStyleProject p) throws Except\n \n         HtmlPage page = wc.getPage(p);\n \n-        DomElement buildHistory = page.getElementById(\"buildHistory\");\n+        DomElement buildHistory = page.getElementById(\"buildHistoryPage\");\n         DomNodeList<HtmlElement> imgs = buildHistory.getElementsByTagName(\"img\");\n         HtmlImage tagImage = (HtmlImage) imgs.stream()\n                 .filter(i -> i.getAttribute(\"class\").contains(\"icon-save\"))"
    },
    {
        "commit_id": "90a6ac5c38f33b6674ba78bdfee0a5fe2b757166",
        "commit_message": "[JENKINS-73114] avoid conflicts with css classes from bootstrap (#9254)\n\n* [JENKINS-73114] avoid conflict of css classes with bootstrap\r\n\r\njenkins and bootstrap both have definitions for alert and alert-warning,\r\nalert-info, alert-danger. Bootstrap css definitions are included when\r\ne.g. the warning-ng plugin is installed and a job is configured to scan\r\nfor warnings. The css classes from bootstrap are then chosen instead of\r\nthe ones for Jenkins for things like the admin monitors.\r\nTo make things umambiguous, add additional classes prefixed with\r\n`jenkins-` and make use of them in code. Keep the old definitions for\r\nbackward compatibility with plugins.\r\nFollowup changes are needed in plugins (Mostly those that define admin\r\nmonitors) and the design-library\r\n\r\n* fix test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/90a6ac5c38f33b6674ba78bdfee0a5fe2b757166",
        "buggy_code": "assertTrue(available.querySelector(\".alert-danger\")",
        "fixed_code": "assertTrue(available.querySelector(\".jenkins-alert-danger\")",
        "patch": "@@ -806,7 +806,7 @@ public void noInjectionOnAvailablePluginsPage() throws Exception {\n \n             PluginManagerUtil.getCheckForUpdatesButton(p).click();\n             HtmlPage available = wc.goTo(\"pluginManager/available\");\n-            assertTrue(available.querySelector(\".alert-danger\")\n+            assertTrue(available.querySelector(\".jenkins-alert-danger\")\n                     .getTextContent().contains(\"This plugin is built for Jenkins 9999999\"));\n             wc.waitForBackgroundJavaScript(100);\n "
    },
    {
        "commit_id": "16a65758149f71de1fd61dd0d7aa1fa9c06cd8c3",
        "commit_message": "Use 'jenkins-button' for tables (#9131)\n\n* Init\r\n\r\n* Update Security2780Test.java\r\n\r\n* Add comment for increasing SVG size in table\r\n\r\n* Restore previous column.jelly\r\n\r\n* Fix indentation",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/16a65758149f71de1fd61dd0d7aa1fa9c06cd8c3",
        "buggy_code": "page.executeJavaScript(\"document.querySelector('a.jenkins-table__button')._tippy.show()\");",
        "fixed_code": "page.executeJavaScript(\"document.querySelector('.jenkins-table a.jenkins-button')._tippy.show()\");",
        "patch": "@@ -27,7 +27,7 @@ public void buildButtonTooltipHasNoXss() throws Exception {\n         AtomicBoolean alertTriggered = new AtomicBoolean(false);\n         wc.setAlertHandler((p, s) -> alertTriggered.set(true));\n         HtmlPage page = wc.goTo(\"\");\n-        page.executeJavaScript(\"document.querySelector('a.jenkins-table__button')._tippy.show()\");\n+        page.executeJavaScript(\"document.querySelector('.jenkins-table a.jenkins-button')._tippy.show()\");\n         wc.waitForBackgroundJavaScript(2000L);\n         ScriptResult result = page.executeJavaScript(\"document.querySelector('.tippy-content').innerHTML;\");\n         Object jsResult = result.getJavaScriptResult();"
    },
    {
        "commit_id": "c729b417635668ce6c3815c91ed0247be4462416",
        "commit_message": "Use Collection.isEmpty() to test if collections are empty (#9072)\n\nFix issue S1155 'Collection.isEmpty()' should be used to test for emptiness",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c729b417635668ce6c3815c91ed0247be4462416",
        "buggy_code": "return getWarnings().size() > 0;",
        "fixed_code": "return !getWarnings().isEmpty();",
        "patch": "@@ -1572,7 +1572,7 @@ public Stream<String> getCategoriesStream() {\n          */\n         @Restricted(DoNotUse.class)\n         public boolean hasWarnings() {\n-            return getWarnings().size() > 0;\n+            return !getWarnings().isEmpty();\n         }\n \n         /**"
    },
    {
        "commit_id": "c729b417635668ce6c3815c91ed0247be4462416",
        "commit_message": "Use Collection.isEmpty() to test if collections are empty (#9072)\n\nFix issue S1155 'Collection.isEmpty()' should be used to test for emptiness",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c729b417635668ce6c3815c91ed0247be4462416",
        "buggy_code": "return ProcessKillingVeto.all().size() > 0;",
        "fixed_code": "return !ProcessKillingVeto.all().isEmpty();",
        "patch": "@@ -483,7 +483,7 @@ public static ProcessTree get() {\n     private static class DoVetoersExist extends SlaveToMasterCallable<Boolean, IOException> {\n         @Override\n         public Boolean call() throws IOException {\n-            return ProcessKillingVeto.all().size() > 0;\n+            return !ProcessKillingVeto.all().isEmpty();\n         }\n     }\n "
    },
    {
        "commit_id": "c729b417635668ce6c3815c91ed0247be4462416",
        "commit_message": "Use Collection.isEmpty() to test if collections are empty (#9072)\n\nFix issue S1155 'Collection.isEmpty()' should be used to test for emptiness",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c729b417635668ce6c3815c91ed0247be4462416",
        "buggy_code": "if (whitelistProviders.size() > 0) {",
        "fixed_code": "if (!whitelistProviders.isEmpty()) {",
        "patch": "@@ -65,7 +65,7 @@ public boolean keep(@NonNull Function m) {\n \n         // check whitelist\n         ExtensionList<RoutingDecisionProvider> whitelistProviders = ExtensionList.lookup(RoutingDecisionProvider.class);\n-        if (whitelistProviders.size() > 0) {\n+        if (!whitelistProviders.isEmpty()) {\n             for (RoutingDecisionProvider provider : whitelistProviders) {\n                 RoutingDecisionProvider.Decision methodDecision = provider.decide(signature);\n                 if (methodDecision == RoutingDecisionProvider.Decision.ACCEPTED) {"
    },
    {
        "commit_id": "c729b417635668ce6c3815c91ed0247be4462416",
        "commit_message": "Use Collection.isEmpty() to test if collections are empty (#9072)\n\nFix issue S1155 'Collection.isEmpty()' should be used to test for emptiness",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c729b417635668ce6c3815c91ed0247be4462416",
        "buggy_code": "if (runs.size() > 0) {",
        "fixed_code": "if (!runs.isEmpty()) {",
        "patch": "@@ -264,7 +264,7 @@ private void addQueueItem(QueueItem item) {\n     private void addRun(Run run) {\n         HistoryPageEntry<Run> entry = new HistoryPageEntry<>(run);\n         // Assert that runs have been added in descending order\n-        if (runs.size() > 0) {\n+        if (!runs.isEmpty()) {\n             if (entry.getEntryId() > runs.get(runs.size() - 1).getEntryId()) {\n                 throw new IllegalStateException(\"Runs were out of order\");\n             }"
    },
    {
        "commit_id": "044c071235f0a64fb8390e784c7e1abb52aecb05",
        "commit_message": "Fix import used for Javadoc (#8790)\n\nCo-authored-by: Daniel Beck <daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/044c071235f0a64fb8390e784c7e1abb52aecb05",
        "buggy_code": "import hudson.util.ListBoxModel.Option;",
        "fixed_code": "import org.kohsuke.args4j.Option;",
        "patch": "@@ -28,12 +28,12 @@\n import static java.lang.annotation.RetentionPolicy.RUNTIME;\n \n import hudson.cli.CLICommand;\n-import hudson.util.ListBoxModel.Option;\n import java.lang.annotation.Documented;\n import java.lang.annotation.Retention;\n import java.lang.annotation.Target;\n import org.jvnet.hudson.annotation_indexer.Indexed;\n import org.kohsuke.args4j.Argument;\n+import org.kohsuke.args4j.Option;\n \n /**\n  * Annotates methods on model objects to expose them as CLI commands."
    },
    {
        "commit_id": "3a1ac2cb44fd806ab92a01f6674fbe46e24d4a0c",
        "commit_message": "Use Jenkins modal for 'Apply' button failures (#8394)\n\n* Init\r\n\r\n* Linting\r\n\r\n* Test fixes\r\n\r\n* Switch to dialog for simple error case\r\n\r\n---------\r\n\r\nCo-authored-by: Tim Jacomb <timjacomb1@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3a1ac2cb44fd806ab92a01f6674fbe46e24d4a0c",
        "buggy_code": "assertThat(content, containsString(\"A problem occurred while processing the request.\"));",
        "fixed_code": "assertThat(content, containsString(\"A problem occurred while processing the request\"));",
        "patch": "@@ -161,7 +161,7 @@ public void save() {\n     }\n \n     private void checBaseResponseContent(String content) {\n-        assertThat(content, containsString(\"A problem occurred while processing the request.\"));\n+        assertThat(content, containsString(\"A problem occurred while processing the request\"));\n         assertThat(content, containsString(\"Logging ID=\"));\n         assertThat(content, containsString(\"Oops!\"));\n     }"
    },
    {
        "commit_id": "d06f36076f32a424d59cba42f112e00401c081ec",
        "commit_message": "Log `Error`s from `SlaveComputer._connect` (#8675)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d06f36076f32a424d59cba42f112e00401c081ec",
        "buggy_code": "} catch (RuntimeException e) {",
        "fixed_code": "} catch (RuntimeException | Error e) {",
        "patch": "@@ -308,7 +308,7 @@ protected Future<?> _connect(boolean forceReconnect) {\n                     e.addSuppressed(threadInfo);\n                     Functions.printStackTrace(e, taskListener.error(Messages.ComputerLauncher_abortedLaunch()));\n                     throw e;\n-                } catch (RuntimeException e) {\n+                } catch (RuntimeException | Error e) {\n                     e.addSuppressed(threadInfo);\n                     Functions.printStackTrace(e, taskListener.error(Messages.ComputerLauncher_unexpectedError()));\n                     throw e;"
    },
    {
        "commit_id": "6fdfdd01c6c551777b9ff7d7abd6d86536b281b0",
        "commit_message": "[JENKINS-71937] Fix deprecated `Slave` constructor (#8564)\n\n[JENKINS-71937] Fix deprecated Slave constructor\r\n\r\nGot broken in https://github.com/jenkinsci/jenkins/pull/8395\r\n\r\nCo-authored-by: Basil Crow <me@basilcrow.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6fdfdd01c6c551777b9ff7d7abd6d86536b281b0",
        "buggy_code": "this.labelAtomSet = Collections.unmodifiableSet(Label.parse(labelString));",
        "fixed_code": "_setLabelString(labelString);",
        "patch": "@@ -196,7 +196,7 @@ protected Slave(@NonNull String name, String nodeDescription, String remoteFS, i\n         this.numExecutors = numExecutors;\n         this.mode = mode;\n         this.remoteFS = Util.fixNull(remoteFS).trim();\n-        this.labelAtomSet = Collections.unmodifiableSet(Label.parse(labelString));\n+        _setLabelString(labelString);\n         this.launcher = launcher;\n         this.retentionStrategy = retentionStrategy;\n         getAssignedLabels();    // compute labels now"
    },
    {
        "commit_id": "87888c7d5fa72eae3b65ad34cf11034ac12237f2",
        "commit_message": "Use `isEmpty()` and simplified assertions in Test (#8473)\n\n* use isEmpty() and simplified assertions\r\n\r\n* use `assertThat` instead of `assertFalse` to get better messages in case of failure\r\n\r\n* Update test/src/test/java/lib/hudson/ListScmBrowsersTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/PluginManagerTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/PluginManagerTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/PluginManagerTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/model/HelpLinkTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/model/HelpLinkTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/lib/hudson/ListScmBrowsersTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/lib/hudson/ListScmBrowsersTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* spotless fix\r\n\r\n---------\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/87888c7d5fa72eae3b65ad34cf11034ac12237f2",
        "buggy_code": "replace(node.getNodeName().equals(\"\") ? \"config.xml\" : String.format(\"nodes/%s/config.xml\", node.getNodeName()), \"oldLabel\", \"newLabel\");",
        "fixed_code": "replace(node.getNodeName().isEmpty() ? \"config.xml\" : String.format(\"nodes/%s/config.xml\", node.getNodeName()), \"oldLabel\", \"newLabel\");",
        "patch": "@@ -102,7 +102,7 @@ public void reloadSlaveConfig() throws Exception {\n     }\n \n     private void modifyNode(Node node) throws Exception {\n-        replace(node.getNodeName().equals(\"\") ? \"config.xml\" : String.format(\"nodes/%s/config.xml\", node.getNodeName()), \"oldLabel\", \"newLabel\");\n+        replace(node.getNodeName().isEmpty() ? \"config.xml\" : String.format(\"nodes/%s/config.xml\", node.getNodeName()), \"oldLabel\", \"newLabel\");\n \n         assertThat(node.getLabelString(), equalTo(\"oldLabel\"));\n "
    },
    {
        "commit_id": "87888c7d5fa72eae3b65ad34cf11034ac12237f2",
        "commit_message": "Use `isEmpty()` and simplified assertions in Test (#8473)\n\n* use isEmpty() and simplified assertions\r\n\r\n* use `assertThat` instead of `assertFalse` to get better messages in case of failure\r\n\r\n* Update test/src/test/java/lib/hudson/ListScmBrowsersTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/PluginManagerTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/PluginManagerTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/PluginManagerTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/model/HelpLinkTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/model/HelpLinkTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/lib/hudson/ListScmBrowsersTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/lib/hudson/ListScmBrowsersTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* spotless fix\r\n\r\n---------\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/87888c7d5fa72eae3b65ad34cf11034ac12237f2",
        "buggy_code": "return storage.size() != 0;",
        "fixed_code": "return !storage.isEmpty();",
        "patch": "@@ -327,7 +327,7 @@ public void delete(String id) {\n \n         @Override\n         public boolean isReady() {\n-            return storage.size() != 0;\n+            return !storage.isEmpty();\n         }\n \n         @Override"
    },
    {
        "commit_id": "87888c7d5fa72eae3b65ad34cf11034ac12237f2",
        "commit_message": "Use `isEmpty()` and simplified assertions in Test (#8473)\n\n* use isEmpty() and simplified assertions\r\n\r\n* use `assertThat` instead of `assertFalse` to get better messages in case of failure\r\n\r\n* Update test/src/test/java/lib/hudson/ListScmBrowsersTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/PluginManagerTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/PluginManagerTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/PluginManagerTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/model/HelpLinkTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/hudson/model/HelpLinkTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/lib/hudson/ListScmBrowsersTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* Update test/src/test/java/lib/hudson/ListScmBrowsersTest.java\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>\r\n\r\n* spotless fix\r\n\r\n---------\r\n\r\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/87888c7d5fa72eae3b65ad34cf11034ac12237f2",
        "buggy_code": "assertTrue(\"html output too short\", cd.toHtml().length() > 0);",
        "fixed_code": "assertFalse(\"html output too short\", cd.toHtml().isEmpty());",
        "patch": "@@ -37,6 +37,6 @@ public void testClockMonitor() throws Exception {\n         assertTrue(cd.abs() >= 0);\n         assertTrue(cd.abs() < TimeUnit.SECONDS.toMillis(5));\n         assertFalse(cd.isDangerous());\n-        assertTrue(\"html output too short\", cd.toHtml().length() > 0);\n+        assertFalse(\"html output too short\", cd.toHtml().isEmpty());\n     }\n }"
    },
    {
        "commit_id": "105951c11c670fad5904a3a2d64caba7d109bd96",
        "commit_message": "Add data-bound setters for View (#8511)\n\n* Add data-bound setters for View\r\n\r\nThis allows programmatic edit of View\r\n\r\n* Clean up\r\n\r\n* Fix test\r\n\r\n---------\r\n\r\nCo-authored-by: Alexander Brandes <mc.cache@web.de>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/105951c11c670fad5904a3a2d64caba7d109bd96",
        "buggy_code": "editViewForm.getTextAreaByName(\"description\").setText(\"This list view is awesome !\");",
        "fixed_code": "editViewForm.getTextAreaByName(\"_.description\").setText(\"This list view is awesome !\");",
        "patch": "@@ -120,7 +120,7 @@ public void invisiblePropertiesOnViewShoudBePersisted() throws Exception {\n \n \n         HtmlForm editViewForm = editViewPage.getFormByName(\"viewConfig\");\n-        editViewForm.getTextAreaByName(\"description\").setText(\"This list view is awesome !\");\n+        editViewForm.getTextAreaByName(\"_.description\").setText(\"This list view is awesome !\");\n         r.submit(editViewForm);\n \n         //Check that the description is updated on view"
    },
    {
        "commit_id": "a45f0601fcfffb7fca10e08dcf9a5234ea87e298",
        "commit_message": "[JENKINS-71200] Fix elements property overload in ListView (#7942)\n\n* [JENKINS-71200] Add test for ListView attributes overloads\r\n\r\n* [JENKINS-71200] Fix elements property overload in ListView",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a45f0601fcfffb7fca10e08dcf9a5234ea87e298",
        "buggy_code": "if (req.getParameter(relativeNameFrom) != null) {",
        "fixed_code": "if (req.getParameter(\"item_\" + relativeNameFrom) != null) {",
        "patch": "@@ -452,7 +452,7 @@ protected void submit(StaplerRequest req) throws ServletException, FormException\n             }\n             for (TopLevelItem item : items) {\n                 String relativeNameFrom = item.getRelativeNameFrom(getOwner().getItemGroup());\n-                if (req.getParameter(relativeNameFrom) != null) {\n+                if (req.getParameter(\"item_\" + relativeNameFrom) != null) {\n                     jobNames.add(relativeNameFrom);\n                 }\n             }"
    },
    {
        "commit_id": "95840c1fb7453db7658822092df11f2b26d42ed5",
        "commit_message": "Fix @Deprecated annotation",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/95840c1fb7453db7658822092df11f2b26d42ed5",
        "buggy_code": "@Deprecated",
        "fixed_code": "@Deprecated(forRemoval = true, since = \"TODO\")",
        "patch": "@@ -615,7 +615,7 @@ public Collection<?> getOverrides() {\n     /**\n      * @deprecated see {@link LazyBuildMixIn#createHistoryWidget()}\n      */\n-    @Deprecated\n+    @Deprecated(forRemoval = true, since = \"TODO\")\n     protected HistoryWidget createHistoryWidget() {\n         return new HistoryWidget<Job, RunT>(this, getBuilds(), HISTORY_ADAPTER);\n     }"
    },
    {
        "commit_id": "29e6edcc4735379fe758fff2b5ffeb09389fa215",
        "commit_message": "[JENKINS-70630] - Fix HTTP2 missing header (#7701)\n\n* JENKINS-70630 - fix HTTP2 missing header\r\n\r\n* JENKINS-70630 - remove port\r\n\r\n* Simplify assignment of currentRequestHost\r\n\r\nhttps://github.com/jenkinsci/jenkins/pull/7701#discussion_r1133365472\r\n\r\n* Make it compile\r\n\r\n---------\r\n\r\nCo-authored-by: Carlos Monteiro <carlos.monteiro@inmarsat.com>\r\nCo-authored-by: Alexander Brandes <mc.cache@web.de>\r\nCo-authored-by: Mark Waite <mark.earl.waite@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/29e6edcc4735379fe758fff2b5ffeb09389fa215",
        "buggy_code": "String currentRequestHost = currentRequest.getHeader(\"Host\");",
        "fixed_code": "String currentRequestHost = currentRequest.getServerName();",
        "patch": "@@ -134,7 +134,7 @@ private FormValidation checkUrl(String resourceRootUrlString, boolean allowOnlin\n \n         StaplerRequest currentRequest = Stapler.getCurrentRequest();\n         if (currentRequest != null) {\n-            String currentRequestHost = currentRequest.getHeader(\"Host\");\n+            String currentRequestHost = currentRequest.getServerName();\n \n             if (currentRequestHost.equals(resourceRootUrlHost)) {\n                 return FormValidation.error(Messages.ResourceDomainConfiguration_SameAsCurrent());"
    },
    {
        "commit_id": "fe416de6a06b686d27c88880044db0167966f874",
        "commit_message": "Merge pull request #7543 from MarkEWaite/fix-URICheckEncodingMonitor-NPE\n\nFix URICheckEncodingMonitor NPE",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe416de6a06b686d27c88880044db0167966f874",
        "buggy_code": "String valueHex = Util.toHexString(value.getBytes(StandardCharsets.UTF_8));",
        "fixed_code": "String valueHex = value != null ? Util.toHexString(value.getBytes(StandardCharsets.UTF_8)) : null;",
        "patch": "@@ -43,7 +43,7 @@ public FormValidation doCheckURIEncoding(StaplerRequest request) throws IOExcept\n \n         if (!expected.equals(value)) {\n             String expectedHex = Util.toHexString(expected.getBytes(StandardCharsets.UTF_8));\n-            String valueHex = Util.toHexString(value.getBytes(StandardCharsets.UTF_8));\n+            String valueHex = value != null ? Util.toHexString(value.getBytes(StandardCharsets.UTF_8)) : null;\n             LOGGER.log(Level.CONFIG, \"Expected to receive: \" + expected + \" (\" + expectedHex + \") but got: \" + value + \" (\" + valueHex + \")\");\n             return FormValidation.warningWithMarkup(hudson.model.Messages.Hudson_NotUsesUTF8ToDecodeURL());\n         }"
    },
    {
        "commit_id": "fd2f7e817b89bb77188704770d93e4185f0ff3c5",
        "commit_message": "Avoid URICheckEncodingMonitor empty value NPE\n\nhttps://community.jenkins.io/t/reverse-proxy-test-does-not-handle-url-correctly/1294/9\nreports that an empty value returned to the URI encoding check monitor\nwill report a null pointer exception.  An empty value is unexpected in\nthat context, but it is easy to check for null and avoid the null\npointer exception.\n\nNo Jira ticket was opened for the issue.  I can open a Jira ticket if\nthat is required.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fd2f7e817b89bb77188704770d93e4185f0ff3c5",
        "buggy_code": "String valueHex = Util.toHexString(value.getBytes(StandardCharsets.UTF_8));",
        "fixed_code": "String valueHex = value != null ? Util.toHexString(value.getBytes(StandardCharsets.UTF_8)) : \"<empty string>\";",
        "patch": "@@ -43,7 +43,7 @@ public FormValidation doCheckURIEncoding(StaplerRequest request) throws IOExcept\n \n         if (!expected.equals(value)) {\n             String expectedHex = Util.toHexString(expected.getBytes(StandardCharsets.UTF_8));\n-            String valueHex = Util.toHexString(value.getBytes(StandardCharsets.UTF_8));\n+            String valueHex = value != null ? Util.toHexString(value.getBytes(StandardCharsets.UTF_8)) : \"<empty string>\";\n             LOGGER.log(Level.CONFIG, \"Expected to receive: \" + expected + \" (\" + expectedHex + \") but got: \" + value + \" (\" + valueHex + \")\");\n             return FormValidation.warningWithMarkup(hudson.model.Messages.Hudson_NotUsesUTF8ToDecodeURL());\n         }"
    },
    {
        "commit_id": "53e59bb0111d5d33ceae39c3b4b9deba4f147969",
        "commit_message": "Expose `org.jenkins.ui.symbol.Symbol` (#6659)\n\n* Expose org.jenkins.ui.symbol.Symbol\r\n\r\n* Exposes the existing IconSet#getSymbol for plugins by adding a builder\r\npattern and moving it to its own package and class to separate the\r\nsymbol framework from the Icon one.\r\n* Added coverage to the existing method including symbol lookup from\r\n  plugins\r\n\r\n* Fixes JENKINS-68805 and pick up #6685\r\n\r\n* Clean up\r\n\r\n* Rename method since the intent slightly changed\r\n\r\n* Simplify\r\n\r\n* Make this compile\r\n\r\n* Remove support for legacy names\r\n\r\n* Fix reviews\r\n\r\n* Add assertions for the symbol content used for testing\r\n\r\n* Read science svg from filesystem\r\n\r\n* Add withRaw to parse a raw selector\r\n\r\nCo-authored-by: Daniel Beck <daniel-beck@users.noreply.github.com>\r\nCo-authored-by: Basil Crow <me@basilcrow.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/53e59bb0111d5d33ceae39c3b4b9deba4f147969",
        "buggy_code": "import static org.hamcrest.CoreMatchers.containsString;",
        "fixed_code": "import static org.hamcrest.Matchers.containsString;",
        "patch": "@@ -1,7 +1,7 @@\n package org.jenkins.ui.icon;\n \n-import static org.hamcrest.CoreMatchers.containsString;\n import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.containsString;\n import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n import static org.hamcrest.Matchers.not;\n "
    },
    {
        "commit_id": "6cd155af37df4cc289053f08aa36ad01c847c12d",
        "commit_message": "JENKINS-69370 Fix inbound agent connection (#7014)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6cd155af37df4cc289053f08aa36ad01c847c12d",
        "buggy_code": "return restOfPath.matches(\"/computer/[^/]+/\" + prefix + \"-agent[.]jnlp\");",
        "fixed_code": "return restOfPath.matches(\"(/manage)?/computer/[^/]+/\" + prefix + \"-agent[.]jnlp\");",
        "patch": "@@ -5095,7 +5095,7 @@ public boolean isSubjectToMandatoryReadPermissionCheck(String restOfPath) {\n     }\n \n     private boolean isAgentJnlpPath(String restOfPath, String prefix) {\n-        return restOfPath.matches(\"/computer/[^/]+/\" + prefix + \"-agent[.]jnlp\");\n+        return restOfPath.matches(\"(/manage)?/computer/[^/]+/\" + prefix + \"-agent[.]jnlp\");\n     }\n \n     /**"
    },
    {
        "commit_id": "83bf69758c500623abb812573300cc0baeaf86f5",
        "commit_message": "[JENKINS-68801] Fix for `Functions#extractPluginNameFromIconSrc` (#6902)\n\nCo-authored-by: Temirlan Dyussyumbayev <bzzitsme@users.noreply.github.com>\r\nCo-authored-by: Alexander Brandes <mc.cache@web.de>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/83bf69758c500623abb812573300cc0baeaf86f5",
        "buggy_code": "return element.replace(\"plugin-\", \"\");",
        "fixed_code": "return element.replaceFirst(\"plugin-\", \"\");",
        "patch": "@@ -2341,7 +2341,7 @@ public static String extractPluginNameFromIconSrc(String iconSrc) {\n         String[] arr = iconSrc.split(\" \");\n         for (String element : arr) {\n             if (element.startsWith(\"plugin-\")) {\n-                return element.replace(\"plugin-\", \"\");\n+                return element.replaceFirst(\"plugin-\", \"\");\n             }\n         }\n "
    },
    {
        "commit_id": "58c16ccc36ccdba9f4d32bfb507725e7dd85b674",
        "commit_message": "[JENKINS-68906] Fix children context menu links (#6745)\n\nCo-authored-by: Daniel Beck <daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/58c16ccc36ccdba9f4d32bfb507725e7dd85b674",
        "buggy_code": "m.add(i.getShortUrl(), i.getDisplayName());",
        "fixed_code": "m.add(Functions.getRelativeLinkTo(i), Functions.getRelativeDisplayNameFrom(i, getOwner().getItemGroup()));",
        "patch": "@@ -1265,7 +1265,7 @@ public void updateByXml(Source source) throws IOException {\n     public ModelObjectWithContextMenu.ContextMenu doChildrenContextMenu(StaplerRequest request, StaplerResponse response) throws Exception {\n         ModelObjectWithContextMenu.ContextMenu m = new ModelObjectWithContextMenu.ContextMenu();\n         for (TopLevelItem i : getItems())\n-            m.add(i.getShortUrl(), i.getDisplayName());\n+            m.add(Functions.getRelativeLinkTo(i), Functions.getRelativeDisplayNameFrom(i, getOwner().getItemGroup()));\n         return m;\n     }\n "
    },
    {
        "commit_id": "a351a55418e69a01bf6ffa47fa8130171f6012da",
        "commit_message": "Merge pull request #6714 from dwnusbaum/boot-failure-parsing\n\n[JENKINS-68848] Fix date format used to parse boot attempt timestamps",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a351a55418e69a01bf6ffa47fa8130171f6012da",
        "buggy_code": "return FileUtils.readLines(BootFailure.getBootFailureFile(home), StandardCharsets.UTF_8).size();",
        "fixed_code": "return new BootFailure() { }.loadAttempts(home).size();",
        "patch": "@@ -150,7 +150,7 @@ public void runBootFailureScript() throws Exception {\n     }\n \n     private static int bootFailures(File home) throws IOException {\n-        return FileUtils.readLines(BootFailure.getBootFailureFile(home), StandardCharsets.UTF_8).size();\n+        return new BootFailure() { }.loadAttempts(home).size();\n     }\n \n     @Issue(\"JENKINS-24696\")"
    },
    {
        "commit_id": "54417a64724e9805ef03cad714eb88abeea13038",
        "commit_message": "[JENKINS-68848] Fix date format used to parse boot attempt timestamps",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/54417a64724e9805ef03cad714eb88abeea13038",
        "buggy_code": "return FileUtils.readLines(BootFailure.getBootFailureFile(home), StandardCharsets.UTF_8).size();",
        "fixed_code": "return new BootFailure() { }.loadAttempts(home).size();",
        "patch": "@@ -150,7 +150,7 @@ public void runBootFailureScript() throws Exception {\n     }\n \n     private static int bootFailures(File home) throws IOException {\n-        return FileUtils.readLines(BootFailure.getBootFailureFile(home), StandardCharsets.UTF_8).size();\n+        return new BootFailure() { }.loadAttempts(home).size();\n     }\n \n     @Issue(\"JENKINS-24696\")"
    },
    {
        "commit_id": "a7efc06f289db96893a041d14ec42e8eca868a15",
        "commit_message": "Fix 'unavailable plugin' messages in plugin manager (#6656)\n\nCo-authored-by: Daniel Beck <daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a7efc06f289db96893a041d14ec42e8eca868a15",
        "buggy_code": "jsonObject.put(\"newerVersionAvailableNotOffered\", Messages.PluginManager_newerVersionExists(plugin.latest));",
        "fixed_code": "jsonObject.put(\"newerVersionAvailableNotOffered\", Messages.PluginManager_newerVersionExists(plugin.latest, plugin.wiki));",
        "patch": "@@ -1437,7 +1437,7 @@ public HttpResponse doPluginsSearch(@QueryParameter String query, @QueryParamete\n                         jsonObject.put(\"releaseTimestamp\", releaseTimestamp);\n                     }\n                     if (hasLatestVersionNewerThanOffered(plugin)) {\n-                        jsonObject.put(\"newerVersionAvailableNotOffered\", Messages.PluginManager_newerVersionExists(plugin.latest));\n+                        jsonObject.put(\"newerVersionAvailableNotOffered\", Messages.PluginManager_newerVersionExists(plugin.latest, plugin.wiki));\n                     }\n                     return jsonObject;\n                 })"
    },
    {
        "commit_id": "45da1fa0acfa5008614d1e15501e82584ce10aa0",
        "commit_message": "[JENKINS-68270] Fix third party weather icons in table view (#6482)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/45da1fa0acfa5008614d1e15501e82584ce10aa0",
        "buggy_code": "assertIconToSvgIconOkay(ballIcons.get(0).getFirstElementChild(), \"icon-aborted\");",
        "fixed_code": "assertIconToSvgIconOkay(ballIcons.get(0).getFirstElementChild(), \"icon-aborted icon-md\");",
        "patch": "@@ -94,7 +94,7 @@ public void testBallColorTd() throws Exception {\n \n         DomElement ballColorAborted = p.getElementById(\"ballColorAborted\");\n         List<DomElement> ballIcons = StreamSupport.stream(ballColorAborted.getChildElements().spliterator(), false).collect(Collectors.toList());\n-        assertIconToSvgIconOkay(ballIcons.get(0).getFirstElementChild(), \"icon-aborted\");\n+        assertIconToSvgIconOkay(ballIcons.get(0).getFirstElementChild(), \"icon-aborted icon-md\");\n \n         DomElement statusIcons = p.getElementById(\"statusIcons\");\n         List<DomElement> statusIconsList = StreamSupport.stream(statusIcons.getChildElements().spliterator(), false).collect(Collectors.toList());"
    },
    {
        "commit_id": "d3159330e7ac5217da867e23e0e96203611195cc",
        "commit_message": "Fix deprecation warnings and remove obsolete throws (#6335)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d3159330e7ac5217da867e23e0e96203611195cc",
        "buggy_code": "private static void enableLegacyTokenGenerationOnUserCreation() throws Exception {",
        "fixed_code": "private static void enableLegacyTokenGenerationOnUserCreation() {",
        "patch": "@@ -165,7 +165,7 @@ public <T> boolean allows(Class<T> type, ExtensionComponent<T> component) {\n         }\n     }\n \n-    private static void enableLegacyTokenGenerationOnUserCreation() throws Exception {\n+    private static void enableLegacyTokenGenerationOnUserCreation() {\n         ApiTokenPropertyConfiguration apiTokenConfiguration = GlobalConfiguration.all().getInstance(ApiTokenPropertyConfiguration.class);\n         // by default it's false\n         apiTokenConfiguration.setTokenGenerationOnCreationEnabled(true);"
    },
    {
        "commit_id": "d3159330e7ac5217da867e23e0e96203611195cc",
        "commit_message": "Fix deprecation warnings and remove obsolete throws (#6335)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d3159330e7ac5217da867e23e0e96203611195cc",
        "buggy_code": "private void check(DumbSlave s) throws Exception {",
        "fixed_code": "private void check(DumbSlave s) {",
        "patch": "@@ -71,7 +71,7 @@ public void jnlpSlave() throws Exception {\n      * returns a malicious response.\n      */\n     @SuppressWarnings(\"ConstantConditions\")\n-    private void check(DumbSlave s) throws Exception {\n+    private void check(DumbSlave s) {\n         try {\n             Object o = s.getComputer().getChannel().call(new EvilReturnValue());\n             fail(\"Expected the connection to die: \" + o);"
    },
    {
        "commit_id": "d3159330e7ac5217da867e23e0e96203611195cc",
        "commit_message": "Fix deprecation warnings and remove obsolete throws (#6335)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d3159330e7ac5217da867e23e0e96203611195cc",
        "buggy_code": "return HttpResponses.plainText(Integer.toString(Jenkins.get().getItems().size()));",
        "fixed_code": "return HttpResponses.text(Integer.toString(Jenkins.get().getItems().size()));",
        "patch": "@@ -90,7 +90,7 @@ public String getUrlName() {\n         }\n \n         public HttpResponse doIndex() throws Exception {\n-            return HttpResponses.plainText(Integer.toString(Jenkins.get().getItems().size()));\n+            return HttpResponses.text(Integer.toString(Jenkins.get().getItems().size()));\n         }\n     }\n }"
    },
    {
        "commit_id": "d3159330e7ac5217da867e23e0e96203611195cc",
        "commit_message": "Fix deprecation warnings and remove obsolete throws (#6335)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d3159330e7ac5217da867e23e0e96203611195cc",
        "buggy_code": "public void newUserTokenConfiguration() throws Exception {",
        "fixed_code": "public void newUserTokenConfiguration() {",
        "patch": "@@ -44,7 +44,7 @@ public class ApiTokenPropertyConfigurationTest {\n \n     @Test\n     @Issue(\"JENKINS-32776\")\n-    public void newUserTokenConfiguration() throws Exception {\n+    public void newUserTokenConfiguration() {\n         ApiTokenPropertyConfiguration config = ApiTokenPropertyConfiguration.get();\n \n         config.setTokenGenerationOnCreationEnabled(true);"
    },
    {
        "commit_id": "d3159330e7ac5217da867e23e0e96203611195cc",
        "commit_message": "Fix deprecation warnings and remove obsolete throws (#6335)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d3159330e7ac5217da867e23e0e96203611195cc",
        "buggy_code": "public void onProgrammaticUserSeedChange_listenerTriggered() throws Exception {",
        "fixed_code": "public void onProgrammaticUserSeedChange_listenerTriggered() {",
        "patch": "@@ -44,7 +44,7 @@ public class UserSeedChangeListenerTest {\n     public JenkinsRule j = new JenkinsRule();\n \n     @Test\n-    public void onProgrammaticUserSeedChange_listenerTriggered() throws Exception {\n+    public void onProgrammaticUserSeedChange_listenerTriggered() {\n         TestUserSeedChangeListener testListener = j.jenkins.getExtensionList(UserSeedChangeListener.class).get(TestUserSeedChangeListener.class);\n \n         String userId = \"alice\";"
    },
    {
        "commit_id": "d3159330e7ac5217da867e23e0e96203611195cc",
        "commit_message": "Fix deprecation warnings and remove obsolete throws (#6335)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d3159330e7ac5217da867e23e0e96203611195cc",
        "buggy_code": "public void userCreation_implies_userSeedCreation() throws Exception {",
        "fixed_code": "public void userCreation_implies_userSeedCreation() {",
        "patch": "@@ -59,7 +59,7 @@ public class UserSeedPropertyTest {\n \n     @Test\n     @Issue(\"SECURITY-901\")\n-    public void userCreation_implies_userSeedCreation() throws Exception {\n+    public void userCreation_implies_userSeedCreation() {\n         User alice = User.getById(\"alice\", true);\n         assertNotNull(alice);\n         UserSeedProperty userSeed = alice.getProperty(UserSeedProperty.class);"
    },
    {
        "commit_id": "d3159330e7ac5217da867e23e0e96203611195cc",
        "commit_message": "Fix deprecation warnings and remove obsolete throws (#6335)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d3159330e7ac5217da867e23e0e96203611195cc",
        "buggy_code": "public void testRequestsDispatchedToEligibleDynamic() throws Exception {",
        "fixed_code": "public void testRequestsDispatchedToEligibleDynamic() {",
        "patch": "@@ -21,7 +21,7 @@ public class DynamicTest {\n     public JenkinsRule j = new JenkinsRule();\n \n     @Test\n-    public void testRequestsDispatchedToEligibleDynamic() throws Exception {\n+    public void testRequestsDispatchedToEligibleDynamic() {\n         JenkinsRule.WebClient wc = j.createWebClient();\n         Stream.of(\"whatever\", \"displayName\", \"iconFileName\", \"urlName\", \"response1\", \"response2\").forEach(url ->\n         {"
    },
    {
        "commit_id": "3fe3f76b18af4ef68ee3046879c20503c082f232",
        "commit_message": "Merge pull request #6286 from NotMyFault/fix/master/fix-folder-icons\n\n[JENKINS-67823] Don't append leading slash to foreign icons",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3fe3f76b18af4ef68ee3046879c20503c082f232",
        "buggy_code": "if (!iconGuess.startsWith(\"/\")) {",
        "fixed_code": "if (!iconGuess.startsWith(\"/\") && !iconGuess.startsWith(\"http\")) {",
        "patch": "@@ -2336,7 +2336,7 @@ public static String tryGetIconPath(String iconGuess, JellyContext context) {\n         }\n \n         if (iconMetadata == null) {\n-            if (!iconGuess.startsWith(\"/\")) {\n+            if (!iconGuess.startsWith(\"/\") && !iconGuess.startsWith(\"http\")) {\n                 iconGuess = \"/\" + iconGuess;\n             }\n "
    },
    {
        "commit_id": "0bb9c4f0083c2e3ba83194388d2a04309bc8e33e",
        "commit_message": "tests: Fix tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0bb9c4f0083c2e3ba83194388d2a04309bc8e33e",
        "buggy_code": "assertIconToImageOkay(taskDivs.get(7).getElementsByTagName(\"img\").get(0), \"/plugin/xxx/icon.png\");",
        "fixed_code": "assertIconToImageOkay(taskDivs.get(7).getElementsByTagName(\"img\").get(0), \"plugin/xxx/icon.png\");",
        "patch": "@@ -151,7 +151,7 @@ public void testTasks() throws Exception {\n         assertIconToSymbolOkay(taskDivs.get(5).getElementsByTagName(\"svg\").get(0));\n \n         assertIconToImageOkay(taskDivs.get(6).getElementsByTagName(\"img\").get(0), \"/plugin/xxx/icon.png\");\n-        assertIconToImageOkay(taskDivs.get(7).getElementsByTagName(\"img\").get(0), \"/plugin/xxx/icon.png\");\n+        assertIconToImageOkay(taskDivs.get(7).getElementsByTagName(\"img\").get(0), \"plugin/xxx/icon.png\");\n     }\n \n     @TestExtension(\"testTasks\")"
    },
    {
        "commit_id": "6b5e3d11700c086d9b3b6e14132240691a6bebbd",
        "commit_message": "Unify labels in plugin manager (#6151)\n\n* Map outdated labels to canonical ones\r\n\r\n* Fix checkstyle issue (missing space)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6b5e3d11700c086d9b3b6e14132240691a6bebbd",
        "buggy_code": "private static Stream<String> configLines(InputStream is) throws IOException {",
        "fixed_code": "public static Stream<String> configLines(InputStream is) throws IOException {",
        "patch": "@@ -144,7 +144,7 @@ public static boolean isDetachedPlugin(@NonNull String pluginId) {\n         return false;\n     }\n \n-    private static Stream<String> configLines(InputStream is) throws IOException {\n+    public static Stream<String> configLines(InputStream is) throws IOException {\n         return IOUtils.readLines(is, StandardCharsets.UTF_8).stream().filter(line -> !line.matches(\"#.*|\\\\s*\"));\n     }\n "
    },
    {
        "commit_id": "94b5a216db7850d5bf84b0f1de28d9e007382e62",
        "commit_message": "Fix `EQ_GETCLASS_AND_CLASS_CONSTANT` SpotBugs violations (#6125)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/94b5a216db7850d5bf84b0f1de28d9e007382e62",
        "buggy_code": "return obj != null && obj.getClass().equals(NoClientBindProtocolSocketFactory.class);",
        "fixed_code": "return obj != null && obj.getClass().equals(getClass());",
        "patch": "@@ -109,7 +109,7 @@ public Socket createSocket(String host, int port) throws IOException {\n      */\n     @Override\n     public boolean equals(Object obj) {\n-        return obj != null && obj.getClass().equals(NoClientBindProtocolSocketFactory.class);\n+        return obj != null && obj.getClass().equals(getClass());\n     }\n \n     /**"
    },
    {
        "commit_id": "b068fd25dd48b6ce327188658ed06bf61fff2edb",
        "commit_message": "Fix `RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE` and `RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE` SpotBugs violations (#6109)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b068fd25dd48b6ce327188658ed06bf61fff2edb",
        "buggy_code": "@SuppressFBWarnings(value = \"NP_LOAD_OF_KNOWN_NULL_VALUE\", justification = \"https://github.com/spotbugs/spotbugs/issues/756\")",
        "fixed_code": "@SuppressFBWarnings(value = {\"NP_LOAD_OF_KNOWN_NULL_VALUE\", \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\"}, justification = \"https://github.com/spotbugs/spotbugs/issues/756\")",
        "patch": "@@ -245,7 +245,7 @@ private boolean digestMatches(byte[] digest, String providedDigest) {\n     }\n \n \n-    @SuppressFBWarnings(value = \"NP_LOAD_OF_KNOWN_NULL_VALUE\", justification = \"https://github.com/spotbugs/spotbugs/issues/756\")\n+    @SuppressFBWarnings(value = {\"NP_LOAD_OF_KNOWN_NULL_VALUE\", \"RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE\"}, justification = \"https://github.com/spotbugs/spotbugs/issues/756\")\n     protected Set<TrustAnchor> loadTrustAnchors(CertificateFactory cf) throws IOException {\n         // if we trust default root CAs, we end up trusting anyone who has a valid certificate,\n         // which isn't useful at all"
    },
    {
        "commit_id": "8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "commit_message": "Fix `DM_DEFAULT_ENCODING` SpotBugs violations (#6050)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "buggy_code": "rsp.setHeader(\"X-ConsoleAnnotator\", new String(Base64.getEncoder().encode(baos.toByteArray())));",
        "fixed_code": "rsp.setHeader(\"X-ConsoleAnnotator\", Base64.getEncoder().encodeToString(baos.toByteArray()));",
        "patch": "@@ -186,7 +186,7 @@ public long writeHtmlTo(long start, Writer w) throws IOException {\n         oos.close();\n         StaplerResponse rsp = Stapler.getCurrentResponse();\n         if (rsp!=null)\n-            rsp.setHeader(\"X-ConsoleAnnotator\", new String(Base64.getEncoder().encode(baos.toByteArray())));\n+            rsp.setHeader(\"X-ConsoleAnnotator\", Base64.getEncoder().encodeToString(baos.toByteArray()));\n         return r;\n     }\n "
    },
    {
        "commit_id": "8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "commit_message": "Fix `DM_DEFAULT_ENCODING` SpotBugs violations (#6050)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "buggy_code": "LOGGER.log(Level.FINE, \"Failed to resurrect annotation from \\\"\" + StringEscapeUtils.escapeJava(new String(in, next, rest)) + \"\\\"\", e);",
        "fixed_code": "LOGGER.log(Level.FINE, \"Failed to resurrect annotation from \\\"\" + StringEscapeUtils.escapeJava(new String(in, next, rest, Charset.defaultCharset())) + \"\\\"\", e);",
        "patch": "@@ -121,7 +121,7 @@ public ConsoleAnnotator<T> annotate(T context, MarkupText text) {\n                     }\n                 } catch (IOException | ClassNotFoundException e) {\n                     // if we failed to resurrect an annotation, ignore it.\n-                    LOGGER.log(Level.FINE, \"Failed to resurrect annotation from \\\"\" + StringEscapeUtils.escapeJava(new String(in, next, rest)) + \"\\\"\", e);\n+                    LOGGER.log(Level.FINE, \"Failed to resurrect annotation from \\\"\" + StringEscapeUtils.escapeJava(new String(in, next, rest, Charset.defaultCharset())) + \"\\\"\", e);\n                 }\n \n                 int bytesUsed = rest - b.available(); // bytes consumed by annotations"
    },
    {
        "commit_id": "8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "commit_message": "Fix `DM_DEFAULT_ENCODING` SpotBugs violations (#6050)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "buggy_code": "return new String(Base64.getEncoder().encode(baos.toByteArray()));",
        "fixed_code": "return Base64.getEncoder().encodeToString(baos.toByteArray());",
        "patch": "@@ -193,7 +193,7 @@ public String getStatData() throws IOException {\n                 o.write(w);\n             }\n \n-            return new String(Base64.getEncoder().encode(baos.toByteArray()));\n+            return Base64.getEncoder().encodeToString(baos.toByteArray());\n         } catch (Throwable e) { // the exception could be GeneralSecurityException, InvalidParameterException or any other depending on the security provider you have installed\n             LOG.log(Level.INFO, \"Usage statistics could not be sent ({0})\", e.getMessage());\n             LOG.log(Level.FINE, \"Error sending usage statistics\", e);"
    },
    {
        "commit_id": "8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "commit_message": "Fix `DM_DEFAULT_ENCODING` SpotBugs violations (#6050)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "buggy_code": "return new String(Base64.getEncoder().encode(secret.getBytes(StandardCharsets.UTF_8)));",
        "fixed_code": "return Base64.getEncoder().encodeToString(secret.getBytes(StandardCharsets.UTF_8));",
        "patch": "@@ -40,7 +40,7 @@ public class Scrambler {\n \n     public static String scramble(String secret) {\n         if(secret==null)    return null;\n-        return new String(Base64.getEncoder().encode(secret.getBytes(StandardCharsets.UTF_8)));\n+        return Base64.getEncoder().encodeToString(secret.getBytes(StandardCharsets.UTF_8));\n     }\n \n     public static String descramble(String scrambled) {"
    },
    {
        "commit_id": "8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "commit_message": "Fix `DM_DEFAULT_ENCODING` SpotBugs violations (#6050)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "buggy_code": "return \"{\"+new String(Base64.getEncoder().encode(payload))+\"}\";",
        "fixed_code": "return \"{\" + Base64.getEncoder().encodeToString(payload) + \"}\";",
        "patch": "@@ -148,7 +148,7 @@ public String getEncryptedValue() {\n             System.arraycopy(iv, 0, payload, pos, iv.length);\n             pos+=iv.length;\n             System.arraycopy(encrypted, 0, payload, pos, encrypted.length);\n-            return \"{\"+new String(Base64.getEncoder().encode(payload))+\"}\";\n+            return \"{\" + Base64.getEncoder().encodeToString(payload) + \"}\";\n         } catch (GeneralSecurityException e) {\n             throw new Error(e); // impossible\n         }"
    },
    {
        "commit_id": "8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "commit_message": "Fix `DM_DEFAULT_ENCODING` SpotBugs violations (#6050)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8a5e3092566a6a9631a5bce91e7edd02643dd156",
        "buggy_code": "return providedDigest.equalsIgnoreCase(Hex.encodeHexString(digest)) || providedDigest.equalsIgnoreCase(new String(Base64.getEncoder().encode(digest)));",
        "fixed_code": "return providedDigest.equalsIgnoreCase(Hex.encodeHexString(digest)) || providedDigest.equalsIgnoreCase(Base64.getEncoder().encodeToString(digest));",
        "patch": "@@ -241,7 +241,7 @@ private boolean verifySignature(Signature signature, String providedSignature) {\n      * Utility method supporting both possible digest formats: Base64 and Hex\n      */\n     private boolean digestMatches(byte[] digest, String providedDigest) {\n-        return providedDigest.equalsIgnoreCase(Hex.encodeHexString(digest)) || providedDigest.equalsIgnoreCase(new String(Base64.getEncoder().encode(digest)));\n+        return providedDigest.equalsIgnoreCase(Hex.encodeHexString(digest)) || providedDigest.equalsIgnoreCase(Base64.getEncoder().encodeToString(digest));\n     }\n \n "
    },
    {
        "commit_id": "c3e22d57db2961767dfb9c6a7adf64f324b952e4",
        "commit_message": "Fix `IS2_INCONSISTENT_SYNC` SpotBugs violations (#6047)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c3e22d57db2961767dfb9c6a7adf64f324b952e4",
        "buggy_code": "private void initializeMessageDigest() {",
        "fixed_code": "private synchronized void initializeMessageDigest() {",
        "patch": "@@ -57,7 +57,7 @@ private Object readResolve() {\n         return this;\n     }\n \n-    private void initializeMessageDigest() {\n+    private synchronized void initializeMessageDigest() {\n         try {\n             md = MessageDigest.getInstance(\"SHA-256\");\n         } catch (NoSuchAlgorithmException e) {"
    },
    {
        "commit_id": "c3e22d57db2961767dfb9c6a7adf64f324b952e4",
        "commit_message": "Fix `IS2_INCONSISTENT_SYNC` SpotBugs violations (#6047)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c3e22d57db2961767dfb9c6a7adf64f324b952e4",
        "buggy_code": "private boolean isOnlineScheduled() {",
        "fixed_code": "private synchronized boolean isOnlineScheduled() {",
        "patch": "@@ -239,7 +239,7 @@ public void run() {\n         return 1;\n     }\n \n-    private boolean isOnlineScheduled() {\n+    private synchronized boolean isOnlineScheduled() {\n         updateStartStopWindow();\n         long now = System.currentTimeMillis();\n         return (lastStart < now && lastStop > now) || (nextStart < now && nextStop > now);"
    },
    {
        "commit_id": "c3e22d57db2961767dfb9c6a7adf64f324b952e4",
        "commit_message": "Fix `IS2_INCONSISTENT_SYNC` SpotBugs violations (#6047)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c3e22d57db2961767dfb9c6a7adf64f324b952e4",
        "buggy_code": "public List<String> getArguments() {",
        "fixed_code": "public synchronized List<String> getArguments() {",
        "patch": "@@ -1727,7 +1727,7 @@ public synchronized EnvVars getEnvironmentVariables() {\n \n             @Override\n             @NonNull\n-            public List<String> getArguments() {\n+            public synchronized List<String> getArguments() {\n                 if(arguments !=null)\n                     return arguments;\n                 parse();"
    },
    {
        "commit_id": "960925fc5055208d2b64a0388161ddcbcd5916aa",
        "commit_message": "Fix various test bugs seen when running on Windows (#6029)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/960925fc5055208d2b64a0388161ddcbcd5916aa",
        "buggy_code": "uberClassLoader.loadClass(\"hudson.plugins.tasks.Messages\");",
        "fixed_code": "assertNotNull(uberClassLoader.loadClass(\"htmlpublisher.HtmlPublisher\"));",
        "patch": "@@ -194,7 +194,7 @@ public void startPlugin(PluginWrapper plugin) throws Exception {\n                     // plugins should be already visible in the UberClassLoader\n                     assertFalse(activePlugins.isEmpty());\n \n-                    uberClassLoader.loadClass(\"hudson.plugins.tasks.Messages\");\n+                    assertNotNull(uberClassLoader.loadClass(\"htmlpublisher.HtmlPublisher\"));\n \n                     super.startPlugin(plugin);\n                 }"
    },
    {
        "commit_id": "485c9b096635ca4261f4581833e4a733e80abfe0",
        "commit_message": "Fix `XXE_SAXPARSER` SpotBugs violations (#6052)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/485c9b096635ca4261f4581833e4a733e80abfe0",
        "buggy_code": "assertThat(ex.getCause().getMessage(), containsString(\"Refusing to resolve entity with publicId(null) and systemId (file:///)\"));",
        "fixed_code": "assertThat(ex.getCause().getMessage(), containsString(\"DOCTYPE is disallowed\"));",
        "patch": "@@ -85,7 +85,7 @@ public void parseInvalidRequestedPlugins() throws Exception {\n                 () -> pluginManager.parseRequestedPlugins(new ByteArrayInputStream(evilXML.getBytes())),\n                 \"XML contains an external entity, but no exception was thrown.\");\n         assertThat(ex.getCause(), instanceOf(SAXException.class));\n-        assertThat(ex.getCause().getMessage(), containsString(\"Refusing to resolve entity with publicId(null) and systemId (file:///)\"));\n+        assertThat(ex.getCause().getMessage(), containsString(\"DOCTYPE is disallowed\"));\n     }\n     \n     @Test"
    },
    {
        "commit_id": "165d559469c7a58af581931bd1b89e5b9ed4a9af",
        "commit_message": "Fix `RV_RETURN_VALUE_IGNORED_BAD_PRACTICE` SpotBugs violations (#6025)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/165d559469c7a58af581931bd1b89e5b9ed4a9af",
        "buggy_code": "tmpFile.delete();",
        "fixed_code": "Files.delete(Util.fileToPath(tmpFile));",
        "patch": "@@ -200,7 +200,7 @@ public static int remotePost(String[] args) throws Exception {\n                 }\n             }\n         } finally {\n-            tmpFile.delete();\n+            Files.delete(Util.fileToPath(tmpFile));\n         }\n     }\n "
    },
    {
        "commit_id": "165d559469c7a58af581931bd1b89e5b9ed4a9af",
        "commit_message": "Fix `RV_RETURN_VALUE_IGNORED_BAD_PRACTICE` SpotBugs violations (#6025)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/165d559469c7a58af581931bd1b89e5b9ed4a9af",
        "buggy_code": "archive.delete();",
        "fixed_code": "Files.deleteIfExists(Util.fileToPath(archive));",
        "patch": "@@ -1378,7 +1378,7 @@ public HttpResponse doDoUninstall() throws IOException {\n         Jenkins jenkins = Jenkins.get();\n         \n         jenkins.checkPermission(Jenkins.ADMINISTER);\n-        archive.delete();\n+        Files.deleteIfExists(Util.fileToPath(archive));\n \n         // Redo who depends on who.\n         jenkins.getPluginManager().resolveDependentPlugins();"
    },
    {
        "commit_id": "165d559469c7a58af581931bd1b89e5b9ed4a9af",
        "commit_message": "Fix `RV_RETURN_VALUE_IGNORED_BAD_PRACTICE` SpotBugs violations (#6025)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/165d559469c7a58af581931bd1b89e5b9ed4a9af",
        "buggy_code": "assertEquals(\"{other=2.0, stuff=1.2}\", new LocalPluginManager(output.toFile())",
        "fixed_code": "assertEquals(\"{other=2.0, stuff=1.2}\", new LocalPluginManager(output.getParent().toFile())",
        "patch": "@@ -62,7 +62,7 @@ public void parseRequestedPlugins() throws Exception {\n         Path output = Files.createFile(\n                 tmp.resolve(\"output.txt\")\n         );\n-        assertEquals(\"{other=2.0, stuff=1.2}\", new LocalPluginManager(output.toFile())\n+        assertEquals(\"{other=2.0, stuff=1.2}\", new LocalPluginManager(output.getParent().toFile())\n                 .parseRequestedPlugins(new ByteArrayInputStream(\"<root><stuff plugin='stuff@1.0'><more plugin='other@2.0'><things plugin='stuff@1.2'/></more></stuff></root>\".getBytes())).toString());\n     }\n "
    },
    {
        "commit_id": "9e68ced3d099b5ff53d1b436236f05ff48968ca4",
        "commit_message": "Fix `IS_FIELD_NOT_GUARDED` SpotBugs violation (#6037)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9e68ced3d099b5ff53d1b436236f05ff48968ca4",
        "buggy_code": "public Set<String> getJobNames() {",
        "fixed_code": "public synchronized Set<String> getJobNames() {",
        "patch": "@@ -185,7 +185,7 @@ public DescribableList<ListViewColumn, Descriptor<ListViewColumn>> getColumns()\n         return columns;\n     }\n \n-    public Set<String> getJobNames() {\n+    public synchronized Set<String> getJobNames() {\n         return Collections.unmodifiableSet(jobNames);\n     }\n "
    },
    {
        "commit_id": "b57ede42792e9fe175309e6a0dba96d03d99a54c",
        "commit_message": "Fix some SpotBugs violations (#6023)\n\nCo-authored-by: Mark Waite <mark.earl.waite@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b57ede42792e9fe175309e6a0dba96d03d99a54c",
        "buggy_code": "@SuppressFBWarnings(value = \"EQ_DOESNT_OVERRIDE_EQUALS\", justification = \"TODO needs triage\")",
        "fixed_code": "@SuppressFBWarnings(value = \"EQ_DOESNT_OVERRIDE_EQUALS\", justification = \"Not needed for JNA\")",
        "patch": "@@ -1751,7 +1751,7 @@ private void parse() {\n \n                     int argmax = argmaxRef.getValue();\n \n-                    @SuppressFBWarnings(value = \"EQ_DOESNT_OVERRIDE_EQUALS\", justification = \"TODO needs triage\")\n+                    @SuppressFBWarnings(value = \"EQ_DOESNT_OVERRIDE_EQUALS\", justification = \"Not needed for JNA\")\n                     class StringArrayMemory extends Memory {\n                         private long offset=0;\n                         private long length=0;"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception x) {",
        "fixed_code": "} catch (RuntimeException x) {",
        "patch": "@@ -502,7 +502,7 @@ private void resolve(Class<?> c, Set<Class<?>> encountered) {\n                         }\n                     }\n                     LOGGER.log(Level.FINER, \"{0} looks OK\", c);\n-                } catch (Exception x) {\n+                } catch (RuntimeException x) {\n                     throw new LinkageError(\"Failed to resolve \"+c, x);\n                 }\n             }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (Throwable e) {",
        "patch": "@@ -357,7 +357,7 @@ private void fireOnChangeListeners() {\n         for (ExtensionListListener listener : listeners) {\n             try {\n                 listener.onChange();\n-            } catch (Exception e) {\n+            } catch (Throwable e) {\n                 LOGGER.log(Level.SEVERE, \"Error firing ExtensionListListener.onChange().\", e);\n             }\n         }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (Throwable e) {",
        "patch": "@@ -415,7 +415,7 @@ public void contextDestroyed(ServletContextEvent event) {\n                 if (instance != null) {\n                     instance.cleanUp();\n                 }\n-            } catch (Exception e) {\n+            } catch (Throwable e) {\n                 LOGGER.log(Level.SEVERE, \"Failed to clean up. Restart will continue.\", e);\n             }\n "
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (Throwable e) {",
        "patch": "@@ -65,7 +65,7 @@ public void restart() {\n             if (jenkins != null) {\n                 jenkins.cleanUp();\n             }\n-        } catch (Exception e) {\n+        } catch (Throwable e) {\n             LOGGER.log(Level.SEVERE, \"Failed to clean up. Restart will continue.\", e);\n         }\n "
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (Throwable e) {",
        "patch": "@@ -46,7 +46,7 @@ public void restart() throws IOException, InterruptedException {\n             if (jenkins != null) {\n                 jenkins.cleanUp();\n             }\n-        } catch (Exception e) {\n+        } catch (Throwable e) {\n             LOGGER.log(Level.SEVERE, \"Failed to clean up. Restart will continue.\", e);\n         }\n         System.exit(0);"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (Throwable e) {",
        "patch": "@@ -68,7 +68,7 @@ public void restart() throws IOException, InterruptedException {\n             if (jenkins != null) {\n                 jenkins.cleanUp();\n             }\n-        } catch (Exception e) {\n+        } catch (Throwable e) {\n             LOGGER.log(Level.SEVERE, \"Failed to clean up. Restart will continue.\", e);\n         }\n "
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (Throwable e) {",
        "patch": "@@ -121,7 +121,7 @@ public void restart() throws IOException, InterruptedException {\n             if (jenkins != null) {\n                 jenkins.cleanUp();\n             }\n-        } catch (Exception e) {\n+        } catch (Throwable e) {\n             LOGGER.log(Level.SEVERE, \"Failed to clean up. Restart will continue.\", e);\n         }\n "
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (RuntimeException e) {",
        "patch": "@@ -738,7 +738,7 @@ protected List<Action> createTransientActions() {\n         for (TransientProjectActionFactory tpaf : TransientProjectActionFactory.all()) {\n             try {\n                 ta.addAll(Util.fixNull(tpaf.createFor(this))); // be defensive against null\n-            } catch (Exception e) {\n+            } catch (RuntimeException e) {\n                 LOGGER.log(Level.SEVERE, \"Could not load actions from \" + tpaf + \" for \" + this, e);\n             }\n         }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (RuntimeException e) {",
        "patch": "@@ -118,7 +118,7 @@ private <T> Collection<? extends Action> createFor(TransientActionFactory<T> taf\n                 }\n             }\n             return result;\n-        } catch (Exception e) {\n+        } catch (RuntimeException e) {\n             LOGGER.log(Level.WARNING, \"Could not load actions from \" + taf + \" for \" + this, e);\n             return Collections.emptySet();\n         }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch(Exception ex) {",
        "fixed_code": "} catch(RuntimeException ex) {",
        "patch": "@@ -913,7 +913,7 @@ public boolean hasStopPermission() {\n         lock.readLock().lock();\n         try {\n             return executable != null && getParentOf(executable).getOwnerTask().hasAbortPermission();\n-        } catch(Exception ex) {\n+        } catch(RuntimeException ex) {\n             if (!(ex instanceof AccessDeniedException)) {\n                 // Prevents UI from exploding in the case of unexpected runtime exceptions\n                 LOGGER.log(WARNING, \"Unhandled exception\", ex);"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception ex) {",
        "fixed_code": "} catch (RuntimeException ex) {",
        "patch": "@@ -1151,7 +1151,7 @@ public Plugin(String sourceId, JSONObject o) {\n             if (releaseTimestamp != null) {\n                 try {\n                     date = Date.from(Instant.parse(releaseTimestamp));\n-                } catch (Exception ex) {\n+                } catch (RuntimeException ex) {\n                     LOGGER.log(Level.FINE, \"Failed to parse releaseTimestamp for \" + title + \" from \" + sourceId, ex);\n                 }\n             }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch(Exception e) {",
        "fixed_code": "} catch(RuntimeException e) {",
        "patch": "@@ -249,7 +249,7 @@ public String getMsgAnnotated() {\n             for (ChangeLogAnnotator a : ChangeLogAnnotator.all())\n                 try {\n                     a.annotate(parent.run, this, markup);\n-                } catch(Exception e) {\n+                } catch(RuntimeException e) {\n                     LOGGER.info(\"ChangeLogAnnotator \" + a.toString() + \" failed to annotate message '\" + getMsg() + \"'; \" + e.getMessage());\n                 } catch(Error e) {\n                     LOGGER.severe(\"ChangeLogAnnotator \" + a + \" failed to annotate message '\" + getMsg() + \"'; \" + e.getMessage());"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (RuntimeException e) {",
        "patch": "@@ -306,7 +306,7 @@ protected Future<?> _connect(boolean forceReconnect) {\n                     e.addSuppressed(threadInfo);\n                     Functions.printStackTrace(e, taskListener.error(Messages.ComputerLauncher_abortedLaunch()));\n                     throw e;\n-                } catch (Exception e) {\n+                } catch (RuntimeException e) {\n                     e.addSuppressed(threadInfo);\n                     Functions.printStackTrace(e, taskListener.error(Messages.ComputerLauncher_unexpectedError()));\n                     throw e;"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (RuntimeException e) {",
        "patch": "@@ -359,7 +359,7 @@ public void validate(File fexe) {\n                 }\n             });\n             return result[0];\n-        } catch (Exception e) {\n+        } catch (RuntimeException e) {\n             return FormValidation.error(e, \"Unexpected error\");\n         }\n     }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (RuntimeException e) {",
        "patch": "@@ -107,7 +107,7 @@ public HttpResponse doResourceBundle(StaplerRequest request) {\n             }\n \n             return HttpResponses.okJSON(ResourceBundleUtil.getBundle(baseName, locale));\n-        } catch (Exception e) {\n+        } catch (RuntimeException e) {\n             return HttpResponses.errorJSON(e.getMessage());\n         }\n     }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (RuntimeException e) {",
        "patch": "@@ -51,7 +51,7 @@ public URL lookup(@NonNull String s) {\n                 if (url != null) {\n                     return url;\n                 }\n-            } catch (Exception e) {\n+            } catch (RuntimeException e) {\n                 LOGGER.warn(\"Failed to lookup URL for '\" + s + \"' from '\" + provider.toString(), e);\n             }\n         }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (final Exception e) {",
        "fixed_code": "} catch (final RuntimeException e) {",
        "patch": "@@ -95,7 +95,7 @@ private void stopBuild(final Run build,\n                 executor.doStop();\n                 isAnyBuildStopped = true;\n                 stdout.printf(\"Build '%s' stopped for job '%s'%n\", buildName, jobName);\n-            } catch (final Exception e) {\n+            } catch (final RuntimeException e) {\n                 stdout.printf(\"Exception occurred while trying to stop build '%s' for job '%s'. \", buildName, jobName);\n                 stdout.printf(\"Exception class: %s, message: %s%n\", e.getClass().getSimpleName(), e.getMessage());\n             }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (Throwable e) {",
        "patch": "@@ -4592,7 +4592,7 @@ public void run() {\n \n                     cleanUp();\n                     System.exit(0);\n-                } catch (Exception e) {\n+                } catch (Throwable e) {\n                     LOGGER.log(Level.WARNING, \"Failed to shut down Jenkins\", e);\n                 }\n             }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception x) {",
        "fixed_code": "} catch (RuntimeException x) {",
        "patch": "@@ -283,7 +283,7 @@ static void move(File src, File dest) throws IOException {\n             Files.move(src.toPath(), dest.toPath());\n         } catch (IOException x) {\n             throw x;\n-        } catch (Exception x) {\n+        } catch (RuntimeException x) {\n             throw new IOException(x);\n         }\n     }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (RuntimeException e) {",
        "patch": "@@ -74,7 +74,7 @@ protected FilePathRule parse(String line) {\n                     Pattern.compile(m.group(3)),\n                     createOpMatcher(m.group(2)),\n                     m.group(1).equals(\"allow\"));\n-        } catch (Exception e) {\n+        } catch (RuntimeException e) {\n             throw new Failure(\"Invalid filter rule line: \"+line+\"\\n\"+ Functions.printThrowable(e));\n         }\n     }"
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception e) {",
        "fixed_code": "} catch (RuntimeException e) {",
        "patch": "@@ -204,7 +204,7 @@ protected void execute(TaskListener listener) throws IOException, InterruptedExc\n                 JSONObject data = new JSONObject();\n                 try {\n                     data = telemetry.createContent();\n-                } catch (Exception e) {\n+                } catch (RuntimeException e) {\n                     LOGGER.log(Level.WARNING, \"Failed to build telemetry content for: '\" + telemetry.getId() + \"'\", e);\n                 }\n "
    },
    {
        "commit_id": "2ea114828627ea1723f1f2224f632ec9d96cb481",
        "commit_message": "Fix `CatchingUnchecked` Error Prone violations (#5950)\n\nCo-authored-by: James Nord <jtnord@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ea114828627ea1723f1f2224f632ec9d96cb481",
        "buggy_code": "} catch (Exception t) {",
        "fixed_code": "} catch (RuntimeException t) {",
        "patch": "@@ -116,7 +116,7 @@ public void doValidateTest1(@QueryParameter(\"a\") String a, @QueryParameter(\"b\")\n                     assertEquals(\"dvalue\",d);\n                     assertEquals(\"e2\",e);\n                     test1Outcome = null;\n-                } catch (Exception t) {\n+                } catch (RuntimeException t) {\n                     test1Outcome = t;\n                 }\n             }"
    },
    {
        "commit_id": "fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "commit_message": "Merge pull request #6021 from basil/spotbugs\n\nFix some SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "buggy_code": "} catch (MalformedURLException | NullPointerException e) {",
        "fixed_code": "} catch (MalformedURLException e) {",
        "patch": "@@ -134,7 +134,7 @@ public String getAdvertisedHost() {\n         }\n         try {\n             return new URL(Jenkins.get().getRootUrl()).getHost();\n-        } catch (MalformedURLException | NullPointerException e) {\n+        } catch (MalformedURLException e) {\n             throw new IllegalStateException(\"Could not get TcpSlaveAgentListener host name\", e);\n         }\n     }"
    },
    {
        "commit_id": "fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "commit_message": "Merge pull request #6021 from basil/spotbugs\n\nFix some SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "buggy_code": "public final class MemoryGroup {",
        "fixed_code": "public static final class MemoryGroup {",
        "patch": "@@ -51,7 +51,7 @@ public final class MemoryUsageMonitor extends PeriodicWork {\n     /**\n      * A memory group is conceptually a set of memory pools. \n      */\n-    public final class MemoryGroup {\n+    public static final class MemoryGroup {\n         private final List<MemoryPoolMXBean> pools = new ArrayList<>();\n \n         /**"
    },
    {
        "commit_id": "fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "commit_message": "Merge pull request #6021 from basil/spotbugs\n\nFix some SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "buggy_code": "public class StubItem {",
        "fixed_code": "public static class StubItem {",
        "patch": "@@ -2454,7 +2454,7 @@ public String getName() {\n     @Restricted(NoExternalUse.class)\n     @ExportedBean(defaultVisibility = 999)\n     @SuppressFBWarnings(value = \"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\", justification = \"it is exported, so it might be used\")\n-    public class StubItem {\n+    public static class StubItem {\n \n         @Exported public StubTask task;\n "
    },
    {
        "commit_id": "fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "commit_message": "Merge pull request #6021 from basil/spotbugs\n\nFix some SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "buggy_code": "public class CollatedLogRotatorException extends IOException {",
        "fixed_code": "public static class CollatedLogRotatorException extends IOException {",
        "patch": "@@ -62,7 +62,7 @@ public class LogRotator extends BuildDiscarder {\n     \n     /** @deprecated Replaced by more generic {@link CompositeIOException}. */\n     @Deprecated\n-    public class CollatedLogRotatorException extends IOException {\n+    public static class CollatedLogRotatorException extends IOException {\n         private static final long serialVersionUID = 5944233808072651101L;\n         \n         public final Collection<Exception> collated;"
    },
    {
        "commit_id": "fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "commit_message": "Merge pull request #6021 from basil/spotbugs\n\nFix some SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "buggy_code": "public class Value {",
        "fixed_code": "public static class Value {",
        "patch": "@@ -94,7 +94,7 @@ public HttpResponse doClear() {\n         return HttpResponses.redirectViaContextPath(\"/manage\");\n     }\n \n-    public class Value {\n+    public static class Value {\n \n         private final LocalDateTime time;\n         private Class<? extends TriggerDescriptor> trigger;"
    },
    {
        "commit_id": "fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "commit_message": "Merge pull request #6021 from basil/spotbugs\n\nFix some SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe5e50efbaa044fc024a14df718d4f78e1f0f671",
        "buggy_code": "double result = Double.compare(this.ordinal, that.ordinal);",
        "fixed_code": "int result = Double.compare(this.ordinal, that.ordinal);",
        "patch": "@@ -30,7 +30,7 @@ private Entry(FilePathFilter filter, double ordinal) {\n \n         @Override\n         public int compareTo(Entry that) {\n-            double result = Double.compare(this.ordinal, that.ordinal);\n+            int result = Double.compare(this.ordinal, that.ordinal);\n \n             if (result < 0) return -1;\n             if (result > 0) return 1;"
    },
    {
        "commit_id": "cd91b39f569ff2fc17e77c740fdc0a7eeafd54bd",
        "commit_message": "Fix `SIC_INNER_SHOULD_BE_STATIC` SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd91b39f569ff2fc17e77c740fdc0a7eeafd54bd",
        "buggy_code": "public final class MemoryGroup {",
        "fixed_code": "public static final class MemoryGroup {",
        "patch": "@@ -51,7 +51,7 @@ public final class MemoryUsageMonitor extends PeriodicWork {\n     /**\n      * A memory group is conceptually a set of memory pools. \n      */\n-    public final class MemoryGroup {\n+    public static final class MemoryGroup {\n         private final List<MemoryPoolMXBean> pools = new ArrayList<>();\n \n         /**"
    },
    {
        "commit_id": "cd91b39f569ff2fc17e77c740fdc0a7eeafd54bd",
        "commit_message": "Fix `SIC_INNER_SHOULD_BE_STATIC` SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd91b39f569ff2fc17e77c740fdc0a7eeafd54bd",
        "buggy_code": "public class StubItem {",
        "fixed_code": "public static class StubItem {",
        "patch": "@@ -2453,7 +2453,7 @@ public String getName() {\n     @Restricted(NoExternalUse.class)\n     @ExportedBean(defaultVisibility = 999)\n     @SuppressFBWarnings(value = \"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\", justification = \"it is exported, so it might be used\")\n-    public class StubItem {\n+    public static class StubItem {\n \n         @Exported public StubTask task;\n "
    },
    {
        "commit_id": "cd91b39f569ff2fc17e77c740fdc0a7eeafd54bd",
        "commit_message": "Fix `SIC_INNER_SHOULD_BE_STATIC` SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd91b39f569ff2fc17e77c740fdc0a7eeafd54bd",
        "buggy_code": "public class CollatedLogRotatorException extends IOException {",
        "fixed_code": "public static class CollatedLogRotatorException extends IOException {",
        "patch": "@@ -62,7 +62,7 @@ public class LogRotator extends BuildDiscarder {\n     \n     /** @deprecated Replaced by more generic {@link CompositeIOException}. */\n     @Deprecated\n-    public class CollatedLogRotatorException extends IOException {\n+    public static class CollatedLogRotatorException extends IOException {\n         private static final long serialVersionUID = 5944233808072651101L;\n         \n         public final Collection<Exception> collated;"
    },
    {
        "commit_id": "cd91b39f569ff2fc17e77c740fdc0a7eeafd54bd",
        "commit_message": "Fix `SIC_INNER_SHOULD_BE_STATIC` SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd91b39f569ff2fc17e77c740fdc0a7eeafd54bd",
        "buggy_code": "public class Value {",
        "fixed_code": "public static class Value {",
        "patch": "@@ -94,7 +94,7 @@ public HttpResponse doClear() {\n         return HttpResponses.redirectViaContextPath(\"/manage\");\n     }\n \n-    public class Value {\n+    public static class Value {\n \n         private final LocalDateTime time;\n         private Class<? extends TriggerDescriptor> trigger;"
    },
    {
        "commit_id": "2023494b86f11f7ebbc863b4a53b0305efe6e3d6",
        "commit_message": "Fix `DCN_NULLPOINTER_EXCEPTION` SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2023494b86f11f7ebbc863b4a53b0305efe6e3d6",
        "buggy_code": "} catch (MalformedURLException | NullPointerException e) {",
        "fixed_code": "} catch (MalformedURLException e) {",
        "patch": "@@ -134,7 +134,7 @@ public String getAdvertisedHost() {\n         }\n         try {\n             return new URL(Jenkins.get().getRootUrl()).getHost();\n-        } catch (MalformedURLException | NullPointerException e) {\n+        } catch (MalformedURLException e) {\n             throw new IllegalStateException(\"Could not get TcpSlaveAgentListener host name\", e);\n         }\n     }"
    },
    {
        "commit_id": "8c4ae1a14577d8836be62dbc051e0ee2ec1c87eb",
        "commit_message": "Fix `CO_COMPARETO_INCORRECT_FLOATING` SpotBugs violations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8c4ae1a14577d8836be62dbc051e0ee2ec1c87eb",
        "buggy_code": "double result = Double.compare(this.ordinal, that.ordinal);",
        "fixed_code": "int result = Double.compare(this.ordinal, that.ordinal);",
        "patch": "@@ -30,7 +30,7 @@ private Entry(FilePathFilter filter, double ordinal) {\n \n         @Override\n         public int compareTo(Entry that) {\n-            double result = Double.compare(this.ordinal, that.ordinal);\n+            int result = Double.compare(this.ordinal, that.ordinal);\n \n             if (result < 0) return -1;\n             if (result > 0) return 1;"
    },
    {
        "commit_id": "80c66902efe697171fd44f95c9969f2b3bbf79e2",
        "commit_message": "Fix `ThrowsUncheckedException` Error Prone violations in tests (#5952)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/80c66902efe697171fd44f95c9969f2b3bbf79e2",
        "buggy_code": "private static void assertAttribute(Manifest manifest, String attributeName, String value) throws AssertionError {",
        "fixed_code": "private static void assertAttribute(Manifest manifest, String attributeName, String value) {",
        "patch": "@@ -114,7 +114,7 @@ public void shouldProperlyRetrieveModificationDate() throws IOException {\n                 equalTo(jar.lastModified()));\n     }\n     \n-    private static void assertAttribute(Manifest manifest, String attributeName, String value) throws AssertionError {\n+    private static void assertAttribute(Manifest manifest, String attributeName, String value) {\n         Attributes attributes = manifest.getMainAttributes();\n         assertThat(\"Main attributes must not be empty\", attributes, notNullValue());\n         assertThat(\"Attribute '\" + attributeName + \"' does not match the sample\", "
    },
    {
        "commit_id": "80c66902efe697171fd44f95c9969f2b3bbf79e2",
        "commit_message": "Fix `ThrowsUncheckedException` Error Prone violations in tests (#5952)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/80c66902efe697171fd44f95c9969f2b3bbf79e2",
        "buggy_code": "public void testOnViewRenamed() throws IOException, Failure, FormException {",
        "fixed_code": "public void testOnViewRenamed() throws IOException, FormException {",
        "patch": "@@ -174,7 +174,7 @@ public void testDeleteView() throws IOException {\n     }\n \n     @Test\n-    public void testOnViewRenamed() throws IOException, Failure, FormException {\n+    public void testOnViewRenamed() throws IOException, FormException {\n         User user = User.getOrCreateByIdOrFullName(\"User\");\n         MyViewsProperty property = new MyViewsProperty(AllView.DEFAULT_VIEW_NAME);\n         property.readResolve();"
    },
    {
        "commit_id": "80c66902efe697171fd44f95c9969f2b3bbf79e2",
        "commit_message": "Fix `ThrowsUncheckedException` Error Prone violations in tests (#5952)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/80c66902efe697171fd44f95c9969f2b3bbf79e2",
        "buggy_code": "private void assertAttributeValue(Manifest manifest, String attributeName, Object expectedValue) throws AssertionError {",
        "fixed_code": "private void assertAttributeValue(Manifest manifest, String attributeName, Object expectedValue) {",
        "patch": "@@ -59,7 +59,7 @@ public void warShouldIncludeRemotingManifestEntries() throws Exception {\n         }\n     }\n \n-    private void assertAttributeValue(Manifest manifest, String attributeName, Object expectedValue) throws AssertionError {\n+    private void assertAttributeValue(Manifest manifest, String attributeName, Object expectedValue) {\n         assertThat(\"Wrong value of manifest attribute \" + attributeName,\n                 manifest.getMainAttributes().getValue(attributeName),\n                 equalTo(expectedValue.toString()));"
    },
    {
        "commit_id": "80c66902efe697171fd44f95c9969f2b3bbf79e2",
        "commit_message": "Fix `ThrowsUncheckedException` Error Prone violations in tests (#5952)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/80c66902efe697171fd44f95c9969f2b3bbf79e2",
        "buggy_code": "public StaplerRequest build() throws AssertionError {",
        "fixed_code": "public StaplerRequest build() {",
        "patch": "@@ -65,7 +65,7 @@ public MockStaplerRequestBuilder withAncestor(AncestorImpl ancestor) {\n         return this;\n     }\n        \n-    public StaplerRequest build() throws AssertionError {        \n+    public StaplerRequest build() {\n         HttpServletRequest rawRequest = Mockito.mock(HttpServletRequest.class);\n         return new RequestImpl(stapler != null ? stapler : new Stapler(), rawRequest, ancestors, tokens);\n     }"
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public AbstractInterceptorCallableWrapper(DelegatingCallable<T, IOException> callable) {",
        "fixed_code": "protected AbstractInterceptorCallableWrapper(DelegatingCallable<T, IOException> callable) {",
        "patch": "@@ -1197,7 +1197,7 @@ public abstract static class AbstractInterceptorCallableWrapper<T> implements De\n \n         private final DelegatingCallable<T, IOException> callable;\n \n-        public AbstractInterceptorCallableWrapper(DelegatingCallable<T, IOException> callable) {\n+        protected AbstractInterceptorCallableWrapper(DelegatingCallable<T, IOException> callable) {\n             this.callable = callable;\n         }\n "
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public Launcher(@NonNull TaskListener listener, @CheckForNull VirtualChannel channel) {",
        "fixed_code": "protected Launcher(@NonNull TaskListener listener, @CheckForNull VirtualChannel channel) {",
        "patch": "@@ -97,7 +97,7 @@ public abstract class Launcher {\n     @Restricted(Beta.class)\n     protected EnvVarsFilterRuleWrapper envVarsFilterRuleWrapper;\n \n-    public Launcher(@NonNull TaskListener listener, @CheckForNull VirtualChannel channel) {\n+    protected Launcher(@NonNull TaskListener listener, @CheckForNull VirtualChannel channel) {\n         this.listener = listener;\n         this.channel = channel;\n     }"
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public PluginManager(ServletContext context, File rootDir) {",
        "fixed_code": "protected PluginManager(ServletContext context, File rootDir) {",
        "patch": "@@ -351,7 +351,7 @@ PluginManager doCreate(@NonNull Class<? extends PluginManager> klass,\n      */\n     private final PluginStrategy strategy;\n \n-    public PluginManager(ServletContext context, File rootDir) {\n+    protected PluginManager(ServletContext context, File rootDir) {\n         this.context = context;\n \n         this.rootDir = rootDir;"
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public Computer(Node node) {",
        "fixed_code": "protected Computer(Node node) {",
        "patch": "@@ -251,7 +251,7 @@ public List<TerminationRequest> getTerminatedBy() {\n         return new ArrayList<>(terminatedBy);\n     }\n \n-    public Computer(Node node) {\n+    protected Computer(Node node) {\n         setNode(node);\n     }\n "
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public FullDuplexHttpChannel(UUID uuid, boolean restricted) throws IOException {",
        "fixed_code": "protected FullDuplexHttpChannel(UUID uuid, boolean restricted) throws IOException {",
        "patch": "@@ -44,7 +44,7 @@ public abstract class FullDuplexHttpChannel extends FullDuplexHttpService {\n     private Channel channel;\n     private final boolean restricted;\n \n-    public FullDuplexHttpChannel(UUID uuid, boolean restricted) throws IOException {\n+    protected FullDuplexHttpChannel(UUID uuid, boolean restricted) throws IOException {\n         super(uuid);\n         this.restricted = restricted;\n     }"
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public Label(@NonNull String name) {",
        "fixed_code": "protected Label(@NonNull String name) {",
        "patch": "@@ -97,7 +97,7 @@ public abstract class Label extends Actionable implements Comparable<Label>, Mod\n     @NonNull\n     public final transient NodeProvisioner nodeProvisioner;\n \n-    public Label(@NonNull String name) {\n+    protected Label(@NonNull String name) {\n         this.name = name;\n          // passing these causes an infinite loop - getTotalExecutors(),getBusyExecutors());\n         this.loadStatistics = new LoadStatistics(0,0) {"
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public Project(ItemGroup parent,String name) {",
        "fixed_code": "protected Project(ItemGroup parent,String name) {",
        "patch": "@@ -86,7 +86,7 @@ public abstract class Project<P extends Project<P,B>,B extends Build<P,B>>\n     /**\n      * Creates a new project.\n      */\n-    public Project(ItemGroup parent,String name) {\n+    protected Project(ItemGroup parent,String name) {\n         super(parent,name);\n     }\n "
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public Binary(Label lhs, Label rhs, LabelOperatorPrecedence op) {",
        "fixed_code": "protected Binary(Label lhs, Label rhs, LabelOperatorPrecedence op) {",
        "patch": "@@ -121,7 +121,7 @@ static String paren(LabelOperatorPrecedence op, Label l) {\n     public abstract static class Binary extends LabelExpression {\n         public final Label lhs,rhs;\n \n-        public Binary(Label lhs, Label rhs, LabelOperatorPrecedence op) {\n+        protected Binary(Label lhs, Label rhs, LabelOperatorPrecedence op) {\n             super(combine(lhs, rhs, op));\n             this.lhs = lhs;\n             this.rhs = rhs;"
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public ComputerLauncherFilter(ComputerLauncher core) {",
        "fixed_code": "protected ComputerLauncherFilter(ComputerLauncher core) {",
        "patch": "@@ -41,7 +41,7 @@\n public abstract class ComputerLauncherFilter extends ComputerLauncher {\n     protected volatile ComputerLauncher core;\n \n-    public ComputerLauncherFilter(ComputerLauncher core) {\n+    protected ComputerLauncherFilter(ComputerLauncher core) {\n         this.core = core;\n     }\n "
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public CommandInterpreter(String command) {",
        "fixed_code": "protected CommandInterpreter(String command) {",
        "patch": "@@ -67,7 +67,7 @@ public abstract class CommandInterpreter extends Builder implements EnvVarsFilte\n     @Restricted(Beta.class)\n     protected List<EnvVarsFilterLocalRule> configuredLocalRules = new ArrayList<>();\n \n-    public CommandInterpreter(String command) {\n+    protected CommandInterpreter(String command) {\n         this.command = command;\n     }\n "
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public AbstractCommandInstaller(String label, String command, String toolHome) {",
        "fixed_code": "protected AbstractCommandInstaller(String label, String command, String toolHome) {",
        "patch": "@@ -47,7 +47,7 @@ public abstract class AbstractCommandInstaller extends ToolInstaller {\n     private final String command;\n     private final String toolHome;\n \n-    public AbstractCommandInstaller(String label, String command, String toolHome) {\n+    protected AbstractCommandInstaller(String label, String command, String toolHome) {\n         super(label);\n         this.command = command;\n         this.toolHome = toolHome;"
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public NodeSpecificInstallable(Installable inst) {",
        "fixed_code": "protected NodeSpecificInstallable(Installable inst) {",
        "patch": "@@ -254,7 +254,7 @@ public static class Installable {\n      */\n     public abstract class NodeSpecificInstallable extends Installable implements NodeSpecific<NodeSpecificInstallable> {\n \n-        public NodeSpecificInstallable(Installable inst) {\n+        protected NodeSpecificInstallable(Installable inst) {\n             this.id = inst.id;\n             this.name = inst.name;\n             this.url = inst.url;"
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public URLCheck(StaplerRequest request, StaplerResponse response) {",
        "fixed_code": "protected URLCheck(StaplerRequest request, StaplerResponse response) {",
        "patch": "@@ -250,7 +250,7 @@ private void _errorWithMarkup(String message, String cssClass) throws IOExceptio\n     @Deprecated\n     public abstract static class URLCheck extends FormFieldValidator {\n \n-        public URLCheck(StaplerRequest request, StaplerResponse response) {\n+        protected URLCheck(StaplerRequest request, StaplerResponse response) {\n             // can be used to check the existence of any file in file system\n             // or other HTTP URLs inside firewall, so limit this to the admin.\n             super(request, response, true);"
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public PassthruConverter(XStream2 xstream) {",
        "fixed_code": "protected PassthruConverter(XStream2 xstream) {",
        "patch": "@@ -492,7 +492,7 @@ public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext co\n     public abstract static class PassthruConverter<T> implements Converter {\n         private Converter converter;\n \n-        public PassthruConverter(XStream2 xstream) {\n+        protected PassthruConverter(XStream2 xstream) {\n             converter = xstream.reflectionConverter;\n         }\n "
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public InterceptingExecutorService(ExecutorService base) {",
        "fixed_code": "protected InterceptingExecutorService(ExecutorService base) {",
        "patch": "@@ -19,7 +19,7 @@\n public abstract class InterceptingExecutorService implements ExecutorService {\n     private final ExecutorService base;\n \n-    public InterceptingExecutorService(ExecutorService base) {\n+    protected InterceptingExecutorService(ExecutorService base) {\n         this.base = base;\n     }\n "
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public MarkFindingOutputStream(OutputStream base) {",
        "fixed_code": "protected MarkFindingOutputStream(OutputStream base) {",
        "patch": "@@ -15,7 +15,7 @@\n public abstract class MarkFindingOutputStream extends OutputStream {\n     private final OutputStream base;\n \n-    public MarkFindingOutputStream(OutputStream base) {\n+    protected MarkFindingOutputStream(OutputStream base) {\n         this.base = base;\n     }\n "
    },
    {
        "commit_id": "cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "commit_message": "Fix `PublicConstructorForAbstractClass` Error Prone violations (#5951)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cd92d7f88fdcf7c83d9103ffa097b53298d0e532",
        "buggy_code": "public AbstractGroovyViewModule(JellyBuilder b) {",
        "fixed_code": "protected AbstractGroovyViewModule(JellyBuilder b) {",
        "patch": "@@ -25,7 +25,7 @@ public abstract class AbstractGroovyViewModule extends GroovyObjectSupport {\n     public JenkinsTagLib t;\n     public Namespace st;\n \n-    public AbstractGroovyViewModule(JellyBuilder b) {\n+    protected AbstractGroovyViewModule(JellyBuilder b) {\n         builder = b;\n         f = builder.namespace(FormTagLib.class);\n         l = builder.namespace(LayoutTagLib.class);"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new InterruptedException(\"no matches found within \" + bound);",
        "fixed_code": "throw (InterruptedException)new InterruptedException(\"no matches found within \" + bound).initCause(c);",
        "patch": "@@ -3076,7 +3076,7 @@ class Cancel extends RuntimeException {}\n                     if (ds.getIncludedFilesCount()!=0 || ds.getIncludedDirsCount()!=0) {\n                         return true;\n                     } else {\n-                        throw new InterruptedException(\"no matches found within \" + bound);\n+                        throw (InterruptedException)new InterruptedException(\"no matches found within \" + bound).initCause(c);\n                     }\n                 }\n                 return ds.getIncludedFilesCount()!=0 || ds.getIncludedDirsCount()!=0;"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new IllegalArgumentException(hudson.cli.Messages.DisablePluginCommand_NoSuchStrategy(strategy, String.format(\"%s, %s, %s\", PluginWrapper.PluginDisableStrategy.NONE, PluginWrapper.PluginDisableStrategy.MANDATORY, PluginWrapper.PluginDisableStrategy.ALL)));",
        "fixed_code": "throw new IllegalArgumentException(hudson.cli.Messages.DisablePluginCommand_NoSuchStrategy(strategy, String.format(\"%s, %s, %s\", PluginWrapper.PluginDisableStrategy.NONE, PluginWrapper.PluginDisableStrategy.MANDATORY, PluginWrapper.PluginDisableStrategy.ALL)), iae);",
        "patch": "@@ -82,7 +82,7 @@ protected int run() throws Exception {\n         try {\n             strategyToUse = PluginWrapper.PluginDisableStrategy.valueOf(strategy.toUpperCase());\n         } catch (IllegalArgumentException iae) {\n-            throw new IllegalArgumentException(hudson.cli.Messages.DisablePluginCommand_NoSuchStrategy(strategy, String.format(\"%s, %s, %s\", PluginWrapper.PluginDisableStrategy.NONE, PluginWrapper.PluginDisableStrategy.MANDATORY, PluginWrapper.PluginDisableStrategy.ALL)));\n+            throw new IllegalArgumentException(hudson.cli.Messages.DisablePluginCommand_NoSuchStrategy(strategy, String.format(\"%s, %s, %s\", PluginWrapper.PluginDisableStrategy.NONE, PluginWrapper.PluginDisableStrategy.MANDATORY, PluginWrapper.PluginDisableStrategy.ALL)), iae);\n         }\n \n         // disable..."
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new ServletException(\"Invalid delay parameter value: \"+delay);",
        "fixed_code": "throw new ServletException(\"Invalid delay parameter value: \"+delay, e);",
        "patch": "@@ -1720,7 +1720,7 @@ public int getDelay(StaplerRequest req) throws ServletException {\n             if(delay.endsWith(\"secs\"))  delay=delay.substring(0,delay.length()-4);\n             return Integer.parseInt(delay);\n         } catch (NumberFormatException e) {\n-            throw new ServletException(\"Invalid delay parameter value: \"+delay);\n+            throw new ServletException(\"Invalid delay parameter value: \"+delay, e);\n         }\n     }\n "
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new AssertionError(getClass()+\" is missing getDescriptor method.\");",
        "fixed_code": "throw new AssertionError(getClass()+\" is missing getDescriptor method.\", e);",
        "patch": "@@ -305,7 +305,7 @@ protected Descriptor() {\n                 throw new AssertionError(getClass()+\" must be assignable to \"+getd.getReturnType());\n             }\n         } catch (NoSuchMethodException e) {\n-            throw new AssertionError(getClass()+\" is missing getDescriptor method.\");\n+            throw new AssertionError(getClass()+\" is missing getDescriptor method.\", e);\n         }\n \n     }"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "String.format(\"Unable to parse '%s', expected number\", list));",
        "fixed_code": "String.format(\"Unable to parse '%s', expected number\", list), e);",
        "patch": "@@ -746,7 +746,7 @@ public static RangeSet fromString(String list, boolean skipError) {\n                 } catch (NumberFormatException e) {\n                     if (!skipError)\n                         throw new IllegalArgumentException(\n-                                String.format(\"Unable to parse '%s', expected number\", list));\n+                                String.format(\"Unable to parse '%s', expected number\", list), e);\n                     // ignore malformed text\n                 }\n             }"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new CmdLineException(null, id+ \"is not a number\");",
        "fixed_code": "throw new CmdLineException(null, id+ \"is not a number\", e);",
        "patch": "@@ -813,7 +813,7 @@ public RunT getBuildForCLI(@Argument(required=true,metaVar=\"BUILD#\",usage=\"Build\n                 throw new CmdLineException(null, \"No such build '#\"+n+\"' exists\");\n             return r;\n         } catch (NumberFormatException e) {\n-            throw new CmdLineException(null, id+ \"is not a number\");\n+            throw new CmdLineException(null, id+ \"is not a number\", e);\n         }\n     }\n "
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new IOException(rootDir + \" is in use\");",
        "fixed_code": "throw new IOException(rootDir + \" is in use\", ex);",
        "patch": "@@ -1656,7 +1656,7 @@ public void delete() throws IOException {\n                         StandardCopyOption.ATOMIC_MOVE\n                 );\n             } catch (UnsupportedOperationException | SecurityException ex) {\n-                throw new IOException(rootDir + \" is in use\");\n+                throw new IOException(rootDir + \" is in use\", ex);\n             }\n             \n             Util.deleteRecursive(tmp);"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new IOException(Messages.ComputerLauncher_NoJavaFound(line));",
        "fixed_code": "throw new IOException(Messages.ComputerLauncher_NoJavaFound(line), x);",
        "patch": "@@ -197,7 +197,7 @@ protected static void checkJavaVersion(final PrintStream logger, String javaComm\n                                 .ComputerLauncher_NoJavaFound(line));\n                     }\n                 } catch (NumberFormatException x) {\n-                    throw new IOException(Messages.ComputerLauncher_NoJavaFound(line));\n+                    throw new IOException(Messages.ComputerLauncher_NoJavaFound(line), x);\n                 }\n                 return;\n             }"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new IOException (\"Bad chunk size: \" + dataString);",
        "fixed_code": "throw new IOException (\"Bad chunk size: \" + dataString, e);",
        "patch": "@@ -271,7 +271,7 @@ private static int getChunkSizeFromInputStream(final InputStream in)\n         try {\n             result = Integer.parseInt(dataString.trim(), 16);\n         } catch (NumberFormatException e) {\n-            throw new IOException (\"Bad chunk size: \" + dataString);\n+            throw new IOException (\"Bad chunk size: \" + dataString, e);\n         }\n         return result;\n     }"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new IllegalArgumentException(\"No such property \"+p+\" on \"+o.getClass());",
        "fixed_code": "throw new IllegalArgumentException(\"No such property \"+p+\" on \"+o.getClass(), e);",
        "patch": "@@ -70,7 +70,7 @@ public static Object getPublicProperty(Object o, String p) throws InvocationTarg\n                 Field f = o.getClass().getField(p);\n                 return f.get(o);\n             } catch (NoSuchFieldException e) {\n-                throw new IllegalArgumentException(\"No such property \"+p+\" on \"+o.getClass());\n+                throw new IllegalArgumentException(\"No such property \"+p+\" on \"+o.getClass(), e);\n             }\n         } else {\n             return PropertyUtils.getProperty(o, p);"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new IllegalStateException(\"Unknown install state override specified on the commandline: '\" + stateOverride + \"'.\");",
        "fixed_code": "throw new IllegalStateException(\"Unknown install state override specified on the commandline: '\" + stateOverride + \"'.\", e);",
        "patch": "@@ -134,7 +134,7 @@ private static InstallState getDefaultInstallState() {\n             try {\n                 return InstallState.valueOf(stateOverride.toUpperCase());\n             } catch (RuntimeException e) {\n-                throw new IllegalStateException(\"Unknown install state override specified on the commandline: '\" + stateOverride + \"'.\");\n+                throw new IllegalStateException(\"Unknown install state override specified on the commandline: '\" + stateOverride + \"'.\", e);\n             }\n         }\n         "
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new IllegalStateException(\"failed to prepare global settings.xml\");",
        "fixed_code": "throw new IllegalStateException(\"failed to prepare global settings.xml\", e);",
        "patch": "@@ -34,7 +34,7 @@ public FilePath supplySettings(AbstractBuild<?, ?> build, TaskListener listener)\n         try {\n             return SettingsPathHelper.getSettings(build, listener, getPath());\n         } catch (Exception e) {\n-            throw new IllegalStateException(\"failed to prepare global settings.xml\");\n+            throw new IllegalStateException(\"failed to prepare global settings.xml\", e);\n         }\n \n     }"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new IllegalStateException(\"failed to prepare settings.xml\");",
        "fixed_code": "throw new IllegalStateException(\"failed to prepare settings.xml\", e);",
        "patch": "@@ -35,7 +35,7 @@ public FilePath supplySettings(AbstractBuild<?, ?> build, TaskListener listener)\n         try {\n             return SettingsPathHelper.getSettings(build, listener, getPath());\n         } catch (Exception e) {\n-            throw new IllegalStateException(\"failed to prepare settings.xml\");\n+            throw new IllegalStateException(\"failed to prepare settings.xml\", e);\n         }\n     }\n "
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new IllegalStateException(\"failed to find settings.xml at: \" + wsSettings.getRemote());",
        "fixed_code": "throw new IllegalStateException(\"failed to find settings.xml at: \" + wsSettings.getRemote(), e);",
        "patch": "@@ -28,7 +28,7 @@ static FilePath getSettings(AbstractBuild<?, ?> build, TaskListener listener, St\n                     wsSettings = mrSettings;\n                 }\n             } catch (Exception e) {\n-                throw new IllegalStateException(\"failed to find settings.xml at: \" + wsSettings.getRemote());\n+                throw new IllegalStateException(\"failed to find settings.xml at: \" + wsSettings.getRemote(), e);\n             }\n             return wsSettings;\n         }"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new AssertionError(\"There is no \" + HASH_ALGORITHM + \" available in this system\");",
        "fixed_code": "throw new AssertionError(\"There is no \" + HASH_ALGORITHM + \" available in this system\", e);",
        "patch": "@@ -241,7 +241,7 @@ private void addLegacyToken(@NonNull Secret legacyToken, boolean migrationFromEx\n         try {\n             digest = MessageDigest.getInstance(HASH_ALGORITHM);\n         } catch (NoSuchAlgorithmException e) {\n-            throw new AssertionError(\"There is no \" + HASH_ALGORITHM + \" available in this system\");\n+            throw new AssertionError(\"There is no \" + HASH_ALGORITHM + \" available in this system\", e);\n         }\n         return digest.digest(tokenBytes);\n     }"
    },
    {
        "commit_id": "a1ab51594d6553aa630f8ca5a35b494788334848",
        "commit_message": "Fix `UnusedException` Error Prone violations (#5738)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1ab51594d6553aa630f8ca5a35b494788334848",
        "buggy_code": "throw new IllegalArgumentException(\"Invalid time duration value: \"+delay);",
        "fixed_code": "throw new IllegalArgumentException(\"Invalid time duration value: \"+delay, e);",
        "patch": "@@ -75,7 +75,7 @@ public static TimeDuration fromString(@CheckForNull String delay) {\n             }\n             return new TimeDuration(Long.parseLong(delay.trim()) * unitMultiplier);\n         } catch (NumberFormatException e) {\n-            throw new IllegalArgumentException(\"Invalid time duration value: \"+delay);\n+            throw new IllegalArgumentException(\"Invalid time duration value: \"+delay, e);\n         }\n     }\n "
    },
    {
        "commit_id": "4bd733ce52cdbe8d57e5d8f22c624eadd4e75340",
        "commit_message": "Merge pull request #5881 from daniel-beck/JENKINS-67061\n\n[JENKINS-67061] Fix overload in ConfigDirectory",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4bd733ce52cdbe8d57e5d8f22c624eadd4e75340",
        "buggy_code": "public synchronized void load() {",
        "fixed_code": "public synchronized void load2() {",
        "patch": "@@ -26,7 +26,7 @@ protected ConfigDirectory(File file) {\n     }\n \n     @Override\n-    public synchronized void load() {\n+    public synchronized void load2() {\n         COL result = create();\n \n         if (dir.exists()) {"
    },
    {
        "commit_id": "813b77897261d8aa566ad5962efcf372eb47c0f2",
        "commit_message": "[JENKINS-67061] Fix overload in ConfigDirectory",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/813b77897261d8aa566ad5962efcf372eb47c0f2",
        "buggy_code": "public synchronized void load() {",
        "fixed_code": "public synchronized void load2() {",
        "patch": "@@ -26,7 +26,7 @@ protected ConfigDirectory(File file) {\n     }\n \n     @Override\n-    public synchronized void load() {\n+    public synchronized void load2() {\n         COL result = create();\n \n         if (dir.exists()) {"
    },
    {
        "commit_id": "6e61a1cbc46a76e8941c36c3cdae904592b3cd44",
        "commit_message": "Added some missing NonNull annotations, fixed one spotbugs issue and added spotbugs ignore",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6e61a1cbc46a76e8941c36c3cdae904592b3cd44",
        "buggy_code": "userInstance != null ? ModelHyperlinkNote.encodeTo(userInstance) : user));",
        "fixed_code": "ModelHyperlinkNote.encodeTo(userInstance)));",
        "patch": "@@ -128,7 +128,7 @@ public void print(TaskListener listener) {\n             final User userInstance = getUser();\n             listener.getLogger().println(\n                 Messages.CauseOfInterruption_ShortDescription(\n-                        userInstance != null ? ModelHyperlinkNote.encodeTo(userInstance) : user));\n+                        ModelHyperlinkNote.encodeTo(userInstance)));\n         }\n \n         @Override"
    },
    {
        "commit_id": "3429fba0d07888e82e8a27453aec861e75c6f578",
        "commit_message": "Lower 'reasonable' number of icons (fix master build) (#5756)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3429fba0d07888e82e8a27453aec861e75c6f578",
        "buggy_code": "assertThat(\"icons\", coreIcons.size(), greaterThanOrEqualTo(371));",
        "fixed_code": "assertThat(\"icons\", coreIcons.size(), greaterThanOrEqualTo(350));",
        "patch": "@@ -14,6 +14,6 @@ public class IconSetTest {\n     @Test\n     void testIconSetSize() {\n         final Map<String, Icon> coreIcons = IconSet.icons.getCoreIcons();\n-        assertThat(\"icons\", coreIcons.size(), greaterThanOrEqualTo(371));\n+        assertThat(\"icons\", coreIcons.size(), greaterThanOrEqualTo(350));\n     }\n }"
    },
    {
        "commit_id": "3c0f717d16ed5ce6e5a3799c47d424d12c5fd915",
        "commit_message": "Attempt to fix SlaveComputerTest.startupShouldFailOnErrorOnlineListener (#5715)\n\nCo-authored-by: Mark Waite <mark.earl.waite@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c0f717d16ed5ce6e5a3799c47d424d12c5fd915",
        "buggy_code": "static int onOnlineCount = 0;",
        "fixed_code": "static volatile int onOnlineCount = 0;",
        "patch": "@@ -155,7 +155,7 @@ public void startupShouldFailOnErrorOnlineListener() throws Exception {\n     @TestExtension(value = \"startupShouldFailOnErrorOnlineListener\")\n     public static final class ErrorOnOnlineListener extends ComputerListener {\n \n-        static int onOnlineCount = 0;\n+        static volatile int onOnlineCount = 0;\n \n         @Override\n         public void onOnline(Computer c, TaskListener listener) throws IOException, InterruptedException {"
    },
    {
        "commit_id": "f29b4789834a7562b44d8c3a0abcd9fb0c927f27",
        "commit_message": "Fix `UnnecessarilyFullyQualified` Error Prone violations (#5737)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f29b4789834a7562b44d8c3a0abcd9fb0c927f27",
        "buggy_code": "return scheduleBuild2(quietPeriod, new hudson.model.Cause.LegacyCodeCause());",
        "fixed_code": "return scheduleBuild2(quietPeriod, new Cause.LegacyCodeCause());",
        "patch": "@@ -834,7 +834,7 @@ public QueueTaskFuture<R> scheduleBuild2(int quietPeriod, Cause c, Collection<?\n     @SuppressWarnings(\"deprecation\")\n     @WithBridgeMethods(Future.class)\n     public QueueTaskFuture<R> scheduleBuild2(int quietPeriod) {\n-        return scheduleBuild2(quietPeriod, new hudson.model.Cause.LegacyCodeCause());\n+        return scheduleBuild2(quietPeriod, new Cause.LegacyCodeCause());\n     }\n \n     /**"
    },
    {
        "commit_id": "f12f400a5c5e1f0aabe24fd1af206ac4842310d6",
        "commit_message": "Consistently use `issues.jenkins.io` for issue links (#5724)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f12f400a5c5e1f0aabe24fd1af206ac4842310d6",
        "buggy_code": "@Deprecated //see https://issues.jenkins-ci.org/browse/JENKINS-27177",
        "fixed_code": "@Deprecated //see https://issues.jenkins.io/browse/JENKINS-27177",
        "patch": "@@ -714,7 +714,7 @@ public void enable() throws IOException {\n      * Disables this plugin next time Jenkins runs. As it doesn't check anything, it's recommended to use the method\n      * {@link #disable(PluginDisableStrategy)}\n      */\n-    @Deprecated //see https://issues.jenkins-ci.org/browse/JENKINS-27177\n+    @Deprecated //see https://issues.jenkins.io/browse/JENKINS-27177\n     public void disable() throws IOException {\n         disableWithoutCheck();\n     }"
    },
    {
        "commit_id": "880ed6327a0f7ea8eb5b9061d6827bf81c7215a0",
        "commit_message": "Fix `ChainingConstructorIgnoresParameter` Error Prone violation (#5574)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/880ed6327a0f7ea8eb5b9061d6827bf81c7215a0",
        "buggy_code": "this(username, password, true, true, true, true, authorities);",
        "fixed_code": "this(username, password, enabled, true, true, true, authorities);",
        "patch": "@@ -43,7 +43,7 @@ public class User implements UserDetails {\n     private GrantedAuthority[] authorities;\n \n     public User(String username, String password, boolean enabled, GrantedAuthority[] authorities) {\n-        this(username, password, true, true, true, true, authorities);\n+        this(username, password, enabled, true, true, true, authorities);\n     }\n \n     public User(String username, String password, boolean enabled, boolean accountNonExpired, boolean credentialsNonExpired, GrantedAuthority[] authorities) {"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "(convertHexDigit((byte)s.charAt(i++)))",
        "fixed_code": "convertHexDigit((byte)s.charAt(i++))",
        "patch": "@@ -472,7 +472,7 @@ public static String unquote(String s)\n                                 (convertHexDigit((byte)s.charAt(i++))<<24)+\n                                 (convertHexDigit((byte)s.charAt(i++))<<16)+\n                                 (convertHexDigit((byte)s.charAt(i++))<<8)+\n-                                (convertHexDigit((byte)s.charAt(i++)))\n+                                convertHexDigit((byte)s.charAt(i++))\n                                 )\n                         );\n                         break;"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "private <T> boolean removeComponent(Collection<ExtensionComponent<T>> collection, Object t) {",
        "fixed_code": "private boolean removeComponent(Collection<ExtensionComponent<T>> collection, Object t) {",
        "patch": "@@ -246,7 +246,7 @@ private synchronized boolean removeSync(Object o) {\n         return removed;\n     }\n \n-    private <T> boolean removeComponent(Collection<ExtensionComponent<T>> collection, Object t) {\n+    private boolean removeComponent(Collection<ExtensionComponent<T>> collection, Object t) {\n         for (ExtensionComponent<T> c : collection) {\n             if (c.getInstance().equals(t)) {\n                 return collection.remove(c);"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "public <T> T[] toArray(T[] array) {",
        "fixed_code": "public <X> X[] toArray(X[] array) {",
        "patch": "@@ -144,7 +144,7 @@ public void clear() {\n             }\n \n             @Override\n-            public <T> T[] toArray(T[] array) {\n+            public <X> X[] toArray(X[] array) {\n                 return storage().toArray(array);\n             }\n "
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "if ((ws == null) || (!ws.exists())) {",
        "fixed_code": "if ((ws == null) || !ws.exists()) {",
        "patch": "@@ -1834,7 +1834,7 @@ protected final <T extends Describable<T>> List<T> buildDescribable(StaplerReque\n     public DirectoryBrowserSupport doWs( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException, InterruptedException {\n         checkPermission(Item.WORKSPACE);\n         FilePath ws = getSomeWorkspace();\n-        if ((ws == null) || (!ws.exists())) {\n+        if ((ws == null) || !ws.exists()) {\n             // if there's no workspace, report a nice error message\n             // Would be good if when asked for *plain*, do something else!\n             // (E.g. return 404, or send empty doc.)"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "if ((!proposedName.equals(nodeName))",
        "fixed_code": "if (!proposedName.equals(nodeName)",
        "patch": "@@ -1506,7 +1506,7 @@ public void doConfigSubmit( StaplerRequest req, StaplerResponse rsp ) throws IOE\n             throw new ServletException(\"No such node \" + nodeName);\n         }\n \n-        if ((!proposedName.equals(nodeName))\n+        if (!proposedName.equals(nodeName)\n                 && Jenkins.get().getNode(proposedName) != null) {\n             throw new FormException(Messages.ComputerSet_SlaveAlreadyExists(proposedName), \"name\");\n         }"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "private final Map<JSONObject,Boolean> processed = new IdentityHashMap<>();",
        "fixed_code": "private final IdentityHashMap<JSONObject,Boolean> processed = new IdentityHashMap<>();",
        "patch": "@@ -625,7 +625,7 @@ public T newInstance(@Nullable StaplerRequest req, @NonNull JSONObject formData)\n     private static class NewInstanceBindInterceptor extends BindInterceptor {\n \n         private final BindInterceptor oldInterceptor;\n-        private final Map<JSONObject,Boolean> processed = new IdentityHashMap<>();\n+        private final IdentityHashMap<JSONObject,Boolean> processed = new IdentityHashMap<>();\n \n         NewInstanceBindInterceptor(BindInterceptor oldInterceptor) {\n             LOGGER.log(Level.FINER, \"new interceptor delegating to {0}\", oldInterceptor);"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "return new RangeSet((List<Range>)(collectionConv.unmarshal(reader,context)));",
        "fixed_code": "return new RangeSet((List<Range>)collectionConv.unmarshal(reader,context));",
        "patch": "@@ -824,7 +824,7 @@ public Object unmarshal(HierarchicalStreamReader reader, final UnmarshallingCont\n                               <end>1479</end>\n                             </range>\n                      */\n-                    return new RangeSet((List<Range>)(collectionConv.unmarshal(reader,context)));\n+                    return new RangeSet((List<Range>)collectionConv.unmarshal(reader,context));\n                 } else {\n                     return RangeSet.fromString(reader.getValue(),true);\n                 }"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "JSONObject o = json.optJSONObject(\"userProperty\" + (i++));",
        "fixed_code": "JSONObject o = json.optJSONObject(\"userProperty\" + i++);",
        "patch": "@@ -868,7 +868,7 @@ public void doConfigSubmit(StaplerRequest req, StaplerResponse rsp) throws IOExc\n         for (UserPropertyDescriptor d : UserProperty.all()) {\n             UserProperty p = getProperty(d.clazz);\n \n-            JSONObject o = json.optJSONObject(\"userProperty\" + (i++));\n+            JSONObject o = json.optJSONObject(\"userProperty\" + i++);\n             if (o != null) {\n                 if (p != null) {\n                     p = p.reconfigure(req, o);"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "return (T) owner[(start + (pos++)) % owner.length];",
        "fixed_code": "return (T) owner[(start + pos++) % owner.length];",
        "patch": "@@ -157,7 +157,7 @@ public T next() {\n                     if (!hasNext()) {\n                         throw new NoSuchElementException();\n                     }\n-                    return (T) owner[(start + (pos++)) % owner.length];\n+                    return (T) owner[(start + pos++) % owner.length];\n                 }\n \n                 @Override"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "public <E> E[] toArray(E[] array) {",
        "fixed_code": "public <T> T[] toArray(T[] array) {",
        "patch": "@@ -142,7 +142,7 @@ public void clear() {\n         this.core = new ArrayList<>();\n     }\n \n-    public <E> E[] toArray(E[] array) {\n+    public <T> T[] toArray(T[] array) {\n         return core.toArray(array);\n     }\n "
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "public <T> T[] toArray(T[] array) {",
        "fixed_code": "public <X> X[] toArray(X[] array) {",
        "patch": "@@ -237,7 +237,7 @@ public List<T> toList() {\n      * Gets all the {@link Describable}s in an array.\n      */\n     @Override\n-    public <T> T[] toArray(T[] array) {\n+    public <X> X[] toArray(X[] array) {\n         return data.toArray(array);\n     }\n "
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "if ((count++)%100==0)",
        "fixed_code": "if (count++ % 100 == 0)",
        "patch": "@@ -156,7 +156,7 @@ private int rewriteRecursive(File dir, String relative, TaskListener listener) t\n             for (File child : children) {\n                 String cn = child.getName();\n                 if (cn.endsWith(\".xml\")) {\n-                    if ((count++)%100==0)\n+                    if (count++ % 100 == 0)\n                         listener.getLogger().println(\"Scanning \"+child);\n                     try {\n                         if (rewrite(child)) {"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "return (decoded[pos++])&0xFF;",
        "fixed_code": "return decoded[pos++] & 0xFF;",
        "patch": "@@ -45,7 +45,7 @@ public int read() throws IOException {\n             pos = 0;\n         }\n \n-        return (decoded[pos++])&0xFF;\n+        return decoded[pos++] & 0xFF;\n     }\n \n     @Override"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "return index == -1 ? id : id.substring(0, index) + (id.substring(index).toLowerCase(Locale.ENGLISH));",
        "fixed_code": "return index == -1 ? id : id.substring(0, index) + id.substring(index).toLowerCase(Locale.ENGLISH);",
        "patch": "@@ -297,7 +297,7 @@ public boolean equals(@NonNull String id1, @NonNull String id2) {\n         public String keyFor(@NonNull String id) {\n             int index = id.lastIndexOf('@'); // The @ can be used in local-part if quoted correctly\n             // => the last @ is the one used to separate the domain and local-part\n-            return index == -1 ? id : id.substring(0, index) + (id.substring(index).toLowerCase(Locale.ENGLISH));\n+            return index == -1 ? id : id.substring(0, index) + id.substring(index).toLowerCase(Locale.ENGLISH);\n         }\n \n         @Override"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "while ((delegate == null || !delegate.hasNext()) && (providers.hasNext())) {",
        "fixed_code": "while ((delegate == null || !delegate.hasNext()) && providers.hasNext()) {",
        "patch": "@@ -36,7 +36,7 @@ private IteratorImpl() {\n \n         @Override\n         public boolean hasNext() {\n-            while ((delegate == null || !delegate.hasNext()) && (providers.hasNext())) {\n+            while ((delegate == null || !delegate.hasNext()) && providers.hasNext()) {\n                 final QueueItemAuthenticatorProvider provider = providers.next();\n                 if (provider == null) {\n                     continue;"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "if ((getVersion().isNewerThanOrEqualTo(new VersionNumber(\"11.0.9\"))) ||",
        "fixed_code": "if (getVersion().isNewerThanOrEqualTo(new VersionNumber(\"11.0.9\")) ||",
        "patch": "@@ -521,7 +521,7 @@ public void printStackTrace(PrintWriter s) {\n         stack2.cause(stack1);\n         //Format changed in 11.0.9 / 8.0.272 (JDK-8226809 / JDK-8252444 / JDK-8252489)\n \n-        if ((getVersion().isNewerThanOrEqualTo(new VersionNumber(\"11.0.9\"))) ||\n+        if (getVersion().isNewerThanOrEqualTo(new VersionNumber(\"11.0.9\")) ||\n                 (getVersion().getDigitAt(0) == 8 && getVersion().isNewerThanOrEqualTo(new VersionNumber(\"8.0.272\")))) {\n             assertPrintThrowable(stack1,\n                     \"p.Exc1\\n\" +"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "assert false : x;",
        "fixed_code": "throw new RuntimeException(x);",
        "patch": "@@ -27,7 +27,7 @@ public void doubleBooking() throws Exception {\n             try {\n                 lock.block();\n             } catch (InterruptedException x) {\n-                assert false : x;\n+                throw new RuntimeException(x);\n             }\n             return null;\n         });"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "text.addMarkup(0,5,\"<b tag=\"+(n++)+\">\",\"</b>\");",
        "fixed_code": "text.addMarkup(0, 5, \"<b tag=\" + n++ + \">\", \"</b>\");",
        "patch": "@@ -219,7 +219,7 @@ public static class StatefulAnnotator extends ConsoleAnnotator<Object> {\n         @Override\n         public ConsoleAnnotator annotate(Object build, MarkupText text) {\n             if (text.getText().startsWith(\"line\"))\n-                text.addMarkup(0,5,\"<b tag=\"+(n++)+\">\",\"</b>\");\n+                text.addMarkup(0, 5, \"<b tag=\" + n++ + \">\", \"</b>\");\n             return this;\n         }\n     }"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "if(!(e.getClass().isAssignableFrom(AccessDeniedException3.class))){",
        "fixed_code": "if(!e.getClass().isAssignableFrom(AccessDeniedException3.class)){",
        "patch": "@@ -416,7 +416,7 @@ public void testDoConfigSubmit() throws Exception {\n             fail(\"User should not have permission to configure another user.\");\n         }\n         catch(Exception e){\n-            if(!(e.getClass().isAssignableFrom(AccessDeniedException3.class))){\n+            if(!e.getClass().isAssignableFrom(AccessDeniedException3.class)){\n                fail(\"AccessDeniedException should be thrown.\");\n             }\n         }"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "withStdin(new ByteArrayInputStream((\"<project><actions/><builders/><publishers/><buildWrappers/></project>\").getBytes())).",
        "fixed_code": "withStdin(new ByteArrayInputStream(\"<project><actions/><builders/><publishers/><buildWrappers/></project>\".getBytes())).",
        "patch": "@@ -61,7 +61,7 @@ public void setUp() throws Exception {\n     @Test\n     public void onCreatedViaCLI() throws Exception {\n         CLICommandInvoker.Result result = new CLICommandInvoker(j, \"create-job\").\n-                withStdin(new ByteArrayInputStream((\"<project><actions/><builders/><publishers/><buildWrappers/></project>\").getBytes())).\n+                withStdin(new ByteArrayInputStream(\"<project><actions/><builders/><publishers/><buildWrappers/></project>\".getBytes())).\n                 invokeWithArgs(\"testJob\");\n         assertThat(result, CLICommandInvoker.Matcher.succeeded());\n         assertNotNull(\"job should be created: \" + result, j.jenkins.getItem(\"testJob\"));"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "assertEquals((new FakeChangeLogSCM.EntryImpl()).getMsg(), change.getMsg());",
        "fixed_code": "assertEquals(new FakeChangeLogSCM.EntryImpl().getMsg(), change.getMsg());",
        "patch": "@@ -28,7 +28,7 @@ public void catchingExceptionDuringAnnotation() {\n         } catch (Throwable t) {\n             fail(t.getMessage());\n         }\n-        assertEquals((new FakeChangeLogSCM.EntryImpl()).getMsg(), change.getMsg());\n+        assertEquals(new FakeChangeLogSCM.EntryImpl().getMsg(), change.getMsg());\n     }\n \n     @Extension"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "if (shouldBeEnabled && !(agentProtocols.contains(protocol))) {",
        "fixed_code": "if (shouldBeEnabled && !agentProtocols.contains(protocol)) {",
        "patch": "@@ -73,7 +73,7 @@ public static void assertProtocols(Jenkins jenkins, boolean shouldBeEnabled, @Ch\n         Set<String> agentProtocols = jenkins.getAgentProtocols();\n         List<String> failedChecks = new ArrayList<>();\n         for (String protocol : protocolNames) {\n-            if (shouldBeEnabled && !(agentProtocols.contains(protocol))) {\n+            if (shouldBeEnabled && !agentProtocols.contains(protocol)) {\n                 failedChecks.add(protocol);\n             }\n             if (!shouldBeEnabled && agentProtocols.contains(protocol)) {"
    },
    {
        "commit_id": "b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "commit_message": "Fix violations of a handful of Error Prone checks (#5519)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8c20c6428ea99d2d32a09791b393451ad9beb7d",
        "buggy_code": "listener.getLogger().println(\"ran DisposerImpl #\" + (++tearDownCount));",
        "fixed_code": "listener.getLogger().println(\"ran DisposerImpl #\" + ++tearDownCount);",
        "patch": "@@ -167,7 +167,7 @@ private static final class DisposerImpl extends Disposer {\n             private static final long serialVersionUID = 1;\n             private int tearDownCount = 0;\n             @Override public void tearDown(Run<?,?> build, FilePath workspace, Launcher launcher, TaskListener listener) throws IOException, InterruptedException {\n-                listener.getLogger().println(\"ran DisposerImpl #\" + (++tearDownCount));\n+                listener.getLogger().println(\"ran DisposerImpl #\" + ++tearDownCount);\n             }\n         }\n         @TestExtension({ \"disposer\", \"failedJobWithInterruptedDisposer\" }) public static class DescriptorImpl extends BuildWrapperDescriptor {"
    },
    {
        "commit_id": "7f382b576e05c58c2e25d9030bbf0aa2b8c08bba",
        "commit_message": "Fix `CatchAndPrintStackTrace`, `CatchFail`, and `EmptyCatch` Error Prone violations in tests (#5522)\n\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7f382b576e05c58c2e25d9030bbf0aa2b8c08bba",
        "buggy_code": "fail(\"Blocking call didn't finish after timeout!\");",
        "fixed_code": "throw new AssertionError(\"Blocking call didn't finish after timeout!\", e);",
        "patch": "@@ -334,7 +334,7 @@ public Object call() {\n         try {\n             exec_task.get(2*TIMEOUT, TimeUnit.MILLISECONDS);\n         } catch (TimeoutException e) {\n-            fail(\"Blocking call didn't finish after timeout!\");\n+            throw new AssertionError(\"Blocking call didn't finish after timeout!\", e);\n         }\n         assertThat(exec_task.isDone(), equalTo(true));\n         finish.signal();"
    },
    {
        "commit_id": "1722684041992f8ce88b449a8297fd36b6ed04a4",
        "commit_message": "Merge pull request #5492 from daniel-beck/issue-references\n\nChange old issue references from #... to JENKINS-...",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1722684041992f8ce88b449a8297fd36b6ed04a4",
        "buggy_code": "if (nextBuildNumber == 0) { // #3361",
        "fixed_code": "if (nextBuildNumber == 0) { // JENKINS-3361",
        "patch": "@@ -277,7 +277,7 @@ public synchronized boolean isHoldOffBuildUntilSave() {\n     }\n \n     protected synchronized void saveNextBuildNumber() throws IOException {\n-        if (nextBuildNumber == 0) { // #3361\n+        if (nextBuildNumber == 0) { // JENKINS-3361\n             nextBuildNumber = 1;\n         }\n         getNextBuildNumberFile().write(String.valueOf(nextBuildNumber) + '\\n');"
    },
    {
        "commit_id": "952d02d59668db9d1f17aa4495182d6abc05fa64",
        "commit_message": "Change old issue references from #... to JENKINS-...",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/952d02d59668db9d1f17aa4495182d6abc05fa64",
        "buggy_code": "if (nextBuildNumber == 0) { // #3361",
        "fixed_code": "if (nextBuildNumber == 0) { // JENKINS-3361",
        "patch": "@@ -277,7 +277,7 @@ public synchronized boolean isHoldOffBuildUntilSave() {\n     }\n \n     protected synchronized void saveNextBuildNumber() throws IOException {\n-        if (nextBuildNumber == 0) { // #3361\n+        if (nextBuildNumber == 0) { // JENKINS-3361\n             nextBuildNumber = 1;\n         }\n         getNextBuildNumberFile().write(String.valueOf(nextBuildNumber) + '\\n');"
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public DigesterThread(String string, String expectedDigest) {",
        "fixed_code": "DigesterThread(String string, String expectedDigest) {",
        "patch": "@@ -339,7 +339,7 @@ private static class DigesterThread extends Thread {\n \n \t\tprivate String error;\n \n-\t\tpublic DigesterThread(String string, String expectedDigest) {\n+\t\tDigesterThread(String string, String expectedDigest) {\n     \t\tthis.string = string;\n     \t\tthis.expectedDigest = expectedDigest;\n     \t}"
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public StubJob() {",
        "fixed_code": "StubJob() {",
        "patch": "@@ -36,7 +36,7 @@ class StubJob extends Job {\n \n     public static final String DEFAULT_STUB_JOB_NAME = \"StubJob\";\n     \n-    public StubJob() {\n+    StubJob() {\n         super(null, DEFAULT_STUB_JOB_NAME);\n     }\n     "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public MockDownloadJob(String computedSHA1, String computedSHA256, String computedSHA512) {",
        "fixed_code": "MockDownloadJob(String computedSHA1, String computedSHA256, String computedSHA512) {",
        "patch": "@@ -166,7 +166,7 @@ private static class MockDownloadJob implements UpdateCenter.WithComputedChecksu\n         private final String computedSHA256;\n         private final String computedSHA512;\n \n-        public MockDownloadJob(String computedSHA1, String computedSHA256, String computedSHA512) {\n+        MockDownloadJob(String computedSHA1, String computedSHA256, String computedSHA512) {\n             this.computedSHA1 = computedSHA1;\n             this.computedSHA256 = computedSHA256;\n             this.computedSHA512 = computedSHA512;"
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public JIComOxidStub(String address, String domain, String username, String password) {",
        "fixed_code": "JIComOxidStub(String address, String domain, String username, String password) {",
        "patch": "@@ -46,7 +46,7 @@ protected String getSyntax() {\n             return \"99fcfec4-5260-101b-bbcb-00aa0021347a:0.0\";\n         }\n \n-        public JIComOxidStub(String address, String domain, String username, String password) {\n+        JIComOxidStub(String address, String domain, String username, String password) {\n             setTransportFactory(JIComTransportFactory.getSingleTon());\n             setProperties(new Properties(defaults));\n             getProperties().setProperty(\"rpc.security.username\", username);"
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public MatchingFileVisitor(String filename) {",
        "fixed_code": "MatchingFileVisitor(String filename) {",
        "patch": "@@ -90,7 +90,7 @@ private static class MatchingFileVisitor extends FileVisitor {\n         \n         public final String filename;\n         \n-        public MatchingFileVisitor(String filename) {\n+        MatchingFileVisitor(String filename) {\n             this.filename = filename;\n         }\n     "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public GrowingFileRunnable(File file) {",
        "fixed_code": "GrowingFileRunnable(File file) {",
        "patch": "@@ -141,7 +141,7 @@ private static class GrowingFileRunnable implements Runnable {\n         private Exception ex = null;\n         private File file;\n \n-        public GrowingFileRunnable(File file) {\n+        GrowingFileRunnable(File file) {\n             this.file = file;\n         }\n "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public InstalledPlugin(HtmlTableRow pluginRow) {",
        "fixed_code": "InstalledPlugin(HtmlTableRow pluginRow) {",
        "patch": "@@ -179,7 +179,7 @@ private class InstalledPlugin {\n \n         private final HtmlTableRow pluginRow;\n \n-        public InstalledPlugin(HtmlTableRow pluginRow) {\n+        InstalledPlugin(HtmlTableRow pluginRow) {\n             this.pluginRow = pluginRow;\n         }\n         "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public FullNameChangingProject(ItemGroup parent, String name) {",
        "fixed_code": "FullNameChangingProject(ItemGroup parent, String name) {",
        "patch": "@@ -233,7 +233,7 @@ public CustomBuild(FullNameChangingProject job) throws IOException {\n     static class FullNameChangingProject extends Project<FullNameChangingProject, CustomBuild> implements TopLevelItem {\n         private volatile String virtualName;\n \n-        public FullNameChangingProject(ItemGroup parent, String name) {\n+        FullNameChangingProject(ItemGroup parent, String name) {\n             super(parent, name);\n         }\n "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public Stream(final InputStream inner) {",
        "fixed_code": "Stream(final InputStream inner) {",
        "patch": "@@ -267,7 +267,7 @@ class Stream extends ServletInputStream {\n \n             private final InputStream inner;\n \n-            public Stream(final InputStream inner) {\n+            Stream(final InputStream inner) {\n                 this.inner = inner;\n             }\n "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public NameChangingNode(JenkinsRule j, String name) throws Exception {",
        "fixed_code": "NameChangingNode(JenkinsRule j, String name) throws Exception {",
        "patch": "@@ -553,7 +553,7 @@ public void interruptOnDelete() throws Exception {\n     static class NameChangingNode extends Slave {\n         private String virtualName;\n \n-        public NameChangingNode(JenkinsRule j, String name) throws Exception {\n+        NameChangingNode(JenkinsRule j, String name) throws Exception {\n             super(name, \"dummy\", j.createTmpDir().getPath(), \"1\", Node.Mode.NORMAL, \"\", j.createComputerLauncher(null), RetentionStrategy.NOOP, new ArrayList<>());\n         }\n "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public Stream(final InputStream inner) {",
        "fixed_code": "Stream(final InputStream inner) {",
        "patch": "@@ -388,7 +388,7 @@ private static class AllButViewsAuthorizationStrategy extends AuthorizationStrat\n     private static class Stream extends ServletInputStream {\n         private final InputStream inner;\n \n-        public Stream(final InputStream inner) {\n+        Stream(final InputStream inner) {\n             this.inner = inner;\n         }\n "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public ResultPublisher(Result result) {",
        "fixed_code": "ResultPublisher(Result result) {",
        "patch": "@@ -275,7 +275,7 @@ static class ResultPublisher extends Publisher {\n \n         private final Result result;\n \n-        public ResultPublisher(Result result) {\n+        ResultPublisher(Result result) {\n             this.result = result;\n         }\n "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public CustomInvisibleProperty() {",
        "fixed_code": "CustomInvisibleProperty() {",
        "patch": "@@ -156,7 +156,7 @@ public String getSomeProperty() {\n             return this.someProperty;\n         }\n \n-        public CustomInvisibleProperty() {\n+        CustomInvisibleProperty() {\n             this.someProperty = \"undefined\";\n         }\n "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public TestCloud(String name, String labelString) {",
        "fixed_code": "TestCloud(String name, String labelString) {",
        "patch": "@@ -74,7 +74,7 @@ private static class TestCloud extends Cloud {\n \n         private final List<Label> labels;\n \n-        public TestCloud(String name, String labelString) {\n+        TestCloud(String name, String labelString) {\n             super(name);\n             labels = new ArrayList<>();\n             for (String l : labelString.split(\" \")) {"
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public SlowTrigger(String childProjects) {",
        "fixed_code": "SlowTrigger(String childProjects) {",
        "patch": "@@ -325,7 +325,7 @@ public boolean shouldTriggerBuild(AbstractBuild build, TaskListener listener, Li\n             }\n         }\n \n-        public SlowTrigger(String childProjects) {\n+        SlowTrigger(String childProjects) {\n             super(childProjects, true);\n         }\n "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public TestSCM(OneShotEvent checkoutStarted) {",
        "fixed_code": "TestSCM(OneShotEvent checkoutStarted) {",
        "patch": "@@ -114,7 +114,7 @@ private static class TestSCM extends NullSCM {\n         private volatile int myRev = 1;\n         private final OneShotEvent checkoutStarted;\n \n-        public TestSCM(OneShotEvent checkoutStarted) {\n+        TestSCM(OneShotEvent checkoutStarted) {\n             this.checkoutStarted = checkoutStarted;\n         }\n "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public Stream(final InputStream inner) {",
        "fixed_code": "Stream(final InputStream inner) {",
        "patch": "@@ -124,7 +124,7 @@ public void testPostJobXml() throws Exception {\n     private static class Stream extends ServletInputStream {\n         private final InputStream inner;\n \n-        public Stream(final InputStream inner) {\n+        Stream(final InputStream inner) {\n             this.inner = inner;\n         }\n "
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public CustomJSONSignatureValidator(String cert) {",
        "fixed_code": "CustomJSONSignatureValidator(String cert) {",
        "patch": "@@ -393,7 +393,7 @@ private String getWebServerResource(String target, String version) throws IOExce\n     private static class CustomJSONSignatureValidator extends JSONSignatureValidator {\n         private String cert;\n \n-        public CustomJSONSignatureValidator(String cert) {\n+        CustomJSONSignatureValidator(String cert) {\n             super(\"Custom JSON signature validator\");\n             this.cert = cert;\n         }"
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public InvalidNode(String name, String remoteFS, ComputerLauncher launcher) throws Descriptor.FormException, IOException {",
        "fixed_code": "InvalidNode(String name, String remoteFS, ComputerLauncher launcher) throws Descriptor.FormException, IOException {",
        "patch": "@@ -140,7 +140,7 @@ private static class InvalidNode extends Slave {\n         // JEP-200 whitelist changes prevent this field (and thus instances of this class) from being serialized.\n         private ClassLoader cl = InvalidNode.class.getClassLoader();\n \n-        public InvalidNode(String name, String remoteFS, ComputerLauncher launcher) throws Descriptor.FormException, IOException {\n+        InvalidNode(String name, String remoteFS, ComputerLauncher launcher) throws Descriptor.FormException, IOException {\n             super(name, remoteFS, launcher);\n         }\n     }"
    },
    {
        "commit_id": "5c4701eb83e85694b095263148b9372e0a488057",
        "commit_message": "Fix RedundantModifier Checkstyle violations in tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c4701eb83e85694b095263148b9372e0a488057",
        "buggy_code": "public MyProminentProjectAction() {",
        "fixed_code": "MyProminentProjectAction() {",
        "patch": "@@ -192,7 +192,7 @@ private static class MyProminentProjectAction extends InvisibleAction implements\n \n         private String allocation;\n \n-        public MyProminentProjectAction() {\n+        MyProminentProjectAction() {\n             StringWriter sw = new StringWriter();\n             PrintWriter pw = new PrintWriter(sw);\n             new Exception(\"MyProminentProjectAction allocated at: \").printStackTrace(pw);"
    },
    {
        "commit_id": "aa5e1b8bb66f97a69f41b0fc0d2dfbd6fe9e0711",
        "commit_message": "Merge pull request #5431 from daniel-beck/tool-home-error\n\nFix form validation message for command tool installers",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/aa5e1b8bb66f97a69f41b0fc0d2dfbd6fe9e0711",
        "buggy_code": "return FormValidation.error(Messages.CommandInstaller_no_command());",
        "fixed_code": "return FormValidation.error(Messages.CommandInstaller_no_toolHome());",
        "patch": "@@ -100,7 +100,7 @@ public FormValidation doCheckToolHome(@QueryParameter String value) {\n             if (value.length() > 0) {\n                 return FormValidation.ok();\n             } else {\n-                return FormValidation.error(Messages.CommandInstaller_no_command());\n+                return FormValidation.error(Messages.CommandInstaller_no_toolHome());\n             }\n         }\n     }"
    },
    {
        "commit_id": "d71750ba0618e93b8aadd19baba0c33d884d7f2e",
        "commit_message": "Fix form validation message for command tool installers",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d71750ba0618e93b8aadd19baba0c33d884d7f2e",
        "buggy_code": "return FormValidation.error(Messages.CommandInstaller_no_command());",
        "fixed_code": "return FormValidation.error(Messages.CommandInstaller_no_toolHome());",
        "patch": "@@ -100,7 +100,7 @@ public FormValidation doCheckToolHome(@QueryParameter String value) {\n             if (value.length() > 0) {\n                 return FormValidation.ok();\n             } else {\n-                return FormValidation.error(Messages.CommandInstaller_no_command());\n+                return FormValidation.error(Messages.CommandInstaller_no_toolHome());\n             }\n         }\n     }"
    },
    {
        "commit_id": "16aa06a6e6a0f15e60a0703a5de2cd57705c6b07",
        "commit_message": "fix non compilable code on eclipse compiler (#5375)\n\nlegacyDescriptors has no idea what type of Descriptor it has and is\r\nusing a raw Descrriptor.\r\nlegacyDescriptors.computeIfAbsent can then only return keys of the type\r\nthat are in the map - and this is a raw type - so no generic is possible\r\nin the return of getLegacyDescriptors()\r\n\r\nfixes the eclipse error ->\r\nType mismatch: cannot convert from\r\nCopyOnWriteArrayList<ExtensionComponent<Descriptor>> to\r\nCopyOnWriteArrayList<ExtensionComponent<Descriptor<T>>>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/16aa06a6e6a0f15e60a0703a5de2cd57705c6b07",
        "buggy_code": "private static <T extends Describable<T>> CopyOnWriteArrayList<ExtensionComponent<Descriptor<T>>> getLegacyDescriptors(Class<T> type) {",
        "fixed_code": "private static <T extends Describable<T>> CopyOnWriteArrayList<ExtensionComponent<Descriptor>> getLegacyDescriptors(Class<T> type) {",
        "patch": "@@ -244,7 +244,7 @@ private ExtensionList<Descriptor> getDescriptorExtensionList() {\n     private static final Map<Class, CopyOnWriteArrayList<ExtensionComponent<Descriptor>>> legacyDescriptors = new ConcurrentHashMap<>();\n \n     @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n-    private static <T extends Describable<T>> CopyOnWriteArrayList<ExtensionComponent<Descriptor<T>>> getLegacyDescriptors(Class<T> type) {\n+    private static <T extends Describable<T>> CopyOnWriteArrayList<ExtensionComponent<Descriptor>> getLegacyDescriptors(Class<T> type) {\n         return legacyDescriptors.computeIfAbsent(type, key -> new CopyOnWriteArrayList());\n     }\n "
    },
    {
        "commit_id": "ae88291731ddeb0e77c1944d997c4d60a77bfd87",
        "commit_message": "[JENKINS-64423, JENKINS-46618] Resolve all core caused startup Illegal reflective access warnings (#5110)\n\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ae88291731ddeb0e77c1944d997c4d60a77bfd87",
        "buggy_code": "protected Enumeration findResources( String name )",
        "fixed_code": "public Enumeration findResources( String name )",
        "patch": "@@ -84,7 +84,7 @@ protected Enumeration findResources( String arg0, boolean arg1 )\n     }\n \n     @Override\n-    protected Enumeration findResources( String name )\n+    public Enumeration findResources( String name )\n         throws IOException\n     {\n         return super.findResources( name );"
    },
    {
        "commit_id": "ae88291731ddeb0e77c1944d997c4d60a77bfd87",
        "commit_message": "[JENKINS-64423, JENKINS-46618] Resolve all core caused startup Illegal reflective access warnings (#5110)\n\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ae88291731ddeb0e77c1944d997c4d60a77bfd87",
        "buggy_code": "protected Enumeration/*<URL>*/ findResources(String name) throws IOException {",
        "fixed_code": "public Enumeration/*<URL>*/ findResources(String name) throws IOException {",
        "patch": "@@ -960,7 +960,7 @@ protected URL getUrl(Iterable<File> pathComponents, String name) {\n      * @return an enumeration of URLs for the resources\n      * @exception IOException if I/O errors occurs (can't happen)\n      */\n-    protected Enumeration/*<URL>*/ findResources(String name) throws IOException {\n+    public Enumeration/*<URL>*/ findResources(String name) throws IOException {\n         return findResources(name, true);\n     }\n "
    },
    {
        "commit_id": "b7020adab9e76643e345601392a8a3b97d6458d0",
        "commit_message": "[JENKINS-64465] Fix race condition on HudsonFilter#reset (#5131)\n\nIf `Jenkins#setSecurityRealm` is called concurrently from multiple threads there is a\r\npotential race condition on the authentication filters registration.\r\n\r\n`Jenkins#setSecurityRealm` calls `filter.reset()`, `HudsonFilter#reset` is not\r\nsynchronized however it is replacing the old filter with the new filter (if there was one)\r\n which is not a thread safe operation.\r\n\r\nThe effect of this race condition is the wrong auth filter being registered.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b7020adab9e76643e345601392a8a3b97d6458d0",
        "buggy_code": "public void reset(SecurityRealm securityRealm) throws ServletException {",
        "fixed_code": "public synchronized void reset(SecurityRealm securityRealm) throws ServletException {",
        "patch": "@@ -130,7 +130,7 @@ public static HudsonFilter get(ServletContext context) {\n     /**\n      * Reset the proxies and filter for a change in {@link SecurityRealm}.\n      */\n-    public void reset(SecurityRealm securityRealm) throws ServletException {\n+    public synchronized void reset(SecurityRealm securityRealm) throws ServletException {\n         if (securityRealm != null) {\n             SecurityRealm.SecurityComponents sc = securityRealm.getSecurityComponents();\n             AUTHENTICATION_MANAGER.setDelegate(sc.manager2);"
    },
    {
        "commit_id": "1a0a4809f15991c69ebab52adcfecf18c6a63dc0",
        "commit_message": "[JENKINS-63899] Fix renaming items with non-latin characters and spaces (#5037)\n\n* URLencode item names in url during rename\r\n\r\n* Fix redirects with spaces\r\n\r\nCo-authored-by: res0nance <res0nance@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1a0a4809f15991c69ebab52adcfecf18c6a63dc0",
        "buggy_code": "return HttpResponses.redirectTo(\"../\" + newName);",
        "fixed_code": "return HttpResponses.redirectTo(\"../\" + Functions.encode(newName));",
        "patch": "@@ -264,7 +264,7 @@ public HttpResponse doConfirmRename(@QueryParameter String newName) throws IOExc\n         // send to the new job page\n         // note we can't use getUrl() because that would pick up old name in the\n         // Ancestor.getUrl()\n-        return HttpResponses.redirectTo(\"../\" + newName);\n+        return HttpResponses.redirectTo(\"../\" + Functions.encode(newName));\n     }\n \n     /**"
    },
    {
        "commit_id": "93428a432d6e8aa7c3201e69763f8a632caa3461",
        "commit_message": "Fix deprecation warnings + Update ArtifactArchiver to no longer consult with environment variables injected by EnvironmentContributingActions during the build (#4933)\n\n* fixed deprecation warnings\r\n\r\n* reverted changes\r\n\r\n* fixed typeo in javadoc\r\n\r\n* Update core/src/main/java/hudson/tasks/ArtifactArchiver.java\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\n\r\n* Update core/src/main/java/hudson/cli/BuildCommand.java\r\n\r\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>\r\n\r\n* fixed imports\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/93428a432d6e8aa7c3201e69763f8a632caa3461",
        "buggy_code": "return SCM._for(project);",
        "fixed_code": "return SCM._for((Job) project);",
        "patch": "@@ -967,7 +967,7 @@ public static List<Descriptor<Publisher>> getPublisherDescriptors(AbstractProjec\n     }\n \n     public static List<SCMDescriptor<?>> getSCMDescriptors(AbstractProject<?,?> project) {\n-        return SCM._for(project);\n+        return SCM._for((Job) project);\n     }\n \n     /**"
    },
    {
        "commit_id": "93428a432d6e8aa7c3201e69763f8a632caa3461",
        "commit_message": "Fix deprecation warnings + Update ArtifactArchiver to no longer consult with environment variables injected by EnvironmentContributingActions during the build (#4933)\n\n* fixed deprecation warnings\r\n\r\n* reverted changes\r\n\r\n* fixed typeo in javadoc\r\n\r\n* Update core/src/main/java/hudson/tasks/ArtifactArchiver.java\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\n\r\n* Update core/src/main/java/hudson/cli/BuildCommand.java\r\n\r\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>\r\n\r\n* fixed imports\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/93428a432d6e8aa7c3201e69763f8a632caa3461",
        "buggy_code": "f.perform(build, ws, launcher, listener);",
        "fixed_code": "f.perform(build, ws, environment, launcher, listener);",
        "patch": "@@ -260,7 +260,7 @@ public void perform(Run<?,?> build, FilePath ws, EnvVars environment, Launcher l\n                     f.setExcludes(excludes);\n                     f.setDefaultExcludes(defaultExcludes);\n                     f.setCaseSensitive(caseSensitive);\n-                    f.perform(build, ws, launcher, listener);\n+                    f.perform(build, ws, environment, launcher, listener);\n                 }\n             } else {\n                 result = build.getResult();"
    },
    {
        "commit_id": "93428a432d6e8aa7c3201e69763f8a632caa3461",
        "commit_message": "Fix deprecation warnings + Update ArtifactArchiver to no longer consult with environment variables injected by EnvironmentContributingActions during the build (#4933)\n\n* fixed deprecation warnings\r\n\r\n* reverted changes\r\n\r\n* fixed typeo in javadoc\r\n\r\n* Update core/src/main/java/hudson/tasks/ArtifactArchiver.java\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\n\r\n* Update core/src/main/java/hudson/cli/BuildCommand.java\r\n\r\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>\r\n\r\n* fixed imports\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/93428a432d6e8aa7c3201e69763f8a632caa3461",
        "buggy_code": "return Which.jarURL(antClass);",
        "fixed_code": "return Which.classFileUrl(antClass);",
        "patch": "@@ -54,6 +54,6 @@ public String getMessage() {\n     }\n \n     public URL getWhereAntIsLoaded() throws IOException {\n-        return Which.jarURL(antClass);\n+        return Which.classFileUrl(antClass);\n     }\n }"
    },
    {
        "commit_id": "93428a432d6e8aa7c3201e69763f8a632caa3461",
        "commit_message": "Fix deprecation warnings + Update ArtifactArchiver to no longer consult with environment variables injected by EnvironmentContributingActions during the build (#4933)\n\n* fixed deprecation warnings\r\n\r\n* reverted changes\r\n\r\n* fixed typeo in javadoc\r\n\r\n* Update core/src/main/java/hudson/tasks/ArtifactArchiver.java\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\n\r\n* Update core/src/main/java/hudson/cli/BuildCommand.java\r\n\r\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>\r\n\r\n* fixed imports\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\nCo-authored-by: Jesse Glick <jglick@cloudbees.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/93428a432d6e8aa7c3201e69763f8a632caa3461",
        "buggy_code": "return Which.jarURL(servletClass);",
        "fixed_code": "return Which.classFileUrl(servletClass);",
        "patch": "@@ -45,6 +45,6 @@ public IncompatibleServletVersionDetected(Class servletClass) {\n     }\n     \n     public URL getWhereServletIsLoaded() throws IOException {\n-        return Which.jarURL(servletClass);\n+        return Which.classFileUrl(servletClass);\n     }\n }"
    },
    {
        "commit_id": "d201a91b889e20c2db01819356dee8b06a1b1f15",
        "commit_message": "[JENKINS-62661] Fix status filter migration (#4942)\n\n[JENKINS-62661] Fix status filter migration",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d201a91b889e20c2db01819356dee8b06a1b1f15",
        "buggy_code": "jobFilters.add(0, new StatusFilter(statusFilter));",
        "fixed_code": "jobFilters.add(new StatusFilter(statusFilter));",
        "patch": "@@ -150,7 +150,7 @@ private Object readResolve() {\n         initColumns();\n         initJobFilters();\n         if (statusFilter != null) {\n-            jobFilters.add(0, new StatusFilter(statusFilter));\n+            jobFilters.add(new StatusFilter(statusFilter));\n         }\n         return this;\n     }"
    },
    {
        "commit_id": "c431ccc9b4af2a7fdfe5979f9913df07f04906e0",
        "commit_message": "Fix data migration and add a test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c431ccc9b4af2a7fdfe5979f9913df07f04906e0",
        "buggy_code": "jobFilters.add(0, new StatusFilter(statusFilter));",
        "fixed_code": "jobFilters.add(new StatusFilter(statusFilter));",
        "patch": "@@ -150,7 +150,7 @@ private Object readResolve() {\n         initColumns();\n         initJobFilters();\n         if (statusFilter != null) {\n-            jobFilters.add(0, new StatusFilter(statusFilter));\n+            jobFilters.add(new StatusFilter(statusFilter));\n         }\n         return this;\n     }"
    },
    {
        "commit_id": "634004a648c5f0b1e6ba76b3fba286c04a3cc00d",
        "commit_message": "JENKINS-61206 System read / Extended read for agents (#4531)\n\n* JENKINS-61206 System read / Extended read for agents\r\n\r\n* Update core/src/main/java/hudson/Functions.java\r\n\r\n* Set permission to false explicitly\r\n\r\n* Add message when no configured clouds\r\n\r\nOtherwise there was a white page and it looked weird\r\n\r\n* Hide password for Computer.EXTENDED_READ\r\n\r\n* Add test\r\n\r\n* Access controlled simplification\r\n\r\n* Fix typoes  / simplify code\r\n\r\n* Simplify task.jelly\r\n\r\n* Allow filtering system info extensions\r\n\r\n* Show link that should be present\r\n\r\n* Adjust MasterComputer access\r\n\r\n* Adjust javadoc\r\n\r\n* Adjust MasterComputer#configure\r\n\r\n* Change links when read only access\r\n\r\n* Use it instead of app\r\n\r\n* Update core/src/main/resources/hudson/model/Computer/configure.jelly\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>\r\n\r\n* Code simplification\r\n\r\n* Inline jelly text customisation\r\n\r\n* Allow system read to see cloud move blurb\r\n\r\n* Tooltip based on permission\r\n\r\nCo-authored-by: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/634004a648c5f0b1e6ba76b3fba286c04a3cc00d",
        "buggy_code": "return Jenkins.MANAGE;",
        "fixed_code": "return Jenkins.READ;",
        "patch": "@@ -55,7 +55,7 @@ public String getDescription() {\n     @NonNull\n     @Override\n     public Permission getRequiredPermission() {\n-        return Jenkins.MANAGE;\n+        return Jenkins.READ;\n     }\n \n     @Override"
    },
    {
        "commit_id": "fb1646b9fb711187faf4ebcfc4a739eee44df675",
        "commit_message": "[JENKINS-61711] Fix validateExecutable to allow Git plugin global config correctly report git executable in PATH (#4653)\n\n* Fix git not in path for Git plugin global config\nGit Client Plugin global configuration allows addition of git implementations using GitTool\nThe field Path was not able to identify git executable. The fix involves changing prefix with\nFile.seperator instead of File.pathSeperator. This allows Jenkins to find the git exec at the\nalready existing path.\n\n* Tests added to validate JENKINS-61711 fix\n\n* Improve hamcrest comparison in FormValidationTest\n\nCo-Authored-By: Mark Waite <mark.earl.waite@gmail.com>\n\n* Import matchers for `not`\n\nCo-authored-by: Mark Waite <mark.earl.waite@gmail.com>\n(cherry picked from commit be1e2bea7e647146920b1f6649687a6b1cca94ed)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fb1646b9fb711187faf4ebcfc4a739eee44df675",
        "buggy_code": "if (checkPrefix(_dir + File.pathSeparator + exe, helper))",
        "fixed_code": "if (checkPrefix(_dir + File.separator + exe, helper))",
        "patch": "@@ -65,7 +65,7 @@ static void iteratePath(String exe, Helper helper) {\n \n                     tokenizedPathBuilder.append(_dir.replace('\\\\', '/'));\n \n-                    if (checkPrefix(_dir + File.pathSeparator + exe, helper))\n+                    if (checkPrefix(_dir + File.separator + exe, helper))\n                         return;\n                 }\n                 tokenizedPathBuilder.append('.');"
    },
    {
        "commit_id": "3f9550468f49fc12cd3abcdc1e650ef982e2318a",
        "commit_message": "[JENKINS-61841] Fix testForceRemoveRecursive_TruncatesNumberOfExceptions",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3f9550468f49fc12cd3abcdc1e650ef982e2318a",
        "buggy_code": "assertThat(e.getMessage(), endsWith(\"(Discarded\" + (lockedFiles + 1 - maxExceptions) + \" additional exceptions)\"));",
        "fixed_code": "assertThat(e.getMessage(), endsWith(\"(Discarded \" + (lockedFiles + 1 - maxExceptions) + \" additional exceptions)\"));",
        "patch": "@@ -446,7 +446,7 @@ public void testForceRemoveRecursive_TruncatesNumberOfExceptions() throws IOExce\n             fail(\"Deletion should have failed\");\n         } catch (CompositeIOException e) {\n             assertThat(e.getSuppressed(), arrayWithSize(maxExceptions));\n-            assertThat(e.getMessage(), endsWith(\"(Discarded\" + (lockedFiles + 1 - maxExceptions) + \" additional exceptions)\"));\n+            assertThat(e.getMessage(), endsWith(\"(Discarded \" + (lockedFiles + 1 - maxExceptions) + \" additional exceptions)\"));\n         }\n         assertTrue(dir.exists());\n         assertThat(dir.listFiles().length, equalTo(lockedFiles));"
    },
    {
        "commit_id": "be1e2bea7e647146920b1f6649687a6b1cca94ed",
        "commit_message": "[JENKINS-61711] Fix validateExecutable to allow Git plugin global config correctly report git executable in PATH (#4653)\n\n* Fix git not in path for Git plugin global config\r\nGit Client Plugin global configuration allows addition of git implementations using GitTool\r\nThe field Path was not able to identify git executable. The fix involves changing prefix with\r\nFile.seperator instead of File.pathSeperator. This allows Jenkins to find the git exec at the\r\nalready existing path.\r\n\r\n* Tests added to validate JENKINS-61711 fix\r\n\r\n* Improve hamcrest comparison in FormValidationTest\r\n\r\nCo-Authored-By: Mark Waite <mark.earl.waite@gmail.com>\r\n\r\n* Import matchers for `not`\r\n\r\nCo-authored-by: Mark Waite <mark.earl.waite@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/be1e2bea7e647146920b1f6649687a6b1cca94ed",
        "buggy_code": "if (checkPrefix(_dir + File.pathSeparator + exe, helper))",
        "fixed_code": "if (checkPrefix(_dir + File.separator + exe, helper))",
        "patch": "@@ -65,7 +65,7 @@ static void iteratePath(String exe, Helper helper) {\n \n                     tokenizedPathBuilder.append(_dir.replace('\\\\', '/'));\n \n-                    if (checkPrefix(_dir + File.pathSeparator + exe, helper))\n+                    if (checkPrefix(_dir + File.separator + exe, helper))\n                         return;\n                 }\n                 tokenizedPathBuilder.append('.');"
    },
    {
        "commit_id": "f0e3a7df1da4280fb9a1e25d9fc8c8f3658b4783",
        "commit_message": "Fix compilation error after merge",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f0e3a7df1da4280fb9a1e25d9fc8c8f3658b4783",
        "buggy_code": "@Nonnull",
        "fixed_code": "@NonNull",
        "patch": "@@ -113,7 +113,7 @@ public class ArtifactArchiver extends Recorder implements SimpleBuildStep {\n     /**\n      * Indicate whether symbolic links should be followed or not\n      */\n-    @Nonnull\n+    @NonNull\n     private Boolean followSymlinks = true;\n \n     @DataBoundConstructor public ArtifactArchiver(String artifacts) {"
    },
    {
        "commit_id": "99f8b3f8669ee5c180b6c30226cf3850d6adad94",
        "commit_message": "[JENKINS-61467] Do not show disabled, implied permissions in er\u2026 (#4575)\n\n* [JENKINS-61467] Do not show disabled, implied permissions in erors\r\n\r\n* Maintain order of permissions, fix test assertion",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/99f8b3f8669ee5c180b6c30226cf3850d6adad94",
        "buggy_code": "assertThat(content, containsString(alice.getId() + \" is missing a permission\"));",
        "fixed_code": "assertThat(content, containsString(alice.getId() + \" is missing the Overall/Administer permission\"));",
        "patch": "@@ -74,7 +74,7 @@ public void authenticationManageException() throws Exception {\n         HtmlPage page = wc.goTo(\"manage\");\n \n         String content = page.getWebResponse().getContentAsString();\n-        assertThat(content, containsString(alice.getId() + \" is missing a permission\"));\n+        assertThat(content, containsString(alice.getId() + \" is missing the Overall/Administer permission\"));\n         assertThat(content, not(containsString(\"Caused by\")));\n     }\n "
    },
    {
        "commit_id": "b6678c2241fd6028b1f76c66875e5c82642881a9",
        "commit_message": "[JENKINS-61455] \"About Jenkins\" accessible with Jenkins.MANAGE (#4569)\n\n* [JENKINS-61455] _About Jenkins_ accesible with Jenkins.MANAGE\r\n\r\n_About Jenkins_ management link is now accessible to users with\r\nJenkins.MANAGE or Jenkins.SYSTEM_READ (as well as the usual\r\nJenkins.ADMINISTRATOR)\r\n\r\n* [JENKINS-61455] Test updated to cover this use case\r\n\r\n* [JENKINS-61455] Fix test\r\n\r\n* [JENKINS-61455] Fix permissions on linked pages\r\n\r\nCo-authored-by: Tim Jacomb <timjacomb1+github@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b6678c2241fd6028b1f76c66875e5c82642881a9",
        "buggy_code": "return Jenkins.SYSTEM_READ;",
        "fixed_code": "return Jenkins.READ;",
        "patch": "@@ -44,7 +44,7 @@ public URL getLicensesURL() {\n     @Nonnull\n     @Override\n     public Permission getRequiredPermission() {\n-        return Jenkins.SYSTEM_READ;\n+        return Jenkins.READ;\n     }\n \n     @Nonnull"
    },
    {
        "commit_id": "b6678c2241fd6028b1f76c66875e5c82642881a9",
        "commit_message": "[JENKINS-61455] \"About Jenkins\" accessible with Jenkins.MANAGE (#4569)\n\n* [JENKINS-61455] _About Jenkins_ accesible with Jenkins.MANAGE\r\n\r\n_About Jenkins_ management link is now accessible to users with\r\nJenkins.MANAGE or Jenkins.SYSTEM_READ (as well as the usual\r\nJenkins.ADMINISTRATOR)\r\n\r\n* [JENKINS-61455] Test updated to cover this use case\r\n\r\n* [JENKINS-61455] Fix test\r\n\r\n* [JENKINS-61455] Fix permissions on linked pages\r\n\r\nCo-authored-by: Tim Jacomb <timjacomb1+github@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b6678c2241fd6028b1f76c66875e5c82642881a9",
        "buggy_code": "Jenkins.get().checkPermission(Jenkins.SYSTEM_READ);",
        "fixed_code": "Jenkins.get().checkAnyPermission(Jenkins.SYSTEM_READ, Jenkins.MANAGE);",
        "patch": "@@ -440,7 +440,7 @@ public String getDisplayName() {\n     }\n \n     public Api getApi() {\n-        Jenkins.get().checkPermission(Jenkins.SYSTEM_READ);\n+        Jenkins.get().checkAnyPermission(Jenkins.SYSTEM_READ, Jenkins.MANAGE);\n         return new Api(this);\n     }\n "
    },
    {
        "commit_id": "8d5fca952eabc6f16a93816c2e1529fd3ae65775",
        "commit_message": "[JENKINS-61457] Fix typo in JenkinsManagePermissionTest\n\nCo-Authored-By: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8d5fca952eabc6f16a93816c2e1529fd3ae65775",
        "buggy_code": "assertThat(\"Can set UsageStadistics\", j.jenkins.isUsageStatisticsCollected(), not(previousValue));",
        "fixed_code": "assertThat(\"Can set UsageStatistics\", j.jenkins.isUsageStatisticsCollected(), not(previousValue));",
        "patch": "@@ -190,7 +190,7 @@ public void managePermissionCanChangeUsageStatistics() throws Exception {\n         form.getInputByName(\"_.usageStatisticsCollected\").setChecked(!previousValue);\n         j.submit(form);\n \n-        assertThat(\"Can set UsageStadistics\", j.jenkins.isUsageStatisticsCollected(), not(previousValue));\n+        assertThat(\"Can set UsageStatistics\", j.jenkins.isUsageStatisticsCollected(), not(previousValue));\n     }\n \n     private String getShell() {"
    },
    {
        "commit_id": "45cf21d2e65252eb0c86e0573b1a22eb78f90c5a",
        "commit_message": "Merge pull request #4510 from res0nance/double-checked\n\n[JENKINS-36720] Fix instances of double checked locking",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/45cf21d2e65252eb0c86e0573b1a22eb78f90c5a",
        "buggy_code": "private boolean fullyLoaded;",
        "fixed_code": "private volatile boolean fullyLoaded;",
        "patch": "@@ -91,7 +91,7 @@ public abstract class AbstractLazyLoadRunMap<R> extends AbstractMap<Integer,R> i\n     /**\n      * Used in {@link #all()} to quickly determine if we've already loaded everything.\n      */\n-    private boolean fullyLoaded;\n+    private volatile boolean fullyLoaded;\n \n     /**\n      * Currently visible index."
    },
    {
        "commit_id": "e904ec9c7422f34a35bf39e70fa5994237f84c99",
        "commit_message": "Fix instances of double checked locking",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e904ec9c7422f34a35bf39e70fa5994237f84c99",
        "buggy_code": "private boolean fullyLoaded;",
        "fixed_code": "private volatile boolean fullyLoaded;",
        "patch": "@@ -91,7 +91,7 @@ public abstract class AbstractLazyLoadRunMap<R> extends AbstractMap<Integer,R> i\n     /**\n      * Used in {@link #all()} to quickly determine if we've already loaded everything.\n      */\n-    private boolean fullyLoaded;\n+    private volatile boolean fullyLoaded;\n \n     /**\n      * Currently visible index."
    },
    {
        "commit_id": "b39ff9938a29b34bd6fb881722c978e0f886854d",
        "commit_message": "[JENKINS-61046] - Allow plugins to force an update of the UpdateCenter (#4488)\n\n* Allow plugins to force an update of the UpdateCenter\r\n\r\n* Add javadoc to updateDirectlyNow\r\n\r\n* [JENKINS-61046] introduce updateDirectlyNow() and updateDirectly()\r\n\r\n@oleg-nenashev notes that the public API should not expose the security\r\noption that is for testing.  Introduced updateDirectlyNow() as the new\r\nAPI and updateDirectly() to have a mirror and deprecated\r\nupdateDirectly(boolean) as a consequence.\r\n\r\n* fix javadoc grammar\r\n\r\nfixes the grammar of the UpdateSite#updateDirectlyNow javadoc\r\n\r\nCo-Authored-By: Raihaan Shouhell <raihaanhimself@gmail.com>\r\n\r\nCo-authored-by: Raihaan Shouhell <raihaanhimself@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b39ff9938a29b34bd6fb881722c978e0f886854d",
        "buggy_code": "FormValidation v = site.updateDirectlyNow(DownloadService.signatureCheck);",
        "fixed_code": "FormValidation v = site.updateDirectlyNow();",
        "patch": "@@ -1762,7 +1762,7 @@ public HttpResponse doUploadPlugin(StaplerRequest req) throws IOException, Servl\n \n     private FormValidation checkUpdatesServer() throws Exception {\n         for (UpdateSite site : Jenkins.get().getUpdateCenter().getSites()) {\n-            FormValidation v = site.updateDirectlyNow(DownloadService.signatureCheck);\n+            FormValidation v = site.updateDirectlyNow();\n             if (v.kind != FormValidation.Kind.OK) {\n                 // Stop with an error\n                 return v;"
    },
    {
        "commit_id": "0a56b5967eadf5e39c07a33df39b2b8238cb9c22",
        "commit_message": "[JENKINS-60678] Fix java checking on ComputerLauncher for AdoptOpenJDK 11 (#4434)\n\n* [JENKINS-60678] Fix java checking on ComputerLauncher for AdoptOpenJDK 11\n\n* [JENKINS-60678] Add more JDKs tests to check ComputerLauncher checks them correctly\n\n(cherry picked from commit 0dd7009a0abdc035bcba3a2180509a0dd5cbbf0e)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0a56b5967eadf5e39c07a33df39b2b8238cb9c22",
        "buggy_code": "Pattern p = Pattern.compile(\"(?i)(?:java|openjdk) version \\\"([0-9.]+).*\\\"\");",
        "fixed_code": "Pattern p = Pattern.compile(\"(?i)(?:java|openjdk) version \\\"([0-9.]+).*\\\".*\");",
        "patch": "@@ -180,7 +180,7 @@ protected static void checkJavaVersion(final PrintStream logger, String javaComm\n                                     final BufferedReader r)\n             throws IOException {\n         String line;\n-        Pattern p = Pattern.compile(\"(?i)(?:java|openjdk) version \\\"([0-9.]+).*\\\"\");\n+        Pattern p = Pattern.compile(\"(?i)(?:java|openjdk) version \\\"([0-9.]+).*\\\".*\");\n         while (null != (line = r.readLine())) {\n             Matcher m = p.matcher(line);\n             if (m.matches()) {"
    },
    {
        "commit_id": "efe2b876a95add37bbc5b10ca8c048125ef4f190",
        "commit_message": "[JENKINS-51856] Add new milestones (#4450)\n\n* [JENKINS-51856] Add new milestones\r\n\r\n* Apply suggestions from code review\r\n\r\n* [JENKINS-51856] Improve description of JOB_CONFIG_ADAPTED\r\n\r\n* [JENKINS-51856] Add test for milestones\r\n\r\n* [JENKINS-51856] Fix test error\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-Authored-By: Oleg Nenashev <o.v.nenashev@gmail.com>\r\n\r\n* Update core/src/main/java/hudson/init/impl/GroovyInitScript.java\r\n\r\nCo-Authored-By: Tim Jacomb <t.jacomb@kainos.com>\r\n\r\nCo-authored-by: Oleg Nenashev <o.v.nenashev@gmail.com>\r\nCo-authored-by: Tim Jacomb <t.jacomb@kainos.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/efe2b876a95add37bbc5b10ca8c048125ef4f190",
        "buggy_code": "@Initializer(after = InitMilestone.JOB_LOADED)",
        "fixed_code": "@Initializer(after = InitMilestone.JOB_CONFIG_ADAPTED)",
        "patch": "@@ -1036,7 +1036,7 @@ public static final class AllUsers {\n \n         private final ConcurrentMap<String, User> byName = new ConcurrentHashMap<>();\n \n-        @Initializer(after = InitMilestone.JOB_LOADED)\n+        @Initializer(after = InitMilestone.JOB_CONFIG_ADAPTED)\n         public static void scanAll() {\n             for (String userId : UserIdMapper.getInstance().getConvertedUserIds()) {\n                 User user = new User(userId, userId);"
    },
    {
        "commit_id": "efe2b876a95add37bbc5b10ca8c048125ef4f190",
        "commit_message": "[JENKINS-51856] Add new milestones (#4450)\n\n* [JENKINS-51856] Add new milestones\r\n\r\n* Apply suggestions from code review\r\n\r\n* [JENKINS-51856] Improve description of JOB_CONFIG_ADAPTED\r\n\r\n* [JENKINS-51856] Add test for milestones\r\n\r\n* [JENKINS-51856] Fix test error\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-Authored-By: Oleg Nenashev <o.v.nenashev@gmail.com>\r\n\r\n* Update core/src/main/java/hudson/init/impl/GroovyInitScript.java\r\n\r\nCo-Authored-By: Tim Jacomb <t.jacomb@kainos.com>\r\n\r\nCo-authored-by: Oleg Nenashev <o.v.nenashev@gmail.com>\r\nCo-authored-by: Tim Jacomb <t.jacomb@kainos.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/efe2b876a95add37bbc5b10ca8c048125ef4f190",
        "buggy_code": "@Initializer(after=InitMilestone.JOB_LOADED)",
        "fixed_code": "@Initializer(after=InitMilestone.JOB_CONFIG_ADAPTED)",
        "patch": "@@ -25,7 +25,7 @@ public long getUptime() {\n         return System.currentTimeMillis()-startTime;\n     }\n \n-    @Initializer(after=InitMilestone.JOB_LOADED)\n+    @Initializer(after=InitMilestone.JOB_CONFIG_ADAPTED)\n     public void init() {\n         startTime = System.currentTimeMillis();\n     }"
    },
    {
        "commit_id": "0dd7009a0abdc035bcba3a2180509a0dd5cbbf0e",
        "commit_message": "[JENKINS-60678] Fix java checking on ComputerLauncher for AdoptOpenJDK 11 (#4434)\n\n* [JENKINS-60678] Fix java checking on ComputerLauncher for AdoptOpenJDK 11\r\n\r\n* [JENKINS-60678] Add more JDKs tests to check ComputerLauncher checks them correctly",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0dd7009a0abdc035bcba3a2180509a0dd5cbbf0e",
        "buggy_code": "Pattern p = Pattern.compile(\"(?i)(?:java|openjdk) version \\\"([0-9.]+).*\\\"\");",
        "fixed_code": "Pattern p = Pattern.compile(\"(?i)(?:java|openjdk) version \\\"([0-9.]+).*\\\".*\");",
        "patch": "@@ -180,7 +180,7 @@ protected static void checkJavaVersion(final PrintStream logger, String javaComm\n                                     final BufferedReader r)\n             throws IOException {\n         String line;\n-        Pattern p = Pattern.compile(\"(?i)(?:java|openjdk) version \\\"([0-9.]+).*\\\"\");\n+        Pattern p = Pattern.compile(\"(?i)(?:java|openjdk) version \\\"([0-9.]+).*\\\".*\");\n         while (null != (line = r.readLine())) {\n             Matcher m = p.matcher(line);\n             if (m.matches()) {"
    },
    {
        "commit_id": "e29e3635c0769fc1839fe526faca55593c6c0350",
        "commit_message": "Merge pull request #4357 from bulanovk/JENKINS-60167\n\n[JENKINS-60167] - Fix AtomicFileWriter performance issue on CephFS in case of Empty File creation\n\n(cherry picked from commit cce9587639fb4747a8a3fc3a56ce44a2ba3c2ca5)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e29e3635c0769fc1839fe526faca55593c6c0350",
        "buggy_code": "core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE);",
        "fixed_code": "core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE, StandardOpenOption.CREATE);",
        "patch": "@@ -149,7 +149,7 @@ public AtomicFileWriter(@Nonnull Path destinationPath, @Nonnull Charset charset,\n             integrityOnClose = false;\n         }\n \n-        core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE);\n+        core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE, StandardOpenOption.CREATE);\n     }\n \n     @Override"
    },
    {
        "commit_id": "bef9ded5431cef64ae0572709a2e657b10a26913",
        "commit_message": "[JENKINS-36720] - Fix Spotbugs issues (SE_COMPARATOR_SHOULD_BE_SERIALIZABLE, ES_COMPARING_STRINGS_WITH_EQ) (#4379)\n\n* fixed Spotbugs issues (SE_COMPARATOR_SHOULD_BE_SERIALIZABLE, ES_COMPARING_STRINGS_WITH_EQ)\r\n\r\n* replaced wildcard import with specific imports\r\n\r\n* added missing import\r\n\r\n* fixed spotbugs issues\r\n\r\n* removed accidently added import",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bef9ded5431cef64ae0572709a2e657b10a26913",
        "buggy_code": "if (tz.getID() != tzp.timeZoneName) {",
        "fixed_code": "if (!tz.getID().equals(tzp.timeZoneName)) {",
        "patch": "@@ -105,7 +105,7 @@ public static String forCurrentUser() {\n         }\n \n         TimeZone tz = TimeZone.getTimeZone(tzp.timeZoneName);\n-        if (tz.getID() != tzp.timeZoneName) {\n+        if (!tz.getID().equals(tzp.timeZoneName)) {\n             //TimeZone.getTimeZone returns GMT on invalid time zone so\n             //warn the user if the time zone returned is different from\n             //the one they specified."
    },
    {
        "commit_id": "c059ccb0d834061c302ad642719fcb0764c98a07",
        "commit_message": "Merge pull request #4418 from darxriggs/fix-typos\n\nFix typos & spelling in Javadoc and WebUI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c059ccb0d834061c302ad642719fcb0764c98a07",
        "buggy_code": "LOGGER.warning(\"Father of \"+ t+\" and its getDescriptor() points to two different instances. Probably malplaced @Extension. See http://hudson.361315.n4.nabble.com/Help-Hint-needed-Post-build-action-doesn-t-stay-activated-td2308833.html\");",
        "fixed_code": "LOGGER.warning(\"Father of \"+ t+\" and its getDescriptor() points to two different instances. Probably misplaced @Extension. See http://hudson.361315.n4.nabble.com/Help-Hint-needed-Post-build-action-doesn-t-stay-activated-td2308833.html\");",
        "patch": "@@ -691,7 +691,7 @@ public Object onConvert(Type targetType, Class targetTypeErasure, Object jsonSou\n     private T verifyNewInstance(T t) {\n         if (t!=null && t.getDescriptor()!=this) {\n             // TODO: should this be a fatal error?\n-            LOGGER.warning(\"Father of \"+ t+\" and its getDescriptor() points to two different instances. Probably malplaced @Extension. See http://hudson.361315.n4.nabble.com/Help-Hint-needed-Post-build-action-doesn-t-stay-activated-td2308833.html\");\n+            LOGGER.warning(\"Father of \"+ t+\" and its getDescriptor() points to two different instances. Probably misplaced @Extension. See http://hudson.361315.n4.nabble.com/Help-Hint-needed-Post-build-action-doesn-t-stay-activated-td2308833.html\");\n         }\n         return t;\n     }"
    },
    {
        "commit_id": "c059ccb0d834061c302ad642719fcb0764c98a07",
        "commit_message": "Merge pull request #4418 from darxriggs/fix-typos\n\nFix typos & spelling in Javadoc and WebUI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c059ccb0d834061c302ad642719fcb0764c98a07",
        "buggy_code": "\"Cannot determing if the agent is a Unix one, the System status request has not completed yet. \" +",
        "fixed_code": "\"Cannot determine if the agent is a Unix one, the System status request has not completed yet. \" +",
        "patch": "@@ -512,7 +512,7 @@ public Launcher createLauncher(TaskListener listener) {\n             if (isUnix == null) {\n                 // isUnix is always set when the channel is not null, so it should never happen\n                 reportLauncherCreateError(\"The agent has not been fully initialized yet\",\n-                                         \"Cannot determing if the agent is a Unix one, the System status request has not completed yet. \" +\n+                                         \"Cannot determine if the agent is a Unix one, the System status request has not completed yet. \" +\n                                          \"It is an invalid channel state, please report a bug to Jenkins if you see it.\", \n                                          listener);\n                 return new Launcher.DummyLauncher(listener);"
    },
    {
        "commit_id": "c059ccb0d834061c302ad642719fcb0764c98a07",
        "commit_message": "Merge pull request #4418 from darxriggs/fix-typos\n\nFix typos & spelling in Javadoc and WebUI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c059ccb0d834061c302ad642719fcb0764c98a07",
        "buggy_code": "and both needs to use the same key (this is a reflection of a poor design in AcgeiSecurity, if you ask me)",
        "fixed_code": "and both needs to use the same key (this is a reflection of a poor design in AcegiSecurity, if you ask me)",
        "patch": "@@ -667,7 +667,7 @@ private static RememberMeServices createRememberMeService(UserDetailsService uds\n             rms.setUserDetailsService(uds);\n             /*\n                 TokenBasedRememberMeServices needs to be used in conjunction with RememberMeAuthenticationProvider,\n-                and both needs to use the same key (this is a reflection of a poor design in AcgeiSecurity, if you ask me)\n+                and both needs to use the same key (this is a reflection of a poor design in AcegiSecurity, if you ask me)\n                 and various security plugins have its own groovy script that configures them.\n \n                 So if we change this, it creates a painful situation for those plugins by forcing them to choose"
    },
    {
        "commit_id": "c059ccb0d834061c302ad642719fcb0764c98a07",
        "commit_message": "Merge pull request #4418 from darxriggs/fix-typos\n\nFix typos & spelling in Javadoc and WebUI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c059ccb0d834061c302ad642719fcb0764c98a07",
        "buggy_code": "LOGGER.log(FINE, \"Shuting down Jenkins load thread pool\");",
        "fixed_code": "LOGGER.log(FINE, \"Shutting down Jenkins load thread pool\");",
        "patch": "@@ -3693,7 +3693,7 @@ private void _cleanUpPersistQueue(List<Throwable> errors) {\n     }\n \n     private void _cleanUpShutdownThreadPoolForLoad(List<Throwable> errors) {\n-        LOGGER.log(FINE, \"Shuting down Jenkins load thread pool\");\n+        LOGGER.log(FINE, \"Shutting down Jenkins load thread pool\");\n         try {\n             threadPoolForLoad.shutdown();\n         } catch (SecurityException e) {"
    },
    {
        "commit_id": "c059ccb0d834061c302ad642719fcb0764c98a07",
        "commit_message": "Merge pull request #4418 from darxriggs/fix-typos\n\nFix typos & spelling in Javadoc and WebUI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c059ccb0d834061c302ad642719fcb0764c98a07",
        "buggy_code": "public void testGetRecurencePeriod() throws IOException {",
        "fixed_code": "public void testGetRecurrencePeriod() throws IOException {",
        "patch": "@@ -65,7 +65,7 @@ public void testFingerprintFileIsEmpty() throws IOException {\n     }\n \n     @Test\n-    public void testGetRecurencePeriod() throws IOException {\n+    public void testGetRecurrencePeriod() throws IOException {\n         FingerprintCleanupThread cleanupThread = new TestFingerprintCleanupThread(new TestFingerprint());\n         assertEquals(\"Wrong recurrence period.\", PeriodicWork.DAY, cleanupThread.getRecurrencePeriod());\n     }"
    },
    {
        "commit_id": "c059ccb0d834061c302ad642719fcb0764c98a07",
        "commit_message": "Merge pull request #4418 from darxriggs/fix-typos\n\nFix typos & spelling in Javadoc and WebUI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c059ccb0d834061c302ad642719fcb0764c98a07",
        "buggy_code": "@Test public void consoleShouldFailWhenLastBuildDoesNotdExist() throws Exception {",
        "fixed_code": "@Test public void consoleShouldFailWhenLastBuildDoesNotExist() throws Exception {",
        "patch": "@@ -106,7 +106,7 @@ public class ConsoleCommandTest {\n         assertThat(result.stderr(), containsString(\"ERROR: No such job 'never_created'\"));\n     }\n \n-    @Test public void consoleShouldFailWhenLastBuildDoesNotdExist() throws Exception {\n+    @Test public void consoleShouldFailWhenLastBuildDoesNotExist() throws Exception {\n \n         j.createFreeStyleProject(\"aProject\");\n "
    },
    {
        "commit_id": "c059ccb0d834061c302ad642719fcb0764c98a07",
        "commit_message": "Merge pull request #4418 from darxriggs/fix-typos\n\nFix typos & spelling in Javadoc and WebUI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c059ccb0d834061c302ad642719fcb0764c98a07",
        "buggy_code": "assertThat(\"Should fail with access denined\", fex.getStatusCode(), is(403));",
        "fixed_code": "assertThat(\"Should fail with access denied\", fex.getStatusCode(), is(403));",
        "patch": "@@ -65,7 +65,7 @@ public void triggerJobsWithoutTokenShouldFail() throws Exception {\n             fail(\"should not reach here as anonymous does not have Item.BUILD and token is not set\");\n         }\n         catch (FailingHttpStatusCodeException fex) {\n-            assertThat(\"Should fail with access denined\", fex.getStatusCode(), is(403));\n+            assertThat(\"Should fail with access denied\", fex.getStatusCode(), is(403));\n         }\n     }\n "
    },
    {
        "commit_id": "c059ccb0d834061c302ad642719fcb0764c98a07",
        "commit_message": "Merge pull request #4418 from darxriggs/fix-typos\n\nFix typos & spelling in Javadoc and WebUI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c059ccb0d834061c302ad642719fcb0764c98a07",
        "buggy_code": "assertThat(log, containsString(\"Disconnected by Johnny : Taking offline to break your buil\"));",
        "fixed_code": "assertThat(log, containsString(\"Disconnected by Johnny : Taking offline to break your build\"));",
        "patch": "@@ -116,7 +116,7 @@ public void disconnectCause() throws Exception {\n         assertThat(log, containsString(\"Finished: FAILURE\"));\n         assertThat(log, containsString(\"Build step 'BlockingBuilder' marked build as failure\"));\n         assertThat(log, containsString(\"Agent went offline during the build\"));\n-        assertThat(log, containsString(\"Disconnected by Johnny : Taking offline to break your buil\"));\n+        assertThat(log, containsString(\"Disconnected by Johnny : Taking offline to break your build\"));\n     }\n \n     @Issue(\"SECURITY-611\")"
    },
    {
        "commit_id": "c059ccb0d834061c302ad642719fcb0764c98a07",
        "commit_message": "Merge pull request #4418 from darxriggs/fix-typos\n\nFix typos & spelling in Javadoc and WebUI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c059ccb0d834061c302ad642719fcb0764c98a07",
        "buggy_code": "public void shouldPefromCorrectConversionForAllNames() {",
        "fixed_code": "public void shouldPerformCorrectConversionForAllNames() {",
        "patch": "@@ -49,7 +49,7 @@ public class InstallStateTest {\n     public JenkinsRule j = new JenkinsRule();\n     \n     @Test\n-    public void shouldPefromCorrectConversionForAllNames() {\n+    public void shouldPerformCorrectConversionForAllNames() {\n         ExtensionList<InstallState> states = InstallState.all();\n         for (InstallState state : states) {\n             InstallState afterRoundtrip = forName(state.name());"
    },
    {
        "commit_id": "f22d34675b6b2ab77ad8124346585c681828b130",
        "commit_message": "Fix typos & spelling",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f22d34675b6b2ab77ad8124346585c681828b130",
        "buggy_code": "LOGGER.warning(\"Father of \"+ t+\" and its getDescriptor() points to two different instances. Probably malplaced @Extension. See http://hudson.361315.n4.nabble.com/Help-Hint-needed-Post-build-action-doesn-t-stay-activated-td2308833.html\");",
        "fixed_code": "LOGGER.warning(\"Father of \"+ t+\" and its getDescriptor() points to two different instances. Probably misplaced @Extension. See http://hudson.361315.n4.nabble.com/Help-Hint-needed-Post-build-action-doesn-t-stay-activated-td2308833.html\");",
        "patch": "@@ -691,7 +691,7 @@ public Object onConvert(Type targetType, Class targetTypeErasure, Object jsonSou\n     private T verifyNewInstance(T t) {\n         if (t!=null && t.getDescriptor()!=this) {\n             // TODO: should this be a fatal error?\n-            LOGGER.warning(\"Father of \"+ t+\" and its getDescriptor() points to two different instances. Probably malplaced @Extension. See http://hudson.361315.n4.nabble.com/Help-Hint-needed-Post-build-action-doesn-t-stay-activated-td2308833.html\");\n+            LOGGER.warning(\"Father of \"+ t+\" and its getDescriptor() points to two different instances. Probably misplaced @Extension. See http://hudson.361315.n4.nabble.com/Help-Hint-needed-Post-build-action-doesn-t-stay-activated-td2308833.html\");\n         }\n         return t;\n     }"
    },
    {
        "commit_id": "f22d34675b6b2ab77ad8124346585c681828b130",
        "commit_message": "Fix typos & spelling",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f22d34675b6b2ab77ad8124346585c681828b130",
        "buggy_code": "\"Cannot determing if the agent is a Unix one, the System status request has not completed yet. \" +",
        "fixed_code": "\"Cannot determine if the agent is a Unix one, the System status request has not completed yet. \" +",
        "patch": "@@ -512,7 +512,7 @@ public Launcher createLauncher(TaskListener listener) {\n             if (isUnix == null) {\n                 // isUnix is always set when the channel is not null, so it should never happen\n                 reportLauncherCreateError(\"The agent has not been fully initialized yet\",\n-                                         \"Cannot determing if the agent is a Unix one, the System status request has not completed yet. \" +\n+                                         \"Cannot determine if the agent is a Unix one, the System status request has not completed yet. \" +\n                                          \"It is an invalid channel state, please report a bug to Jenkins if you see it.\", \n                                          listener);\n                 return new Launcher.DummyLauncher(listener);"
    },
    {
        "commit_id": "f22d34675b6b2ab77ad8124346585c681828b130",
        "commit_message": "Fix typos & spelling",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f22d34675b6b2ab77ad8124346585c681828b130",
        "buggy_code": "and both needs to use the same key (this is a reflection of a poor design in AcgeiSecurity, if you ask me)",
        "fixed_code": "and both needs to use the same key (this is a reflection of a poor design in AcegiSecurity, if you ask me)",
        "patch": "@@ -659,7 +659,7 @@ private static RememberMeServices createRememberMeService(UserDetailsService uds\n             rms.setUserDetailsService(uds);\n             /*\n                 TokenBasedRememberMeServices needs to be used in conjunction with RememberMeAuthenticationProvider,\n-                and both needs to use the same key (this is a reflection of a poor design in AcgeiSecurity, if you ask me)\n+                and both needs to use the same key (this is a reflection of a poor design in AcegiSecurity, if you ask me)\n                 and various security plugins have its own groovy script that configures them.\n \n                 So if we change this, it creates a painful situation for those plugins by forcing them to choose"
    },
    {
        "commit_id": "f22d34675b6b2ab77ad8124346585c681828b130",
        "commit_message": "Fix typos & spelling",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f22d34675b6b2ab77ad8124346585c681828b130",
        "buggy_code": "LOGGER.log(FINE, \"Shuting down Jenkins load thread pool\");",
        "fixed_code": "LOGGER.log(FINE, \"Shutting down Jenkins load thread pool\");",
        "patch": "@@ -3693,7 +3693,7 @@ private void _cleanUpPersistQueue(List<Throwable> errors) {\n     }\n \n     private void _cleanUpShutdownThreadPoolForLoad(List<Throwable> errors) {\n-        LOGGER.log(FINE, \"Shuting down Jenkins load thread pool\");\n+        LOGGER.log(FINE, \"Shutting down Jenkins load thread pool\");\n         try {\n             threadPoolForLoad.shutdown();\n         } catch (SecurityException e) {"
    },
    {
        "commit_id": "f22d34675b6b2ab77ad8124346585c681828b130",
        "commit_message": "Fix typos & spelling",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f22d34675b6b2ab77ad8124346585c681828b130",
        "buggy_code": "public void testGetRecurencePeriod() throws IOException {",
        "fixed_code": "public void testGetRecurrencePeriod() throws IOException {",
        "patch": "@@ -65,7 +65,7 @@ public void testFingerprintFileIsEmpty() throws IOException {\n     }\n \n     @Test\n-    public void testGetRecurencePeriod() throws IOException {\n+    public void testGetRecurrencePeriod() throws IOException {\n         FingerprintCleanupThread cleanupThread = new TestFingerprintCleanupThread(new TestFingerprint());\n         assertEquals(\"Wrong recurrence period.\", PeriodicWork.DAY, cleanupThread.getRecurrencePeriod());\n     }"
    },
    {
        "commit_id": "f22d34675b6b2ab77ad8124346585c681828b130",
        "commit_message": "Fix typos & spelling",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f22d34675b6b2ab77ad8124346585c681828b130",
        "buggy_code": "@Test public void consoleShouldFailWhenLastBuildDoesNotdExist() throws Exception {",
        "fixed_code": "@Test public void consoleShouldFailWhenLastBuildDoesNotExist() throws Exception {",
        "patch": "@@ -106,7 +106,7 @@ public class ConsoleCommandTest {\n         assertThat(result.stderr(), containsString(\"ERROR: No such job 'never_created'\"));\n     }\n \n-    @Test public void consoleShouldFailWhenLastBuildDoesNotdExist() throws Exception {\n+    @Test public void consoleShouldFailWhenLastBuildDoesNotExist() throws Exception {\n \n         j.createFreeStyleProject(\"aProject\");\n "
    },
    {
        "commit_id": "f22d34675b6b2ab77ad8124346585c681828b130",
        "commit_message": "Fix typos & spelling",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f22d34675b6b2ab77ad8124346585c681828b130",
        "buggy_code": "assertThat(\"Should fail with access denined\", fex.getStatusCode(), is(403));",
        "fixed_code": "assertThat(\"Should fail with access denied\", fex.getStatusCode(), is(403));",
        "patch": "@@ -65,7 +65,7 @@ public void triggerJobsWithoutTokenShouldFail() throws Exception {\n             fail(\"should not reach here as anonymous does not have Item.BUILD and token is not set\");\n         }\n         catch (FailingHttpStatusCodeException fex) {\n-            assertThat(\"Should fail with access denined\", fex.getStatusCode(), is(403));\n+            assertThat(\"Should fail with access denied\", fex.getStatusCode(), is(403));\n         }\n     }\n "
    },
    {
        "commit_id": "f22d34675b6b2ab77ad8124346585c681828b130",
        "commit_message": "Fix typos & spelling",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f22d34675b6b2ab77ad8124346585c681828b130",
        "buggy_code": "assertThat(log, containsString(\"Disconnected by Johnny : Taking offline to break your buil\"));",
        "fixed_code": "assertThat(log, containsString(\"Disconnected by Johnny : Taking offline to break your build\"));",
        "patch": "@@ -116,7 +116,7 @@ public void disconnectCause() throws Exception {\n         assertThat(log, containsString(\"Finished: FAILURE\"));\n         assertThat(log, containsString(\"Build step 'BlockingBuilder' marked build as failure\"));\n         assertThat(log, containsString(\"Agent went offline during the build\"));\n-        assertThat(log, containsString(\"Disconnected by Johnny : Taking offline to break your buil\"));\n+        assertThat(log, containsString(\"Disconnected by Johnny : Taking offline to break your build\"));\n     }\n \n     @Issue(\"SECURITY-611\")"
    },
    {
        "commit_id": "f22d34675b6b2ab77ad8124346585c681828b130",
        "commit_message": "Fix typos & spelling",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f22d34675b6b2ab77ad8124346585c681828b130",
        "buggy_code": "public void shouldPefromCorrectConversionForAllNames() {",
        "fixed_code": "public void shouldPerformCorrectConversionForAllNames() {",
        "patch": "@@ -49,7 +49,7 @@ public class InstallStateTest {\n     public JenkinsRule j = new JenkinsRule();\n     \n     @Test\n-    public void shouldPefromCorrectConversionForAllNames() {\n+    public void shouldPerformCorrectConversionForAllNames() {\n         ExtensionList<InstallState> states = InstallState.all();\n         for (InstallState state : states) {\n             InstallState afterRoundtrip = forName(state.name());"
    },
    {
        "commit_id": "0e6bb918648bdc1e2033bed062c2e24428f7c5d9",
        "commit_message": "Return error when invalid string is passed as a Run status CLI argument (#4212)\n\n* removed redundnat null checks of nonnull values\r\n\r\n* integrated suggestions\r\n\r\n* removed local jenkins variable as suggested\r\n\r\n* replaced null check with check for error object",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0e6bb918648bdc1e2033bed062c2e24428f7c5d9",
        "buggy_code": "Jenkins jenkins = Jenkins.get();",
        "fixed_code": "Jenkins jenkins = Jenkins.getInstanceOrNull();",
        "patch": "@@ -380,7 +380,7 @@ private static ProxyConfiguration get() {\n     private static ProxyConfiguration _get() {\n         JenkinsJVM.checkJenkinsJVM();\n         // this code could be called between the JVM flag being set and theInstance initialized\n-        Jenkins jenkins = Jenkins.get();\n+        Jenkins jenkins = Jenkins.getInstanceOrNull();\n         return jenkins == null ? null : jenkins.proxy;\n     }\n "
    },
    {
        "commit_id": "8b893a1cbe4ec03e52a3e43048a852ad622f3d16",
        "commit_message": "[JENKINS-36720]: Fixed some Spotbugs issues (#4180)\n\n* [JENKINS-36720]: Fixed Spotbugs issues WMI_WRONG_MAP_ITERATOR and OS_OPEN_STREAM in core\r\n\r\n* merged try with resources with try finally\r\n\r\n* reverted auto format from IDE\r\n\r\n* reverted auto format from IDE\r\n\r\n* use Util.fileToPath() as suggested to remove catch block\r\n\r\n* merged try statements\r\n\r\n* merged try statements\r\n\r\n* reverted some whitespace fixes\r\n\r\n* reverted another whitespace fix\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-Authored-By: Oleg Nenashev <o.v.nenashev@gmail.com>\r\n\r\n* reverted change\r\n\r\n* reverted change\r\n\r\n* reverted change\r\n\r\nCo-authored-by: Oleg Nenashev <o.v.nenashev@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8b893a1cbe4ec03e52a3e43048a852ad622f3d16",
        "buggy_code": "log.printf(\"Completed re-keying %d files on %s\\n\",count,new Date());",
        "fixed_code": "log.printf(\"Completed re-keying %d files on %s%n\",count,new Date());",
        "patch": "@@ -142,7 +142,7 @@ protected void fix(TaskListener listener) throws Exception {\n             PrintStream log = listener.getLogger();\n             log.println(\"Started re-keying \" + new Date());\n             int count = rewriter.rewriteRecursive(Jenkins.get().getRootDir(), listener);\n-            log.printf(\"Completed re-keying %d files on %s\\n\",count,new Date());\n+            log.printf(\"Completed re-keying %d files on %s%n\",count,new Date());\n             new RekeySecretAdminMonitor().done.on();\n             LOGGER.info(\"Secret re-keying completed\");\n         } catch (Exception e) {"
    },
    {
        "commit_id": "9368197d256d2265512b16b360bd047735e3ee27",
        "commit_message": "Replaced integer with AtomicInteger to fix spotbugs issue (#4337)\n\n* replaced integer with AtomicInteger to fix spotbugs issue\r\n\r\n* added @Restricted to prevent further usage\r\n\r\n* replaced volatile with final because of AtomicInteger usage\r\n\r\n* implemented a getter and an increment method\r\n\r\n* fixed typeo in javadoc",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9368197d256d2265512b16b360bd047735e3ee27",
        "buggy_code": "int g = d.generation;",
        "fixed_code": "int g = d.getGeneration();",
        "patch": "@@ -60,7 +60,7 @@ public RepositoryBrowser get() {\n             cacheGeneration = -1;\n             return cache;\n         }\n-        int g = d.generation;\n+        int g = d.getGeneration();\n         if(g!=cacheGeneration) {\n             cacheGeneration = g;\n             cache = infer();"
    },
    {
        "commit_id": "9368197d256d2265512b16b360bd047735e3ee27",
        "commit_message": "Replaced integer with AtomicInteger to fix spotbugs issue (#4337)\n\n* replaced integer with AtomicInteger to fix spotbugs issue\r\n\r\n* added @Restricted to prevent further usage\r\n\r\n* replaced volatile with final because of AtomicInteger usage\r\n\r\n* implemented a getter and an increment method\r\n\r\n* fixed typeo in javadoc",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9368197d256d2265512b16b360bd047735e3ee27",
        "buggy_code": "scm.getDescriptor().generation++;",
        "fixed_code": "scm.getDescriptor().incrementGeneration();",
        "patch": "@@ -60,7 +60,7 @@ public static SCM parseSCM(StaplerRequest req, AbstractProject target) throws Fo\n         if (scm == null) {\n             scm = new NullSCM(); // JENKINS-36043 workaround for AbstractMultiBranchProject.submit\n         }\n-        scm.getDescriptor().generation++;\n+        scm.getDescriptor().incrementGeneration();\n         return scm;\n     }\n "
    },
    {
        "commit_id": "cce9587639fb4747a8a3fc3a56ce44a2ba3c2ca5",
        "commit_message": "Merge pull request #4357 from bulanovk/JENKINS-60167\n\n[JENKINS-60167] - Fix AtomicFileWriter performance issue on CephFS in case of Empty File creation",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cce9587639fb4747a8a3fc3a56ce44a2ba3c2ca5",
        "buggy_code": "core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE);",
        "fixed_code": "core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE, StandardOpenOption.CREATE);",
        "patch": "@@ -149,7 +149,7 @@ public AtomicFileWriter(@Nonnull Path destinationPath, @Nonnull Charset charset,\n             integrityOnClose = false;\n         }\n \n-        core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE);\n+        core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE, StandardOpenOption.CREATE);\n     }\n \n     @Override"
    },
    {
        "commit_id": "7694555886ac4a53a351f5a0d12443dd6443edd0",
        "commit_message": "Fix JENKINS-60167\nAdd StandardOpenOption.CREATE flag to create FileChannelWriter to avoid full fs flush and 5sec log operation on creating empty file with CephFS as a storage",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7694555886ac4a53a351f5a0d12443dd6443edd0",
        "buggy_code": "core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE);",
        "fixed_code": "core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE, StandardOpenOption.CREATE);",
        "patch": "@@ -149,7 +149,7 @@ public AtomicFileWriter(@Nonnull Path destinationPath, @Nonnull Charset charset,\n             integrityOnClose = false;\n         }\n \n-        core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE);\n+        core = new FileChannelWriter(tmpPath, charset, integrityOnFlush, integrityOnClose, StandardOpenOption.WRITE, StandardOpenOption.CREATE);\n     }\n \n     @Override"
    },
    {
        "commit_id": "3c125400be1e78bcfbbdfac35ed365423dd75c05",
        "commit_message": "[JENKINS-36720] - Fix SpotBugs warnings for \"known as null\" values (#4248)\n\n* fixed spotbugs known as null values\r\n\r\n* replaced annotation and created more useful log messages",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c125400be1e78bcfbbdfac35ed365423dd75c05",
        "buggy_code": "return FormValidation.warning(\"The update site \" + site + \" does not look like an update center\");",
        "fixed_code": "return FormValidation.warning(\"The update site \" + updatesite.getId() + \" does not look like an update center\");",
        "patch": "@@ -401,7 +401,7 @@ public FormValidation updateNow() throws IOException {\n             for (UpdateSite updatesite : Jenkins.getActiveInstance().getUpdateCenter().getSiteList()) {\n                 String site = updatesite.getMetadataUrlForDownloadable(url);\n                 if (site == null) {\n-                    return FormValidation.warning(\"The update site \" + site + \" does not look like an update center\");\n+                    return FormValidation.warning(\"The update site \" + updatesite.getId() + \" does not look like an update center\");\n                 }\n                 String jsonString;\n                 try {"
    },
    {
        "commit_id": "e2658e9660481006b8d02d6ce51247fe52d0b5ee",
        "commit_message": "[JENKINS-59580] Fix WindowsOSProcess.getEnvironmentVariables returning null\n\nOSProcess.getEnvironmentVariables javadoc clearly states that method will return empty map if obtaining of environment variables failed.\n\n(cherry picked from commit bc52cae16a4fa8b5c76fbd1c08429592751a6cd1)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e2658e9660481006b8d02d6ce51247fe52d0b5ee",
        "buggy_code": "return null;",
        "fixed_code": "return env;",
        "patch": "@@ -581,7 +581,7 @@ public synchronized EnvVars getEnvironmentVariables() {\n                     LOGGER.log(FINEST, \"Failed to get the environment variables of process with pid=\" + p.getPid(), e);\n                 }\n             }\n-            return null;\n+            return env;\n         }\n         \n         private synchronized EnvVars getEnvironmentVariables2() throws WindowsOSProcessException {"
    },
    {
        "commit_id": "58ac3a0f9240a97758b7397680759b01f520f7d1",
        "commit_message": "Merge pull request #4231 from slonopotamus/windows-null-environment-variables\n\n[JENKINS-59580] Fix WindowsOSProcess.getEnvironmentVariables returning null",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/58ac3a0f9240a97758b7397680759b01f520f7d1",
        "buggy_code": "return null;",
        "fixed_code": "return env;",
        "patch": "@@ -585,7 +585,7 @@ public synchronized EnvVars getEnvironmentVariables() {\n                     LOGGER.log(FINEST, \"Failed to get the environment variables of process with pid=\" + p.getPid(), e);\n                 }\n             }\n-            return null;\n+            return env;\n         }\n         \n         private synchronized EnvVars getEnvironmentVariables2() throws WindowsOSProcessException {"
    },
    {
        "commit_id": "bc52cae16a4fa8b5c76fbd1c08429592751a6cd1",
        "commit_message": "[JENKINS-59580] Fix WindowsOSProcess.getEnvironmentVariables returning null\n\nOSProcess.getEnvironmentVariables javadoc clearly states that method will return empty map if obtaining of environment variables failed.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bc52cae16a4fa8b5c76fbd1c08429592751a6cd1",
        "buggy_code": "return null;",
        "fixed_code": "return env;",
        "patch": "@@ -581,7 +581,7 @@ public synchronized EnvVars getEnvironmentVariables() {\n                     LOGGER.log(FINEST, \"Failed to get the environment variables of process with pid=\" + p.getPid(), e);\n                 }\n             }\n-            return null;\n+            return env;\n         }\n         \n         private synchronized EnvVars getEnvironmentVariables2() throws WindowsOSProcessException {"
    },
    {
        "commit_id": "7aa09f4674f41b8514da2acee531a1d01d1d3071",
        "commit_message": "[JENKINS-36720] - Spotbugs dodgy code (#4200)\n\n* SA_LOCAL_DOUBLE_ASSIGNMENT: Fix double assignment\r\n\r\n* BC_VACUOUS_INSTANCEOF: fixed Spotbugs issue\r\n\r\n* DLS_DEAD_LOCAL_STORE: Removed unused assignments",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7aa09f4674f41b8514da2acee531a1d01d1d3071",
        "buggy_code": "View src = src = owner.getView(from);",
        "fixed_code": "View src = owner.getView(from);",
        "patch": "@@ -1355,7 +1355,7 @@ public static View create(StaplerRequest req, StaplerResponse rsp, ViewGroup own\n     private static View copy(StaplerRequest req, ViewGroup owner, String name) throws IOException {\n         View v;\n         String from = req.getParameter(\"from\");\n-        View src = src = owner.getView(from);\n+        View src = owner.getView(from);\n \n         if(src==null) {\n             if(Util.fixEmpty(from)==null)"
    },
    {
        "commit_id": "7aa09f4674f41b8514da2acee531a1d01d1d3071",
        "commit_message": "[JENKINS-36720] - Spotbugs dodgy code (#4200)\n\n* SA_LOCAL_DOUBLE_ASSIGNMENT: Fix double assignment\r\n\r\n* BC_VACUOUS_INSTANCEOF: fixed Spotbugs issue\r\n\r\n* DLS_DEAD_LOCAL_STORE: Removed unused assignments",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7aa09f4674f41b8514da2acee531a1d01d1d3071",
        "buggy_code": "if (build instanceof AbstractBuild && Util.isOverridden(BuildStepCompatibilityLayer.class, this.getClass(),",
        "fixed_code": "if (build != null && Util.isOverridden(BuildStepCompatibilityLayer.class, this.getClass(),",
        "patch": "@@ -121,7 +121,7 @@ public boolean prebuild(Build<?,?> build, BuildListener listener) {\n     @Deprecated\n     public boolean perform(Build<?, ?> build, Launcher launcher, BuildListener listener)\n             throws InterruptedException, IOException {       \n-        if (build instanceof AbstractBuild && Util.isOverridden(BuildStepCompatibilityLayer.class, this.getClass(),\n+        if (build != null && Util.isOverridden(BuildStepCompatibilityLayer.class, this.getClass(),\n                 \"perform\", AbstractBuild.class, Launcher.class, BuildListener.class)) {\n             return perform((AbstractBuild<?, ?>) build, launcher, listener);\n         }"
    },
    {
        "commit_id": "e99ed7700f0a0f2bfd68792ed40719a6fd7f1273",
        "commit_message": "Merge pull request #4162 from Egor18/fixToEmailSafeString\n\nFix invalid condition in toEmailSafeString",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e99ed7700f0a0f2bfd68792ed40719a6fd7f1273",
        "buggy_code": "|| ('z'<=ch && ch<='Z')",
        "fixed_code": "|| ('A'<=ch && ch<='Z')",
        "patch": "@@ -1664,7 +1664,7 @@ public static String toEmailSafeString(String projectName) {\n         for( int i=0; i<projectName.length(); i++ ) {\n             char ch = projectName.charAt(i);\n             if(('a'<=ch && ch<='z')\n-            || ('z'<=ch && ch<='Z')\n+            || ('A'<=ch && ch<='Z')\n             || ('0'<=ch && ch<='9')\n             || \"-_.\".indexOf(ch)>=0)\n                 buf.append(ch);"
    },
    {
        "commit_id": "a9ce57a4e30047650fb099c3418b2f4e640f910f",
        "commit_message": "Fix always false condition",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a9ce57a4e30047650fb099c3418b2f4e640f910f",
        "buggy_code": "|| ('z'<=ch && ch<='Z')",
        "fixed_code": "|| ('A'<=ch && ch<='Z')",
        "patch": "@@ -1664,7 +1664,7 @@ public static String toEmailSafeString(String projectName) {\n         for( int i=0; i<projectName.length(); i++ ) {\n             char ch = projectName.charAt(i);\n             if(('a'<=ch && ch<='z')\n-            || ('z'<=ch && ch<='Z')\n+            || ('A'<=ch && ch<='Z')\n             || ('0'<=ch && ch<='9')\n             || \"-_.\".indexOf(ch)>=0)\n                 buf.append(ch);"
    },
    {
        "commit_id": "aee0b50f3b9674ad2f405087f4e2a8b0bc32537d",
        "commit_message": "Stop using the \"name\" argument in the \"install-plugin\" CLI command (#4123)\n\n* InstallPluginCommand.name is unnecessary.\r\n\r\n* Minor changes to error reporting requested by @oleg-nenashev.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/aee0b50f3b9674ad2f405087f4e2a8b0bc32537d",
        "buggy_code": "invokeWithArgs(\"-name\", \"token-macro\", \"-deploy\", \"=\"),",
        "fixed_code": "invokeWithArgs(\"-deploy\", \"=\"),",
        "patch": "@@ -41,7 +41,7 @@ public void fromStdin() throws Exception {\n         assertNull(r.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n         assertThat(new CLICommandInvoker(r, \"install-plugin\").\n                 withStdin(InstallPluginCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).\n-                invokeWithArgs(\"-name\", \"token-macro\", \"-deploy\", \"=\"),\n+                invokeWithArgs(\"-deploy\", \"=\"),\n             CLICommandInvoker.Matcher.succeeded());\n         assertNotNull(r.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n     }"
    },
    {
        "commit_id": "58dfce4b1cce1e4cb88bec81b62583e2decc2f44",
        "commit_message": "Merge pull request #3425 from aviadatsnyk/patch-1\n\n[JENKINS-56931] handle absolute paths correctly when unzipping",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/58dfce4b1cce1e4cb88bec81b62583e2decc2f44",
        "buggy_code": "if (!f.toPath().normalize().startsWith(dir.toPath())) {",
        "fixed_code": "if (!f.getCanonicalPath().startsWith(dir.getCanonicalPath())) {",
        "patch": "@@ -643,7 +643,7 @@ private void unzip(File dir, File zipFile) throws IOException {\n             while (entries.hasMoreElements()) {\n                 ZipEntry e = entries.nextElement();\n                 File f = new File(dir, e.getName());\n-                if (!f.toPath().normalize().startsWith(dir.toPath())) {\n+                if (!f.getCanonicalPath().startsWith(dir.getCanonicalPath())) {\n                     throw new IOException(\n                         \"Zip \" + zipFile.getPath() + \" contains illegal file name that breaks out of the target directory: \" + e.getName());\n                 }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<SubText> r = new ArrayList<SubText>();",
        "fixed_code": "List<SubText> r = new ArrayList<>();",
        "patch": "@@ -141,7 +141,7 @@ public MarkupText.SubText findToken(Pattern pattern) {\n     public List<MarkupText.SubText> findTokens(Pattern pattern) {\n         String text = getText();\n         Matcher m = pattern.matcher(text);\n-        List<SubText> r = new ArrayList<SubText>();\n+        List<SubText> r = new ArrayList<>();\n \n         while(m.find()) {\n             int idx = m.start();"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private static final ThreadLocal<BulkChange> INSCOPE = new ThreadLocal<BulkChange>();",
        "fixed_code": "private static final ThreadLocal<BulkChange> INSCOPE = new ThreadLocal<>();",
        "patch": "@@ -132,7 +132,7 @@ private void pop() {\n     /**\n      * {@link BulkChange}s that are effective currently.\n      */\n-    private static final ThreadLocal<BulkChange> INSCOPE = new ThreadLocal<BulkChange>();\n+    private static final ThreadLocal<BulkChange> INSCOPE = new ThreadLocal<>();\n \n     /**\n      * Gets the {@link BulkChange} instance currently in scope for the current thread."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "Map<String,String> props = new HashMap<String, String>();",
        "fixed_code": "Map<String,String> props = new HashMap<>();",
        "patch": "@@ -32,7 +32,7 @@ public Object call() {\n                 try {\n                     jmdns = JmDNS.create();\n \n-                    Map<String,String> props = new HashMap<String, String>();\n+                    Map<String,String> props = new HashMap<>();\n                     String rootURL = jenkins.getRootUrl();\n                     if (rootURL==null)  return null;\n "
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "protected static final ThreadLocal<JellyContext> CURRENT_CONTEXT = new ThreadLocal<JellyContext>();",
        "fixed_code": "protected static final ThreadLocal<JellyContext> CURRENT_CONTEXT = new ThreadLocal<>();",
        "patch": "@@ -168,5 +168,5 @@ public Collection values() {\n      *\n      * @see Functions#getCurrentJellyContext()\n      */\n-    protected static final ThreadLocal<JellyContext> CURRENT_CONTEXT = new ThreadLocal<JellyContext>();\n+    protected static final ThreadLocal<JellyContext> CURRENT_CONTEXT = new ThreadLocal<>();\n }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final ConcurrentHashMap<Class,Object> data = new ConcurrentHashMap<Class,Object>();",
        "fixed_code": "private final ConcurrentHashMap<Class,Object> data = new ConcurrentHashMap<>();",
        "patch": "@@ -32,7 +32,7 @@\n  * @author Kohsuke Kawaguchi\n  */\n public class Lookup {\n-    private final ConcurrentHashMap<Class,Object> data = new ConcurrentHashMap<Class,Object>();\n+    private final ConcurrentHashMap<Class,Object> data = new ConcurrentHashMap<>();\n \n     public <T> T get(Class<T> type) {\n         return type.cast(data.get(type));"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final List<Tag> tags = new ArrayList<Tag>();",
        "fixed_code": "private final List<Tag> tags = new ArrayList<>();",
        "patch": "@@ -45,7 +45,7 @@ public class MarkupText extends AbstractMarkupText {\n     /**\n      * Added mark up tags.\n      */\n-    private final List<Tag> tags = new ArrayList<Tag>();\n+    private final List<Tag> tags = new ArrayList<>();\n \n     /**\n      * Represents one mark up inserted into text."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<String> ids = new ArrayList<String>();",
        "fixed_code": "List<String> ids = new ArrayList<>();",
        "patch": "@@ -60,7 +60,7 @@ public Permalink get(String id) {\n      * Finds the closest name match by its ID.\n      */\n     public Permalink findNearest(String id) {\n-        List<String> ids = new ArrayList<String>();\n+        List<String> ids = new ArrayList<>();\n         for (Permalink p : this)\n             ids.add(p.getId());\n         String nearest = EditDistance.findNearest(id, ids);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "groovy.run(loadScript(),\"RemoteClass\",remaining.toArray(new String[remaining.size()]));",
        "fixed_code": "groovy.run(loadScript(),\"RemoteClass\",remaining.toArray(new String[0]));",
        "patch": "@@ -68,7 +68,7 @@ protected int run() throws Exception {\n         binding.setProperty(\"stderr\",stderr);\n \n         GroovyShell groovy = new GroovyShell(Jenkins.getActiveInstance().getPluginManager().uberClassLoader, binding);\n-        groovy.run(loadScript(),\"RemoteClass\",remaining.toArray(new String[remaining.size()]));\n+        groovy.run(loadScript(),\"RemoteClass\",remaining.toArray(new String[0]));\n         return 0;\n     }\n "
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public List<String> sources = new ArrayList<String>();",
        "fixed_code": "public List<String> sources = new ArrayList<>();",
        "patch": "@@ -63,7 +63,7 @@ public String getShortDescription() {\n             \"and the plugin will be installed from the update center. If the short name includes a minimum version number \" +\n             \"(like \u2018findbugs:1.4\u2019), and there are multiple update centers publishing different versions, the update centers \" +\n             \"will be searched in order for the first one publishing a version that is at least the specified version.\")\n-    public List<String> sources = new ArrayList<String>();\n+    public List<String> sources = new ArrayList<>();\n \n     @Option(name=\"-name\",usage=\"If specified, the plugin will be installed as this short name (whereas normally the name is inferred from the source name automatically).\")\n     public String name; // TODO better to parse out Short-Name from the manifest and deprecate this option"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final List<MemoryPoolMXBean> pools = new ArrayList<MemoryPoolMXBean>();",
        "fixed_code": "private final List<MemoryPoolMXBean> pools = new ArrayList<>();",
        "patch": "@@ -53,7 +53,7 @@ public final class MemoryUsageMonitor extends PeriodicWork {\n      * A memory group is conceptually a set of memory pools. \n      */\n     public final class MemoryGroup {\n-        private final List<MemoryPoolMXBean> pools = new ArrayList<MemoryPoolMXBean>();\n+        private final List<MemoryPoolMXBean> pools = new ArrayList<>();\n \n         /**\n          * Trend of the memory usage, after GCs."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final List<Descriptor> problems = new ArrayList<Descriptor>();",
        "fixed_code": "private final List<Descriptor> problems = new ArrayList<>();",
        "patch": "@@ -55,7 +55,7 @@ public String getDisplayName() {\n         return Messages.NullIdDescriptorMonitor_DisplayName();\n     }\n \n-    private final List<Descriptor> problems = new ArrayList<Descriptor>();\n+    private final List<Descriptor> problems = new ArrayList<>();\n \n     @Override\n     public boolean isActivated() {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<File> r = new ArrayList<File>();",
        "fixed_code": "List<File> r = new ArrayList<>();",
        "patch": "@@ -45,7 +45,7 @@ public class InitStrategy {\n      *      and when that happens, Jenkins will ignore all but the first one in the list.\n      */\n     public List<File> listPluginArchives(PluginManager pm) throws IOException {\n-        List<File> r = new ArrayList<File>();\n+        List<File> r = new ArrayList<>();\n \n         // the ordering makes sure that during the debugging we get proper precedence among duplicates.\n         // for example, while doing \"mvn jpi:run\" or \"mvn hpi:run\" on a plugin that's bundled with Jenkins, we want to the"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public final CopyOnWriteList<Target> targets = new CopyOnWriteList<Target>();",
        "fixed_code": "public final CopyOnWriteList<Target> targets = new CopyOnWriteList<>();",
        "patch": "@@ -75,7 +75,7 @@\n public class LogRecorder extends AbstractModelObject implements Saveable {\n     private volatile String name;\n \n-    public final CopyOnWriteList<Target> targets = new CopyOnWriteList<Target>();\n+    public final CopyOnWriteList<Target> targets = new CopyOnWriteList<>();\n     private final static TargetComparator TARGET_COMPARATOR = new TargetComparator();\n     \n     @Restricted(NoExternalUse.class)"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "this.target = new WeakReference<Handler>(target);",
        "fixed_code": "this.target = new WeakReference<>(target);",
        "patch": "@@ -44,7 +44,7 @@ public final class WeakLogHandler extends Handler {\n     public WeakLogHandler(Handler target, Logger logger) {\n         this.logger = logger;\n         logger.addHandler(this);\n-        this.target = new WeakReference<Handler>(target);\n+        this.target = new WeakReference<>(target);\n     }\n \n     public void publish(LogRecord record) {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "return scheduleBuild2(quietPeriod, queueActions.toArray(new Action[queueActions.size()]));",
        "fixed_code": "return scheduleBuild2(quietPeriod, queueActions.toArray(new Action[0]));",
        "patch": "@@ -822,7 +822,7 @@ public QueueTaskFuture<R> scheduleBuild2(int quietPeriod, Cause c, Collection<?\n         if (c != null) {\n             queueActions.add(new CauseAction(c));\n         }\n-        return scheduleBuild2(quietPeriod, queueActions.toArray(new Action[queueActions.size()]));\n+        return scheduleBuild2(quietPeriod, queueActions.toArray(new Action[0]));\n     }\n \n     /**"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final List<String> values = new ArrayList<String>();",
        "fixed_code": "private final List<String> values = new ArrayList<>();",
        "patch": "@@ -48,7 +48,7 @@\n  * @author Kohsuke Kawaguchi\n  */\n public class AutoCompletionCandidates implements HttpResponse {\n-    private final List<String> values = new ArrayList<String>();\n+    private final List<String> values = new ArrayList<>();\n \n     public AutoCompletionCandidates add(String v) {\n         values.add(v);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<BuildWrapper> wrappers = new ArrayList<BuildWrapper>(project.getBuildWrappers().values());",
        "fixed_code": "List<BuildWrapper> wrappers = new ArrayList<>(project.getBuildWrappers().values());",
        "patch": "@@ -147,7 +147,7 @@ protected Result doRun(@Nonnull BuildListener listener) throws Exception {\n \n             Result r = null;\n             try {\n-                List<BuildWrapper> wrappers = new ArrayList<BuildWrapper>(project.getBuildWrappers().values());\n+                List<BuildWrapper> wrappers = new ArrayList<>(project.getBuildWrappers().values());\n                 \n                 ParametersAction parameters = getAction(ParametersAction.class);\n                 if (parameters != null)"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "this.choices = new ArrayList<String>(Arrays.asList(choices));",
        "fixed_code": "this.choices = new ArrayList<>(Arrays.asList(choices));",
        "patch": "@@ -45,7 +45,7 @@ public ChoiceParameterDefinition(String name, String choices, String description\n \n     public ChoiceParameterDefinition(String name, String[] choices, String description) {\n         super(name, description);\n-        this.choices = new ArrayList<String>(Arrays.asList(choices));\n+        this.choices = new ArrayList<>(Arrays.asList(choices));\n         defaultValue = null;\n     }\n "
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<ComputerPanelBox> boxs = new ArrayList<ComputerPanelBox>();",
        "fixed_code": "List<ComputerPanelBox> boxs = new ArrayList<>();",
        "patch": "@@ -37,7 +37,7 @@ public Computer getComputer(){\n      *      List of all the registered {@link ComputerPanelBox}s.\n      */\n     public static List<ComputerPanelBox> all(Computer computer) {\n-        List<ComputerPanelBox> boxs = new ArrayList<ComputerPanelBox>();\n+        List<ComputerPanelBox> boxs = new ArrayList<>();\n         for(ComputerPanelBox box:  ExtensionList.lookup(ComputerPanelBox.class)){\n             box.setComputer(computer);\n             boxs.add(box);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<String> updateSites = new ArrayList<String>();",
        "fixed_code": "List<String> updateSites = new ArrayList<>();",
        "patch": "@@ -309,7 +309,7 @@ public String getUrl() {\n          * URLs to download from.\n          */\n         public List<String> getUrls() {\n-            List<String> updateSites = new ArrayList<String>();\n+            List<String> updateSites = new ArrayList<>();\n             for (UpdateSite site : Jenkins.getActiveInstance().getUpdateCenter().getSiteList()) {\n                 String siteUrl = site.getUrl();\n                 int baseUrlEnd = siteUrl.indexOf(\"update-center.json\");"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private static final Map<String, String> iconIMGToClassMap = new HashMap<String, String>();",
        "fixed_code": "private static final Map<String, String> iconIMGToClassMap = new HashMap<>();",
        "patch": "@@ -62,7 +62,7 @@ public class HealthReport implements Serializable, Comparable<HealthReport> {\n     private static final String HEALTH_0_TO_20_IMG = \"health-00to19.png\";\n     private static final String HEALTH_UNKNOWN_IMG = \"empty.png\";\n \n-    private static final Map<String, String> iconIMGToClassMap = new HashMap<String, String>();\n+    private static final Map<String, String> iconIMGToClassMap = new HashMap<>();\n     static {\n         iconIMGToClassMap.put(HEALTH_OVER_80_IMG, HEALTH_OVER_80);\n         iconIMGToClassMap.put(HEALTH_61_TO_80_IMG, HEALTH_61_TO_80);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<JobPropertyDescriptor> r = new ArrayList<JobPropertyDescriptor>();",
        "fixed_code": "List<JobPropertyDescriptor> r = new ArrayList<>();",
        "patch": "@@ -99,7 +99,7 @@ public boolean isApplicable(Class<? extends Job> jobType) {\n      * Gets the {@link JobPropertyDescriptor}s applicable for a given job type.\n      */\n     public static List<JobPropertyDescriptor> getPropertyDescriptors(Class<? extends Job> clazz) {\n-        List<JobPropertyDescriptor> r = new ArrayList<JobPropertyDescriptor>();\n+        List<JobPropertyDescriptor> r = new ArrayList<>();\n         for (JobPropertyDescriptor p : all())\n             if(p.isApplicable(clazz))\n                 r.add(p);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "this.series = new ArrayList<MultiStageTimeSeries>(Arrays.asList(series));",
        "fixed_code": "this.series = new ArrayList<>(Arrays.asList(series));",
        "patch": "@@ -201,7 +201,7 @@ public static class TrendChart implements HttpResponse {\n \n         public TrendChart(TimeScale timeScale, MultiStageTimeSeries... series) {\n             this.timeScale = timeScale;\n-            this.series = new ArrayList<MultiStageTimeSeries>(Arrays.asList(series));\n+            this.series = new ArrayList<>(Arrays.asList(series));\n             this.dataset = createDataset();\n         }\n "
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<TopLevelItem> items = new ArrayList<TopLevelItem>();",
        "fixed_code": "List<TopLevelItem> items = new ArrayList<>();",
        "patch": "@@ -75,7 +75,7 @@ public TopLevelItem doCreateItem(StaplerRequest req, StaplerResponse rsp)\n \n     @Override\n     public Collection<TopLevelItem> getItems() {\n-        List<TopLevelItem> items = new ArrayList<TopLevelItem>();\n+        List<TopLevelItem> items = new ArrayList<>();\n         for (TopLevelItem item : getOwner().getItemGroup().getItems()) {\n             if (item.hasPermission(Item.CONFIGURE)) {\n                 items.add(item);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public static final List<PageDecorator> ALL = (List)new DescriptorList<PageDecorator>(PageDecorator.class);",
        "fixed_code": "public static final List<PageDecorator> ALL = (List) new DescriptorList<>(PageDecorator.class);",
        "patch": "@@ -108,7 +108,7 @@ public final String getUrl() {\n      *      Use {@link #all()} for read access, and use {@link Extension} for registration.\n      */\n     @Deprecated\n-    public static final List<PageDecorator> ALL = (List)new DescriptorList<PageDecorator>(PageDecorator.class);\n+    public static final List<PageDecorator> ALL = (List) new DescriptorList<>(PageDecorator.class);\n \n     /**\n      * Returns all the registered {@link PageDecorator} descriptors."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final PersistedList<String> collapsed = new PersistedList<String>(this);",
        "fixed_code": "private final PersistedList<String> collapsed = new PersistedList<>(this);",
        "patch": "@@ -13,7 +13,7 @@\n \n public class PaneStatusProperties extends UserProperty implements Saveable {\n \t\n-\tprivate final PersistedList<String> collapsed = new PersistedList<String>(this);\n+\tprivate final PersistedList<String> collapsed = new PersistedList<>(this);\n \t\n \tprivate static final PaneStatusProperties FALLBACK = new PaneStatusPropertiesSessionFallback();\n \t"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public static final DescriptorList<ParameterDefinition> LIST = new DescriptorList<ParameterDefinition>(ParameterDefinition.class);",
        "fixed_code": "public static final DescriptorList<ParameterDefinition> LIST = new DescriptorList<>(ParameterDefinition.class);",
        "patch": "@@ -232,7 +232,7 @@ public static DescriptorExtensionList<ParameterDefinition,ParameterDescriptor> a\n      *      Use {@link #all()} for read access, and {@link Extension} for registration.\n      */\n     @Deprecated\n-    public static final DescriptorList<ParameterDefinition> LIST = new DescriptorList<ParameterDefinition>(ParameterDefinition.class);\n+    public static final DescriptorList<ParameterDefinition> LIST = new DescriptorList<>(ParameterDefinition.class);\n \n     public abstract static class ParameterDescriptor extends\n             Descriptor<ParameterDefinition> {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public static final List<Permalink> BUILTIN = new CopyOnWriteArrayList<Permalink>();",
        "fixed_code": "public static final List<Permalink> BUILTIN = new CopyOnWriteArrayList<>();",
        "patch": "@@ -91,7 +91,7 @@ abstract class Permalink {\n         /**\n          * List of {@link Permalink}s that are built into Jenkins.\n          */\n-        public static final List<Permalink> BUILTIN = new CopyOnWriteArrayList<Permalink>();\n+        public static final List<Permalink> BUILTIN = new CopyOnWriteArrayList<>();\n \n         public static final Permalink LAST_BUILD = new Permalink() {\n             public String getDisplayName() {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "final Set<ResourceActivity> activities = new HashSet<ResourceActivity>();",
        "fixed_code": "final Set<ResourceActivity> activities = new HashSet<>();",
        "patch": "@@ -157,7 +157,7 @@ public DescribableList<BuildWrapper, Descriptor<BuildWrapper>> getBuildWrappersL\n \n     @Override\n     protected Set<ResourceActivity> getResourceActivities() {\n-        final Set<ResourceActivity> activities = new HashSet<ResourceActivity>();\n+        final Set<ResourceActivity> activities = new HashSet<>();\n \n         activities.addAll(super.getResourceActivities());\n         activities.addAll(Util.filter(getBuildersList(),ResourceActivity.class));"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final Set<ResourceActivity> inProgress = new CopyOnWriteArraySet<ResourceActivity>();",
        "fixed_code": "private final Set<ResourceActivity> inProgress = new CopyOnWriteArraySet<>();",
        "patch": "@@ -42,7 +42,7 @@ public class ResourceController {\n     /**\n      * {@link ResourceList}s that are used by activities that are in progress.\n      */\n-    private final Set<ResourceActivity> inProgress = new CopyOnWriteArraySet<ResourceActivity>();\n+    private final Set<ResourceActivity> inProgress = new CopyOnWriteArraySet<>();\n \n     /**\n      * View of {@link #inProgress} that exposes its {@link ResourceList}."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<String> l = new ArrayList<String>();",
        "fixed_code": "List<String> l = new ArrayList<>();",
        "patch": "@@ -155,7 +155,7 @@ public boolean isCompleteBuild() {\n     }\n \n     private static @Nonnull List<String> getNames() {\n-        List<String> l = new ArrayList<String>();\n+        List<String> l = new ArrayList<>();\n         for (Result r : all)\n             l.add(r.name);\n         return l;"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();",
        "fixed_code": "List<NodePropertyDescriptor> result = new ArrayList<>();",
        "patch": "@@ -636,7 +636,7 @@ public final List<Descriptor<RetentionStrategy<?>>> retentionStrategyDescriptors\n         @SuppressWarnings(\"unchecked\") // used by Jelly EL only\n         @Restricted(NoExternalUse.class) // used by Jelly EL only\n         public final List<NodePropertyDescriptor> nodePropertyDescriptors(@CheckForNull Slave it) {\n-            List<NodePropertyDescriptor> result = new ArrayList<NodePropertyDescriptor>();\n+            List<NodePropertyDescriptor> result = new ArrayList<>();\n             Collection<NodePropertyDescriptor> list =\n                     (Collection) Jenkins.getInstance().getDescriptorList(NodeProperty.class);\n             for (NodePropertyDescriptor npd : it == null"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<Action> result = new ArrayList<Action>();",
        "fixed_code": "List<Action> result = new ArrayList<>();",
        "patch": "@@ -64,7 +64,7 @@ public static ExtensionList<TransientComputerActionFactory> all() {\n      * Creates {@link Action}s for a node, using all registered {@link TransientComputerActionFactory}s.\n      */\n \tpublic static List<Action> createAllFor(Computer target) {\n-\t\tList<Action> result = new ArrayList<Action>();\n+\t\tList<Action> result = new ArrayList<>();\n \t\tfor (TransientComputerActionFactory f: all()) {\n \t\t\tresult.addAll(f.createFor(target));\n \t\t}"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<Action> result = new ArrayList<Action>();",
        "fixed_code": "List<Action> result = new ArrayList<>();",
        "patch": "@@ -31,7 +31,7 @@ public static ExtensionList<TransientViewActionFactory> all() {\n      * Creates {@link Action}s for a view, using all registered {@link TransientViewActionFactory}s.\n      */\n \tpublic static List<Action> createAllFor(View v) {\n-\t\tList<Action> result = new ArrayList<Action>();\n+\t\tList<Action> result = new ArrayList<>();\n \t\tfor (TransientViewActionFactory f: all()) {\n \t\t\tresult.addAll(f.createFor(v));\n \t\t}"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public static final List<UserPropertyDescriptor> LIST = (List)new DescriptorList<UserProperty>(UserProperty.class);",
        "fixed_code": "public static final List<UserPropertyDescriptor> LIST = (List) new DescriptorList<>(UserProperty.class);",
        "patch": "@@ -40,5 +40,5 @@ public class UserProperties {\n      *      Use {@link UserProperty#all()} for read access and {@link Extension} for auto-registration.\n      */\n     @Deprecated\n-    public static final List<UserPropertyDescriptor> LIST = (List)new DescriptorList<UserProperty>(UserProperty.class);\n+    public static final List<UserPropertyDescriptor> LIST = (List) new DescriptorList<>(UserProperty.class);\n }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<SCMListener> r = new ArrayList<SCMListener>(j.getExtensionList(SCMListener.class));",
        "fixed_code": "List<SCMListener> r = new ArrayList<>(j.getExtensionList(SCMListener.class));",
        "patch": "@@ -130,7 +130,7 @@ public static Collection<? extends SCMListener> all() {\n         if (j == null) { // TODO use !Functions.isExtensionsAvailable() once JENKINS-33377\n             return Collections.emptySet();\n         }\n-        List<SCMListener> r = new ArrayList<SCMListener>(j.getExtensionList(SCMListener.class));\n+        List<SCMListener> r = new ArrayList<>(j.getExtensionList(SCMListener.class));\n         for (SCMListener l : j.getSCMListeners()) {\n             r.add(l);\n         }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "Collections.sort(buildables,this); // sort is ascending order",
        "fixed_code": "buildables.sort(this); // sort is ascending order",
        "patch": "@@ -15,7 +15,7 @@\n public abstract class AbstractQueueSorterImpl extends QueueSorter implements Comparator<BuildableItem> {\n     @Override\n     public void sortBuildableItems(List<BuildableItem> buildables) {\n-        Collections.sort(buildables,this); // sort is ascending order\n+        buildables.sort(this); // sort is ascending order\n     }\n \n     /**"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<FutureLoad> fl = new ArrayList<FutureLoad>();",
        "fixed_code": "List<FutureLoad> fl = new ArrayList<>();",
        "patch": "@@ -92,7 +92,7 @@ public static class CurrentlyRunningTasks extends LoadPredictor {\n         @Override\n         public Iterable<FutureLoad> predict(MappingWorksheet plan, final Computer computer, long start, long eternity) {\n             long now = System.currentTimeMillis();\n-            List<FutureLoad> fl = new ArrayList<FutureLoad>();\n+            List<FutureLoad> fl = new ArrayList<>();\n             for (Executor e : computer.getExecutors()) {\n                 if (e.isIdle())     continue;\n "
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "Collections.sort(blockedItems, DEFAULT_BLOCKED_ITEM_COMPARATOR);",
        "fixed_code": "blockedItems.sort(DEFAULT_BLOCKED_ITEM_COMPARATOR);",
        "patch": "@@ -53,7 +53,7 @@ public int compare(Queue.BlockedItem o1, Queue.BlockedItem o2) {\n      * @since 1.618\n      */\n     public void sortBlockedItems(List<Queue.BlockedItem> blockedItems) {\n-        Collections.sort(blockedItems, DEFAULT_BLOCKED_ITEM_COMPARATOR);\n+        blockedItems.sort(DEFAULT_BLOCKED_ITEM_COMPARATOR);\n     }\n \n     /**"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final TreeMap<Long, int[]> data = new TreeMap<Long, int[]>();",
        "fixed_code": "private final TreeMap<Long, int[]> data = new TreeMap<>();",
        "patch": "@@ -38,7 +38,7 @@\n */\n final class Timeline {\n     // int[] is always length=1\n-    private final TreeMap<Long, int[]> data = new TreeMap<Long, int[]>();\n+    private final TreeMap<Long, int[]> data = new TreeMap<>();\n \n     /**\n      * Obtains q(t) for the given t."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public static final DescriptorList<NodeMonitor> LIST = new DescriptorList<NodeMonitor>(NodeMonitor.class);",
        "fixed_code": "public static final DescriptorList<NodeMonitor> LIST = new DescriptorList<>(NodeMonitor.class);",
        "patch": "@@ -140,7 +140,7 @@ public void setIgnored(boolean ignored) {\n      *      Use {@link #all()} for read access and {@link Extension} for registration.\n      */\n     @Deprecated\n-    public static final DescriptorList<NodeMonitor> LIST = new DescriptorList<NodeMonitor>(NodeMonitor.class);\n+    public static final DescriptorList<NodeMonitor> LIST = new DescriptorList<>(NodeMonitor.class);\n \n     /**\n      * Returns all the registered {@link NodeMonitor} descriptors."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<T> r = new ArrayList<T>();",
        "fixed_code": "List<T> r = new ArrayList<>();",
        "patch": "@@ -107,7 +107,7 @@ public RepositoryBrowser<?> getBrowser() {\n     // method for the remote API.\n     @Exported\n     public final Object[] getItems() {\n-        List<T> r = new ArrayList<T>();\n+        List<T> r = new ArrayList<>();\n         for (T t : this)\n             r.add(t);\n         return r.toArray();"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<Descriptor<RepositoryBrowser<?>>> r = new ArrayList<Descriptor<RepositoryBrowser<?>>>();",
        "fixed_code": "List<Descriptor<RepositoryBrowser<?>>> r = new ArrayList<>();",
        "patch": "@@ -53,7 +53,7 @@ public class RepositoryBrowsers {\n      * Only returns those {@link RepositoryBrowser} descriptors that extend from the given type.\n      */\n     public static List<Descriptor<RepositoryBrowser<?>>> filter(Class<? extends RepositoryBrowser> t) {\n-        List<Descriptor<RepositoryBrowser<?>>> r = new ArrayList<Descriptor<RepositoryBrowser<?>>>();\n+        List<Descriptor<RepositoryBrowser<?>>> r = new ArrayList<>();\n         for (Descriptor<RepositoryBrowser<?>> d : RepositoryBrowser.all())\n             if(d.isSubTypeOf(t))\n                 r.add(d);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public static final List<SCMDescriptor<?>> SCMS = (List)new DescriptorList<SCM>(SCM.class);",
        "fixed_code": "public static final List<SCMDescriptor<?>> SCMS = (List) new DescriptorList<>(SCM.class);",
        "patch": "@@ -46,7 +46,7 @@ public class SCMS {\n      *      Use {@link SCM#all()} for read access and {@link Extension} for registration.\n      */\n     @Deprecated\n-    public static final List<SCMDescriptor<?>> SCMS = (List)new DescriptorList<SCM>(SCM.class);\n+    public static final List<SCMDescriptor<?>> SCMS = (List) new DescriptorList<>(SCM.class);\n \n     /**\n      * Parses {@link SCM} configuration from the submitted form."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "Set<String> paths = new HashSet<String>();  // paths already added, to control duplicates",
        "fixed_code": "Set<String> paths = new HashSet<>();  // paths already added, to control duplicates",
        "patch": "@@ -142,7 +142,7 @@ public void doSuggest(StaplerRequest req, StaplerResponse rsp, @QueryParameter S\n      *      a certain threshold to avoid showing too many options. \n      */\n     public SearchResult getSuggestions(StaplerRequest req, String query) {\n-        Set<String> paths = new HashSet<String>();  // paths already added, to control duplicates\n+        Set<String> paths = new HashSet<>();  // paths already added, to control duplicates\n         SearchResultImpl r = new SearchResultImpl();\n         int max = req.hasParameter(\"max\") ? Integer.parseInt(req.getParameter(\"max\")) : 100;\n         SearchableModelObject smo = findClosestSearchableModelObject(req);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public static final DescriptorList<AuthorizationStrategy> LIST = new DescriptorList<AuthorizationStrategy>(AuthorizationStrategy.class);",
        "fixed_code": "public static final DescriptorList<AuthorizationStrategy> LIST = new DescriptorList<>(AuthorizationStrategy.class);",
        "patch": "@@ -194,7 +194,7 @@ public abstract class AuthorizationStrategy extends AbstractDescribableImpl<Auth\n      *      Use {@link #all()} for read access, and {@link Extension} for registration.\n      */\n     @Deprecated\n-    public static final DescriptorList<AuthorizationStrategy> LIST = new DescriptorList<AuthorizationStrategy>(AuthorizationStrategy.class);\n+    public static final DescriptorList<AuthorizationStrategy> LIST = new DescriptorList<>(AuthorizationStrategy.class);\n     \n     /**\n      * {@link AuthorizationStrategy} that implements the semantics"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "this.filters = filters.toArray(new Filter[filters.size()]);",
        "fixed_code": "this.filters = filters.toArray(new Filter[0]);",
        "patch": "@@ -58,7 +58,7 @@ public ChainedServletFilter(Collection<? extends Filter> filters) {\n     }\n \n     public void setFilters(Collection<? extends Filter> filters) {\n-        this.filters = filters.toArray(new Filter[filters.size()]);\n+        this.filters = filters.toArray(new Filter[0]);\n     }\n \n     public void init(FilterConfig filterConfig) throws ServletException {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "this.identifiers = new HashSet<String>(identifiers);",
        "fixed_code": "this.identifiers = new HashSet<>(identifiers);",
        "patch": "@@ -45,7 +45,7 @@ public class FederatedLoginServiceUserProperty extends UserProperty {\n     protected final Set<String> identifiers;\n \n     protected FederatedLoginServiceUserProperty(Collection<String> identifiers) {\n-        this.identifiers = new HashSet<String>(identifiers);\n+        this.identifiers = new HashSet<>(identifiers);\n     }\n \n     public boolean has(String identifier) {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private static final List<Permission> ALL = new CopyOnWriteArrayList<Permission>();",
        "fixed_code": "private static final List<Permission> ALL = new CopyOnWriteArrayList<>();",
        "patch": "@@ -287,7 +287,7 @@ public boolean getEnabled() {\n     /**\n      * All permissions in the system but in a single list.\n      */\n-    private static final List<Permission> ALL = new CopyOnWriteArrayList<Permission>();\n+    private static final List<Permission> ALL = new CopyOnWriteArrayList<>();\n \n     private static final List<Permission> ALL_VIEW = Collections.unmodifiableList(ALL);\n "
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public static final DescriptorList<SecurityRealm> LIST = new DescriptorList<SecurityRealm>(SecurityRealm.class);",
        "fixed_code": "public static final DescriptorList<SecurityRealm> LIST = new DescriptorList<>(SecurityRealm.class);",
        "patch": "@@ -641,7 +641,7 @@ and both needs to use the same key (this is a reflection of a poor design in Acg\n      *      Use {@link #all()} for read access, and use {@link Extension} for registration.\n      */\n     @Deprecated\n-    public static final DescriptorList<SecurityRealm> LIST = new DescriptorList<SecurityRealm>(SecurityRealm.class);\n+    public static final DescriptorList<SecurityRealm> LIST = new DescriptorList<>(SecurityRealm.class);\n \n     /**\n      * Returns all the registered {@link SecurityRealm} descriptors."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final List<Entry> entries = new ArrayList<Entry>();",
        "fixed_code": "private final List<Entry> entries = new ArrayList<>();",
        "patch": "@@ -50,7 +50,7 @@ public Entry(Sid sid, Permission permission, boolean allowed) {\n         }\n     }\n \n-    private final List<Entry> entries = new ArrayList<Entry>();\n+    private final List<Entry> entries = new ArrayList<>();\n     /**\n      * Parent to delegate to. Can be null.\n      */"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "Map<String,String> r = new HashMap<String,String>();",
        "fixed_code": "Map<String,String> r = new HashMap<>();",
        "patch": "@@ -279,7 +279,7 @@ private static final class ListFiles extends MasterToSlaveFileCallable<Map<Strin\n         }\n \n         @Override public Map<String,String> invoke(File basedir, VirtualChannel channel) throws IOException, InterruptedException {\n-            Map<String,String> r = new HashMap<String,String>();\n+            Map<String,String> r = new HashMap<>();\n \n             FileSet fileSet = Util.createFileSet(basedir, includes, excludes);\n             fileSet.setDefaultexcludes(defaultExcludes);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<Descriptor<T>> r = new ArrayList<Descriptor<T>>(base.size());",
        "fixed_code": "List<Descriptor<T>> r = new ArrayList<>(base.size());",
        "patch": "@@ -74,7 +74,7 @@ List<Descriptor<T>> filter(List<Descriptor<T>> base, Class<? extends AbstractPro\n         // descriptor of the project\n         Descriptor pd = Jenkins.getInstance().getDescriptor((Class) type);\n \n-        List<Descriptor<T>> r = new ArrayList<Descriptor<T>>(base.size());\n+        List<Descriptor<T>> r = new ArrayList<>(base.size());\n         for (Descriptor<T> d : base) {\n             if (pd instanceof AbstractProjectDescriptor && !((AbstractProjectDescriptor)pd).isApplicable(d))\n                 continue;"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "HashSet<String> processedIds = new HashSet<String>();",
        "fixed_code": "HashSet<String> processedIds = new HashSet<>();",
        "patch": "@@ -178,7 +178,7 @@ private boolean isDefaultSchema(List<JSONObject> jsonList) {\n         private JSONObject reduce(List<JSONObject> jsonList) {\n             List<ToolInstallerEntry> reducedToolEntries = new LinkedList<>();\n \n-            HashSet<String> processedIds = new HashSet<String>();\n+            HashSet<String> processedIds = new HashSet<>();\n             for (JSONObject jsonToolList : jsonList) {\n                 ToolInstallerList toolInstallerList = (ToolInstallerList) JSONObject.toBean(jsonToolList, ToolInstallerList.class);\n                 for(ToolInstallerEntry entry : toolInstallerList.list) {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "new DescribableList<ToolInstaller, Descriptor<ToolInstaller>>(Saveable.NOOP);",
        "fixed_code": "new DescribableList<>(Saveable.NOOP);",
        "patch": "@@ -42,7 +42,7 @@\n public class InstallSourceProperty extends ToolProperty<ToolInstallation> {\n     // TODO: get the proper Saveable\n     public final DescribableList<ToolInstaller, Descriptor<ToolInstaller>> installers =\n-            new DescribableList<ToolInstaller, Descriptor<ToolInstaller>>(Saveable.NOOP);\n+            new DescribableList<>(Saveable.NOOP);\n \n     @DataBoundConstructor\n     public InstallSourceProperty(List<? extends ToolInstaller> installers) throws IOException {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<D> result = new ArrayList<D>();",
        "fixed_code": "List<D> result = new ArrayList<>();",
        "patch": "@@ -50,7 +50,7 @@ public boolean isApplicable(Class<? extends T> targetType) {\n     }\n \n     public static <D extends PropertyDescriptor<?,T>,T> List<D> for_(List<D> all, Class<? extends T> target) {\n-        List<D> result = new ArrayList<D>();\n+        List<D> result = new ArrayList<>();\n         for (D d : all)\n             if (d.isApplicable(target))\n                 result.add(d);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "= new DescribableList<ToolProperty<?>, ToolPropertyDescriptor>(NOOP);",
        "fixed_code": "= new DescribableList<>(NOOP);",
        "patch": "@@ -136,7 +136,7 @@ public List<? extends ToolInstaller> getDefaultInstallers() {\n      */\n     public DescribableList<ToolProperty<?>,ToolPropertyDescriptor> getDefaultProperties() throws IOException {\n         DescribableList<ToolProperty<?>,ToolPropertyDescriptor> r\n-                = new DescribableList<ToolProperty<?>, ToolPropertyDescriptor>(NOOP);\n+                = new DescribableList<>(NOOP);\n \n         List<? extends ToolInstaller> installers = getDefaultInstallers();\n         if(!installers.isEmpty())"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<ToolInstallerDescriptor<?>> r = new ArrayList<ToolInstallerDescriptor<?>>();",
        "fixed_code": "List<ToolInstallerDescriptor<?>> r = new ArrayList<>();",
        "patch": "@@ -55,7 +55,7 @@ public static DescriptorExtensionList<ToolInstaller,ToolInstallerDescriptor<?>>\n      * Filters {@link #all()} by eliminating things that are not applicable to the given type.\n      */\n     public static List<ToolInstallerDescriptor<?>> for_(Class<? extends ToolInstallation> type) {\n-        List<ToolInstallerDescriptor<?>> r = new ArrayList<ToolInstallerDescriptor<?>>();\n+        List<ToolInstallerDescriptor<?>> r = new ArrayList<>();\n         for (ToolInstallerDescriptor<?> d : all())\n             if(d.isApplicable(type))\n                 r.add(d);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "locations = new ArrayList<ToolLocation>();",
        "fixed_code": "locations = new ArrayList<>();",
        "patch": "@@ -57,7 +57,7 @@ public class ToolLocationNodeProperty extends NodeProperty<Node> {\n     @DataBoundConstructor\n     public ToolLocationNodeProperty(List<ToolLocation> locations) {\n         if (locations == null) {\n-            locations = new ArrayList<ToolLocation>();\n+            locations = new ArrayList<>();\n         }\n         this.locations = locations;\n     }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<Date> dates = new ArrayList<Date>();",
        "fixed_code": "List<Date> dates = new ArrayList<>();",
        "patch": "@@ -55,7 +55,7 @@ public void publish(ServletContext context, @CheckForNull File home) {\n      * Parses the boot attempt file carefully so as not to cause the entire hook script to fail to execute.\n      */\n     protected List<Date> loadAttempts(File home) {\n-        List<Date> dates = new ArrayList<Date>();\n+        List<Date> dates = new ArrayList<>();\n         if (home!=null) {\n             File f = getBootFailureFile(home);\n             try {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "buf = new LinkedList<char[]>();",
        "fixed_code": "buf = new LinkedList<>();",
        "patch": "@@ -57,7 +57,7 @@ private void renew() {\n             return;\n \n         if(buf==null)\n-            buf = new LinkedList<char[]>();\n+            buf = new LinkedList<>();\n         buf.add(last);\n         last = new char[1024];\n         pos = 0;"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final List<String> args = new ArrayList<String>();",
        "fixed_code": "private final List<String> args = new ArrayList<>();",
        "patch": "@@ -17,7 +17,7 @@\n  * @since 1.300\n  */\n public class ClasspathBuilder implements Serializable {\n-    private final List<String> args = new ArrayList<String>();\n+    private final List<String> args = new ArrayList<>();\n \n     /**\n      * Adds a single directory or a jar file."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "0, 1, 5L, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(),",
        "fixed_code": "0, 1, 5L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),",
        "patch": "@@ -166,7 +166,7 @@ public void run() {\n      * this should be a fairly low-priority task.\n      */\n     private static final ExecutorService compressionThread = new ThreadPoolExecutor(\n-        0, 1, 5L, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(),\n+        0, 1, 5L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(),\n         new ExceptionCatchingThreadFactory(new NamingThreadFactory(new DaemonThreadFactory(), \"CompressedFile\")));\n \n     private static final Logger LOGGER = Logger.getLogger(CompressedFile.class.getName());"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<T> newList = new ArrayList<T>();",
        "fixed_code": "List<T> newList = new ArrayList<>();",
        "patch": "@@ -162,7 +162,7 @@ public Map<D,T> toMap() {\n      *      Structured form data that includes the data for nested descriptor list.\n      */\n     public void rebuild(StaplerRequest req, JSONObject json, List<? extends Descriptor<T>> descriptors) throws FormException, IOException {\n-        List<T> newList = new ArrayList<T>();\n+        List<T> newList = new ArrayList<>();\n \n         for (Descriptor<T> d : descriptors) {\n             T existing = get((D)d);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "this.legacy = new CopyOnWriteArrayList<Descriptor<T>>(descriptors);",
        "fixed_code": "this.legacy = new CopyOnWriteArrayList<>(descriptors);",
        "patch": "@@ -82,7 +82,7 @@ public final class DescriptorList<T extends Describable<T>> extends AbstractList\n     @Deprecated\n     public DescriptorList(Descriptor<T>... descriptors) {\n         this.type = null;\n-        this.legacy = new CopyOnWriteArrayList<Descriptor<T>>(descriptors);\n+        this.legacy = new CopyOnWriteArrayList<>(descriptors);\n     }\n \n     /**"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "names = new ArrayList<String>();",
        "fixed_code": "names = new ArrayList<>();",
        "patch": "@@ -596,7 +596,7 @@ public CheckMethod(Descriptor descriptor, String fieldName) {\n \n             method = ReflectionUtils.getPublicMethodNamed(descriptor.getClass(), \"doCheck\" + capitalizedFieldName);\n             if(method !=null) {\n-                names = new ArrayList<String>();\n+                names = new ArrayList<>();\n                 findParameters(method);\n             } else {\n                 names = null;"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final Map<String,String> systemProperties = new TreeMap<String,String>();",
        "fixed_code": "private final Map<String,String> systemProperties = new TreeMap<>();",
        "patch": "@@ -41,7 +41,7 @@\n  */\n public class JVMBuilder implements Serializable {\n     private final ClasspathBuilder classpath = new ClasspathBuilder();\n-    private final Map<String,String> systemProperties = new TreeMap<String,String>();\n+    private final Map<String,String> systemProperties = new TreeMap<>();\n     private final ArgumentListBuilder args = new ArgumentListBuilder();\n     private final ArgumentListBuilder vmopts = new ArgumentListBuilder();\n     private FilePath pwd;"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final ConcurrentHashMap<K,V> store = new ConcurrentHashMap<K,V>();",
        "fixed_code": "private final ConcurrentHashMap<K,V> store = new ConcurrentHashMap<>();",
        "patch": "@@ -38,7 +38,7 @@\n  */\n @Deprecated\n public abstract class Memoizer<K,V> {\n-    private final ConcurrentHashMap<K,V> store = new ConcurrentHashMap<K,V>();\n+    private final ConcurrentHashMap<K,V> store = new ConcurrentHashMap<>();\n \n     public V get(K key) {\n         V v = store.get(key);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final Map<String,FileItem> byName = new HashMap<String,FileItem>();",
        "fixed_code": "private final Map<String,FileItem> byName = new HashMap<>();",
        "patch": "@@ -44,7 +44,7 @@\n  */\n public class MultipartFormDataParser implements AutoCloseable {\n     private final ServletFileUpload upload = new ServletFileUpload(new DiskFileItemFactory());\n-    private final Map<String,FileItem> byName = new HashMap<String,FileItem>();\n+    private final Map<String,FileItem> byName = new HashMap<>();\n \n     public MultipartFormDataParser(HttpServletRequest request) throws ServletException {\n         try {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "return new PackedMap<K, V>(src);",
        "fixed_code": "return new PackedMap<>(src);",
        "patch": "@@ -64,7 +64,7 @@ public final class PackedMap<K,V> extends AbstractMap<K,V> {\n      *      Map to copy contents from. Iteration order is preserved.\n      */\n     public static <K,V> PackedMap<K,V> of(Map<? extends K,? extends V> src) {\n-        return new PackedMap<K, V>(src);\n+        return new PackedMap<>(src);\n     }\n \n     private PackedMap(Map<? extends K,? extends V> src) {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "protected final Map<Integer/*pid*/, OSProcess> processes = new HashMap<Integer, OSProcess>();",
        "fixed_code": "protected final Map<Integer/*pid*/, OSProcess> processes = new HashMap<>();",
        "patch": "@@ -99,7 +99,7 @@ public abstract class ProcessTree implements Iterable<OSProcess>, IProcessTree,\n     /**\n      * To be filled in the constructor of the derived type.\n      */\n-    protected final Map<Integer/*pid*/, OSProcess> processes = new HashMap<Integer, OSProcess>();\n+    protected final Map<Integer/*pid*/, OSProcess> processes = new HashMap<>();\n \n     /**\n      * Lazily obtained {@link ProcessKiller}s to be applied on this process tree."
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private Set<String> callstack = new HashSet<String>();",
        "fixed_code": "private Set<String> callstack = new HashSet<>();",
        "patch": "@@ -41,7 +41,7 @@ public class SecretRewriter {\n      * Canonical paths of the directories we are recursing to protect\n      * against symlink induced cycles.\n      */\n-    private Set<String> callstack = new HashSet<String>();\n+    private Set<String> callstack = new HashSet<>();\n \n     public SecretRewriter() throws GeneralSecurityException {\n         cipher = Secret.getCipher(\"AES\");"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final List<Entry> entries = new ArrayList<Entry>();",
        "fixed_code": "private final List<Entry> entries = new ArrayList<>();",
        "patch": "@@ -59,7 +59,7 @@ public interface WeightFunction<T> {\n         float weight(T item);\n     }\n \n-    private final List<Entry> entries = new ArrayList<Entry>();\n+    private final List<Entry> entries = new ArrayList<>();\n     private float max = 1;\n \n     /**"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "this.resolvers = resolvers.toArray(new VariableResolver[resolvers.size()]);",
        "fixed_code": "this.resolvers = resolvers.toArray(new VariableResolver[0]);",
        "patch": "@@ -87,7 +87,7 @@ public Union(VariableResolver<? extends V>... resolvers) {\n         }\n \n         public Union(Collection<? extends VariableResolver<? extends V>> resolvers) {\n-            this.resolvers = resolvers.toArray(new VariableResolver[resolvers.size()]);\n+            this.resolvers = resolvers.toArray(new VariableResolver[0]);\n         }\n \n         public V resolve(String name) {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private static final Set<String> DYNAMIC_PROPS = new HashSet<String>(Arrays.asList(AUTOWIRE, CONSTRUCTOR_ARGS, DESTROY_METHOD, FACTORY_BEAN, FACTORY_METHOD, INIT_METHOD, BY_NAME, BY_TYPE, BY_CONSTRUCTOR));",
        "fixed_code": "private static final Set<String> DYNAMIC_PROPS = new HashSet<>(Arrays.asList(AUTOWIRE, CONSTRUCTOR_ARGS, DESTROY_METHOD, FACTORY_BEAN, FACTORY_METHOD, INIT_METHOD, BY_NAME, BY_TYPE, BY_CONSTRUCTOR));",
        "patch": "@@ -50,7 +50,7 @@ class DefaultBeanConfiguration extends GroovyObjectSupport implements BeanConfig\n     private static final String PARENT = \"parent\";\n     private static final String BY_TYPE = \"byType\";\n     private static final String BY_CONSTRUCTOR = \"constructor\";\n-    private static final Set<String> DYNAMIC_PROPS = new HashSet<String>(Arrays.asList(AUTOWIRE, CONSTRUCTOR_ARGS, DESTROY_METHOD, FACTORY_BEAN, FACTORY_METHOD, INIT_METHOD, BY_NAME, BY_TYPE, BY_CONSTRUCTOR));\n+    private static final Set<String> DYNAMIC_PROPS = new HashSet<>(Arrays.asList(AUTOWIRE, CONSTRUCTOR_ARGS, DESTROY_METHOD, FACTORY_BEAN, FACTORY_METHOD, INIT_METHOD, BY_NAME, BY_TYPE, BY_CONSTRUCTOR));\n     private String parentName;\n \n     @Override"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "Collections.sort(result, new Comparator<View>() {",
        "fixed_code": "result.sort(new Comparator<View>() {",
        "patch": "@@ -83,7 +83,7 @@ public MyViewsTabBarDescriptor getDescriptor() {\n     @SuppressWarnings(\"unused\") // invoked from stapler view\n     public List<View> sort(@Nonnull List<? extends View> views) {\n         List<View> result = new ArrayList<>(views);\n-        Collections.sort(result, new Comparator<View>() {\n+        result.sort(new Comparator<View>() {\n             @Override\n             public int compare(View o1, View o2) {\n                 return o1.getDisplayName().compareTo(o2.getDisplayName());"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "LinkedList<Item> list = new LinkedList<Item>();",
        "fixed_code": "LinkedList<Item> list = new LinkedList<>();",
        "patch": "@@ -60,7 +60,7 @@ public Item getQueuedItem() {\n      * Returns the queue item if the owner is scheduled for execution in the queue, in REVERSE ORDER\n      */\n     public List<Item> getQueuedItems() {\n-        LinkedList<Item> list = new LinkedList<Item>();\n+        LinkedList<Item> list = new LinkedList<>();\n         for (Item item : Jenkins.getInstance().getQueue().getItems()) {\n             if (item.task == owner) {\n                 list.addFirst(item);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "TWICE_CPU_NUM, TWICE_CPU_NUM, 5L, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(), new DaemonThreadFactory());",
        "fixed_code": "TWICE_CPU_NUM, TWICE_CPU_NUM, 5L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(), new DaemonThreadFactory());",
        "patch": "@@ -41,7 +41,7 @@ public void run(Reactor reactor) throws InterruptedException, ReactorException,\n         ExecutorService es;\n         if (Jenkins.PARALLEL_LOAD)\n             es = new ThreadPoolExecutor(\n-                TWICE_CPU_NUM, TWICE_CPU_NUM, 5L, TimeUnit.SECONDS, new LinkedBlockingQueue<Runnable>(), new DaemonThreadFactory());\n+                TWICE_CPU_NUM, TWICE_CPU_NUM, 5L, TimeUnit.SECONDS, new LinkedBlockingQueue<>(), new DaemonThreadFactory());\n         else\n             es = Executors.newSingleThreadExecutor(new NamingThreadFactory(new DaemonThreadFactory(), \"InitReactorRunner\"));\n         try {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "Map<String,String> statuses = new HashMap<String,String>();",
        "fixed_code": "Map<String,String> statuses = new HashMap<>();",
        "patch": "@@ -316,7 +316,7 @@ public static synchronized void persistInstallStatus(List<UpdateCenterJob> insta\n \t\treturn;\n \t}\n \tLOGGER.fine(\"Writing install state to: \" + installingPluginsFile.getAbsolutePath());\n-\tMap<String,String> statuses = new HashMap<String,String>();\n+\tMap<String,String> statuses = new HashMap<>();\n \tfor(UpdateCenterJob j : installingPlugins) {\n \t\tif(j instanceof InstallationJob && j.getCorrelationId() != null) { // only include install jobs with a correlation id (directly selected)\n \t\t\tInstallationJob ij = (InstallationJob)j;"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "return new AnnotatedLargeText<AsynchronousAdministrativeMonitor>(",
        "fixed_code": "return new AnnotatedLargeText<>(",
        "patch": "@@ -47,7 +47,7 @@ public boolean isFixingActive() {\n      * Used to URL-bind {@link AnnotatedLargeText}.\n      */\n     public AnnotatedLargeText getLogText() {\n-        return new AnnotatedLargeText<AsynchronousAdministrativeMonitor>(\n+        return new AnnotatedLargeText<>(\n                 getLogFile(), Charset.defaultCharset(),\n                 !isFixingActive(), this);\n     }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final DescribableList<ArtifactManagerFactory,ArtifactManagerFactoryDescriptor> artifactManagerFactories = new DescribableList<ArtifactManagerFactory,ArtifactManagerFactoryDescriptor>(this);",
        "fixed_code": "private final DescribableList<ArtifactManagerFactory,ArtifactManagerFactoryDescriptor> artifactManagerFactories = new DescribableList<>(this);",
        "patch": "@@ -45,7 +45,7 @@ public class ArtifactManagerConfiguration extends GlobalConfiguration implements\n         return GlobalConfiguration.all().getInstance(ArtifactManagerConfiguration.class);\n     }\n \n-    private final DescribableList<ArtifactManagerFactory,ArtifactManagerFactoryDescriptor> artifactManagerFactories = new DescribableList<ArtifactManagerFactory,ArtifactManagerFactoryDescriptor>(this);\n+    private final DescribableList<ArtifactManagerFactory,ArtifactManagerFactoryDescriptor> artifactManagerFactories = new DescribableList<>(this);\n \n     private Object readResolve() {\n         artifactManagerFactories.setOwner(this);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "public final List<MenuItem> items = new ArrayList<MenuItem>();",
        "fixed_code": "public final List<MenuItem> items = new ArrayList<>();",
        "patch": "@@ -66,7 +66,7 @@ class ContextMenu implements HttpResponse {\n          * The actual contents of the menu.\n          */\n         @Exported(inline=true)\n-        public final List<MenuItem> items = new ArrayList<MenuItem>();\n+        public final List<MenuItem> items = new ArrayList<>();\n         \n         public void generateResponse(StaplerRequest req, StaplerResponse rsp, Object o) throws IOException, ServletException {\n             rsp.serveExposedBean(req,this,Flavor.JSON);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "items = new ArrayList<Category>();",
        "fixed_code": "items = new ArrayList<>();",
        "patch": "@@ -55,7 +55,7 @@ public class Categories implements HttpResponse, Serializable {\n     private List<Category> items;\n \n     public Categories() {\n-        items = new ArrayList<Category>();\n+        items = new ArrayList<>();\n     }\n \n     @Exported(name = \"categories\")"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "this.data = new ArrayList<T>(data);",
        "fixed_code": "this.data = new ArrayList<>(data);",
        "patch": "@@ -38,7 +38,7 @@ class SortedList<T extends Comparable<T>> extends AbstractList<T> {\n     private List<T> data;\n \n     public SortedList(List<T> data) {\n-        this.data = new ArrayList<T>(data);\n+        this.data = new ArrayList<>(data);\n         assert isSorted();\n     }\n "
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "allowedSchemes = new HashSet<String>(schemes.length);",
        "fixed_code": "allowedSchemes = new HashSet<>(schemes.length);",
        "patch": "@@ -283,7 +283,7 @@ public UrlValidator(String[] schemes, RegexValidator authorityValidator, long op\n             if (schemes == null) {\n                 schemes = DEFAULT_SCHEMES;\n             }\n-            allowedSchemes = new HashSet<String>(schemes.length);\n+            allowedSchemes = new HashSet<>(schemes.length);\n             for (String scheme : schemes) {\n                 allowedSchemes.add(scheme.toLowerCase(Locale.ENGLISH));\n             }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "tokenName = String.format(\"Token created on %s\", DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(ZonedDateTime.now()));",
        "fixed_code": "tokenName = Messages.Token_Created_on(DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(ZonedDateTime.now()));",
        "patch": "@@ -474,7 +474,7 @@ public HttpResponse doGenerateNewToken(@AncestorInPath User u, @QueryParameter S\n             \n             final String tokenName;\n             if (StringUtils.isBlank(newTokenName)) {\n-                tokenName = String.format(\"Token created on %s\", DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(ZonedDateTime.now()));\n+                tokenName = Messages.Token_Created_on(DateTimeFormatter.ISO_OFFSET_DATE_TIME.format(ZonedDateTime.now()));\n             }else{\n                 tokenName = newTokenName;\n             }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "= new DescribableList<QueueItemAuthenticator, QueueItemAuthenticatorDescriptor>(this);",
        "fixed_code": "= new DescribableList<>(this);",
        "patch": "@@ -23,7 +23,7 @@\n @Extension @Symbol(\"queueItemAuthenticator\")\n public class QueueItemAuthenticatorConfiguration extends GlobalConfiguration implements PersistentDescriptor {\n     private final DescribableList<QueueItemAuthenticator,QueueItemAuthenticatorDescriptor> authenticators\n-        = new DescribableList<QueueItemAuthenticator, QueueItemAuthenticatorDescriptor>(this);\n+        = new DescribableList<>(this);\n \n     private Object readResolve() {\n         authenticators.setOwner(this);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "delegate = new ArrayList<QueueItemAuthenticator>(provider.getAuthenticators()).iterator();",
        "fixed_code": "delegate = new ArrayList<>(provider.getAuthenticators()).iterator();",
        "patch": "@@ -41,7 +41,7 @@ public boolean hasNext() {\n                 if (provider == null) {\n                     continue;\n                 }\n-                delegate = new ArrayList<QueueItemAuthenticator>(provider.getAuthenticators()).iterator();\n+                delegate = new ArrayList<>(provider.getAuthenticators()).iterator();\n             }\n             return delegate != null && delegate.hasNext();\n         }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<String> groups = new ArrayList<String>();",
        "fixed_code": "List<String> groups = new ArrayList<>();",
        "patch": "@@ -93,7 +93,7 @@ protected void loggedOut(@Nonnull String username){}\n     /** @since 1.569 */\n     public static void fireAuthenticated(@Nonnull UserDetails details) {\n         if (LOGGER.isLoggable(Level.FINE)) {\n-            List<String> groups = new ArrayList<String>();\n+            List<String> groups = new ArrayList<>();\n             for (GrantedAuthority auth : details.getAuthorities()) {\n                 if (!auth.equals(SecurityRealm.AUTHENTICATED_AUTHORITY)) {\n                     groups.add(auth.getAuthority());"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "activePluginWarningsByPlugin.put(plugin, new ArrayList<UpdateSite.Warning>());",
        "fixed_code": "activePluginWarningsByPlugin.put(plugin, new ArrayList<>());",
        "patch": "@@ -112,7 +112,7 @@ public Map<PluginWrapper, List<UpdateSite.Warning>> getActivePluginWarningsByPlu\n             PluginWrapper plugin = Jenkins.getInstance().getPluginManager().getPlugin(pluginName);\n \n             if (!activePluginWarningsByPlugin.containsKey(plugin)) {\n-                activePluginWarningsByPlugin.put(plugin, new ArrayList<UpdateSite.Warning>());\n+                activePluginWarningsByPlugin.put(plugin, new ArrayList<>());\n             }\n             activePluginWarningsByPlugin.get(plugin).add(warning);\n         }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "return new HashSet<String>();",
        "fixed_code": "return new HashSet<>();",
        "patch": "@@ -20,7 +20,7 @@ class CallableWhitelistConfig extends ConfigDirectory<String,Set<String>> {\n \n     @Override\n     protected Set<String> create() {\n-        return new HashSet<String>();\n+        return new HashSet<>();\n     }\n \n     @Override"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "return new ArrayList<FilePathRule>();",
        "fixed_code": "return new ArrayList<>();",
        "patch": "@@ -26,7 +26,7 @@ class FilePathRuleConfig extends ConfigDirectory<FilePathRule,List<FilePathRule>\n \n     @Override\n     protected List<FilePathRule> create() {\n-        return new ArrayList<FilePathRule>();\n+        return new ArrayList<>();\n     }\n \n     @Override"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "LIBC.execv(exe, new StringArray(args.toArray(new String[args.size()])));",
        "fixed_code": "LIBC.execv(exe, new StringArray(args.toArray(new String[0])));",
        "patch": "@@ -54,7 +54,7 @@ public void restart() throws Exception {\n \n         // exec to self\n         String exe = Daemon.getCurrentExecutable();\n-        LIBC.execv(exe, new StringArray(args.toArray(new String[args.size()])));\n+        LIBC.execv(exe, new StringArray(args.toArray(new String[0])));\n         throw new IOException(\"Failed to exec '\" + exe + \"' \" + LIBC.strerror(Native.getLastError()));\n     }\n "
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final Map<String,String> env = new HashMap<String,String>();",
        "fixed_code": "private final Map<String,String> env = new HashMap<>();",
        "patch": "@@ -82,7 +82,7 @@ public abstract class SimpleBuildWrapper extends BuildWrapper {\n      */\n     public static final class Context {\n         private Disposer disposer;\n-        private final Map<String,String> env = new HashMap<String,String>();\n+        private final Map<String,String> env = new HashMap<>();\n         public @Nonnull Map<String,String> getEnv() {\n             return env;\n         }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "List<Callable<T>> r = new ArrayList<Callable<T>>();",
        "fixed_code": "List<Callable<T>> r = new ArrayList<>();",
        "patch": "@@ -75,7 +75,7 @@ public void execute(Runnable command) {\n     }\n \n     private <T> Collection<Callable<T>> wrap(Collection<? extends Callable<T>> callables) {\n-        List<Callable<T>> r = new ArrayList<Callable<T>>();\n+        List<Callable<T>> r = new ArrayList<>();\n         for (Callable<T> c : callables) {\n             r.add(wrap(c));\n         }"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "final Map<String,Object> getters = new HashMap<String,Object>();",
        "fixed_code": "final Map<String,Object> getters = new HashMap<>();",
        "patch": "@@ -161,7 +161,7 @@ private void release() {\n     private static RequestImpl createMockRequest() {\n         RequestImpl currentRequest = (RequestImpl) Stapler.getCurrentRequest();\n         HttpServletRequest original = (HttpServletRequest) currentRequest.getRequest();\n-        final Map<String,Object> getters = new HashMap<String,Object>();\n+        final Map<String,Object> getters = new HashMap<>();\n         for (Method method : HttpServletRequest.class.getMethods()) {\n             String m = method.getName();\n             if ((m.startsWith(\"get\") || m.startsWith(\"is\")) && method.getParameterTypes().length == 0) {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "final List<String> paths = new ArrayList<String>();",
        "fixed_code": "final List<String> paths = new ArrayList<>();",
        "patch": "@@ -855,7 +855,7 @@ private static final class Scanner extends MasterToSlaveFileCallable<List<String\n             if (includes.isEmpty()) { // see Glob class Javadoc, and list(String, String, boolean) note\n                 return Collections.emptyList();\n             }\n-            final List<String> paths = new ArrayList<String>();\n+            final List<String> paths = new ArrayList<>();\n             new DirScanner.Glob(includes, excludes, useDefaultExcludes).scan(f, new FileVisitor() {\n                 @Override\n                 public void visit(File f, String relativePath) throws IOException {"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "for (String res : new TreeSet<String>(resources)) {",
        "fixed_code": "for (String res : new TreeSet<>(resources)) {",
        "patch": "@@ -83,7 +83,7 @@ public void run() {\n         Set<String> resources = servletContext.getResourcePaths(\"/WEB-INF/\"+ hookGroovyD +\"/\");\n         if (resources!=null) {\n             // sort to execute them in a deterministic order\n-            for (String res : new TreeSet<String>(resources)) {\n+            for (String res : new TreeSet<>(resources)) {\n                 try {\n                     URL bundled = servletContext.getResource(res);\n                     execute(bundled);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private static final Set<String> DEFAULT_ILLEGAL_FUNCTIONS = Collections.unmodifiableSet(new HashSet<String>(",
        "fixed_code": "private static final Set<String> DEFAULT_ILLEGAL_FUNCTIONS = Collections.unmodifiableSet(new HashSet<>(",
        "patch": "@@ -52,7 +52,7 @@ public class FilteredFunctionContext implements FunctionContext {\n     /**\n      * Default set of \"bad\" function names.\n      */\n-    private static final Set<String> DEFAULT_ILLEGAL_FUNCTIONS = Collections.unmodifiableSet(new HashSet<String>(\n+    private static final Set<String> DEFAULT_ILLEGAL_FUNCTIONS = Collections.unmodifiableSet(new HashSet<>(\n             Arrays.asList(\"document\")\n     ));\n     private final FunctionContext base;"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "Collections.sort(items, new Comparator<Object>() {",
        "fixed_code": "items.sort(new Comparator<Object>() {",
        "patch": "@@ -235,7 +235,7 @@ private void sort(List<? extends Object> items) {\n         // Queue items can start building out of order with how they got added to the queue. Sorting them\n         // before adding to the page. They'll still get displayed before the building items coz they end\n         // up in a different list in HistoryPageFilter.\n-        Collections.sort(items, new Comparator<Object>() {\n+        items.sort(new Comparator<Object>() {\n             @Override\n             public int compare(Object o1, Object o2) {\n                 long o1QID = HistoryPageEntry.getEntryId(o1);"
    },
    {
        "commit_id": "2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "commit_message": "Merge branch 'master' into patch-3",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2924bdd36a1555d42b3f2ecb36dcd8e1e8007c1b",
        "buggy_code": "private final List<JSONObject> results = new ArrayList<JSONObject>();",
        "fixed_code": "private final List<JSONObject> results = new ArrayList<>();",
        "patch": "@@ -47,7 +47,7 @@ public abstract class RunListProgressiveRendering extends ProgressiveRendering {\n      * but then like Zeno\u2019s paradox we will never seem to finish until we actually do.\n      */\n     private static final double MAX_LIKELY_RUNS = 20;\n-    private final List<JSONObject> results = new ArrayList<JSONObject>();\n+    private final List<JSONObject> results = new ArrayList<>();\n     private Iterable<? extends Run<?,?>> builds;\n \n     /** Jelly cannot call a constructor with arguments. */"
    },
    {
        "commit_id": "d9c20b68af3ca8f25e6da043051a1942ce7f0f9c",
        "commit_message": "Correct DownloadService TimeUnit mix on lastAttempt (#3928)\n\n* Revert DownloadService TimeUnit mix on lastAttempt\r\n\r\nDownloadable.lastAttempt is set in milliseconds but the PR-3913 change\r\nthe test to toMillis(millis+seconds)<millis.\r\n\r\nThank you @pzygielo for this catch.\r\n\r\n* Fix DownloadService time unit usage\r\n\r\nThank you @daniel-beck\r\n\r\nCo-Authored-By: alecharp <adrien.lecharpentier@gmail.com>\r\n\r\n* Fix DownloadService missing import",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d9c20b68af3ca8f25e6da043051a1942ce7f0f9c",
        "buggy_code": "if(d.getDue()<now && TimeUnit.SECONDS.toMillis(d.lastAttempt+10)<now) {",
        "fixed_code": "if(d.getDue()<now && d.lastAttempt+TimeUnit.SECONDS.toMillis(10)<now) {",
        "patch": "@@ -92,7 +92,7 @@ public String generateFragment() {\n         if(Jenkins.getInstance().hasPermission(Jenkins.READ)) {\n             long now = System.currentTimeMillis();\n             for (Downloadable d : Downloadable.all()) {\n-                if(d.getDue()<now && TimeUnit.SECONDS.toMillis(d.lastAttempt+10)<now) {\n+                if(d.getDue()<now && d.lastAttempt+TimeUnit.SECONDS.toMillis(10)<now) {\n                     buf.append(\"<script>\")\n                        .append(\"Behaviour.addLoadEvent(function() {\")\n                        .append(\"  downloadService.download(\")"
    },
    {
        "commit_id": "95ada0a6721b704f832d772d4b9865101c7f7cb3",
        "commit_message": "Fix test failure\n\nSigned-off-by: Matt Sicker <boards@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/95ada0a6721b704f832d772d4b9865101c7f7cb3",
        "buggy_code": "File j1 = WindowsUtil.createJunction(tmp.getRoot(), subdir1);",
        "fixed_code": "File j1 = WindowsUtil.createJunction(new File(tmp.getRoot(), \"test junction\"), subdir1);",
        "patch": "@@ -34,7 +34,7 @@ public void testJunctionIsRemovedButNotContents() throws Exception {\n         File subdir1 = tmp.newFolder(\"notJunction\");\n         File f1 = new File(subdir1, \"testfile1.txt\");\n         assertTrue(\"Unable to create temporary file in notJunction directory\", f1.createNewFile());\n-        File j1 = WindowsUtil.createJunction(tmp.getRoot(), subdir1);\n+        File j1 = WindowsUtil.createJunction(new File(tmp.getRoot(), \"test junction\"), subdir1);\n         Util.deleteRecursive(j1);\n         assertFalse(\"Windows Junction should have been removed\", j1.exists());\n         assertTrue(\"Contents of Windows Junction should not be removed\", f1.exists());"
    },
    {
        "commit_id": "1b23a9e119e21f4330fa05c671ca3c48404bc7af",
        "commit_message": "Fix symlink check logic to support junctions again\n\nSigned-off-by: Matt Sicker <boards@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1b23a9e119e21f4330fa05c671ca3c48404bc7af",
        "buggy_code": "List<IOException> accumulatedErrors = Files.isSymbolicLink(path) ? new ArrayList<>() :",
        "fixed_code": "List<IOException> accumulatedErrors = Util.isSymlink(path) ? new ArrayList<>() :",
        "patch": "@@ -197,7 +197,7 @@ private static Optional<IOException> tryRemoveFile(@Nonnull Path path) {\n     }\n \n     private static List<IOException> tryRemoveRecursive(@Nonnull Path path) {\n-        List<IOException> accumulatedErrors = Files.isSymbolicLink(path) ? new ArrayList<>() :\n+        List<IOException> accumulatedErrors = Util.isSymlink(path) ? new ArrayList<>() :\n                 tryRemoveDirectoryContents(path);\n         tryRemoveFile(path).ifPresent(accumulatedErrors::add);\n         return accumulatedErrors;"
    },
    {
        "commit_id": "97f539d003cc579fc57de29011bebae1320747b6",
        "commit_message": "Fix off by one error in error message\n\nSigned-off-by: Matt Sicker <boards@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/97f539d003cc579fc57de29011bebae1320747b6",
        "buggy_code": "sb.append(retryCount);",
        "fixed_code": "sb.append(retryCount + 1);",
        "patch": "@@ -155,7 +155,7 @@ public String failureMessage(@Nonnull Path fileToRemove, int retryCount) {\n             sb.append(\"Unable to delete '\");\n             sb.append(fileToRemove);\n             sb.append(\"'. Tried \");\n-            sb.append(retryCount);\n+            sb.append(retryCount + 1);\n             sb.append(\" time\");\n             if (retryCount != 1) sb.append('s');\n             if (maxRetries > 0) {"
    },
    {
        "commit_id": "e67d24c2efa0479cd363c48df6fc15eba37d1dac",
        "commit_message": "Fix off by one math logic\n\nSigned-off-by: Matt Sicker <boards@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e67d24c2efa0479cd363c48df6fc15eba37d1dac",
        "buggy_code": "long delayMillis = waitBetweenRetries >= 0 ? waitBetweenRetries : -retriesAttempted * waitBetweenRetries;",
        "fixed_code": "long delayMillis = waitBetweenRetries >= 0 ? waitBetweenRetries : -(retriesAttempted + 1) * waitBetweenRetries;",
        "patch": "@@ -138,7 +138,7 @@ private void gcIfEnabled() {\n         public boolean shouldRetry(int retriesAttempted) {\n             if (retriesAttempted >= maxRetries) return false;\n             gcIfEnabled();\n-            long delayMillis = waitBetweenRetries >= 0 ? waitBetweenRetries : -retriesAttempted * waitBetweenRetries;\n+            long delayMillis = waitBetweenRetries >= 0 ? waitBetweenRetries : -(retriesAttempted + 1) * waitBetweenRetries;\n             if (delayMillis <= 0) return !Thread.interrupted();\n             try {\n                 Thread.sleep(delayMillis);"
    },
    {
        "commit_id": "d60a5447a4e00564e5bd1d13e8f9ecce589cf517",
        "commit_message": "Merge pull request #3796 from jvz/patch-1\n\nImprove test assertion",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d60a5447a4e00564e5bd1d13e8f9ecce589cf517",
        "buggy_code": "assertEquals(\"{}\", env.toString());",
        "fixed_code": "assertTrue(env.isEmpty());",
        "patch": "@@ -270,7 +270,7 @@ public void parametersReferencedFromPropertiesShouldRetainBackslashes() throws E\n     @Test public void testNullHome() {\n         EnvVars env = new EnvVars();\n         new MavenInstallation(\"_\", \"\", Collections.<ToolProperty<?>>emptyList()).buildEnvVars(env);\n-        assertEquals(\"{}\", env.toString());\n+        assertTrue(env.isEmpty());\n     }\n \n     @Issue(\"JENKINS-26684\")"
    },
    {
        "commit_id": "366a305be43d5a7c1ae42204cc9e5c65bf65bf49",
        "commit_message": "[JENKINS-55080] - Fix the experimental UC URL",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/366a305be43d5a7c1ae42204cc9e5c65bf65bf49",
        "buggy_code": "String experimentalJava11UC = \"https://updates.jenkins.io/temporary-experimental-java11\";",
        "fixed_code": "String experimentalJava11UC = \"https://updates.jenkins.io/temporary-experimental-java11/\";",
        "patch": "@@ -220,7 +220,7 @@ public class UpdateCenter extends AbstractModelObject implements Saveable, OnMas\n             UPDATE_CENTER_URL = \"https://updates.jenkins.io/\";\n         } else {\n             //TODO: Rollback the default for Java 11 when it goes to GA\n-            String experimentalJava11UC = \"https://updates.jenkins.io/temporary-experimental-java11\";\n+            String experimentalJava11UC = \"https://updates.jenkins.io/temporary-experimental-java11/\";\n             logger.log(Level.WARNING, \"Running Jenkins with Java {0} which is available in the preview mode only. \" +\n                     \"A custom experimental update center will be used: {1}\",\n                     new Object[] {System.getProperty(\"java.specification.version\"), experimentalJava11UC});"
    },
    {
        "commit_id": "b6b7656076ee180d07a73afdced96feb2459e19f",
        "commit_message": "Merge pull request #3768 from MRamonLeon/JENKINS-54731\n\n[JENKINS-54731] Fix checkUpdateAttempts system property",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b6b7656076ee180d07a73afdced96feb2459e19f",
        "buggy_code": "CHECK_UPDATE_ATTEMPTS = SystemProperties.getInteger(PluginManager.class.getName() + \".CHECK_UPDATE_ATTEMPTS\", 1);",
        "fixed_code": "CHECK_UPDATE_ATTEMPTS = SystemProperties.getInteger(PluginManager.class.getName() + \".checkUpdateAttempts\", 1);",
        "patch": "@@ -194,7 +194,7 @@ public abstract class PluginManager extends AbstractModelObject implements OnMas\n         try {\n             // Secure initialization\n             CHECK_UPDATE_SLEEP_TIME_MILLIS = SystemProperties.getInteger(PluginManager.class.getName() + \".checkUpdateSleepTimeMillis\", 1000);\n-            CHECK_UPDATE_ATTEMPTS = SystemProperties.getInteger(PluginManager.class.getName() + \".CHECK_UPDATE_ATTEMPTS\", 1);\n+            CHECK_UPDATE_ATTEMPTS = SystemProperties.getInteger(PluginManager.class.getName() + \".checkUpdateAttempts\", 1);\n         } catch(Exception e) {\n             LOGGER.warning(String.format(\"There was an error initializing the PluginManager. Exception: %s\", e));\n         } finally {"
    },
    {
        "commit_id": "95c8b214072f53e05b81a357193acd77f02bd171",
        "commit_message": "Merge pull request #3769 from MRamonLeon/JENKINS-54459-fix-flaky-retriertest\n\n[JENKINS-54459] Fix flaky on delay test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/95c8b214072f53e05b81a357193acd77f02bd171",
        "buggy_code": "Assert.assertTrue(timeElapsed > SLEEP);",
        "fixed_code": "Assert.assertTrue(timeElapsed >= SLEEP);",
        "patch": "@@ -97,7 +97,7 @@ public void sleepWorksTest() throws Exception {\n         long timeElapsed = Duration.between(start, finish).toMillis();\n \n         // Check delay works\n-        Assert.assertTrue(timeElapsed > SLEEP);\n+        Assert.assertTrue(timeElapsed >= SLEEP);\n \n         // Check result is true\n         Assert.assertTrue(finalResult == null ? false : finalResult);"
    },
    {
        "commit_id": "978f001bebcd57f380f44a218437b6195bd6f94f",
        "commit_message": "[JENKINS-54459] Fix flaky on delay test\n\nSometimes the execution last exactly SLEEP milliseconds so it becomes\na failure.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/978f001bebcd57f380f44a218437b6195bd6f94f",
        "buggy_code": "Assert.assertTrue(timeElapsed > SLEEP);",
        "fixed_code": "Assert.assertTrue(timeElapsed >= SLEEP);",
        "patch": "@@ -97,7 +97,7 @@ public void sleepWorksTest() throws Exception {\n         long timeElapsed = Duration.between(start, finish).toMillis();\n \n         // Check delay works\n-        Assert.assertTrue(timeElapsed > SLEEP);\n+        Assert.assertTrue(timeElapsed >= SLEEP);\n \n         // Check result is true\n         Assert.assertTrue(finalResult == null ? false : finalResult);"
    },
    {
        "commit_id": "b1e8c6565cef1f6f3e979c50eb0d6580460cbc64",
        "commit_message": "[JENKINS-54731] Fix checkUpdateAttempts system property\n\nRename hudson.PluginManager.CHECK_UPDATE_ATTEMPTS system property to\nhudson.PluginManager.checkUpdateAttempts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b1e8c6565cef1f6f3e979c50eb0d6580460cbc64",
        "buggy_code": "CHECK_UPDATE_ATTEMPTS = SystemProperties.getInteger(PluginManager.class.getName() + \".CHECK_UPDATE_ATTEMPTS\", 1);",
        "fixed_code": "CHECK_UPDATE_ATTEMPTS = SystemProperties.getInteger(PluginManager.class.getName() + \".checkUpdateAttempts\", 1);",
        "patch": "@@ -194,7 +194,7 @@ public abstract class PluginManager extends AbstractModelObject implements OnMas\n         try {\n             // Secure initialization\n             CHECK_UPDATE_SLEEP_TIME_MILLIS = SystemProperties.getInteger(PluginManager.class.getName() + \".checkUpdateSleepTimeMillis\", 1000);\n-            CHECK_UPDATE_ATTEMPTS = SystemProperties.getInteger(PluginManager.class.getName() + \".CHECK_UPDATE_ATTEMPTS\", 1);\n+            CHECK_UPDATE_ATTEMPTS = SystemProperties.getInteger(PluginManager.class.getName() + \".checkUpdateAttempts\", 1);\n         } catch(Exception e) {\n             LOGGER.warning(String.format(\"There was an error initializing the PluginManager. Exception: %s\", e));\n         } finally {"
    },
    {
        "commit_id": "d4121efe10d3169ccfe6d8a7e1381a90dcd5643b",
        "commit_message": "JENKINS-36547: Introduce Queue.Task.getAffinityKey() (#3611)\n\n* JENKINS-36547: Introduce Queue.Task.getAffinityKey()\r\n\r\nand use it in LoadBalancer.assignGreedily() to find a node for a task.\r\n\r\n* JENKINS-36547: Fix Javadoc error\r\n\r\n* fixup! JENKINS-36547: Fix Javadoc error\r\n\r\n* Fixed Javadoc for Queue.getAffinityKey()",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d4121efe10d3169ccfe6d8a7e1381a90dcd5643b",
        "buggy_code": "String key = task.getFullDisplayName() + (i>0 ? String.valueOf(i) : \"\");",
        "fixed_code": "String key = task.getAffinityKey() + (i>0 ? String.valueOf(i) : \"\");",
        "patch": "@@ -112,7 +112,7 @@ public String hash(ExecutorChunk node) {\n         private boolean assignGreedily(Mapping m, Task task, List<ConsistentHash<ExecutorChunk>> hashes, int i) {\n             if (i==hashes.size())   return true;    // fully assigned\n \n-            String key = task.getFullDisplayName() + (i>0 ? String.valueOf(i) : \"\");\n+            String key = task.getAffinityKey() + (i>0 ? String.valueOf(i) : \"\");\n \n             for (ExecutorChunk ec : hashes.get(i).list(key)) {\n                 // let's attempt this assignment"
    },
    {
        "commit_id": "b5be66014c3c7a99eed1ed7436a0874686e255b5",
        "commit_message": "[JENKINS-53693] - Update PowerMock and Mockito to a Java11-compatible version (#3637)\n\n* [JENKINS-53693] - Update PowerMock and Mockito to a Java11-compatible version\r\n\r\n* [JENKINS-53693] - Fix tests which depend on mocking\r\n\r\n* [JENKINS-53693] - Apply fixes to PowerMock",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b5be66014c3c7a99eed1ed7436a0874686e255b5",
        "buggy_code": "verifyStatic(times(0));",
        "fixed_code": "verifyStatic(Computer.class, times(0));",
        "patch": "@@ -54,7 +54,7 @@ public void buildEnvironmentForJobShouldntUseCurrentComputer() throws IOExceptio\n         \n         // currentComputer shouldn't be called since it relates to a running build,\n         // which is not the case for calls of this method (e.g. polling) \n-        verifyStatic(times(0));\n+        verifyStatic(Computer.class, times(0));\n         Computer.currentComputer();\n     }\n "
    },
    {
        "commit_id": "eb1a1f757a4a03678bf3b7968eba0cb1c7f364df",
        "commit_message": "Merge pull request #3638 from oleg-nenashev/build/JobTest_annotation\n\nFix the FindBugs issue in the test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/eb1a1f757a4a03678bf3b7968eba0cb1c7f364df",
        "buggy_code": "EnvVars env = job.getEnvironment(node, null);",
        "fixed_code": "EnvVars env = job.getEnvironment(node, TaskListener.NULL);",
        "patch": "@@ -74,7 +74,7 @@ public void use_slave_platform_path_separator_when_contribute_path() throws Thro\n         Node node = PowerMockito.mock(Node.class);\n         PowerMockito.doReturn(c).when(node).toComputer();\n \n-        EnvVars env = job.getEnvironment(node, null);\n+        EnvVars env = job.getEnvironment(node, TaskListener.NULL);\n         String path = \"/test\";\n         env.override(\"PATH+TEST\", path);\n "
    },
    {
        "commit_id": "1c837d391be12fc68a7512f7a10fd7f84a6ddddb",
        "commit_message": "Fix the FindBugs issue in the test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1c837d391be12fc68a7512f7a10fd7f84a6ddddb",
        "buggy_code": "EnvVars env = job.getEnvironment(node, null);",
        "fixed_code": "EnvVars env = job.getEnvironment(node, TaskListener.NULL);",
        "patch": "@@ -74,7 +74,7 @@ public void use_slave_platform_path_separator_when_contribute_path() throws Thro\n         Node node = PowerMockito.mock(Node.class);\n         PowerMockito.doReturn(c).when(node).toComputer();\n \n-        EnvVars env = job.getEnvironment(node, null);\n+        EnvVars env = job.getEnvironment(node, TaskListener.NULL);\n         String path = \"/test\";\n         env.override(\"PATH+TEST\", path);\n "
    },
    {
        "commit_id": "c926d5b79f4bdd8b9e744035473a20f5ceb4926c",
        "commit_message": "Merge pull request #3527 from ericyu2018/JENKINS-52181\n\nFix JENKINS-52181 about permission issue when using cli to get console",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c926d5b79f4bdd8b9e744035473a20f5ceb4926c",
        "buggy_code": "job.checkPermission(Item.BUILD);",
        "fixed_code": "job.checkPermission(Item.READ);",
        "patch": "@@ -41,7 +41,7 @@ public String getShortDescription() {\n     public int n = -1;\n \n     protected int run() throws Exception {\n-        job.checkPermission(Item.BUILD);\n+        job.checkPermission(Item.READ);\n \n         Run<?,?> run;\n "
    },
    {
        "commit_id": "cdc97dc114964b2c559368e471e3557d5fee4bc9",
        "commit_message": "Fix JENKINS-52181 about permission issue when using cli to get console\n\nFixed https://issues.jenkins-ci.org/browse/JENKINS-52181 about issue when using jenkins-cli to get console of a project requires user has Job/Build permission as per guidance from Oleg Nenashev.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cdc97dc114964b2c559368e471e3557d5fee4bc9",
        "buggy_code": "job.checkPermission(Item.BUILD);",
        "fixed_code": "job.checkPermission(Item.READ);",
        "patch": "@@ -41,7 +41,7 @@ public String getShortDescription() {\n     public int n = -1;\n \n     protected int run() throws Exception {\n-        job.checkPermission(Item.BUILD);\n+        job.checkPermission(Item.READ);\n \n         Run<?,?> run;\n "
    },
    {
        "commit_id": "65108e42f41079e17622e57c2542e04d3ef64976",
        "commit_message": "[JENKINS-28683] Fix unit test and remove unised import.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/65108e42f41079e17622e57c2542e04d3ef64976",
        "buggy_code": "int size = PeriodicWork.all().size();",
        "fixed_code": "int size = AperiodicWork.all().size();",
        "patch": "@@ -23,7 +23,7 @@ public class APeriodicWorkTest {\n     public void newExtensionsAreScheduled() throws Exception {\n         TestAperiodicWork tapw = new TestAperiodicWork();\n \n-        int size = PeriodicWork.all().size();\n+        int size = AperiodicWork.all().size();\n         ExtensionList.lookup(AperiodicWork.class).add(tapw);\n \n         assertThat(\"we have one new AperiodicWork\", AperiodicWork.all(), hasSize(size+1));"
    },
    {
        "commit_id": "a372afff946a83bb38efb0aad110142a69407297",
        "commit_message": "[JENKINS-48480] Switch deprecated protocols to opt-in. (#3188)\n\n* [JENKINS-48480] Switch deprecated protocols to opt-in.\r\n\r\nThey no longer need to be removed by setup wizard since they won't be\r\nenabled in the first place.\r\n\r\n* [JENKINS-48480] Fix tests\r\n\r\n* [JENKINS-48480] Remove useless calls to CLI.get().setEnabled(true)\r\n\r\nIt is already enabled.\r\n\r\n* [JENKINS-48480] Bump remoting.minimum.supported.version to 3.4",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a372afff946a83bb38efb0aad110142a69407297",
        "buggy_code": "return false;",
        "fixed_code": "return true;",
        "patch": "@@ -35,7 +35,7 @@ public String getName() {\n      */\n     @Override\n     public boolean isOptIn() {\n-        return false;\n+        return true;\n     }\n \n     @Override"
    },
    {
        "commit_id": "a372afff946a83bb38efb0aad110142a69407297",
        "commit_message": "[JENKINS-48480] Switch deprecated protocols to opt-in. (#3188)\n\n* [JENKINS-48480] Switch deprecated protocols to opt-in.\r\n\r\nThey no longer need to be removed by setup wizard since they won't be\r\nenabled in the first place.\r\n\r\n* [JENKINS-48480] Fix tests\r\n\r\n* [JENKINS-48480] Remove useless calls to CLI.get().setEnabled(true)\r\n\r\nIt is already enabled.\r\n\r\n* [JENKINS-48480] Bump remoting.minimum.supported.version to 3.4",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a372afff946a83bb38efb0aad110142a69407297",
        "buggy_code": "return false;",
        "fixed_code": "return true;",
        "patch": "@@ -50,7 +50,7 @@ public String getName() {\n      */\n     @Override\n     public boolean isOptIn() {\n-        return false;\n+        return true;\n     }\n \n     @Override"
    },
    {
        "commit_id": "3485779ec28e7c5c51b9cda6307481b94758d5e0",
        "commit_message": "Merge pull request #3406 from Wadeck/FIX_CLI_LOGOUT_TEST_FAILURE\n\nFix the CLI test failure",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3485779ec28e7c5c51b9cda6307481b94758d5e0",
        "buggy_code": "if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand))",
        "fixed_code": "if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand || this instanceof WhoAmICommand))",
        "patch": "@@ -268,7 +268,7 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n             sc.setAuthentication(getTransportAuthentication());\n             new ClassParser().parse(authenticator,p);\n \n-            if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand))\n+            if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand || this instanceof WhoAmICommand))\n                 Jenkins.getActiveInstance().checkPermission(Jenkins.READ);\n             p.parseArgument(args.toArray(new String[args.size()]));\n             Authentication auth = authenticator.authenticate();"
    },
    {
        "commit_id": "df137f099ec2000a00946fc307503d42269970d6",
        "commit_message": "Fix the CLI test failure",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/df137f099ec2000a00946fc307503d42269970d6",
        "buggy_code": "if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand))",
        "fixed_code": "if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand || this instanceof WhoAmICommand))",
        "patch": "@@ -268,7 +268,7 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n             sc.setAuthentication(getTransportAuthentication());\n             new ClassParser().parse(authenticator,p);\n \n-            if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand))\n+            if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand || this instanceof WhoAmICommand))\n                 Jenkins.getActiveInstance().checkPermission(Jenkins.READ);\n             p.parseArgument(args.toArray(new String[args.size()]));\n             Authentication auth = authenticator.authenticate();"
    },
    {
        "commit_id": "22629729b31507c279b4971d9d983bde3a473dc5",
        "commit_message": "Fix the CLI tests for logout of user without READ permission",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/22629729b31507c279b4971d9d983bde3a473dc5",
        "buggy_code": "if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand))",
        "fixed_code": "if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand || this instanceof WhoAmICommand))",
        "patch": "@@ -268,7 +268,7 @@ public int main(List<String> args, Locale locale, InputStream stdin, PrintStream\n             sc.setAuthentication(getTransportAuthentication());\n             new ClassParser().parse(authenticator,p);\n \n-            if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand))\n+            if (!(this instanceof LoginCommand || this instanceof LogoutCommand || this instanceof HelpCommand || this instanceof WhoAmICommand))\n                 Jenkins.getActiveInstance().checkPermission(Jenkins.READ);\n             p.parseArgument(args.toArray(new String[args.size()]));\n             Authentication auth = authenticator.authenticate();"
    },
    {
        "commit_id": "5d4a76d28423dea1aedbb7ee73e9444a834b2ff9",
        "commit_message": "[JENKINS-49573] Fix bad serialization of ParametersAction.parameterDefinitionNames.\n\n(cherry picked part of commit fcae9bb59881a8878774e4ebbe563935ed1382b4)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5d4a76d28423dea1aedbb7ee73e9444a834b2ff9",
        "buggy_code": "this.parameterDefinitionNames = p.getParameterDefinitionNames();",
        "fixed_code": "this.parameterDefinitionNames = new ArrayList<>(p.getParameterDefinitionNames());",
        "patch": "@@ -299,7 +299,7 @@ private Object readResolve() {\n     public void onAttached(Run<?, ?> r) {\n         ParametersDefinitionProperty p = r.getParent().getProperty(ParametersDefinitionProperty.class);\n         if (p != null) {\n-            this.parameterDefinitionNames = p.getParameterDefinitionNames();\n+            this.parameterDefinitionNames = new ArrayList<>(p.getParameterDefinitionNames());\n         } else {\n             this.parameterDefinitionNames = Collections.emptyList();\n         }"
    },
    {
        "commit_id": "7d13e179c9df453b0d6ad4e52acce0d54d61746a",
        "commit_message": "[JENKINS-50296] Had used wrong issue number",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7d13e179c9df453b0d6ad4e52acce0d54d61746a",
        "buggy_code": "@Issue(\"JENKINS-42556\")",
        "fixed_code": "@Issue(\"JENKINS-50296\")",
        "patch": "@@ -38,7 +38,7 @@ public void testRelocate() throws Exception {\n         }\n     }\n \n-    @Issue(\"JENKINS-42556\")\n+    @Issue(\"JENKINS-50296\")\n     @Test\n     public void testThreadPoolForRemotingActsAsSystemUser() throws InterruptedException, ExecutionException {\n         Future<Authentication> job = Computer.threadPoolForRemoting.submit(Jenkins::getAuthentication);"
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "for (AbstractProject p : Jenkins.getInstance().getAllItems(AbstractProject.class))",
        "fixed_code": "for (AbstractProject p : Jenkins.getInstance().allItems(AbstractProject.class))",
        "patch": "@@ -59,7 +59,7 @@ public void run() {\n             Set<AbstractProject> topLevelProjects = new HashSet<AbstractProject>();\n             // Get all top-level projects\n             LOGGER.fine(\"assembling top level projects\");\n-            for (AbstractProject p : Jenkins.getInstance().getAllItems(AbstractProject.class))\n+            for (AbstractProject p : Jenkins.getInstance().allItems(AbstractProject.class))\n                 if (p.getUpstreamProjects().size() == 0) {\n                     LOGGER.fine(\"adding top level project \" + p.getName());\n                     topLevelProjects.add(p);"
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "throw new AbortException(\"Error occured while performing this command, see previous stderr output.\");",
        "fixed_code": "throw new AbortException(CLI_LISTPARAM_SUMMARY_ERROR_TEXT);",
        "patch": "@@ -95,7 +95,7 @@ protected int run() throws Exception {\n         }\n \n         if (errorOccurred) {\n-            throw new AbortException(\"Error occured while performing this command, see previous stderr output.\");\n+            throw new AbortException(CLI_LISTPARAM_SUMMARY_ERROR_TEXT);\n         }\n         return 0;\n     }"
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "+ \"Use --username/--password/--password-file parameters or login command.\");",
        "fixed_code": "+ hudson.cli.client.Messages.CLI_Usage());",
        "patch": "@@ -53,7 +53,7 @@ public String getShortDescription() {\n     protected int run() throws Exception {\n         if (!Jenkins.getActiveInstance().hasPermission(Jenkins.READ)) {\n             throw new AccessDeniedException(\"You must authenticate to access this Jenkins.\\n\"\n-                    + \"Use --username/--password/--password-file parameters or login command.\");\n+                    + hudson.cli.client.Messages.CLI_Usage());\n         }\n \n         if (command != null)"
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "jobs = Items.getAllItems((ModifiableTopLevelItemGroup) item, TopLevelItem.class);",
        "fixed_code": "jobs = ((ModifiableTopLevelItemGroup) item).getAllItems(TopLevelItem.class);",
        "patch": "@@ -66,7 +66,7 @@ protected int run() throws Exception {\n \n                 // If item group was found use it's jobs.\n                 if (item instanceof ModifiableTopLevelItemGroup) {\n-                    jobs = Items.getAllItems((ModifiableTopLevelItemGroup) item, TopLevelItem.class);\n+                    jobs = ((ModifiableTopLevelItemGroup) item).getAllItems(TopLevelItem.class);\n                 }\n                 // No view and no item group with the given name found.\n                 else {"
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "EXTENSIONS_AUGMENTED(\"Augmented all extensions\"),",
        "fixed_code": "EXTENSIONS_AUGMENTED(\"Augmented all extensions\"), // TODO nothing attains() this so when does it actually happen?",
        "patch": "@@ -82,7 +82,7 @@ public enum InitMilestone implements Milestone {\n      * By this milestone, all programmatically constructed extension point implementations\n      * should be added.\n      */\n-    EXTENSIONS_AUGMENTED(\"Augmented all extensions\"),\n+    EXTENSIONS_AUGMENTED(\"Augmented all extensions\"), // TODO nothing attains() this so when does it actually happen?\n \n     /**\n      * By this milestone, all jobs and their build records are loaded from disk."
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "return Collections.unmodifiableList(core);",
        "fixed_code": "return Collections.<E>unmodifiableList(core);",
        "patch": "@@ -143,7 +143,7 @@ public <E> E[] toArray(E[] array) {\n     }\n \n     public List<E> getView() {\n-        return Collections.unmodifiableList(core);\n+        return Collections.<E>unmodifiableList(core);\n     }\n \n     public void addAllTo(Collection<? super E> dst) {"
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "@Restricted(NoExternalUse.class) @Deprecated",
        "fixed_code": "@Restricted(NoExternalUse.class)",
        "patch": "@@ -9,7 +9,7 @@\n  * @author Kohsuke Kawaguchi\n  */\n public class JenkinsReloadFailed extends BootFailure {\n-    @Restricted(NoExternalUse.class) @Deprecated\n+    @Restricted(NoExternalUse.class)\n     public final Throwable cause;\n \n     public JenkinsReloadFailed(Throwable cause) {"
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "t.printStackTrace(pw);",
        "fixed_code": "Functions.printStackTrace(t, pw);",
        "patch": "@@ -143,7 +143,7 @@ public String call() throws RuntimeException {\n                 if(output!=null)\n                 pw.println(\"Result: \"+output);\n             } catch (Throwable t) {\n-                t.printStackTrace(pw);\n+                Functions.printStackTrace(t, pw);\n             }\n             return out.toString();\n         }"
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "throw new SecurityException(\"agent may not \" + op + \" \" + f+\"\\nSee http://jenkins-ci.org/security-144 for more details\");",
        "fixed_code": "throw new SecurityException(\"agent may not \" + op + \" \" + f+\"\\nSee https://jenkins.io/redirect/security-144 for more details\");",
        "patch": "@@ -28,7 +28,7 @@ private SoloFilePathFilter(FilePathFilter base) {\n \n     private boolean noFalse(String op, File f, boolean b) {\n         if (!b)\n-            throw new SecurityException(\"agent may not \" + op + \" \" + f+\"\\nSee http://jenkins-ci.org/security-144 for more details\");\n+            throw new SecurityException(\"agent may not \" + op + \" \" + f+\"\\nSee https://jenkins.io/redirect/security-144 for more details\");\n         return true;\n     }\n "
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "this.causes = ImmutableList.copyOf(causes);",
        "fixed_code": "this.causes = ImmutableList.<CauseOfInterruption>copyOf(causes);",
        "patch": "@@ -43,7 +43,7 @@ public class InterruptedBuildAction extends InvisibleAction {\n     private final List<CauseOfInterruption> causes;\n \n     public InterruptedBuildAction(Collection<? extends CauseOfInterruption> causes) {\n-        this.causes = ImmutableList.copyOf(causes);\n+        this.causes = ImmutableList.<CauseOfInterruption>copyOf(causes);\n     }\n \n     @Exported"
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "+ \"See https://wiki.jenkins-ci.org/display/JENKINS/Distributed+builds#Distributedbuilds-Windowsslaveserviceupgrades\"",
        "fixed_code": "+ \"See https://jenkins.io/redirect/troubleshooting/windows-agent-restart\"",
        "patch": "@@ -52,7 +52,7 @@ public void restart() throws Exception {\n         // this command. If that is the case, there's nothing we can do about it.\n         int r = exec(\"restart!\");\n         throw new IOException(\"Restart failure. '\"+exe+\" restart' completed with \"+r+\" but I'm still alive!  \"\n-                               + \"See https://wiki.jenkins-ci.org/display/JENKINS/Distributed+builds#Distributedbuilds-Windowsslaveserviceupgrades\"\n+                               + \"See https://jenkins.io/redirect/troubleshooting/windows-agent-restart\"\n                                + \" for a possible explanation and solution\");\n     }\n "
    },
    {
        "commit_id": "08af195632609f81ff4ddf351bf54af9ca9c321d",
        "commit_message": "Merge commit '20bc2e899473e3338f9f23cd96c53f423ba3e69e' into bug/JENKINS-38812",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08af195632609f81ff4ddf351bf54af9ca9c321d",
        "buggy_code": "import edu.umd.cs.findbugs.annotations.SuppressWarnings;",
        "fixed_code": "import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;",
        "patch": "@@ -24,7 +24,7 @@\n \n package jenkins.util;\n \n-import edu.umd.cs.findbugs.annotations.SuppressWarnings;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n import java.lang.reflect.Field;\n import java.lang.reflect.InvocationHandler;\n import java.lang.reflect.Method;"
    },
    {
        "commit_id": "29f146c7c2861fc50522f2bfe183fcaef06713c7",
        "commit_message": "Merge pull request #3312 from jglick/inner-madness-JENKINS-49573\n\n[JENKINS-49795] Fix bad serialization of ParametersAction.parameterDefinitionNames and make sure this kind of mistake produces a warning in the future",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/29f146c7c2861fc50522f2bfe183fcaef06713c7",
        "buggy_code": "this.parameterDefinitionNames = p.getParameterDefinitionNames();",
        "fixed_code": "this.parameterDefinitionNames = new ArrayList<>(p.getParameterDefinitionNames());",
        "patch": "@@ -296,7 +296,7 @@ private Object readResolve() {\n     public void onAttached(Run<?, ?> r) {\n         ParametersDefinitionProperty p = r.getParent().getProperty(ParametersDefinitionProperty.class);\n         if (p != null) {\n-            this.parameterDefinitionNames = p.getParameterDefinitionNames();\n+            this.parameterDefinitionNames = new ArrayList<>(p.getParameterDefinitionNames());\n         } else {\n             this.parameterDefinitionNames = Collections.emptyList();\n         }"
    },
    {
        "commit_id": "fcae9bb59881a8878774e4ebbe563935ed1382b4",
        "commit_message": "[JENKINS-49573] Fix bad serialization of ParametersAction.parameterDefinitionNames and make sure this kind of mistake produces a warning in the future.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fcae9bb59881a8878774e4ebbe563935ed1382b4",
        "buggy_code": "this.parameterDefinitionNames = p.getParameterDefinitionNames();",
        "fixed_code": "this.parameterDefinitionNames = new ArrayList<>(p.getParameterDefinitionNames());",
        "patch": "@@ -296,7 +296,7 @@ private Object readResolve() {\n     public void onAttached(Run<?, ?> r) {\n         ParametersDefinitionProperty p = r.getParent().getProperty(ParametersDefinitionProperty.class);\n         if (p != null) {\n-            this.parameterDefinitionNames = p.getParameterDefinitionNames();\n+            this.parameterDefinitionNames = new ArrayList<>(p.getParameterDefinitionNames());\n         } else {\n             this.parameterDefinitionNames = Collections.emptyList();\n         }"
    },
    {
        "commit_id": "40a384aee5e247ad518845ce84989ddb0473398a",
        "commit_message": "Merge pull request #3298 from akkatracker/patch-1\n\nFix two typos in JobQueueTest.java comments",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/40a384aee5e247ad518845ce84989ddb0473398a",
        "buggy_code": "assertTrue(project.isInQueue()); //That means its pending or its waiting or blocked",
        "fixed_code": "assertTrue(project.isInQueue()); //That means it's pending or it's waiting or blocked",
        "patch": "@@ -79,7 +79,7 @@ public void buildPendingWhenBuildInPostProduction() throws Exception {\n         if(JobQueueTest.fireCompletedFlag) {\n         //Schedule the build for the project and this build should be in Queue since the state is POST_PRODUCTION\n             project.scheduleBuild2(0);\n-            assertTrue(project.isInQueue()); //That means its pending or its waiting or blocked\n+            assertTrue(project.isInQueue()); //That means it's pending or it's waiting or blocked\n             j.jenkins.getQueue().maintain();\n             while(j.jenkins.getQueue().getItem(project) instanceof WaitingItem) {\n                 System.out.println(j.jenkins.getQueue().getItem(project));"
    },
    {
        "commit_id": "438e9296f0646d920e19e05c7696d8cec5307a88",
        "commit_message": "Merge pull request #3170 from batmat/JENKINS-34855\n\n[FIX JENKINS-34855] Create a FileChannelWriter and use it for AtomicFileWriter \"enforced\" flushing",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/438e9296f0646d920e19e05c7696d8cec5307a88",
        "buggy_code": "@Test(timeout = 30 * 1000L)",
        "fixed_code": "@Test(timeout = 50 * 1000L)",
        "patch": "@@ -24,7 +24,7 @@ public class AtomicFileWriterPerfTest {\n      * <strong>really</strong> bad performance regressions.\n      */\n     @Issue(\"JENKINS-34855\")\n-    @Test(timeout = 30 * 1000L)\n+    @Test(timeout = 50 * 1000L)\n     public void poorManPerformanceTestBed() throws Exception {\n         int count = 1000;\n         while (count-- > 0) {"
    },
    {
        "commit_id": "a79fdaa4b34b8f7fddb39bed3eabf4763940d11b",
        "commit_message": "Revert \"[JENKINS-46911] createProjectFromXML not recognizing unsafe character\u2026\" (#3218)\n\n* Revert \"[JENKINS-48447] Fixed HTTP 404 error when clicking on newView sidebar link from an other view. (#3178)\"\r\n\r\nThis reverts commit 6df06fc19a4b7ed015ab5213e2dc8d25beb2f607.\r\n\r\n* Revert \"[JENKINS-46911] createProjectFromXML not recognizing unsafe character\u2026 (#3057)\"\r\n\r\nThis reverts commit ac2a1aaf895020bc80fd951ced748820975df6aa.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a79fdaa4b34b8f7fddb39bed3eabf4763940d11b",
        "buggy_code": "String upstreamName = \"upstr3am\"; // do not clash with English messages!",
        "fixed_code": "String upstreamName = \"upstr3@m\"; // do not clash with English messages!",
        "patch": "@@ -97,7 +97,7 @@ public void runMoreQuickly() throws Exception {\n                 .grant(Computer.BUILD).everywhere().to(\"alice\", \"bob\")\n                 .grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n         r.jenkins.setAuthorizationStrategy(auth);\n-        String upstreamName = \"upstr3am\"; // do not clash with English messages!\n+        String upstreamName = \"upstr3@m\"; // do not clash with English messages!\n         final FreeStyleProject upstream = r.createFreeStyleProject(upstreamName);\n         String downstreamName = \"d0wnstr3am\";\n         FreeStyleProject downstream = r.createFreeStyleProject(downstreamName);"
    },
    {
        "commit_id": "ac2a1aaf895020bc80fd951ced748820975df6aa",
        "commit_message": "[JENKINS-46911] createProjectFromXML not recognizing unsafe character\u2026 (#3057)\n\n* [JENKINS-46911] createProjectFromXML not recognizing unsafe character '/'\r\n\r\n* Better place for testCreateProjectCheckGoodName()\r\n\r\n* Fix failed test\r\n\r\n* Make changes suggested on PR review.\r\n\r\n* Remove Failure exception, instead throw IOException. Add javadoc\r\n\r\n* [JENKINS-46911] - Add TODO according to the comment from @jtnord.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ac2a1aaf895020bc80fd951ced748820975df6aa",
        "buggy_code": "String upstreamName = \"upstr3@m\"; // do not clash with English messages!",
        "fixed_code": "String upstreamName = \"upstr3am\"; // do not clash with English messages!",
        "patch": "@@ -97,7 +97,7 @@ public void runMoreQuickly() throws Exception {\n                 .grant(Computer.BUILD).everywhere().to(\"alice\", \"bob\")\n                 .grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n         r.jenkins.setAuthorizationStrategy(auth);\n-        String upstreamName = \"upstr3@m\"; // do not clash with English messages!\n+        String upstreamName = \"upstr3am\"; // do not clash with English messages!\n         final FreeStyleProject upstream = r.createFreeStyleProject(upstreamName);\n         String downstreamName = \"d0wnstr3am\";\n         FreeStyleProject downstream = r.createFreeStyleProject(downstreamName);"
    },
    {
        "commit_id": "f555cb6e7a0d4199a4417841e7b42e7f61786c22",
        "commit_message": "Bump to a bit longer\n\n(Note: mainly bumping for the CI to not fail since I was never able to\nsee this test fail on my machine [takes ~17 with this change] anyway\nother than by running in Docker and aggressively reduce IOPS to 40 using\nDocker resource constraints.)\n\nSince we now *actually* sync to disk, this isn't really a regression IMO.\nFrom the very role of AtomicFileWriter, it looks more like a feature or\nan improvement than an issue.\n\nSo I suspect that anyway 1) we won't see\na lot of bad impact in the wild on most setups (as we generally already\nrecommend SSDs and so on as per how Jenkins works) and 2) we win anyway\nin term of integrity by making sure (well, raising the chances, let's\nsay) we do write to disk before renaming files.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f555cb6e7a0d4199a4417841e7b42e7f61786c22",
        "buggy_code": "@Test(timeout = 30 * 1000L)",
        "fixed_code": "@Test(timeout = 50 * 1000L)",
        "patch": "@@ -24,7 +24,7 @@ public class AtomicFileWriterPerfTest {\n      * <strong>really</strong> bad performance regressions.\n      */\n     @Issue(\"JENKINS-34855\")\n-    @Test(timeout = 30 * 1000L)\n+    @Test(timeout = 50 * 1000L)\n     public void poorManPerformanceTestBed() throws Exception {\n         int count = 1000;\n         while (count-- > 0) {"
    },
    {
        "commit_id": "af633651496b49ca0a967c37e4b4f1f9a7438013",
        "commit_message": "Fix wrong log parameter index",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/af633651496b49ca0a967c37e4b4f1f9a7438013",
        "buggy_code": "LOGGER.log(Level.SEVERE, \"Unable to move {0} to {1}. Attempting to delete {1} and abandoning.\",",
        "fixed_code": "LOGGER.log(Level.SEVERE, \"Unable to move {0} to {1}. Attempting to delete {0} and abandoning.\",",
        "patch": "@@ -139,7 +139,7 @@ public void commit() throws IOException {\n                 Files.move(tmpPath, destPath, StandardCopyOption.REPLACE_EXISTING);\n             } catch (IOException e1) {\n                 e1.addSuppressed(e);\n-                LOGGER.log(Level.SEVERE, \"Unable to move {0} to {1}. Attempting to delete {1} and abandoning.\",\n+                LOGGER.log(Level.SEVERE, \"Unable to move {0} to {1}. Attempting to delete {0} and abandoning.\",\n                            new Path[]{tmpPath, destPath});\n                 try {\n                     Files.deleteIfExists(tmpPath);"
    },
    {
        "commit_id": "4c11a0ffad4ff4941287ce2eb3f7aba52c214f77",
        "commit_message": "Merge pull request #3124 from jenkinsci/stephenc-patch-1\n\n[JENKINS-12251 follow up] Switch to the non-deprecated variable",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4c11a0ffad4ff4941287ce2eb3f7aba52c214f77",
        "buggy_code": "workspaceDir = \"${JENKINS_HOME}/workspace/${ITEM_FULLNAME}\";",
        "fixed_code": "workspaceDir = \"${JENKINS_HOME}/workspace/${ITEM_FULL_NAME}\";",
        "patch": "@@ -846,7 +846,7 @@ protected Jenkins(File root, ServletContext context, PluginManager pluginManager\n \n             if (!new File(root,\"jobs\").exists()) {\n                 // if this is a fresh install, use more modern default layout that's consistent with agents\n-                workspaceDir = \"${JENKINS_HOME}/workspace/${ITEM_FULLNAME}\";\n+                workspaceDir = \"${JENKINS_HOME}/workspace/${ITEM_FULL_NAME}\";\n             }\n \n             // doing this early allows InitStrategy to set environment upfront"
    },
    {
        "commit_id": "0864e40bc6107fb72ce2c1be625e1846a1f69bf2",
        "commit_message": "Merge pull request #3119 from oleg-nenashev/test/SetupWizard_shouldProhibitAccessToPluginListWithoutAuth\n\nFix typo in the SetupWizardTest#shouldProhibitAccessToPluginListWithoutAuth()",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0864e40bc6107fb72ce2c1be625e1846a1f69bf2",
        "buggy_code": "wc.assertFails(\"setupWizard/createAdminUaser\", 403);",
        "fixed_code": "wc.assertFails(\"setupWizard/createAdminUser\", 403);",
        "patch": "@@ -111,7 +111,7 @@ public void shouldReturnUpdateSiteJSONIfSpecified() throws Exception {\n     public void shouldProhibitAccessToPluginListWithoutAuth() throws Exception {\n         JenkinsRule.WebClient wc = j.createWebClient();\n         wc.assertFails(\"setupWizard/platformPluginList\", 403);\n-        wc.assertFails(\"setupWizard/createAdminUaser\", 403);\n+        wc.assertFails(\"setupWizard/createAdminUser\", 403);\n         wc.assertFails(\"setupWizard/completeInstall\", 403);\n     }\n     "
    },
    {
        "commit_id": "c7f68438e89331d1ef67d063ecc667a55c8e6525",
        "commit_message": "Fix typo in the SetupWizardTest#shouldProhibitAccessToPluginListWithoutAuth()",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c7f68438e89331d1ef67d063ecc667a55c8e6525",
        "buggy_code": "wc.assertFails(\"setupWizard/createAdminUaser\", 403);",
        "fixed_code": "wc.assertFails(\"setupWizard/createAdminUser\", 403);",
        "patch": "@@ -111,7 +111,7 @@ public void shouldReturnUpdateSiteJSONIfSpecified() throws Exception {\n     public void shouldProhibitAccessToPluginListWithoutAuth() throws Exception {\n         JenkinsRule.WebClient wc = j.createWebClient();\n         wc.assertFails(\"setupWizard/platformPluginList\", 403);\n-        wc.assertFails(\"setupWizard/createAdminUaser\", 403);\n+        wc.assertFails(\"setupWizard/createAdminUser\", 403);\n         wc.assertFails(\"setupWizard/completeInstall\", 403);\n     }\n     "
    },
    {
        "commit_id": "671a0ad4d073bb8622c16d3876c2f63a0c30171a",
        "commit_message": "Add ExtensionList#lookupFirst convenience method (#3021)\n\n* Add ExtensionList#lookupFirst convenience method\r\n\r\n* Fix Javadoc\r\n\r\n* Convert to lookupSingleton, which throws unless there's only 1\r\n\r\n* Address review comments",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/671a0ad4d073bb8622c16d3876c2f63a0c30171a",
        "buggy_code": "return ExtensionList.lookup(UserDetailsCache.class).get(UserDetailsCache.class);",
        "fixed_code": "return ExtensionList.lookupSingleton(UserDetailsCache.class);",
        "patch": "@@ -83,7 +83,7 @@ public UserDetailsCache() {\n      * @return the cache\n      */\n     public static UserDetailsCache get() {\n-        return ExtensionList.lookup(UserDetailsCache.class).get(UserDetailsCache.class);\n+        return ExtensionList.lookupSingleton(UserDetailsCache.class);\n     }\n \n     /**"
    },
    {
        "commit_id": "f546ffc9ea09626e2e15bd4d9564ee32da18335d",
        "commit_message": "[JENKINS-44851] Agents JVM must be 1.8+ now (#2915)\n\n* [JENKINS-44851] Agents JVM must be 1.8+ now\r\n\r\n* [JENKINS-44851] Fix tests\r\n\r\n* Fix old Java 6 and 7 tests (an exception is expected now)\r\n* Add new tests to Java 8\r\n* Fix messages",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f546ffc9ea09626e2e15bd4d9564ee32da18335d",
        "buggy_code": "if (new DeweyDecimal(versionStr).isLessThan(new DeweyDecimal(\"1.6\"))) {",
        "fixed_code": "if (new DeweyDecimal(versionStr).isLessThan(new DeweyDecimal(\"1.8\"))) {",
        "patch": "@@ -187,7 +187,7 @@ protected static void checkJavaVersion(final PrintStream logger, String javaComm\n                 final String versionStr = m.group(1);\n                 logger.println(Messages.ComputerLauncher_JavaVersionResult(javaCommand, versionStr));\n                 try {\n-                    if (new DeweyDecimal(versionStr).isLessThan(new DeweyDecimal(\"1.6\"))) {\n+                    if (new DeweyDecimal(versionStr).isLessThan(new DeweyDecimal(\"1.8\"))) {\n                         throw new IOException(Messages\n                                 .ComputerLauncher_NoJavaFound(line));\n                     }"
    },
    {
        "commit_id": "ff36adf0d243e2c3461045615ee654eb33665acb",
        "commit_message": "[JENKINS-44052] Document & fix intended behaviour (#3043)\n\n* [JENKINS-44052] Document & fix intended behaviour\r\n\r\nThe unit was actually ignored...\r\n\r\n* Add tests for getTimeInSeconds",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ff36adf0d243e2c3461045615ee654eb33665acb",
        "buggy_code": "Queue.Item item = Jenkins.getInstance().getQueue().schedule2(asJob(), delay.getTime(), getBuildCause(asJob(), req)).getItem();",
        "fixed_code": "Queue.Item item = Jenkins.getInstance().getQueue().schedule2(asJob(), delay.getTimeInSeconds(), getBuildCause(asJob(), req)).getItem();",
        "patch": "@@ -213,7 +213,7 @@ public final void doBuild(StaplerRequest req, StaplerResponse rsp, @QueryParamet\n         }\n \n \n-        Queue.Item item = Jenkins.getInstance().getQueue().schedule2(asJob(), delay.getTime(), getBuildCause(asJob(), req)).getItem();\n+        Queue.Item item = Jenkins.getInstance().getQueue().schedule2(asJob(), delay.getTimeInSeconds(), getBuildCause(asJob(), req)).getItem();\n         if (item != null) {\n             rsp.sendRedirect(SC_CREATED, req.getContextPath() + '/' + item.getUrl());\n         } else {"
    },
    {
        "commit_id": "593f707eaa494b3ffaec45ae2d5d3d7f7a994400",
        "commit_message": "[JENKINS-46288] - Fix ProxyConfiguration validation for NTLM authentication (#2984)\n\n/**\n     * Constructor.\n     * @param userName The user name.  This should not include the domain to authenticate with.\n     * For example: \"user\" is correct whereas \"DOMAIN\\\\user\" is not.\n     * @param password The password.\n     * @param host The host the authentication request is originating from.  Essentially, the\n     * computer name for this machine.\n     * @param domain The domain to authenticate within.\n     */\n\n(cherry picked from commit ccb3e4cd501b14f617979117ea31fc21f07b972b)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/593f707eaa494b3ffaec45ae2d5d3d7f7a994400",
        "buggy_code": "return new NTCredentials(user, Secret.fromString(password).getPlainText(), domain, \"\");",
        "fixed_code": "return new NTCredentials(user, Secret.fromString(password).getPlainText(), \"\", domain);",
        "patch": "@@ -396,7 +396,7 @@ private Credentials createCredentials(String userName, String password) {\n             if (userName.indexOf('\\\\') >= 0){\n                 final String domain = userName.substring(0, userName.indexOf('\\\\'));\n                 final String user = userName.substring(userName.indexOf('\\\\') + 1);\n-                return new NTCredentials(user, Secret.fromString(password).getPlainText(), domain, \"\");\n+                return new NTCredentials(user, Secret.fromString(password).getPlainText(), \"\", domain);\n             } else {\n                 return new UsernamePasswordCredentials(userName, Secret.fromString(password).getPlainText());\n             }"
    },
    {
        "commit_id": "ccb3e4cd501b14f617979117ea31fc21f07b972b",
        "commit_message": "[JENKINS-46288] - Fix ProxyConfiguration validation for NTLM authentication (#2984)\n\n/**\r\n     * Constructor.\r\n     * @param userName The user name.  This should not include the domain to authenticate with.\r\n     * For example: \"user\" is correct whereas \"DOMAIN\\\\user\" is not.\r\n     * @param password The password.\r\n     * @param host The host the authentication request is originating from.  Essentially, the\r\n     * computer name for this machine.\r\n     * @param domain The domain to authenticate within.\r\n     */",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ccb3e4cd501b14f617979117ea31fc21f07b972b",
        "buggy_code": "return new NTCredentials(user, Secret.fromString(password).getPlainText(), domain, \"\");",
        "fixed_code": "return new NTCredentials(user, Secret.fromString(password).getPlainText(), \"\", domain);",
        "patch": "@@ -396,7 +396,7 @@ private Credentials createCredentials(String userName, String password) {\n             if (userName.indexOf('\\\\') >= 0){\n                 final String domain = userName.substring(0, userName.indexOf('\\\\'));\n                 final String user = userName.substring(userName.indexOf('\\\\') + 1);\n-                return new NTCredentials(user, Secret.fromString(password).getPlainText(), domain, \"\");\n+                return new NTCredentials(user, Secret.fromString(password).getPlainText(), \"\", domain);\n             } else {\n                 return new UsernamePasswordCredentials(userName, Secret.fromString(password).getPlainText());\n             }"
    },
    {
        "commit_id": "be6d02e648d5c41e5b16e797bdc55873d0f56c56",
        "commit_message": "[JENKINS-45516] Fix null pointer exception when checking for previous completed build\n\n(cherry picked from commit 245ad0bdb17ebd33eca81c099e8a19a893c049e3)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/be6d02e648d5c41e5b16e797bdc55873d0f56c56",
        "buggy_code": "if (p.getPreviousNotFailedBuild() != null) {",
        "fixed_code": "if (p != null && p.getPreviousNotFailedBuild() != null) {",
        "patch": "@@ -337,7 +337,7 @@ public Set<User> calculateCulprits() {\n         AbstractBuild<P,R> p = getPreviousCompletedBuild();\n         if (upstreamCulprits) {\n             // If we have dependencies since the last successful build, add their authors to our list\n-            if (p.getPreviousNotFailedBuild() != null) {\n+            if (p != null && p.getPreviousNotFailedBuild() != null) {\n                 Map<AbstractProject, AbstractBuild.DependencyChange> depmap =\n                         p.getDependencyChanges(p.getPreviousSuccessfulBuild());\n                 for (AbstractBuild.DependencyChange dep : depmap.values()) {"
    },
    {
        "commit_id": "e77048893a7ce73b0a55cf444ff3a2a9ed272bfb",
        "commit_message": "Merge pull request #2941 from jcmoore3/JENKINS-45516\n\n[JENKINS-45516] Fix null pointer exception when checking for previous completed build",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e77048893a7ce73b0a55cf444ff3a2a9ed272bfb",
        "buggy_code": "if (p.getPreviousNotFailedBuild() != null) {",
        "fixed_code": "if (p != null && p.getPreviousNotFailedBuild() != null) {",
        "patch": "@@ -337,7 +337,7 @@ public Set<User> calculateCulprits() {\n         AbstractBuild<P,R> p = getPreviousCompletedBuild();\n         if (upstreamCulprits) {\n             // If we have dependencies since the last successful build, add their authors to our list\n-            if (p.getPreviousNotFailedBuild() != null) {\n+            if (p != null && p.getPreviousNotFailedBuild() != null) {\n                 Map<AbstractProject, AbstractBuild.DependencyChange> depmap =\n                         p.getDependencyChanges(p.getPreviousSuccessfulBuild());\n                 for (AbstractBuild.DependencyChange dep : depmap.values()) {"
    },
    {
        "commit_id": "245ad0bdb17ebd33eca81c099e8a19a893c049e3",
        "commit_message": "[JENKINS-45516] Fix null pointer exception when checking for previous completed build",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/245ad0bdb17ebd33eca81c099e8a19a893c049e3",
        "buggy_code": "if (p.getPreviousNotFailedBuild() != null) {",
        "fixed_code": "if (p != null && p.getPreviousNotFailedBuild() != null) {",
        "patch": "@@ -337,7 +337,7 @@ public Set<User> calculateCulprits() {\n         AbstractBuild<P,R> p = getPreviousCompletedBuild();\n         if (upstreamCulprits) {\n             // If we have dependencies since the last successful build, add their authors to our list\n-            if (p.getPreviousNotFailedBuild() != null) {\n+            if (p != null && p.getPreviousNotFailedBuild() != null) {\n                 Map<AbstractProject, AbstractBuild.DependencyChange> depmap =\n                         p.getDependencyChanges(p.getPreviousSuccessfulBuild());\n                 for (AbstractBuild.DependencyChange dep : depmap.values()) {"
    },
    {
        "commit_id": "f1a26582c1b25c470989d19b25378cff5c6d2497",
        "commit_message": "[JENKINS-28113] Allow freestyle builds to trigger downstream Pipeline builds (#2873)\n\n* Offering default methods on ParameterizedJob.\r\n\r\n* Javadoc typo.\r\n\r\n* Cleaner use of default methods in ParameterizedJob.\r\n\r\n* Need to pick up https://github.com/infradna/bridge-method-injector/pull/15 to be able to build.\r\n\r\n* Sketch of pulling disabled functionality into ParameterizedJob.\r\n\r\n* EnableJobCommandTest.groovy \u2192 EnableJobCommandTest.java, and replacing deprecated Remoting-based CLI calls with CLICommandInvoker.\r\n\r\n* All CLI commands could be broken by a missing CLI.*.shortDescription key on just one!\r\n\r\n* Forgot to move CLI method short descriptions to new package.\r\n\r\n* Needed a @CLIResolver for ParameterizedJob. Adding an OptionHandler while we are here.\r\n\r\n* Trying to fix up access-modifier versions; started failing in CI today for unknown reasons.\r\n\r\n* Introduced <p:makeDisabled/> by analogy with <p:config-disableBuild/>.\r\n\r\n* Using new type bounds.\r\n\r\n* access-modifier 1.11 released.\r\n\r\n* MatrixProject and MavenModuleSet both expect to have access to makeDisabled.jelly.\r\n\r\n* Trying to generalize some more.\r\n\r\n* Minor simplification.\r\n\r\n* [JENKINS-34716] Generalizing doPolling and schedulePolling.\r\n\r\n* isBuildable\r\n\r\n* Obsolete comment.\r\n\r\n* Updated comments.\r\n\r\n* bridge-method-injector 1.17\r\n\r\n* Unfortunately AbstractProject.schedulePolling cannot delegate to SCMTriggerItem.\r\n\r\n* [FIXED JENKINS-28113] Generalize BuildTrigger to be able to trigger non-AbstractProject downstream ParameterizedJob\u2019s without DependencyGraph.\r\n\r\n* [JENKINS-22949] Dropping QueueItemAuthenticator trickiness, as in #2881.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f1a26582c1b25c470989d19b25378cff5c6d2497",
        "buggy_code": "if (buildTrigger.getChildProjects(ap).contains(this))",
        "fixed_code": "if (buildTrigger.getChildJobs(ap).contains(this))",
        "patch": "@@ -1615,7 +1615,7 @@ public final List<AbstractProject> getBuildTriggerUpstreamProjects() {\n         for (AbstractProject<?,?> ap : getUpstreamProjects()) {\n             BuildTrigger buildTrigger = ap.getPublishersList().get(BuildTrigger.class);\n             if (buildTrigger != null)\n-                if (buildTrigger.getChildProjects(ap).contains(this))\n+                if (buildTrigger.getChildJobs(ap).contains(this))\n                     result.add(ap);\n         }\n         return result;"
    },
    {
        "commit_id": "3af0cc68cb1cea3047a21400486c075f1b555cf2",
        "commit_message": "[JENKINS-27299] Define disabled in ParameterizedJob rather than AbstractProject (#2866)\n\n* Offering default methods on ParameterizedJob.\r\n\r\n* Javadoc typo.\r\n\r\n* Cleaner use of default methods in ParameterizedJob.\r\n\r\n* Need to pick up https://github.com/infradna/bridge-method-injector/pull/15 to be able to build.\r\n\r\n* Sketch of pulling disabled functionality into ParameterizedJob.\r\n\r\n* EnableJobCommandTest.groovy \u2192 EnableJobCommandTest.java, and replacing deprecated Remoting-based CLI calls with CLICommandInvoker.\r\n\r\n* All CLI commands could be broken by a missing CLI.*.shortDescription key on just one!\r\n\r\n* Forgot to move CLI method short descriptions to new package.\r\n\r\n* Needed a @CLIResolver for ParameterizedJob. Adding an OptionHandler while we are here.\r\n\r\n* Trying to fix up access-modifier versions; started failing in CI today for unknown reasons.\r\n\r\n* Introduced <p:makeDisabled/> by analogy with <p:config-disableBuild/>.\r\n\r\n* Using new type bounds.\r\n\r\n* access-modifier 1.11 released.\r\n\r\n* MatrixProject and MavenModuleSet both expect to have access to makeDisabled.jelly.\r\n\r\n* Trying to generalize some more.\r\n\r\n* Minor simplification.\r\n\r\n* [JENKINS-34716] Generalizing doPolling and schedulePolling.\r\n\r\n* isBuildable\r\n\r\n* Obsolete comment.\r\n\r\n* Updated comments.\r\n\r\n* bridge-method-injector 1.17\r\n\r\n* Unfortunately AbstractProject.schedulePolling cannot delegate to SCMTriggerItem.\r\n\r\n* bridge-method-injector 1.17",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3af0cc68cb1cea3047a21400486c075f1b555cf2",
        "buggy_code": "if (job instanceof AbstractProject<?, ?> && ((AbstractProject<?, ?>)job).isDisabled()) {",
        "fixed_code": "if (job instanceof ParameterizedJobMixIn.ParameterizedJob && ((ParameterizedJobMixIn.ParameterizedJob) job).isDisabled()) {",
        "patch": "@@ -158,7 +158,7 @@ protected int run() throws Exception {\n \n         if (!job.isBuildable()) {\n             String msg = Messages.BuildCommand_CLICause_CannotBuildUnknownReasons(job.getFullDisplayName());\n-            if (job instanceof AbstractProject<?, ?> && ((AbstractProject<?, ?>)job).isDisabled()) {\n+            if (job instanceof ParameterizedJobMixIn.ParameterizedJob && ((ParameterizedJobMixIn.ParameterizedJob) job).isDisabled()) {\n                 msg = Messages.BuildCommand_CLICause_CannotBuildDisabled(job.getFullDisplayName());\n             } else if (job.isHoldOffBuildUntilSave()){\n                 msg = Messages.BuildCommand_CLICause_CannotBuildConfigNotSaved(job.getFullDisplayName());"
    },
    {
        "commit_id": "3af0cc68cb1cea3047a21400486c075f1b555cf2",
        "commit_message": "[JENKINS-27299] Define disabled in ParameterizedJob rather than AbstractProject (#2866)\n\n* Offering default methods on ParameterizedJob.\r\n\r\n* Javadoc typo.\r\n\r\n* Cleaner use of default methods in ParameterizedJob.\r\n\r\n* Need to pick up https://github.com/infradna/bridge-method-injector/pull/15 to be able to build.\r\n\r\n* Sketch of pulling disabled functionality into ParameterizedJob.\r\n\r\n* EnableJobCommandTest.groovy \u2192 EnableJobCommandTest.java, and replacing deprecated Remoting-based CLI calls with CLICommandInvoker.\r\n\r\n* All CLI commands could be broken by a missing CLI.*.shortDescription key on just one!\r\n\r\n* Forgot to move CLI method short descriptions to new package.\r\n\r\n* Needed a @CLIResolver for ParameterizedJob. Adding an OptionHandler while we are here.\r\n\r\n* Trying to fix up access-modifier versions; started failing in CI today for unknown reasons.\r\n\r\n* Introduced <p:makeDisabled/> by analogy with <p:config-disableBuild/>.\r\n\r\n* Using new type bounds.\r\n\r\n* access-modifier 1.11 released.\r\n\r\n* MatrixProject and MavenModuleSet both expect to have access to makeDisabled.jelly.\r\n\r\n* Trying to generalize some more.\r\n\r\n* Minor simplification.\r\n\r\n* [JENKINS-34716] Generalizing doPolling and schedulePolling.\r\n\r\n* isBuildable\r\n\r\n* Obsolete comment.\r\n\r\n* Updated comments.\r\n\r\n* bridge-method-injector 1.17\r\n\r\n* Unfortunately AbstractProject.schedulePolling cannot delegate to SCMTriggerItem.\r\n\r\n* bridge-method-injector 1.17",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3af0cc68cb1cea3047a21400486c075f1b555cf2",
        "buggy_code": "AbstractProject project = AbstractProject.findNearest(name);",
        "fixed_code": "AbstractProject project = AbstractProject.findNearest(name); // TODO should be Items.findNearest",
        "patch": "@@ -854,7 +854,7 @@ public static AbstractItem resolveForCLI(\n         // TODO can this (and its pseudo-override in AbstractProject) share code with GenericItemOptionHandler, used for explicit CLICommand\u2019s rather than CLIMethod\u2019s?\n         AbstractItem item = Jenkins.getInstance().getItemByFullName(name, AbstractItem.class);\n         if (item==null) {\n-            AbstractProject project = AbstractProject.findNearest(name);\n+            AbstractProject project = AbstractProject.findNearest(name); // TODO should be Items.findNearest\n             throw new CmdLineException(null, project == null ? Messages.AbstractItem_NoSuchJobExistsWithoutSuggestion(name)\n                     : Messages.AbstractItem_NoSuchJobExists(name, project.getFullName()));\n         }"
    },
    {
        "commit_id": "00e8f77b564cfc9e0d29fc37daa37ec593228c0b",
        "commit_message": "[FIXED JENKINS-38005] Properly log failure due to empty archive in Pipeline (#2823)\n\n* [FIXED JENKINS-38005] Properly log failure due to empty archive in Pipeline\r\n\r\nSince the job result is probably still null at the time that archiving\r\noccurs, we weren't actually logging anything in Pipeline jobs in that\r\ncase. That was not ideal. So instead, let's log things, and also let's\r\nupdate the error message to include a tip to use the allowEmptyArchive\r\noption.\r\n\r\n* Reverting to original message",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/00e8f77b564cfc9e0d29fc37daa37ec593228c0b",
        "buggy_code": "if (result != null && result.isBetterOrEqualTo(Result.UNSTABLE)) {",
        "fixed_code": "if (result == null || result.isBetterOrEqualTo(Result.UNSTABLE)) {",
        "patch": "@@ -247,7 +247,7 @@ public void perform(Run<?,?> build, FilePath ws, Launcher launcher, TaskListener\n                 }\n             } else {\n                 result = build.getResult();\n-                if (result != null && result.isBetterOrEqualTo(Result.UNSTABLE)) {\n+                if (result == null || result.isBetterOrEqualTo(Result.UNSTABLE)) {\n                     // If the build failed, don't complain that there was no matching artifact.\n                     // The build probably didn't even get to the point where it produces artifacts. \n                     listenerWarnOrError(listener, Messages.ArtifactArchiver_NoMatchFound(artifacts));"
    },
    {
        "commit_id": "461940f49a243ab4fff23870ea0437e8acf9c250",
        "commit_message": "Merge pull request #2845 from tequillaz/fix/rss_job_name\n\nChange rss feed build name",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/461940f49a243ab4fff23870ea0437e8acf9c250",
        "buggy_code": "return entry+\" (\"+entry.getBuildStatusSummary().message+\")\";",
        "fixed_code": "return entry.getDisplayName()+\" (\"+entry.getBuildStatusSummary().message+\")\";",
        "patch": "@@ -2422,7 +2422,7 @@ public final class KeepLogBuildBadge implements BuildBadgeAction {\n \n     private static class DefaultFeedAdapter implements FeedAdapter<Run> {\n         public String getEntryTitle(Run entry) {\n-            return entry+\" (\"+entry.getBuildStatusSummary().message+\")\";\n+            return entry.getDisplayName()+\" (\"+entry.getBuildStatusSummary().message+\")\";\n         }\n \n         public String getEntryUrl(Run entry) {"
    },
    {
        "commit_id": "e0017ae1de222a69b093011f5b30b48cde1dc7e6",
        "commit_message": "[FIXED JENKINS-43611] Fix AllView name migration log message (#2821)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e0017ae1de222a69b093011f5b30b48cde1dc7e6",
        "buggy_code": "new Object[]{allView.owner.getUrl(), DEFAULT_VIEW_NAME});",
        "fixed_code": "new Object[]{allView.owner.getUrl(), primaryView, DEFAULT_VIEW_NAME});",
        "patch": "@@ -164,7 +164,7 @@ public static String migrateLegacyPrimaryAllViewLocalizedName(@Nonnull List<View\n                         // bingo JENKINS-38606 detected\n                         LOGGER.log(Level.INFO,\n                                 \"JENKINS-38606 detected for AllView in {0}; renaming view from {1} to {2}\",\n-                                new Object[]{allView.owner.getUrl(), DEFAULT_VIEW_NAME});\n+                                new Object[]{allView.owner.getUrl(), primaryView, DEFAULT_VIEW_NAME});\n                         allView.name = DEFAULT_VIEW_NAME;\n                         return DEFAULT_VIEW_NAME;\n                     }"
    },
    {
        "commit_id": "84dcde5902755239f915dedafbdc0566bcde087a",
        "commit_message": "Fix test failure.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/84dcde5902755239f915dedafbdc0566bcde087a",
        "buggy_code": "List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\");",
        "fixed_code": "List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\", \"-remoting\");",
        "patch": "@@ -116,7 +116,7 @@ public void getPropertyKey() throws Exception {\n     }\n \n     private void assertCLI(int code, @CheckForNull String output, File jar, String... args) throws Exception {\n-        List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\");\n+        List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\", \"-remoting\");\n         commands.addAll(Arrays.asList(args));\n         ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         assertEquals(code, new Launcher.LocalLauncher(StreamTaskListener.fromStderr()).launch().cmds(commands).stdout(new TeeOutputStream(System.out, baos)).stderr(System.err).join());"
    },
    {
        "commit_id": "87edd4296ba4d21e577dacdcc6fa09250874524c",
        "commit_message": "Fix test failure.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/87edd4296ba4d21e577dacdcc6fa09250874524c",
        "buggy_code": "List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\");",
        "fixed_code": "List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\", \"-remoting\");",
        "patch": "@@ -116,7 +116,7 @@ public void getPropertyKey() throws Exception {\n     }\n \n     private void assertCLI(int code, @CheckForNull String output, File jar, String... args) throws Exception {\n-        List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\");\n+        List<String> commands = Lists.newArrayList(\"java\", \"-jar\", jar.getAbsolutePath(), \"-s\", r.getURL().toString(), \"-noKeyAuth\", \"-remoting\");\n         commands.addAll(Arrays.asList(args));\n         ByteArrayOutputStream baos = new ByteArrayOutputStream();\n         assertEquals(code, new Launcher.LocalLauncher(StreamTaskListener.fromStderr()).launch().cmds(commands).stdout(new TeeOutputStream(System.out, baos)).stderr(System.err).join());"
    },
    {
        "commit_id": "d2c443d14b05670e41c367673bd5346a16272d75",
        "commit_message": "@oleg-nenashev wants an error message",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d2c443d14b05670e41c367673bd5346a16272d75",
        "buggy_code": "throw new Error(x);",
        "fixed_code": "throw new Error(\"Unexpected ClassFilter implementation in bundled remoting.jar: \" + x, x);",
        "patch": "@@ -840,7 +840,7 @@ protected Jenkins(File root, ServletContext context, PluginManager pluginManager\n                         }\n                     }\n                 } catch (NoSuchFieldException | IllegalAccessException x) {\n-                    throw new Error(x);\n+                    throw new Error(\"Unexpected ClassFilter implementation in bundled remoting.jar: \" + x, x);\n                 }\n             }\n "
    },
    {
        "commit_id": "724ebbcc5011917050468a58a470e655d6b1e598",
        "commit_message": "Improved error message displayed when using -http against a pre-JENKINS-41745 server.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/724ebbcc5011917050468a58a470e655d6b1e598",
        "buggy_code": "throw new IOException(\"expected to see initial zero byte\");",
        "fixed_code": "throw new IOException(\"expected to see initial zero byte; perhaps you are connecting to an old server which does not support -http?\");",
        "patch": "@@ -719,7 +719,7 @@ class ClientSideImpl extends PlainCLIProtocol.ClientSide {\n             ClientSideImpl(InputStream is, OutputStream os) throws IOException {\n                 super(is, os);\n                 if (is.read() != 0) { // cf. FullDuplexHttpService\n-                    throw new IOException(\"expected to see initial zero byte\");\n+                    throw new IOException(\"expected to see initial zero byte; perhaps you are connecting to an old server which does not support -http?\");\n                 }\n             }\n             @Override"
    },
    {
        "commit_id": "77dfa64b6a173b58c7f61107dcc51a61f7a3466a",
        "commit_message": "Fix error with 1.8.0_77 in CI, does not happen with 1.8.0_121\n\nProbably a bit ugly, but well for a test it should be acceptable.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/77dfa64b6a173b58c7f61107dcc51a61f7a3466a",
        "buggy_code": "public void isJenkinsJVM() throws Exception {",
        "fixed_code": "public void isJenkinsJVM() throws Throwable {",
        "patch": "@@ -17,7 +17,7 @@ public class JenkinsJVMRealTest {\n     public static JenkinsRule j = new JenkinsRule();\n \n     @Test\n-    public void isJenkinsJVM() throws Exception {\n+    public void isJenkinsJVM() throws Throwable {\n         assertThat(new IsJenkinsJVM().call(), is(true));\n         DumbSlave slave = j.createOnlineSlave();\n         assertThat(slave.getChannel().call(new IsJenkinsJVM()), is(false));"
    },
    {
        "commit_id": "9ffb5d87f5d05a1994621309e6534af8d903d929",
        "commit_message": "Hoping to fix an unreproducible test hang.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9ffb5d87f5d05a1994621309e6534af8d903d929",
        "buggy_code": "notify();",
        "fixed_code": "notifyAll();",
        "patch": "@@ -708,7 +708,7 @@ class ClientSideImpl extends PlainCLIProtocol.ClientSide {\n             @Override\n             protected synchronized void onExit(int code) {\n                 this.exit = code;\n-                notify();\n+                notifyAll();\n             }\n             @Override\n             protected void onStdout(byte[] chunk) throws IOException {"
    },
    {
        "commit_id": "9ffb5d87f5d05a1994621309e6534af8d903d929",
        "commit_message": "Hoping to fix an unreproducible test hang.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9ffb5d87f5d05a1994621309e6534af8d903d929",
        "buggy_code": "notify();",
        "fixed_code": "notifyAll();",
        "patch": "@@ -157,7 +157,7 @@ protected void onEncoding(String text) {\n                             }\n                             @Override\n                             protected synchronized void onStart() {\n-                                notify();\n+                                notifyAll();\n                             }\n                             @Override\n                             protected void onStdin(byte[] chunk) throws IOException {"
    },
    {
        "commit_id": "e02f13592a2054f3b803f50f7277edd13d485860",
        "commit_message": "Fix missing semi-colon",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e02f13592a2054f3b803f50f7277edd13d485860",
        "buggy_code": "import static org.junit.Assume.assumeFalse",
        "fixed_code": "import static org.junit.Assume.assumeFalse;",
        "patch": "@@ -15,7 +15,7 @@\n import org.junit.rules.TemporaryFolder;\n import org.jvnet.hudson.test.Issue;\n \n-import static org.junit.Assume.assumeFalse\n+import static org.junit.Assume.assumeFalse;\n \n public class RewindableRotatingFileOutputStreamTest {\n "
    },
    {
        "commit_id": "335fb4bc78253910632ca31a11f0f262676f9a1b",
        "commit_message": "Merge pull request #2763 from slide/windows-ci\n\nFix tests on Windows",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/335fb4bc78253910632ca31a11f0f262676f9a1b",
        "buggy_code": "if ( sep < 0 ) {",
        "fixed_code": "if ( sep < 0 || ((sep+1) < command.length() && !Character.isDigit(command.charAt(sep+1)))) {",
        "patch": "@@ -79,7 +79,7 @@ public Registry getObject ( final String command ) throws Exception {\n         String host;\n         int port;\n         int sep = command.indexOf(':');\n-        if ( sep < 0 ) {\n+        if ( sep < 0 || ((sep+1) < command.length() && !Character.isDigit(command.charAt(sep+1)))) {\n             port = new Random().nextInt(65535);\n             host = command;\n         }"
    },
    {
        "commit_id": "513d7e03c78a2893e30cae940ae1d00c4b35b962",
        "commit_message": "Fix ip address",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/513d7e03c78a2893e30cae940ae1d00c4b35b962",
        "buggy_code": "project.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo 1\\r\\nping -n 10 127.0.01 >nul\") : new Shell(\"echo 1\\nsleep 10s\"));",
        "fixed_code": "project.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo 1\\r\\nping -n 10 127.0.0.1 >nul\") : new Shell(\"echo 1\\nsleep 10s\"));",
        "patch": "@@ -90,7 +90,7 @@ public class AbstractBuildRangeCommand2Test {\n \n     @Test public void dummyRangeShouldSuccessEvenTheBuildIsRunning() throws Exception {\n         FreeStyleProject project = j.createFreeStyleProject(\"aProject\");\n-        project.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo 1\\r\\nping -n 10 127.0.01 >nul\") : new Shell(\"echo 1\\nsleep 10s\"));\n+        project.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo 1\\r\\nping -n 10 127.0.0.1 >nul\") : new Shell(\"echo 1\\nsleep 10s\"));\n         assertThat(\"Job wasn't scheduled properly\", project.scheduleBuild(0), equalTo(true));\n \n         // Wait until classProject is started (at least 1s)"
    },
    {
        "commit_id": "223151ea8b0afebe7141b3ad0cc5ee1af1d39cd1",
        "commit_message": "Fix parsing so that the test can complete.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/223151ea8b0afebe7141b3ad0cc5ee1af1d39cd1",
        "buggy_code": "if ( sep < 0 ) {",
        "fixed_code": "if ( sep < 0 || ((sep+1) < command.length() && !Character.isDigit(command.charAt(sep+1)))) {",
        "patch": "@@ -79,7 +79,7 @@ public Registry getObject ( final String command ) throws Exception {\n         String host;\n         int port;\n         int sep = command.indexOf(':');\n-        if ( sep < 0 ) {\n+        if ( sep < 0 || ((sep+1) < command.length() && !Character.isDigit(command.charAt(sep+1)))) {\n             port = new Random().nextInt(65535);\n             host = command;\n         }"
    },
    {
        "commit_id": "08a993d7bcd3590ccbfa9504cd45fbba540fd354",
        "commit_message": "[JENKINS-32820] Fix the last merge issues",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08a993d7bcd3590ccbfa9504cd45fbba540fd354",
        "buggy_code": "Jenkins h = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart",
        "fixed_code": "Jenkins jenkins = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart",
        "patch": "@@ -40,7 +40,7 @@ public class SolarisSMFLifecycle extends Lifecycle {\n      */\n     @Override\n     public void restart() throws IOException, InterruptedException {\n-        Jenkins h = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart\n+        Jenkins jenkins = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart\n         try {\n             if (jenkins != null) {\n                 jenkins.cleanUp();"
    },
    {
        "commit_id": "08a993d7bcd3590ccbfa9504cd45fbba540fd354",
        "commit_message": "[JENKINS-32820] Fix the last merge issues",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08a993d7bcd3590ccbfa9504cd45fbba540fd354",
        "buggy_code": "Jenkins h = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart",
        "fixed_code": "Jenkins jenkins = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart",
        "patch": "@@ -67,7 +67,7 @@ public UnixLifecycle() throws IOException {\n \n     @Override\n     public void restart() throws IOException, InterruptedException {\n-        Jenkins h = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart\n+        Jenkins jenkins = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart\n         try {\n             if (jenkins != null) {\n                 jenkins.cleanUp();"
    },
    {
        "commit_id": "08a993d7bcd3590ccbfa9504cd45fbba540fd354",
        "commit_message": "[JENKINS-32820] Fix the last merge issues",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08a993d7bcd3590ccbfa9504cd45fbba540fd354",
        "buggy_code": "Jenkins jenkins = Jenkins.getInstance();",
        "fixed_code": "Jenkins jenkins = Jenkins.getInstanceOrNull();",
        "patch": "@@ -117,7 +117,7 @@ public void rewriteHudsonWar(File by) throws IOException {\n \n     @Override\n     public void restart() throws IOException, InterruptedException {\n-        Jenkins jenkins = Jenkins.getInstance();\n+        Jenkins jenkins = Jenkins.getInstanceOrNull();\n         try {\n             if (jenkins != null) {\n                 jenkins.cleanUp();"
    },
    {
        "commit_id": "246a0fa90a05b729eaabca6d697016015f622e57",
        "commit_message": "[FIX SECURITY-385] Only suggest visible views in search",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/246a0fa90a05b729eaabca6d697016015f622e57",
        "buggy_code": "protected Collection<View> all() { return views; }",
        "fixed_code": "protected Collection<View> all() { return viewGroupMixIn.getViews(); }",
        "patch": "@@ -1887,7 +1887,7 @@ public SearchIndexBuilder makeSearchIndex() {\n             })\n             .add(new CollectionSearchIndex() {// for views\n                 protected View get(String key) { return getView(key); }\n-                protected Collection<View> all() { return views; }\n+                protected Collection<View> all() { return viewGroupMixIn.getViews(); }\n             });\n     }\n "
    },
    {
        "commit_id": "3538931d1e2ff736adeb172f4947ee9ea20ac59c",
        "commit_message": "[JENKINS-39300] Fix final test case",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3538931d1e2ff736adeb172f4947ee9ea20ac59c",
        "buggy_code": "assertThat(result.stderr(), containsString(\"ERROR: Jenkins does not allow to delete 'All' view\"));",
        "fixed_code": "assertThat(result.stderr(), containsString(\"ERROR: Jenkins does not allow to delete '\"+AllView.DEFAULT_VIEW_NAME+\"' view\"));",
        "patch": "@@ -123,7 +123,7 @@ public class DeleteViewCommandTest {\n         assertThat(result, failedWith(4));\n         assertThat(result, hasNoStandardOutput());\n         assertThat(j.jenkins.getView(AllView.DEFAULT_VIEW_NAME), notNullValue());\n-        assertThat(result.stderr(), containsString(\"ERROR: Jenkins does not allow to delete 'All' view\"));\n+        assertThat(result.stderr(), containsString(\"ERROR: Jenkins does not allow to delete '\"+AllView.DEFAULT_VIEW_NAME+\"' view\"));\n     }\n \n     @Test public void deleteViewShoudlFailIfViewNameIsEmpty() {"
    },
    {
        "commit_id": "fde9c42fe05ac925a904b6c09a81d497d0e6ccea",
        "commit_message": "[SECURITY-360] introduce a system switch to kill CLI\n\nThis basically is a convenient version of\nhttps://github.com/jenkinsci-cert/SECURITY-218.\n\nDuring the course of discussing how to fix SECURITY-360, it was agreed\nby the CERT team that we provide this switch.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fde9c42fe05ac925a904b6c09a81d497d0e6ccea",
        "buggy_code": "return \"CLI-connect\";",
        "fixed_code": "return jenkins.CLI.DISABLED ? null : \"CLI-connect\";",
        "patch": "@@ -32,7 +32,7 @@ public class CliProtocol extends AgentProtocol {\n \n     @Override\n     public String getName() {\n-        return \"CLI-connect\";\n+        return jenkins.CLI.DISABLED ? null : \"CLI-connect\";\n     }\n \n     @Override"
    },
    {
        "commit_id": "fde9c42fe05ac925a904b6c09a81d497d0e6ccea",
        "commit_message": "[SECURITY-360] introduce a system switch to kill CLI\n\nThis basically is a convenient version of\nhttps://github.com/jenkinsci-cert/SECURITY-218.\n\nDuring the course of discussing how to fix SECURITY-360, it was agreed\nby the CERT team that we provide this switch.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fde9c42fe05ac925a904b6c09a81d497d0e6ccea",
        "buggy_code": "return \"CLI2-connect\";",
        "fixed_code": "return jenkins.CLI.DISABLED ? null : \"CLI2-connect\";",
        "patch": "@@ -24,7 +24,7 @@\n public class CliProtocol2 extends CliProtocol {\n     @Override\n     public String getName() {\n-        return \"CLI2-connect\";\n+        return jenkins.CLI.DISABLED ? null : \"CLI2-connect\";\n     }\n \n     @Override"
    },
    {
        "commit_id": "72ee9e072d10364eeffb4687ba58b929d955df9e",
        "commit_message": "Merge pull request #2627 from oleg-nenashev/bug/JENKINS-39604\n\n[FIXED JENKINS-39604] - ResourceBundleUtil#getBundle() should report misses on the low level",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/72ee9e072d10364eeffb4687ba58b929d955df9e",
        "buggy_code": "logger.warning(e.getMessage());",
        "fixed_code": "logger.finer(e.getMessage());",
        "patch": "@@ -114,7 +114,7 @@ private ResourceBundleUtil() {\n             return ResourceBundle.getBundle(baseName, locale, classLoader);\n         } catch (MissingResourceException e) {\n             // fall through and return null.\n-            logger.warning(e.getMessage());\n+            logger.finer(e.getMessage());\n         }\n         return null;\n     }"
    },
    {
        "commit_id": "7c43986b388865c93b133c4f87eeb6f864d97d42",
        "commit_message": "[JENKINS-39300 Follow-up] Fix the AllView tab title to reflect l10n\n\n- Also while we are at it, modernise ViewDescriptor instantiation to allow for descriptor visibility filtering",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7c43986b388865c93b133c4f87eeb6f864d97d42",
        "buggy_code": "View v = new AllView(Messages.Hudson_ViewName());",
        "fixed_code": "View v = new AllView(\"all\");",
        "patch": "@@ -3052,7 +3052,7 @@ public void run(Reactor session) throws Exception {\n                 // initialize views by inserting the default view if necessary\n                 // this is both for clean Jenkins and for backward compatibility.\n                 if(views.size()==0 || primaryView==null) {\n-                    View v = new AllView(Messages.Hudson_ViewName());\n+                    View v = new AllView(\"all\");\n                     setViewOwner(v);\n                     views.add(0,v);\n                     primaryView = v.getViewName();"
    },
    {
        "commit_id": "fd0ccd2a2c1d3530e22a0edae3b0fa92f20f841c",
        "commit_message": "[FIXED JENKINS-31487] (#2542)\n\nThere were two issues preventing the build history from updating properly:\n1) The next build number being fetched wasn't taking into account running builds, so any builds already running when the page is refreshed would be ignored. The fix was to use nextBuildNumberToFetch if it is available (which is the case if there are running builds) and to fall back to the next build otherwise.\n2) The first transient build key (used to clear out builds from the history that are being updated) wasn't being set when the page first loads. This was fixed by making getHistoryPageFilter calculate the value so that it happens in all cases rather than just during the ajax call.\n(cherry picked from commit 0268b988d5c88cd29be12ed25e95d5bc448c2840)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fd0ccd2a2c1d3530e22a0edae3b0fa92f20f841c",
        "buggy_code": "return historyPageFilter;",
        "fixed_code": "return updateFirstTransientBuildKey(historyPageFilter);",
        "patch": "@@ -77,6 +77,6 @@ public HistoryPageFilter getHistoryPageFilter() {\n         historyPageFilter.add(baseList, getQueuedItems());\n         historyPageFilter.widget = this;\n \n-        return historyPageFilter;\n+        return updateFirstTransientBuildKey(historyPageFilter);\n     }\n }"
    },
    {
        "commit_id": "123d22493107ef29e14ef26acc2974c918f93657",
        "commit_message": "Merge pull request #2546 from daniel-beck/configurable-admin-monitors\n\n[FIX JENKINS-38301] Add configuration for disabling admin monitors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/123d22493107ef29e14ef26acc2974c918f93657",
        "buggy_code": "return \"Agent \\u2192 Master Access Control\";",
        "fixed_code": "return Messages.AdminCallableMonitor_DisplayName();",
        "patch": "@@ -39,7 +39,7 @@ public boolean isActivated() {\n \n     @Override\n     public String getDisplayName() {\n-        return \"Agent \\u2192 Master Access Control\";\n+        return Messages.AdminCallableMonitor_DisplayName();\n     }\n \n     // bind this to URL"
    },
    {
        "commit_id": "0268b988d5c88cd29be12ed25e95d5bc448c2840",
        "commit_message": "[FIXED JENKINS-31487] (#2542)\n\nThere were two issues preventing the build history from updating properly:\r\n1) The next build number being fetched wasn't taking into account running builds, so any builds already running when the page is refreshed would be ignored. The fix was to use nextBuildNumberToFetch if it is available (which is the case if there are running builds) and to fall back to the next build otherwise.\r\n2) The first transient build key (used to clear out builds from the history that are being updated) wasn't being set when the page first loads. This was fixed by making getHistoryPageFilter calculate the value so that it happens in all cases rather than just during the ajax call.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0268b988d5c88cd29be12ed25e95d5bc448c2840",
        "buggy_code": "return historyPageFilter;",
        "fixed_code": "return updateFirstTransientBuildKey(historyPageFilter);",
        "patch": "@@ -77,6 +77,6 @@ public HistoryPageFilter getHistoryPageFilter() {\n         historyPageFilter.add(baseList, getQueuedItems());\n         historyPageFilter.widget = this;\n \n-        return historyPageFilter;\n+        return updateFirstTransientBuildKey(historyPageFilter);\n     }\n }"
    },
    {
        "commit_id": "662b3ef73493ed67c243893b3087ec01ab810f34",
        "commit_message": "Fix quoting in undefined parameters warning log (#2479)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/662b3ef73493ed67c243893b3087ec01ab810f34",
        "buggy_code": "LOGGER.log(Level.WARNING, \"Skipped parameter `{0}` as it is undefined on `{1}`. Set `-D{2}`=true to allow \"",
        "fixed_code": "LOGGER.log(Level.WARNING, \"Skipped parameter `{0}` as it is undefined on `{1}`. Set `-D{2}=true` to allow \"",
        "patch": "@@ -316,7 +316,7 @@ private List<? extends ParameterValue> filter(List<ParameterValue> parameters) {\n             if (this.parameterDefinitionNames.contains(v.getName()) || isSafeParameter(v.getName())) {\n                 filteredParameters.add(v);\n             } else {\n-                LOGGER.log(Level.WARNING, \"Skipped parameter `{0}` as it is undefined on `{1}`. Set `-D{2}`=true to allow \"\n+                LOGGER.log(Level.WARNING, \"Skipped parameter `{0}` as it is undefined on `{1}`. Set `-D{2}=true` to allow \"\n                         + \"undefined parameters to be injected as environment variables or `-D{3}=[comma-separated list]` to whitelist specific parameter names, \"\n                         + \"even though it represents a security breach\",\n                         new Object [] { v.getName(), run.getParent().getFullName(), KEEP_UNDEFINED_PARAMETERS_SYSTEM_PROPERTY_NAME, SAFE_PARAMETERS_SYSTEM_PROPERTY_NAME });"
    },
    {
        "commit_id": "6d29dd4554345aed2905e8ab32da678e301736a7",
        "commit_message": "[FIXED JENKINS-36232] NPE during SCM polling (#2425)\n\n* [FIXED JENKINS-36232] NPE during SCM polling\r\n\r\n* add test to trigger the \"no veto\" code path that has the NPE\r\n\r\n* incorporate remark on using @Issue reference",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6d29dd4554345aed2905e8ab32da678e301736a7",
        "buggy_code": "if (!veto.shouldPoll(asItem())) {",
        "fixed_code": "if (veto != null && !veto.shouldPoll(asItem())) {",
        "patch": "@@ -121,7 +121,7 @@ private static final class Bridge implements SCMTriggerItem {\n             }\n             @Override public PollingResult poll(TaskListener listener) {\n                 SCMDecisionHandler veto = SCMDecisionHandler.firstShouldPollVeto(asItem());\n-                if (!veto.shouldPoll(asItem())) {\n+                if (veto != null && !veto.shouldPoll(asItem())) {\n                     listener.getLogger().println(Messages.SCMTriggerItem_PollingVetoed(veto));\n                     return PollingResult.NO_CHANGES;\n                 }"
    },
    {
        "commit_id": "15ce24ae4dac23a732f193f29b6423bc03be7a49",
        "commit_message": "[JENKINS-35198] - DelegatingComputerLauncher should accept child classes in its hooks (#2384)\n\n* JENKINS-35198 Add failing test for clear identification of the issue and future regression test\r\n\r\n* JENKINS-35198 Fix DelegatingComputerLauncher logic for filtering out subclasses as possible delegates\r\n\r\nthis logic is by default, and subclasses can still allow the selection of other DelegatingComputerLauncher instances as delegates.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/15ce24ae4dac23a732f193f29b6423bc03be7a49",
        "buggy_code": "if (DelegatingComputerLauncher.class.isInstance(d))  continue;",
        "fixed_code": "if (DelegatingComputerLauncher.class.isAssignableFrom(d.getKlass().toJavaClass()))  continue;",
        "patch": "@@ -74,7 +74,7 @@ public static abstract class DescriptorImpl extends Descriptor<ComputerLauncher>\n         public List<Descriptor<ComputerLauncher>> getApplicableDescriptors() {\n             List<Descriptor<ComputerLauncher>> r = new ArrayList<Descriptor<ComputerLauncher>>();\n             for (Descriptor<ComputerLauncher> d : Functions.getComputerLauncherDescriptors()) {\n-                if (DelegatingComputerLauncher.class.isInstance(d))  continue;\n+                if (DelegatingComputerLauncher.class.isAssignableFrom(d.getKlass().toJavaClass()))  continue;\n                 r.add(d);\n             }\n             return r;"
    },
    {
        "commit_id": "02725adfa16d58a6743c767bc00c370bb89f38b5",
        "commit_message": "Fix RSS id for builds in folders (#1965)\n\n[JENKINS-34767] - Prevent RSS ID collisions for items with same name in different folders\n(cherry picked from commit d8076e9654a4be6cd0792ea954363b209c44313b)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/02725adfa16d58a6743c767bc00c370bb89f38b5",
        "buggy_code": "+ entry.getParent().getName()+':'+entry.getId();",
        "fixed_code": "+ entry.getParent().getFullName()+':'+entry.getId();",
        "patch": "@@ -2394,7 +2394,7 @@ public String getEntryUrl(Run entry) {\n         public String getEntryID(Run entry) {\n             return \"tag:\" + \"hudson.dev.java.net,\"\n                 + entry.getTimestamp().get(Calendar.YEAR) + \":\"\n-                + entry.getParent().getName()+':'+entry.getId();\n+                + entry.getParent().getFullName()+':'+entry.getId();\n         }\n \n         public String getEntryDescription(Run entry) {"
    },
    {
        "commit_id": "85eff5f49470595d1ac884562671c5cb566bc161",
        "commit_message": "Merge pull request #2355 from batmat/JENKINS-34857\n\n[FIX JENKINS-34857] Don't throw Exception when Jenkins.getInstance() yields null",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/85eff5f49470595d1ac884562671c5cb566bc161",
        "buggy_code": "if(!Boolean.getBoolean(Jenkins.class.getName()+\".disableExceptionOnNullInstance\")) {",
        "fixed_code": "if(Boolean.getBoolean(Jenkins.class.getName()+\".enableExceptionOnNullInstance\")) {",
        "patch": "@@ -760,7 +760,7 @@ public static Jenkins getInstanceOrNull() {\n     public static Jenkins getInstance() {\n         Jenkins instance = HOLDER.getInstance();\n         if (instance == null) {\n-            if(!Boolean.getBoolean(Jenkins.class.getName()+\".disableExceptionOnNullInstance\")) {\n+            if(Boolean.getBoolean(Jenkins.class.getName()+\".enableExceptionOnNullInstance\")) {\n                 // TODO: remove that second block around 2.20 (that is: ~20 versions to battle test it)\n                 // See https://github.com/jenkinsci/jenkins/pull/2297#issuecomment-216710150\n                 throw new IllegalStateException(\"Jenkins has not been started, or was already shut down\");"
    },
    {
        "commit_id": "b8d244b67733058ab2014c86517a0718680f01b2",
        "commit_message": "[FIX JENKINS-34857] Dont throw Exception when Jenkins.instance yields null",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b8d244b67733058ab2014c86517a0718680f01b2",
        "buggy_code": "if(!Boolean.getBoolean(Jenkins.class.getName()+\".disableExceptionOnNullInstance\")) {",
        "fixed_code": "if(Boolean.getBoolean(Jenkins.class.getName()+\".enableExceptionOnNullInstance\")) {",
        "patch": "@@ -760,7 +760,7 @@ public static Jenkins getInstanceOrNull() {\n     public static Jenkins getInstance() {\n         Jenkins instance = HOLDER.getInstance();\n         if (instance == null) {\n-            if(!Boolean.getBoolean(Jenkins.class.getName()+\".disableExceptionOnNullInstance\")) {\n+            if(Boolean.getBoolean(Jenkins.class.getName()+\".enableExceptionOnNullInstance\")) {\n                 // TODO: remove that second block around 2.20 (that is: ~20 versions to battle test it)\n                 // See https://github.com/jenkinsci/jenkins/pull/2297#issuecomment-216710150\n                 throw new IllegalStateException(\"Jenkins has not been started, or was already shut down\");"
    },
    {
        "commit_id": "d8076e9654a4be6cd0792ea954363b209c44313b",
        "commit_message": "Fix RSS id for builds in folders (#1965)\n\n[JENKINS-34767] - Prevent RSS ID collisions for items with same name in different folders",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d8076e9654a4be6cd0792ea954363b209c44313b",
        "buggy_code": "+ entry.getParent().getName()+':'+entry.getId();",
        "fixed_code": "+ entry.getParent().getFullName()+':'+entry.getId();",
        "patch": "@@ -2391,7 +2391,7 @@ public String getEntryUrl(Run entry) {\n         public String getEntryID(Run entry) {\n             return \"tag:\" + \"hudson.dev.java.net,\"\n                 + entry.getTimestamp().get(Calendar.YEAR) + \":\"\n-                + entry.getParent().getName()+':'+entry.getId();\n+                + entry.getParent().getFullName()+':'+entry.getId();\n         }\n \n         public String getEntryDescription(Run entry) {"
    },
    {
        "commit_id": "25f6c2cf6d771668fe1caae1c11c82a2b80284e7",
        "commit_message": "[JENKINS-34675] - Fix the Unit test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/25f6c2cf6d771668fe1caae1c11c82a2b80284e7",
        "buggy_code": "Assert.assertEquals(\"Unknown site 'blahblah'.\", response.getString(\"message\"));",
        "fixed_code": "Assert.assertEquals(\"Cannot check connection status of the update site with ID='blahblah'. This update center cannot be resolved\", response.getString(\"message\"));",
        "patch": "@@ -67,7 +67,7 @@ public void doConnectionStatus_unknown_site() throws IOException, SAXException {\n         JSONObject response = jenkinsRule.getJSON(\"updateCenter/connectionStatus?siteId=blahblah\").getJSONObject();\n \n         Assert.assertEquals(\"error\", response.getString(\"status\"));\n-        Assert.assertEquals(\"Unknown site 'blahblah'.\", response.getString(\"message\"));\n+        Assert.assertEquals(\"Cannot check connection status of the update site with ID='blahblah'. This update center cannot be resolved\", response.getString(\"message\"));\n     }\n \n     private UpdateSite updateSite = new UpdateSite(UpdateCenter.ID_DEFAULT, \"http://xyz\") {"
    },
    {
        "commit_id": "0d553f2d552096e0a8299cc33681a76e9f6025b4",
        "commit_message": "Merge pull request #67 from jenkinsci-cert/SECURITY-276\n\n[FIX SECURITY-276] Don't allow open redirect using scheme-rel. URL",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0d553f2d552096e0a8299cc33681a76e9f6025b4",
        "buggy_code": "if(pattern!=null && !Util.isAbsoluteUri(pattern)) {// avoid open redirect",
        "fixed_code": "if(pattern!=null && Util.isSafeToRedirectTo(pattern)) {// avoid open redirect",
        "patch": "@@ -158,7 +158,7 @@ private void serveFile(StaplerRequest req, StaplerResponse rsp, VirtualFile root\n         String pattern = req.getParameter(\"pattern\");\n         if(pattern==null)\n             pattern = req.getParameter(\"path\"); // compatibility with Hudson<1.129\n-        if(pattern!=null && !Util.isAbsoluteUri(pattern)) {// avoid open redirect\n+        if(pattern!=null && Util.isSafeToRedirectTo(pattern)) {// avoid open redirect\n             rsp.sendRedirect2(pattern);\n             return;\n         }"
    },
    {
        "commit_id": "0d553f2d552096e0a8299cc33681a76e9f6025b4",
        "commit_message": "Merge pull request #67 from jenkinsci-cert/SECURITY-276\n\n[FIX SECURITY-276] Don't allow open redirect using scheme-rel. URL",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0d553f2d552096e0a8299cc33681a76e9f6025b4",
        "buggy_code": "if (url==null || Util.isAbsoluteUri(url))   // avoid open redirect",
        "fixed_code": "if (url==null || !Util.isSafeToRedirectTo(url))   // avoid open redirect",
        "patch": "@@ -158,7 +158,7 @@ public void _doBuild(StaplerRequest req, StaplerResponse rsp, @QueryParameter Ti\n                 getJob(), delay.getTime(), new ParametersAction(values), new CauseAction(new Cause.UserIdCause()));\n         if (item!=null) {\n             String url = formData.optString(\"redirectTo\");\n-            if (url==null || Util.isAbsoluteUri(url))   // avoid open redirect\n+            if (url==null || !Util.isSafeToRedirectTo(url))   // avoid open redirect\n                 url = req.getContextPath()+'/'+item.getUrl();\n             rsp.sendRedirect(formData.optInt(\"statusCode\",SC_CREATED), url);\n         } else"
    },
    {
        "commit_id": "0d553f2d552096e0a8299cc33681a76e9f6025b4",
        "commit_message": "Merge pull request #67 from jenkinsci-cert/SECURITY-276\n\n[FIX SECURITY-276] Don't allow open redirect using scheme-rel. URL",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0d553f2d552096e0a8299cc33681a76e9f6025b4",
        "buggy_code": "if (Util.isAbsoluteUri(targetUrl))",
        "fixed_code": "if (!Util.isSafeToRedirectTo(targetUrl))",
        "patch": "@@ -53,7 +53,7 @@ protected String determineTargetUrl(HttpServletRequest request) {\n         if (targetUrl == null)\n             return getDefaultTargetUrl();\n \n-        if (Util.isAbsoluteUri(targetUrl))\n+        if (!Util.isSafeToRedirectTo(targetUrl))\n             return \".\"; // avoid open redirect\n \n         // URL returned from determineTargetUrl() is resolved against the context path,"
    },
    {
        "commit_id": "2ed0c046dfbb2003a17df27c53777e72c6eaff25",
        "commit_message": "[FIX SECURITY-276] Don't allow open redirect using scheme-rel. URL",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ed0c046dfbb2003a17df27c53777e72c6eaff25",
        "buggy_code": "if(pattern!=null && !Util.isAbsoluteUri(pattern)) {// avoid open redirect",
        "fixed_code": "if(pattern!=null && !Util.isAbsoluteOrSchemeRelativeUri(pattern)) {// avoid open redirect",
        "patch": "@@ -158,7 +158,7 @@ private void serveFile(StaplerRequest req, StaplerResponse rsp, VirtualFile root\n         String pattern = req.getParameter(\"pattern\");\n         if(pattern==null)\n             pattern = req.getParameter(\"path\"); // compatibility with Hudson<1.129\n-        if(pattern!=null && !Util.isAbsoluteUri(pattern)) {// avoid open redirect\n+        if(pattern!=null && !Util.isAbsoluteOrSchemeRelativeUri(pattern)) {// avoid open redirect\n             rsp.sendRedirect2(pattern);\n             return;\n         }"
    },
    {
        "commit_id": "2ed0c046dfbb2003a17df27c53777e72c6eaff25",
        "commit_message": "[FIX SECURITY-276] Don't allow open redirect using scheme-rel. URL",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ed0c046dfbb2003a17df27c53777e72c6eaff25",
        "buggy_code": "if (url==null || Util.isAbsoluteUri(url))   // avoid open redirect",
        "fixed_code": "if (url==null || Util.isAbsoluteOrSchemeRelativeUri(url))   // avoid open redirect",
        "patch": "@@ -158,7 +158,7 @@ public void _doBuild(StaplerRequest req, StaplerResponse rsp, @QueryParameter Ti\n                 getJob(), delay.getTime(), new ParametersAction(values), new CauseAction(new Cause.UserIdCause()));\n         if (item!=null) {\n             String url = formData.optString(\"redirectTo\");\n-            if (url==null || Util.isAbsoluteUri(url))   // avoid open redirect\n+            if (url==null || Util.isAbsoluteOrSchemeRelativeUri(url))   // avoid open redirect\n                 url = req.getContextPath()+'/'+item.getUrl();\n             rsp.sendRedirect(formData.optInt(\"statusCode\",SC_CREATED), url);\n         } else"
    },
    {
        "commit_id": "2ed0c046dfbb2003a17df27c53777e72c6eaff25",
        "commit_message": "[FIX SECURITY-276] Don't allow open redirect using scheme-rel. URL",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ed0c046dfbb2003a17df27c53777e72c6eaff25",
        "buggy_code": "if (Util.isAbsoluteUri(targetUrl))",
        "fixed_code": "if (Util.isAbsoluteOrSchemeRelativeUri(targetUrl))",
        "patch": "@@ -53,7 +53,7 @@ protected String determineTargetUrl(HttpServletRequest request) {\n         if (targetUrl == null)\n             return getDefaultTargetUrl();\n \n-        if (Util.isAbsoluteUri(targetUrl))\n+        if (Util.isAbsoluteOrSchemeRelativeUri(targetUrl))\n             return \".\"; // avoid open redirect\n \n         // URL returned from determineTargetUrl() is resolved against the context path,"
    },
    {
        "commit_id": "2ada9b70464b19bf8f15edee86b683606b4d860f",
        "commit_message": "Merge remote-tracking branch 'primary/master' into JENKINS-33950-multiple-dependency-install-fix",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ada9b70464b19bf8f15edee86b683606b4d860f",
        "buggy_code": "static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());",
        "fixed_code": "private static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());",
        "patch": "@@ -50,7 +50,7 @@\n  */\n public abstract class TopLevelItemDescriptor extends Descriptor<TopLevelItem> {\n \n-    static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());\n+    private static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());\n \n     protected TopLevelItemDescriptor(Class<? extends TopLevelItem> clazz) {\n         super(clazz);"
    },
    {
        "commit_id": "0f038be5776e5d028e3b19a20c378549424f2be7",
        "commit_message": "[SECURITY-243] further minor improvements.\n\nFix a couple more calls and add a pointer to Jenkins.getUser()",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0f038be5776e5d028e3b19a20c378549424f2be7",
        "buggy_code": "User u = User.get(username, false, emptyMap()); // TODO why false? use getById?",
        "fixed_code": "User u = User.getById(username, false);",
        "patch": "@@ -39,7 +39,7 @@ public UserDetails loadUserByUsername(String username) throws UsernameNotFoundEx\n \n     protected UserDetails attemptToImpersonate(String username, RuntimeException e) {\n         // this backend cannot tell if the user name exists or not. so substitute by what we know\n-        User u = User.get(username, false, emptyMap()); // TODO why false? use getById?\n+        User u = User.getById(username, false);\n         if (u!=null) {\n             LastGrantedAuthoritiesProperty p = u.getProperty(LastGrantedAuthoritiesProperty.class);\n             if (p!=null)"
    },
    {
        "commit_id": "4f51944cf1f9fcf4d8b5bb4a9671730bf455838c",
        "commit_message": "Merge pull request #2271 from daniel-beck/JENKINS-34093\n\n[FIX JENKINS-34093] Make logger field private",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4f51944cf1f9fcf4d8b5bb4a9671730bf455838c",
        "buggy_code": "static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());",
        "fixed_code": "private static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());",
        "patch": "@@ -50,7 +50,7 @@\n  */\n public abstract class TopLevelItemDescriptor extends Descriptor<TopLevelItem> {\n \n-    static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());\n+    private static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());\n \n     protected TopLevelItemDescriptor(Class<? extends TopLevelItem> clazz) {\n         super(clazz);"
    },
    {
        "commit_id": "b01a1b1c15b3ed17a5bb4d584218ef3e9cf3de3f",
        "commit_message": "[FIX JENKINS-34093] Make logger field private",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b01a1b1c15b3ed17a5bb4d584218ef3e9cf3de3f",
        "buggy_code": "static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());",
        "fixed_code": "private static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());",
        "patch": "@@ -50,7 +50,7 @@\n  */\n public abstract class TopLevelItemDescriptor extends Descriptor<TopLevelItem> {\n \n-    static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());\n+    private static final Logger LOGGER = Logger.getLogger(TopLevelItemDescriptor.class.getName());\n \n     protected TopLevelItemDescriptor(Class<? extends TopLevelItem> clazz) {\n         super(clazz);"
    },
    {
        "commit_id": "ac566a91e44e3482083355bd5cde3cf65610c4a3",
        "commit_message": "Merge pull request #2146 from olivergondza/hide-management-link\n\n[FIXED JENKINS-33683] - Fix Management link hiding",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ac566a91e44e3482083355bd5cde3cf65610c4a3",
        "buggy_code": "if(a.getUrlName().equals(token))",
        "fixed_code": "if (url.equals(token))",
        "patch": "@@ -552,7 +552,7 @@ public Object getDynamic(String token) {\n         for (Action a : getActions()) {\n             String url = a.getUrlName();\n             if (url==null)  continue;\n-            if(a.getUrlName().equals(token))\n+            if (url.equals(token))\n                 return a;\n         }\n         return null;"
    },
    {
        "commit_id": "e6df9f55bb6bbd2e842bae1355ed15f96b344099",
        "commit_message": "Merge pull request #2215 from kzantow/JENKINS-33805-rename-updated-file\n\n[FIX JENKINS-33805] rename install/upgrade files to be more clear & consistent",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e6df9f55bb6bbd2e842bae1355ed15f96b344099",
        "buggy_code": "return new File(Jenkins.getInstance().getRootDir(),\"upgraded\");",
        "fixed_code": "return new File(Jenkins.getInstance().getRootDir(),\"jenkins.install.UpgradeWizard.state\");",
        "patch": "@@ -47,7 +47,7 @@ public class UpgradeWizard extends PageDecorator {\n      * This file records the vesrion number that the installation has upgraded to.\n      */\n     /*package*/ File getStateFile() {\n-        return new File(Jenkins.getInstance().getRootDir(),\"upgraded\");\n+        return new File(Jenkins.getInstance().getRootDir(),\"jenkins.install.UpgradeWizard.state\");\n     }\n \n     public UpgradeWizard() throws IOException {"
    },
    {
        "commit_id": "0dce38abbaedb0680218d6743bde00b375714522",
        "commit_message": "Merge remote-tracking branch 'origin/2.0' into jtnord-patch-1",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0dce38abbaedb0680218d6743bde00b375714522",
        "buggy_code": "int p = TcpSlaveAgentListener.CLI_PORT !=null ? TcpSlaveAgentListener.CLI_PORT : tal.getPort();",
        "fixed_code": "int p = tal.getAdvertisedPort();",
        "patch": "@@ -1920,7 +1920,7 @@ public static void advertiseHeaders(HttpServletResponse rsp) {\n \n             TcpSlaveAgentListener tal = j.tcpSlaveAgentListener;\n             if (tal !=null) {\n-                int p = TcpSlaveAgentListener.CLI_PORT !=null ? TcpSlaveAgentListener.CLI_PORT : tal.getPort();\n+                int p = tal.getAdvertisedPort();\n                 rsp.setIntHeader(\"X-Hudson-CLI-Port\", p);\n                 rsp.setIntHeader(\"X-Jenkins-CLI-Port\", p);\n                 rsp.setIntHeader(\"X-Jenkins-CLI2-Port\", p);"
    },
    {
        "commit_id": "0dce38abbaedb0680218d6743bde00b375714522",
        "commit_message": "Merge remote-tracking branch 'origin/2.0' into jtnord-patch-1",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0dce38abbaedb0680218d6743bde00b375714522",
        "buggy_code": "crumbRequestField = \".crumb\";",
        "fixed_code": "crumbRequestField = CrumbIssuer.DEFAULT_CRUMB_NAME;",
        "patch": "@@ -64,7 +64,7 @@ public String getCrumbRequestField() {\n      */\n     public void setCrumbRequestField(String requestField) {\n         if (Util.fixEmptyAndTrim(requestField) == null) {\n-            crumbRequestField = \".crumb\";\n+            crumbRequestField = CrumbIssuer.DEFAULT_CRUMB_NAME;\n         } else {\n             crumbRequestField = requestField;\n         }"
    },
    {
        "commit_id": "0dce38abbaedb0680218d6743bde00b375714522",
        "commit_message": "Merge remote-tracking branch 'origin/2.0' into jtnord-patch-1",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0dce38abbaedb0680218d6743bde00b375714522",
        "buggy_code": "super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", \".crumb\"));",
        "fixed_code": "super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", CrumbIssuer.DEFAULT_CRUMB_NAME));",
        "patch": "@@ -124,7 +124,7 @@ public static final class DescriptorImpl extends CrumbIssuerDescriptor<DefaultCr\n         private final static HexStringConfidentialKey CRUMB_SALT = new HexStringConfidentialKey(Jenkins.class,\"crumbSalt\",16);\n         \n         public DescriptorImpl() {\n-            super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", \".crumb\"));\n+            super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", CrumbIssuer.DEFAULT_CRUMB_NAME));\n             load();\n         }\n "
    },
    {
        "commit_id": "0dce38abbaedb0680218d6743bde00b375714522",
        "commit_message": "Merge remote-tracking branch 'origin/2.0' into jtnord-patch-1",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0dce38abbaedb0680218d6743bde00b375714522",
        "buggy_code": "iapf.write(randomUUID, \"UTF-8\");",
        "fixed_code": "iapf.write(randomUUID + System.lineSeparator(), \"UTF-8\");",
        "patch": "@@ -73,7 +73,7 @@ public SetupWizard(Jenkins j) throws IOException, InterruptedException {\n                 // and use group 'jenkins' for admins. So we allo groups to read this file\n                 iapf.touch(System.currentTimeMillis());\n                 iapf.chmod(0640);\n-                iapf.write(randomUUID, \"UTF-8\");\n+                iapf.write(randomUUID + System.lineSeparator(), \"UTF-8\");\n                 \n \n                 // Lock Jenkins down:"
    },
    {
        "commit_id": "a87c38c5052cba745127a0205c40490b30c8bdbf",
        "commit_message": "Merge pull request #2198 from daniel-beck/JENKINS-12875\n\n[FIX JENKINS-12875] Change default crumb name to Jenkins-Crumb",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a87c38c5052cba745127a0205c40490b30c8bdbf",
        "buggy_code": "crumbRequestField = \".crumb\";",
        "fixed_code": "crumbRequestField = CrumbIssuer.DEFAULT_CRUMB_NAME;",
        "patch": "@@ -64,7 +64,7 @@ public String getCrumbRequestField() {\n      */\n     public void setCrumbRequestField(String requestField) {\n         if (Util.fixEmptyAndTrim(requestField) == null) {\n-            crumbRequestField = \".crumb\";\n+            crumbRequestField = CrumbIssuer.DEFAULT_CRUMB_NAME;\n         } else {\n             crumbRequestField = requestField;\n         }"
    },
    {
        "commit_id": "a87c38c5052cba745127a0205c40490b30c8bdbf",
        "commit_message": "Merge pull request #2198 from daniel-beck/JENKINS-12875\n\n[FIX JENKINS-12875] Change default crumb name to Jenkins-Crumb",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a87c38c5052cba745127a0205c40490b30c8bdbf",
        "buggy_code": "super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", \".crumb\"));",
        "fixed_code": "super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", CrumbIssuer.DEFAULT_CRUMB_NAME));",
        "patch": "@@ -124,7 +124,7 @@ public static final class DescriptorImpl extends CrumbIssuerDescriptor<DefaultCr\n         private final static HexStringConfidentialKey CRUMB_SALT = new HexStringConfidentialKey(Jenkins.class,\"crumbSalt\",16);\n         \n         public DescriptorImpl() {\n-            super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", \".crumb\"));\n+            super(CRUMB_SALT.get(), System.getProperty(\"hudson.security.csrf.requestfield\", CrumbIssuer.DEFAULT_CRUMB_NAME));\n             load();\n         }\n "
    },
    {
        "commit_id": "fcc547e846baeced4f5e7073e9c34d0138185e6e",
        "commit_message": "Fix tests, move forced update site download to setup wizard",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fcc547e846baeced4f5e7073e9c34d0138185e6e",
        "buggy_code": "private transient InstallState installState = InstallState.NEW;",
        "fixed_code": "private transient InstallState installState = InstallState.UNKNOWN;",
        "patch": "@@ -342,7 +342,7 @@ public class Jenkins extends AbstractCIBase implements DirectlyModifiableTopLeve\n     /**\n      * The Jenkins instance startup type i.e. NEW, UPGRADE etc\n      */\n-    private transient InstallState installState = InstallState.NEW;\n+    private transient InstallState installState = InstallState.UNKNOWN;\n     \n     /**\n      * If we're in the process of an initial setup, "
    },
    {
        "commit_id": "06db9b86ef0bc27f40763119cc29ddfb2964c89b",
        "commit_message": "Merge pull request #2189 from yp-engineering/fix_jnlp_advertised_port\n\nFix advertised JNLP Port",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/06db9b86ef0bc27f40763119cc29ddfb2964c89b",
        "buggy_code": "int p = TcpSlaveAgentListener.CLI_PORT !=null ? TcpSlaveAgentListener.CLI_PORT : tal.getPort();",
        "fixed_code": "int p = tal.getAdvertisedPort();",
        "patch": "@@ -1925,7 +1925,7 @@ public static void advertiseHeaders(HttpServletResponse rsp) {\n \n             TcpSlaveAgentListener tal = j.tcpSlaveAgentListener;\n             if (tal !=null) {\n-                int p = TcpSlaveAgentListener.CLI_PORT !=null ? TcpSlaveAgentListener.CLI_PORT : tal.getPort();\n+                int p = tal.getAdvertisedPort();\n                 rsp.setIntHeader(\"X-Hudson-CLI-Port\", p);\n                 rsp.setIntHeader(\"X-Jenkins-CLI-Port\", p);\n                 rsp.setIntHeader(\"X-Jenkins-CLI2-Port\", p);"
    },
    {
        "commit_id": "6fe31014d85d1d667ada968291ad5df4b5cffd2b",
        "commit_message": "Fix advertised JNLP Port\n\nAs far as I can figure, the /TcpSlaveAgentListener/ endpoint headers\ntell the slaves what the JNLP port is. When I'm running jenkins behind a\nproxy (marathon using the mesos plugin, which bridged networking), even\nthough I was setting the advertised port per a thread[1], it was not\naccurately being returned in the header. This patch fixes that.\n\n[1] https://groups.google.com/d/topic/jenkins-mesos/qUrXpDY07TQ/discussion",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6fe31014d85d1d667ada968291ad5df4b5cffd2b",
        "buggy_code": "int p = TcpSlaveAgentListener.CLI_PORT !=null ? TcpSlaveAgentListener.CLI_PORT : tal.getPort();",
        "fixed_code": "int p = tal.getAdvertisedPort();",
        "patch": "@@ -1925,7 +1925,7 @@ public static void advertiseHeaders(HttpServletResponse rsp) {\n \n             TcpSlaveAgentListener tal = j.tcpSlaveAgentListener;\n             if (tal !=null) {\n-                int p = TcpSlaveAgentListener.CLI_PORT !=null ? TcpSlaveAgentListener.CLI_PORT : tal.getPort();\n+                int p = tal.getAdvertisedPort();\n                 rsp.setIntHeader(\"X-Hudson-CLI-Port\", p);\n                 rsp.setIntHeader(\"X-Jenkins-CLI-Port\", p);\n                 rsp.setIntHeader(\"X-Jenkins-CLI2-Port\", p);"
    },
    {
        "commit_id": "311fe0a852ba938bbf390feff3255fe1885cf002",
        "commit_message": "Merge pull request #2174 from aheritier/patch-2\n\nFix missing space in log message",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/311fe0a852ba938bbf390feff3255fe1885cf002",
        "buggy_code": "+ \"Jenkins initial setup is required. An admin user has been created and\"",
        "fixed_code": "+ \"Jenkins initial setup is required. An admin user has been created and \"",
        "patch": "@@ -113,7 +113,7 @@ public SetupWizard(Jenkins j) throws IOException, InterruptedException {\n                 + \"*************************************************************\" + ls\n                 + \"*************************************************************\" + ls\n                 + ls\n-                + \"Jenkins initial setup is required. An admin user has been created and\"\n+                + \"Jenkins initial setup is required. An admin user has been created and \"\n                 + \"a password generated.\" + ls\n                 + \"Please use the following password to proceed to installation:\" + ls\n                 + ls"
    },
    {
        "commit_id": "6235f4868da74e91b8e7665bfdfda66fd031912f",
        "commit_message": "Fix missing space in log message",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6235f4868da74e91b8e7665bfdfda66fd031912f",
        "buggy_code": "+ \"Jenkins initial setup is required. An admin user has been created and\"",
        "fixed_code": "+ \"Jenkins initial setup is required. An admin user has been created and \"",
        "patch": "@@ -113,7 +113,7 @@ public SetupWizard(Jenkins j) throws IOException, InterruptedException {\n                 + \"*************************************************************\" + ls\n                 + \"*************************************************************\" + ls\n                 + ls\n-                + \"Jenkins initial setup is required. An admin user has been created and\"\n+                + \"Jenkins initial setup is required. An admin user has been created and \"\n                 + \"a password generated.\" + ls\n                 + \"Please use the following password to proceed to installation:\" + ls\n                 + ls"
    },
    {
        "commit_id": "82d3eb8644ad1729e6e3444ed8f2d58c1bfee79b",
        "commit_message": "Merge pull request #2140 from amuniz/JENKINS-14538\n\n[FIX JENKINS-14538] Move tool configuration to separate page",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/82d3eb8644ad1729e6e3444ed8f2d58c1bfee79b",
        "buggy_code": "return \"setting.png\";",
        "fixed_code": "return \"gear2.png\";",
        "patch": "@@ -35,7 +35,7 @@\n public class ManageJenkinsAction implements RootAction {\n     public String getIconFileName() {\n         if (Jenkins.getInstance().hasPermission(Jenkins.ADMINISTER))\n-            return \"setting.png\";\n+            return \"gear2.png\";\n         else\n             return null;\n     }"
    },
    {
        "commit_id": "82d3eb8644ad1729e6e3444ed8f2d58c1bfee79b",
        "commit_message": "Merge pull request #2140 from amuniz/JENKINS-14538\n\n[FIX JENKINS-14538] Move tool configuration to separate page",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/82d3eb8644ad1729e6e3444ed8f2d58c1bfee79b",
        "buggy_code": "return \"setting.png\";",
        "fixed_code": "return \"gear2.png\";",
        "patch": "@@ -35,7 +35,7 @@ public class ConfigureLink extends ManagementLink {\n \n     @Override\n     public String getIconFileName() {\n-        return \"setting.png\";\n+        return \"gear2.png\";\n     }\n \n     public String getDisplayName() {"
    },
    {
        "commit_id": "82d3eb8644ad1729e6e3444ed8f2d58c1bfee79b",
        "commit_message": "Merge pull request #2140 from amuniz/JENKINS-14538\n\n[FIX JENKINS-14538] Move tool configuration to separate page",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/82d3eb8644ad1729e6e3444ed8f2d58c1bfee79b",
        "buggy_code": "HtmlPage p = j.createWebClient().goTo(\"configure\");",
        "fixed_code": "HtmlPage p = j.createWebClient().goTo(\"configureTools\");",
        "patch": "@@ -159,7 +159,7 @@ public class MavenTest {\n      * Simulates the addition of the new Maven via UI and makes sure it works.\n      */\n     @Test public void globalConfigAjax() throws Exception {\n-        HtmlPage p = j.createWebClient().goTo(\"configure\");\n+        HtmlPage p = j.createWebClient().goTo(\"configureTools\");\n         HtmlForm f = p.getFormByName(\"config\");\n         HtmlButton b = j.getButtonByCaption(f, \"Add Maven\");\n         b.click();"
    },
    {
        "commit_id": "82d3eb8644ad1729e6e3444ed8f2d58c1bfee79b",
        "commit_message": "Merge pull request #2140 from amuniz/JENKINS-14538\n\n[FIX JENKINS-14538] Move tool configuration to separate page",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/82d3eb8644ad1729e6e3444ed8f2d58c1bfee79b",
        "buggy_code": "j.submit(j.createWebClient().goTo(\"configure\").getFormByName(\"config\"));",
        "fixed_code": "j.submit(j.createWebClient().goTo(\"configureTools\").getFormByName(\"config\"));",
        "patch": "@@ -94,7 +94,7 @@ public void configRoundtrip() throws Exception {\n         j.jenkins.getJDKs().add(new JDK(\"test\",tmp.getRoot().getAbsolutePath(), Arrays.asList(\n                 new InstallSourceProperty(Arrays.<ToolInstaller>asList(installer)))));\n \n-        j.submit(j.createWebClient().goTo(\"configure\").getFormByName(\"config\"));\n+        j.submit(j.createWebClient().goTo(\"configureTools\").getFormByName(\"config\"));\n \n         JDK jdk = j.jenkins.getJDK(\"test\");\n         InstallSourceProperty isp = jdk.getProperties().get(InstallSourceProperty.class);"
    },
    {
        "commit_id": "c9e98d4354e577aa63eaa1312839fe2975557f53",
        "commit_message": "Fix test for connectivity check",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c9e98d4354e577aa63eaa1312839fe2975557f53",
        "buggy_code": "Assert.assertEquals(ConnectionStatus.UNCHECKED, job.connectionStates.get(ConnectionStatus.UPDATE_SITE));",
        "fixed_code": "Assert.assertEquals(ConnectionStatus.OK, job.connectionStates.get(ConnectionStatus.UPDATE_SITE));",
        "patch": "@@ -99,7 +99,7 @@ public void test_states_internet_failed() {\n         job.run();\n \n         Assert.assertEquals(ConnectionStatus.FAILED, job.connectionStates.get(ConnectionStatus.INTERNET));\n-        Assert.assertEquals(ConnectionStatus.UNCHECKED, job.connectionStates.get(ConnectionStatus.UPDATE_SITE));\n+        Assert.assertEquals(ConnectionStatus.OK, job.connectionStates.get(ConnectionStatus.UPDATE_SITE));\n     }\n \n     @Test"
    },
    {
        "commit_id": "3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "commit_message": "[JENKINS-31162] Merge from upstream/2.0 and resolve conflicts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -1133,7 +1133,7 @@ public VirtualFile toVirtualFile() {\n      * @since 1.571\n      */\n     public @CheckForNull Computer toComputer() {\n-        Jenkins j = Jenkins.getInstance();\n+        Jenkins j = Jenkins.getInstanceOrNull();\n         if (j != null) {\n             for (Computer c : j.getComputers()) {\n                 if (getChannel()==c.getChannel()) {"
    },
    {
        "commit_id": "3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "commit_message": "[JENKINS-31162] Merge from upstream/2.0 and resolve conflicts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "buggy_code": "Jenkins h = Jenkins.getInstance();",
        "fixed_code": "Jenkins h = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart",
        "patch": "@@ -38,7 +38,7 @@ public class SolarisSMFLifecycle extends Lifecycle {\n      */\n     @Override\n     public void restart() throws IOException, InterruptedException {\n-        Jenkins h = Jenkins.getInstance();\n+        Jenkins h = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart\n         if (h != null)\n             h.cleanUp();\n         System.exit(0);"
    },
    {
        "commit_id": "3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "commit_message": "[JENKINS-31162] Merge from upstream/2.0 and resolve conflicts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "buggy_code": "Jenkins h = Jenkins.getInstance();",
        "fixed_code": "Jenkins h = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart",
        "patch": "@@ -65,7 +65,7 @@ public UnixLifecycle() throws IOException {\n \n     @Override\n     public void restart() throws IOException, InterruptedException {\n-        Jenkins h = Jenkins.getInstance();\n+        Jenkins h = Jenkins.getInstanceOrNull(); // guard against repeated concurrent calls to restart\n         if (h != null)\n             h.cleanUp();\n "
    },
    {
        "commit_id": "3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "commit_message": "[JENKINS-31162] Merge from upstream/2.0 and resolve conflicts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "buggy_code": "Jenkins hudson = Jenkins.getInstance();",
        "fixed_code": "Jenkins hudson = Jenkins.getInstanceOrNull();",
        "patch": "@@ -104,7 +104,7 @@ public void init(FilterConfig filterConfig) throws ServletException {\n         // this is how we make us available to the rest of Hudson.\n         filterConfig.getServletContext().setAttribute(HudsonFilter.class.getName(),this);\n         try {\n-            Jenkins hudson = Jenkins.getInstance();\n+            Jenkins hudson = Jenkins.getInstanceOrNull();\n             if (hudson != null) {\n                 // looks like we are initialized after Hudson came into being. initialize it now. See #3069\n                 LOGGER.fine(\"Security wasn't initialized; Initializing it...\");"
    },
    {
        "commit_id": "3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "commit_message": "[JENKINS-31162] Merge from upstream/2.0 and resolve conflicts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -93,7 +93,7 @@ public void loginSuccess(HttpServletRequest request, HttpServletResponse respons\n \t\t\treturn;\n \t\t}\n \n-\t\tJenkins j = Jenkins.getInstance();\n+\t\tJenkins j = Jenkins.getInstanceOrNull();\n \t\tif (j != null && j.isDisableRememberMe()) {\n \t\t\tif (logger.isDebugEnabled()) {\n \t\t\t\tlogger.debug(\"Did not send remember-me cookie because 'Remember Me' is disabled in \" +"
    },
    {
        "commit_id": "3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "commit_message": "[JENKINS-31162] Merge from upstream/2.0 and resolve conflicts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "buggy_code": "Jenkins h = Jenkins.getInstance();",
        "fixed_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "patch": "@@ -35,7 +35,7 @@ public class CrumbFilter implements Filter {\n      * we cannot use Hudson to the CrumbIssuer into CrumbFilter eagerly.\n      */\n     public CrumbIssuer getCrumbIssuer() {\n-        Jenkins h = Jenkins.getInstance();\n+        Jenkins h = Jenkins.getInstanceOrNull();\n         if(h==null)     return null;    // before Jenkins is initialized?\n         return h.getCrumbIssuer();\n     }"
    },
    {
        "commit_id": "3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "commit_message": "[JENKINS-31162] Merge from upstream/2.0 and resolve conflicts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "buggy_code": "if (Jenkins.getInstance()!=null)",
        "fixed_code": "if (Jenkins.getInstanceOrNull()!=null) // check if calling thread is on master or on slave",
        "patch": "@@ -835,7 +835,7 @@ public Void call() {\n      * @since 1.362\n      */\n     public static VirtualChannel getChannelToMaster() {\n-        if (Jenkins.getInstance()!=null)\n+        if (Jenkins.getInstanceOrNull()!=null) // check if calling thread is on master or on slave\n             return FilePath.localChannel;\n \n         // if this method is called from within the agent computation thread, this should work"
    },
    {
        "commit_id": "3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "commit_message": "[JENKINS-31162] Merge from upstream/2.0 and resolve conflicts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "buggy_code": "Jenkins h = Jenkins.getInstance();",
        "fixed_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "patch": "@@ -76,7 +76,7 @@ public <T> Class<? extends T> generate(Class<T> base, String name) {\n \n         Class<? extends T> c = defineClass(name, image, 0, image.length).asSubclass(base);\n \n-        Jenkins h = Jenkins.getInstance();\n+        Jenkins h = Jenkins.getInstanceOrNull();\n         if (h!=null)    // null only during tests.\n             ((UberClassLoader)h.pluginManager.uberClassLoader).addNamedClass(name,c); // can't change the field type as it breaks binary compatibility\n         "
    },
    {
        "commit_id": "3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "commit_message": "[JENKINS-31162] Merge from upstream/2.0 and resolve conflicts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "buggy_code": "if (Jenkins.getInstance()==null) {",
        "fixed_code": "if (Jenkins.getInstanceOrNull()==null) {",
        "patch": "@@ -75,7 +75,7 @@ public static ExtensionList<ParserConfigurator> all() {\n     public static void applyConfiguration(SAXReader reader, Object context) throws IOException, InterruptedException {\n         Collection<ParserConfigurator> all = Collections.emptyList();\n \n-        if (Jenkins.getInstance()==null) {\n+        if (Jenkins.getInstanceOrNull()==null) {\n             Channel ch = Channel.current();\n             if (ch!=null)\n                 all = ch.call(new SlaveToMasterCallable<Collection<ParserConfigurator>, IOException>() {"
    },
    {
        "commit_id": "3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "commit_message": "[JENKINS-31162] Merge from upstream/2.0 and resolve conflicts",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3c17558eb8ea1f1a0cf5ebefa30be5b0209dddd3",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -74,7 +74,7 @@ public WebAppMain.FileAndDescription getHomeDir(ServletContextEvent event) {\n \n     @After\n     public void tearDown() {\n-        Jenkins j = Jenkins.getInstance();\n+        Jenkins j = Jenkins.getInstanceOrNull();\n         if (j != null) {\n             j.cleanUp();\n         }"
    },
    {
        "commit_id": "54ba3c17e793f926cd964fd6a8b947785d370bf6",
        "commit_message": "Fix JDK tool installer test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/54ba3c17e793f926cd964fd6a8b947785d370bf6",
        "buggy_code": "j.submit(j.createWebClient().goTo(\"configure\").getFormByName(\"config\"));",
        "fixed_code": "j.submit(j.createWebClient().goTo(\"configureTools\").getFormByName(\"config\"));",
        "patch": "@@ -94,7 +94,7 @@ public void configRoundtrip() throws Exception {\n         j.jenkins.getJDKs().add(new JDK(\"test\",tmp.getRoot().getAbsolutePath(), Arrays.asList(\n                 new InstallSourceProperty(Arrays.<ToolInstaller>asList(installer)))));\n \n-        j.submit(j.createWebClient().goTo(\"configure\").getFormByName(\"config\"));\n+        j.submit(j.createWebClient().goTo(\"configureTools\").getFormByName(\"config\"));\n \n         JDK jdk = j.jenkins.getJDK(\"test\");\n         InstallSourceProperty isp = jdk.getProperties().get(InstallSourceProperty.class);"
    },
    {
        "commit_id": "288796a6a67ddff76c1f8cfe12e6470b3f31f41b",
        "commit_message": "Fix Maven tool configuration test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/288796a6a67ddff76c1f8cfe12e6470b3f31f41b",
        "buggy_code": "HtmlPage p = j.createWebClient().goTo(\"configure\");",
        "fixed_code": "HtmlPage p = j.createWebClient().goTo(\"configureTools\");",
        "patch": "@@ -159,7 +159,7 @@ public class MavenTest {\n      * Simulates the addition of the new Maven via UI and makes sure it works.\n      */\n     @Test public void globalConfigAjax() throws Exception {\n-        HtmlPage p = j.createWebClient().goTo(\"configure\");\n+        HtmlPage p = j.createWebClient().goTo(\"configureTools\");\n         HtmlForm f = p.getFormByName(\"config\");\n         HtmlButton b = j.getButtonByCaption(f, \"Add Maven\");\n         b.click();"
    },
    {
        "commit_id": "83f4a19f0b09ea7403a1b86d6312d12d1708230e",
        "commit_message": "fixt typo\n\nfix typos spotted by @jglick's eagle eyes",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/83f4a19f0b09ea7403a1b86d6312d12d1708230e",
        "buggy_code": "+ \") died unexepectedly due to an uncaught exception, this may leave your Jenkins in a bad way and is usually indicitive of a bug in the code.\",",
        "fixed_code": "+ \") died unexpectedly due to an uncaught exception, this may leave your Jenkins in a bad way and is usually indicative of a bug in the code.\",",
        "patch": "@@ -64,7 +64,7 @@ public void uncaughtException(Thread t, Throwable ex) {\n             // if this was an OutOfMemoryError then all bets about logging are off - but in the absence of anything else...\n             LOGGER.log(Level.SEVERE,\n                        \"A thread (\" + t.getName() + '/' + t.getId()\n-                                     + \") died unexepectedly due to an uncaught exception, this may leave your Jenkins in a bad way and is usually indicitive of a bug in the code.\",\n+                                     + \") died unexpectedly due to an uncaught exception, this may leave your Jenkins in a bad way and is usually indicative of a bug in the code.\",\n                        ex);\n         }\n "
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -1133,7 +1133,7 @@ public VirtualFile toVirtualFile() {\n      * @since 1.571\n      */\n     public @CheckForNull Computer toComputer() {\n-        Jenkins j = Jenkins.getInstance();\n+        Jenkins j = Jenkins.getInstanceOrNull();\n         if (j != null) {\n             for (Computer c : j.getComputers()) {\n                 if (getChannel()==c.getChannel()) {"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins h = Jenkins.getInstance();",
        "fixed_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "patch": "@@ -61,7 +61,7 @@ public List<Descriptor> getProblems() {\n     }\n \n     private void verify() {\n-        Jenkins h = Jenkins.getInstance();\n+        Jenkins h = Jenkins.getInstanceOrNull();\n         if (h == null) {\n             return;\n         }"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins h = Jenkins.getInstance();",
        "fixed_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "patch": "@@ -38,7 +38,7 @@ public class SolarisSMFLifecycle extends Lifecycle {\n      */\n     @Override\n     public void restart() throws IOException, InterruptedException {\n-        Jenkins h = Jenkins.getInstance();\n+        Jenkins h = Jenkins.getInstanceOrNull();\n         if (h != null)\n             h.cleanUp();\n         System.exit(0);"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins h = Jenkins.getInstance();",
        "fixed_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "patch": "@@ -65,7 +65,7 @@ public UnixLifecycle() throws IOException {\n \n     @Override\n     public void restart() throws IOException, InterruptedException {\n-        Jenkins h = Jenkins.getInstance();\n+        Jenkins h = Jenkins.getInstanceOrNull();\n         if (h != null)\n             h.cleanUp();\n "
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -2077,7 +2077,7 @@ public FormValidation doCheckLabel(@AncestorInPath AbstractProject<?,?> project,\n                 return FormValidation.error(e,\n                         Messages.AbstractProject_AssignedLabelString_InvalidBooleanExpression(e.getMessage()));\n             }\n-            Jenkins j = Jenkins.getInstance();\n+            Jenkins j = Jenkins.getInstanceOrNull();\n             if (j == null) {\n                 return FormValidation.ok(); // ?\n             }"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -848,7 +848,7 @@ public Object getDynamic(String token, StaplerRequest req,\n      * @see RunMap\n      */\n     public File getBuildDir() {\n-        Jenkins j = Jenkins.getInstance();\n+        Jenkins j = Jenkins.getInstanceOrNull();\n         if (j == null) {\n             return new File(getRootDir(), \"builds\");\n         }"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -2275,7 +2275,7 @@ public EnvVars getEnvironment() throws IOException, InterruptedException {\n         } catch (NumberFormatException x) {\n             throw new IllegalArgumentException(x);\n         }\n-        Jenkins j = Jenkins.getInstance();\n+        Jenkins j = Jenkins.getInstanceOrNull();\n         if (j == null) {\n             return null;\n         }"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -150,7 +150,7 @@ private User(String id, String fullName) {\n      */\n     @Nonnull\n     public static IdStrategy idStrategy() {\n-        Jenkins j = Jenkins.getInstance();\n+        Jenkins j = Jenkins.getInstanceOrNull();\n         if (j == null) {\n             return IdStrategy.CASE_INSENSITIVE;\n         }"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "if (Jenkins.getInstance() == null) {",
        "fixed_code": "if (Jenkins.getInstanceOrNull() == null) {",
        "patch": "@@ -223,7 +223,7 @@ public static void fireStarted(Run r, TaskListener listener) {\n      * Fires the {@link #onFinalized(Run)} event.\n      */\n     public static void fireFinalized(Run r) {\n-        if (Jenkins.getInstance() == null) {\n+        if (Jenkins.getInstanceOrNull() == null) {\n             return;\n         }\n         for (RunListener l : all()) {"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins hudson = Jenkins.getInstance();",
        "fixed_code": "Jenkins hudson = Jenkins.getInstanceOrNull();",
        "patch": "@@ -104,7 +104,7 @@ public void init(FilterConfig filterConfig) throws ServletException {\n         // this is how we make us available to the rest of Hudson.\n         filterConfig.getServletContext().setAttribute(HudsonFilter.class.getName(),this);\n         try {\n-            Jenkins hudson = Jenkins.getInstance();\n+            Jenkins hudson = Jenkins.getInstanceOrNull();\n             if (hudson != null) {\n                 // looks like we are initialized after Hudson came into being. initialize it now. See #3069\n                 LOGGER.fine(\"Security wasn't initialized; Initializing it...\");"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -93,7 +93,7 @@ public void loginSuccess(HttpServletRequest request, HttpServletResponse respons\n \t\t\treturn;\n \t\t}\n \n-\t\tJenkins j = Jenkins.getInstance();\n+\t\tJenkins j = Jenkins.getInstanceOrNull();\n \t\tif (j != null && j.isDisableRememberMe()) {\n \t\t\tif (logger.isDebugEnabled()) {\n \t\t\t\tlogger.debug(\"Did not send remember-me cookie because 'Remember Me' is disabled in \" +"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins h = Jenkins.getInstance();",
        "fixed_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "patch": "@@ -35,7 +35,7 @@ public class CrumbFilter implements Filter {\n      * we cannot use Hudson to the CrumbIssuer into CrumbFilter eagerly.\n      */\n     public CrumbIssuer getCrumbIssuer() {\n-        Jenkins h = Jenkins.getInstance();\n+        Jenkins h = Jenkins.getInstanceOrNull();\n         if(h==null)     return null;    // before Jenkins is initialized?\n         return h.getCrumbIssuer();\n     }"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "if (Jenkins.getInstance()!=null)",
        "fixed_code": "if (Jenkins.getInstanceOrNull()!=null)",
        "patch": "@@ -835,7 +835,7 @@ public Void call() {\n      * @since 1.362\n      */\n     public static VirtualChannel getChannelToMaster() {\n-        if (Jenkins.getInstance()!=null)\n+        if (Jenkins.getInstanceOrNull()!=null)\n             return FilePath.localChannel;\n \n         // if this method is called from within the slave computation thread, this should work"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -448,7 +448,7 @@ public URL locate(TaskListener log, Platform platform, CPU cpu) throws IOExcepti\n \n         HttpClient hc = new HttpClient();\n         hc.getParams().setParameter(\"http.useragent\",\"Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)\");\n-        Jenkins j = Jenkins.getInstance();\n+        Jenkins j = Jenkins.getInstanceOrNull();\n         ProxyConfiguration jpc = j!=null ? j.proxy : null;\n         if(jpc != null) {\n             hc.getHostConfiguration().setProxy(jpc.name, jpc.port);"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins jenkins = Jenkins.getInstance();",
        "fixed_code": "Jenkins jenkins = Jenkins.getInstanceOrNull();",
        "patch": "@@ -74,7 +74,7 @@ public VetoCause(@Nonnull String message) {\n      *         list if Jenkins is not available, never null.\r\n      */\r\n     public static List<ProcessKillingVeto> all() {\r\n-        Jenkins jenkins = Jenkins.getInstance();\r\n+        Jenkins jenkins = Jenkins.getInstanceOrNull();\r\n         if (jenkins == null)\r\n             return Collections.emptyList();\r\n         return jenkins.getExtensionList(ProcessKillingVeto.class);\r"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins h = Jenkins.getInstance();",
        "fixed_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "patch": "@@ -76,7 +76,7 @@ public <T> Class<? extends T> generate(Class<T> base, String name) {\n \n         Class<? extends T> c = defineClass(name, image, 0, image.length).asSubclass(base);\n \n-        Jenkins h = Jenkins.getInstance();\n+        Jenkins h = Jenkins.getInstanceOrNull();\n         if (h!=null)    // null only during tests.\n             ((UberClassLoader)h.pluginManager.uberClassLoader).addNamedClass(name,c); // can't change the field type as it breaks binary compatibility\n         "
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "if (Jenkins.getInstance()==null) {",
        "fixed_code": "if (Jenkins.getInstanceOrNull()==null) {",
        "patch": "@@ -75,7 +75,7 @@ public static ExtensionList<ParserConfigurator> all() {\n     public static void applyConfiguration(SAXReader reader, Object context) throws IOException, InterruptedException {\n         Collection<ParserConfigurator> all = Collections.emptyList();\n \n-        if (Jenkins.getInstance()==null) {\n+        if (Jenkins.getInstanceOrNull()==null) {\n             Channel ch = Channel.current();\n             if (ch!=null)\n                 all = ch.call(new SlaveToMasterCallable<Collection<ParserConfigurator>, IOException>() {"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "final Jenkins j = Jenkins.getInstance();",
        "fixed_code": "final Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -78,7 +78,7 @@ public int computeTotalExecutors() {\n \n     @Override\n     public int computeQueueLength() {\n-        final Jenkins j = Jenkins.getInstance();\n+        final Jenkins j = Jenkins.getInstanceOrNull();\n         if (j == null) { // Consider queue as empty when Jenkins is inactive\n             return 0;\n         }"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "final Jenkins jenkins = Jenkins.getInstance();",
        "fixed_code": "final Jenkins jenkins = Jenkins.getInstanceOrNull();",
        "patch": "@@ -118,7 +118,7 @@ public boolean matchesPassword(String password) {\n     }\n     \n     private boolean hasPermissionToSeeToken() {\n-        final Jenkins jenkins = Jenkins.getInstance();\n+        final Jenkins jenkins = Jenkins.getInstanceOrNull();\n         if (jenkins == null) {\n             return false; // Should not happen - we don't display UIs in this stage\n         }"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "final Jenkins jenkins = Jenkins.getInstance();",
        "fixed_code": "final Jenkins jenkins = Jenkins.getInstanceOrNull();",
        "patch": "@@ -32,7 +32,7 @@ private static class IteratorImpl implements Iterator<QueueItemAuthenticator> {\n         private Iterator<QueueItemAuthenticator> delegate = null;\n \n         private IteratorImpl() {\n-            final Jenkins jenkins = Jenkins.getInstance();\n+            final Jenkins jenkins = Jenkins.getInstanceOrNull();\n             providers = new ArrayList<QueueItemAuthenticatorProvider>(jenkins == null\n                     ? Collections.<QueueItemAuthenticatorProvider>emptyList()\n                     : jenkins.getExtensionList(QueueItemAuthenticatorProvider.class)).iterator();"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -134,7 +134,7 @@ protected Set<TrustAnchor> loadTrustAnchors(CertificateFactory cf) throws IOExce\n         // if we trust default root CAs, we end up trusting anyone who has a valid certificate,\n         // which isn't useful at all\n         Set<TrustAnchor> anchors = new HashSet<TrustAnchor>(); // CertificateUtil.getDefaultRootCAs();\n-        Jenkins j = Jenkins.getInstance();\n+        Jenkins j = Jenkins.getInstanceOrNull();\n         if (j == null) {\n             return anchors;\n         }"
    },
    {
        "commit_id": "4107d86328e907a34e23b09f21cd86340ae137ea",
        "commit_message": "Merge pull request #2094 from stephenc/alt-pr-2090\n\nFix Jenkins.getInstance() to make life easier for plugin authors",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4107d86328e907a34e23b09f21cd86340ae137ea",
        "buggy_code": "Jenkins j = Jenkins.getInstance();",
        "fixed_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "patch": "@@ -74,7 +74,7 @@ public WebAppMain.FileAndDescription getHomeDir(ServletContextEvent event) {\n \n     @After\n     public void tearDown() {\n-        Jenkins j = Jenkins.getInstance();\n+        Jenkins j = Jenkins.getInstanceOrNull();\n         if (j != null) {\n             j.cleanUp();\n         }"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -1133,7 +1133,7 @@ public VirtualFile toVirtualFile() {\n      * @since 1.571\n      */\n     public @CheckForNull Computer toComputer() {\n-        Jenkins j = Jenkins.getInstanceOrNull();\n+        Jenkins j = Jenkins.getInstance();\n         if (j != null) {\n             for (Computer c : j.getComputers()) {\n                 if (getChannel()==c.getChannel()) {"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins h = Jenkins.getInstance();",
        "patch": "@@ -61,7 +61,7 @@ public List<Descriptor> getProblems() {\n     }\n \n     private void verify() {\n-        Jenkins h = Jenkins.getInstanceOrNull();\n+        Jenkins h = Jenkins.getInstance();\n         if (h == null) {\n             return;\n         }"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins h = Jenkins.getInstance();",
        "patch": "@@ -38,7 +38,7 @@ public class SolarisSMFLifecycle extends Lifecycle {\n      */\n     @Override\n     public void restart() throws IOException, InterruptedException {\n-        Jenkins h = Jenkins.getInstanceOrNull();\n+        Jenkins h = Jenkins.getInstance();\n         if (h != null)\n             h.cleanUp();\n         System.exit(0);"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins h = Jenkins.getInstance();",
        "patch": "@@ -65,7 +65,7 @@ public UnixLifecycle() throws IOException {\n \n     @Override\n     public void restart() throws IOException, InterruptedException {\n-        Jenkins h = Jenkins.getInstanceOrNull();\n+        Jenkins h = Jenkins.getInstance();\n         if (h != null)\n             h.cleanUp();\n "
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -2077,7 +2077,7 @@ public FormValidation doCheckLabel(@AncestorInPath AbstractProject<?,?> project,\n                 return FormValidation.error(e,\n                         Messages.AbstractProject_AssignedLabelString_InvalidBooleanExpression(e.getMessage()));\n             }\n-            Jenkins j = Jenkins.getInstanceOrNull();\n+            Jenkins j = Jenkins.getInstance();\n             if (j == null) {\n                 return FormValidation.ok(); // ?\n             }"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -848,7 +848,7 @@ public Object getDynamic(String token, StaplerRequest req,\n      * @see RunMap\n      */\n     public File getBuildDir() {\n-        Jenkins j = Jenkins.getInstanceOrNull();\n+        Jenkins j = Jenkins.getInstance();\n         if (j == null) {\n             return new File(getRootDir(), \"builds\");\n         }"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -2275,7 +2275,7 @@ public EnvVars getEnvironment() throws IOException, InterruptedException {\n         } catch (NumberFormatException x) {\n             throw new IllegalArgumentException(x);\n         }\n-        Jenkins j = Jenkins.getInstanceOrNull();\n+        Jenkins j = Jenkins.getInstance();\n         if (j == null) {\n             return null;\n         }"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "final Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "final Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -96,7 +96,7 @@ public UsageStatistics(String keyImage) {\n      * Returns true if it's time for us to check for new version.\n      */\n     public boolean isDue() {\n-        final Jenkins j = Jenkins.getInstanceOrNull();\n+        final Jenkins j = Jenkins.getInstance();\n         // user opted out or Jenkins not fully initialized. no data collection.\n         if (j == null || j.isUsageStatisticsCollected() || DISABLED || COMPLETED.compareTo(j.getInitLevel()) > 0) {\n             return false;"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -150,7 +150,7 @@ private User(String id, String fullName) {\n      */\n     @Nonnull\n     public static IdStrategy idStrategy() {\n-        Jenkins j = Jenkins.getInstanceOrNull();\n+        Jenkins j = Jenkins.getInstance();\n         if (j == null) {\n             return IdStrategy.CASE_INSENSITIVE;\n         }"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "if (Jenkins.getInstanceOrNull() == null) {",
        "fixed_code": "if (Jenkins.getInstance() == null) {",
        "patch": "@@ -223,7 +223,7 @@ public static void fireStarted(Run r, TaskListener listener) {\n      * Fires the {@link #onFinalized(Run)} event.\n      */\n     public static void fireFinalized(Run r) {\n-        if (Jenkins.getInstanceOrNull() == null) {\n+        if (Jenkins.getInstance() == null) {\n             return;\n         }\n         for (RunListener l : all()) {"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins hudson = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins hudson = Jenkins.getInstance();",
        "patch": "@@ -104,7 +104,7 @@ public void init(FilterConfig filterConfig) throws ServletException {\n         // this is how we make us available to the rest of Hudson.\n         filterConfig.getServletContext().setAttribute(HudsonFilter.class.getName(),this);\n         try {\n-            Jenkins hudson = Jenkins.getInstanceOrNull();\n+            Jenkins hudson = Jenkins.getInstance();\n             if (hudson != null) {\n                 // looks like we are initialized after Hudson came into being. initialize it now. See #3069\n                 LOGGER.fine(\"Security wasn't initialized; Initializing it...\");"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -93,7 +93,7 @@ public void loginSuccess(HttpServletRequest request, HttpServletResponse respons\n \t\t\treturn;\n \t\t}\n \n-\t\tJenkins j = Jenkins.getInstanceOrNull();\n+\t\tJenkins j = Jenkins.getInstance();\n \t\tif (j != null && j.isDisableRememberMe()) {\n \t\t\tif (logger.isDebugEnabled()) {\n \t\t\t\tlogger.debug(\"Did not send remember-me cookie because 'Remember Me' is disabled in \" +"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins h = Jenkins.getInstance();",
        "patch": "@@ -35,7 +35,7 @@ public class CrumbFilter implements Filter {\n      * we cannot use Hudson to the CrumbIssuer into CrumbFilter eagerly.\n      */\n     public CrumbIssuer getCrumbIssuer() {\n-        Jenkins h = Jenkins.getInstanceOrNull();\n+        Jenkins h = Jenkins.getInstance();\n         if(h==null)     return null;    // before Jenkins is initialized?\n         return h.getCrumbIssuer();\n     }"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "if (Jenkins.getInstanceOrNull()!=null)",
        "fixed_code": "if (Jenkins.getInstance()!=null)",
        "patch": "@@ -835,7 +835,7 @@ public Void call() {\n      * @since 1.362\n      */\n     public static VirtualChannel getChannelToMaster() {\n-        if (Jenkins.getInstanceOrNull()!=null)\n+        if (Jenkins.getInstance()!=null)\n             return FilePath.localChannel;\n \n         // if this method is called from within the slave computation thread, this should work"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -448,7 +448,7 @@ public URL locate(TaskListener log, Platform platform, CPU cpu) throws IOExcepti\n \n         HttpClient hc = new HttpClient();\n         hc.getParams().setParameter(\"http.useragent\",\"Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)\");\n-        Jenkins j = Jenkins.getInstanceOrNull();\n+        Jenkins j = Jenkins.getInstance();\n         ProxyConfiguration jpc = j!=null ? j.proxy : null;\n         if(jpc != null) {\n             hc.getHostConfiguration().setProxy(jpc.name, jpc.port);"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins jenkins = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins jenkins = Jenkins.getInstance();",
        "patch": "@@ -74,7 +74,7 @@ public VetoCause(@Nonnull String message) {\n      *         list if Jenkins is not available, never null.\r\n      */\r\n     public static List<ProcessKillingVeto> all() {\r\n-        Jenkins jenkins = Jenkins.getInstanceOrNull();\r\n+        Jenkins jenkins = Jenkins.getInstance();\r\n         if (jenkins == null)\r\n             return Collections.emptyList();\r\n         return jenkins.getExtensionList(ProcessKillingVeto.class);\r"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins h = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins h = Jenkins.getInstance();",
        "patch": "@@ -76,7 +76,7 @@ public <T> Class<? extends T> generate(Class<T> base, String name) {\n \n         Class<? extends T> c = defineClass(name, image, 0, image.length).asSubclass(base);\n \n-        Jenkins h = Jenkins.getInstanceOrNull();\n+        Jenkins h = Jenkins.getInstance();\n         if (h!=null)    // null only during tests.\n             ((UberClassLoader)h.pluginManager.uberClassLoader).addNamedClass(name,c); // can't change the field type as it breaks binary compatibility\n         "
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "if (Jenkins.getInstanceOrNull()==null) {",
        "fixed_code": "if (Jenkins.getInstance()==null) {",
        "patch": "@@ -75,7 +75,7 @@ public static ExtensionList<ParserConfigurator> all() {\n     public static void applyConfiguration(SAXReader reader, Object context) throws IOException, InterruptedException {\n         Collection<ParserConfigurator> all = Collections.emptyList();\n \n-        if (Jenkins.getInstanceOrNull()==null) {\n+        if (Jenkins.getInstance()==null) {\n             Channel ch = Channel.current();\n             if (ch!=null)\n                 all = ch.call(new SlaveToMasterCallable<Collection<ParserConfigurator>, IOException>() {"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "final Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "final Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -78,7 +78,7 @@ public int computeTotalExecutors() {\n \n     @Override\n     public int computeQueueLength() {\n-        final Jenkins j = Jenkins.getInstanceOrNull();\n+        final Jenkins j = Jenkins.getInstance();\n         if (j == null) { // Consider queue as empty when Jenkins is inactive\n             return 0;\n         }"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "final Jenkins jenkins = Jenkins.getInstanceOrNull();",
        "fixed_code": "final Jenkins jenkins = Jenkins.getInstance();",
        "patch": "@@ -118,7 +118,7 @@ public boolean matchesPassword(String password) {\n     }\n     \n     private boolean hasPermissionToSeeToken() {\n-        final Jenkins jenkins = Jenkins.getInstanceOrNull();\n+        final Jenkins jenkins = Jenkins.getInstance();\n         if (jenkins == null) {\n             return false; // Should not happen - we don't display UIs in this stage\n         }"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "final Jenkins jenkins = Jenkins.getInstanceOrNull();",
        "fixed_code": "final Jenkins jenkins = Jenkins.getInstance();",
        "patch": "@@ -32,7 +32,7 @@ private static class IteratorImpl implements Iterator<QueueItemAuthenticator> {\n         private Iterator<QueueItemAuthenticator> delegate = null;\n \n         private IteratorImpl() {\n-            final Jenkins jenkins = Jenkins.getInstanceOrNull();\n+            final Jenkins jenkins = Jenkins.getInstance();\n             providers = new ArrayList<QueueItemAuthenticatorProvider>(jenkins == null\n                     ? Collections.<QueueItemAuthenticatorProvider>emptyList()\n                     : jenkins.getExtensionList(QueueItemAuthenticatorProvider.class)).iterator();"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -134,7 +134,7 @@ protected Set<TrustAnchor> loadTrustAnchors(CertificateFactory cf) throws IOExce\n         // if we trust default root CAs, we end up trusting anyone who has a valid certificate,\n         // which isn't useful at all\n         Set<TrustAnchor> anchors = new HashSet<TrustAnchor>(); // CertificateUtil.getDefaultRootCAs();\n-        Jenkins j = Jenkins.getInstanceOrNull();\n+        Jenkins j = Jenkins.getInstance();\n         if (j == null) {\n             return anchors;\n         }"
    },
    {
        "commit_id": "d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "commit_message": "Revert \"Jenkins.getInstance() should be non-null\"\n\nThis reverts commit bb7c8fcedbcc9b51c5b1bb5b32810af5ac6b1ffb.\n\nCloses #2090, I'll redo this as a PR... though if that PR is subject to multiple rounds of review before being merged then I will take that of evidence of the exact problem that committing directly was supposed to resolve... namely exponentially multiplying the effort required to make actual improvements to the code base.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d1dfbd2bafd49a743cbc7adcd03a75139ed0ff9f",
        "buggy_code": "Jenkins j = Jenkins.getInstanceOrNull();",
        "fixed_code": "Jenkins j = Jenkins.getInstance();",
        "patch": "@@ -74,7 +74,7 @@ public WebAppMain.FileAndDescription getHomeDir(ServletContextEvent event) {\n \n     @After\n     public void tearDown() {\n-        Jenkins j = Jenkins.getInstanceOrNull();\n+        Jenkins j = Jenkins.getInstance();\n         if (j != null) {\n             j.cleanUp();\n         }"
    },
    {
        "commit_id": "96b2b2a8896e3bd6addc00df6dbae3a5ceb72e92",
        "commit_message": "Picked up the test harness fix from the master branch\n\nConflicts:\n\ttest/pom.xml",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/96b2b2a8896e3bd6addc00df6dbae3a5ceb72e92",
        "buggy_code": "rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command \" + commandName);",
        "fixed_code": "rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command\");",
        "patch": "@@ -78,7 +78,7 @@ public void doCommand(StaplerRequest req, StaplerResponse rsp) throws ServletExc\n         final String commandName = req.getRestOfPath().substring(1);\n         CLICommand command = CLICommand.clone(commandName);\n         if (command == null) {\n-            rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command \" + commandName);\n+            rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command\");\n             return;\n         }\n "
    },
    {
        "commit_id": "20926f4dd937cebdf4b355b9a4cbc3bb19a0e364",
        "commit_message": "[JENKINS-33068] While I'm here, fix this to getActiveInstance()",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/20926f4dd937cebdf4b355b9a4cbc3bb19a0e364",
        "buggy_code": "return new File(Jenkins.getInstance().getRootDir(),\"logs/tasks/\"+name+\".log\");",
        "fixed_code": "return new File(Jenkins.getActiveInstance().getRootDir(),\"logs/tasks/\"+name+\".log\");",
        "patch": "@@ -198,7 +198,7 @@ protected StreamTaskListener createListener() {\n      * Determines the log file that records the result of this task.\n      */\n     protected File getLogFile() {\n-        return new File(Jenkins.getInstance().getRootDir(),\"logs/tasks/\"+name+\".log\");\n+        return new File(Jenkins.getActiveInstance().getRootDir(),\"logs/tasks/\"+name+\".log\");\n     }\n \n     /**"
    },
    {
        "commit_id": "fe41dc89ab9801c9d57713f84e650788e172e115",
        "commit_message": "Merge pull request #1997 from pjanouse/JENKINS-32273\n\n[JENKINS-32273] Unified an issue handling in CLI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe41dc89ab9801c9d57713f84e650788e172e115",
        "buggy_code": ".withBaseLoader(Jenkins.getInstance().pluginManager.uberClassLoader)",
        "fixed_code": ".withBaseLoader(Jenkins.getActiveInstance().pluginManager.uberClassLoader)",
        "patch": "@@ -77,7 +77,7 @@ protected void runCli(Connection c) throws IOException, InterruptedException {\n             Channel channel = cb\n                     .withMode(Mode.BINARY)\n                     .withRestricted(true)\n-                    .withBaseLoader(Jenkins.getInstance().pluginManager.uberClassLoader)\n+                    .withBaseLoader(Jenkins.getActiveInstance().pluginManager.uberClassLoader)\n                     .build(new BufferedInputStream(c.in), new BufferedOutputStream(c.out));\n \n             channel.setProperty(CliEntryPoint.class.getName(),new CliManagerImpl(channel));"
    },
    {
        "commit_id": "fe41dc89ab9801c9d57713f84e650788e172e115",
        "commit_message": "Merge pull request #1997 from pjanouse/JENKINS-32273\n\n[JENKINS-32273] Unified an issue handling in CLI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe41dc89ab9801c9d57713f84e650788e172e115",
        "buggy_code": "Class<?> cls = Jenkins.getInstance().pluginManager.uberClassLoader.loadClass(\"org.jenkinsci.main.modules.instance_identity.InstanceIdentity\");",
        "fixed_code": "Class<?> cls = Jenkins.getActiveInstance().pluginManager.uberClassLoader.loadClass(\"org.jenkinsci.main.modules.instance_identity.InstanceIdentity\");",
        "patch": "@@ -60,7 +60,7 @@ public void run() throws IOException, InterruptedException {\n \n                 try {\n                     // HACK: TODO: move the transport support into modules\n-                    Class<?> cls = Jenkins.getInstance().pluginManager.uberClassLoader.loadClass(\"org.jenkinsci.main.modules.instance_identity.InstanceIdentity\");\n+                    Class<?> cls = Jenkins.getActiveInstance().pluginManager.uberClassLoader.loadClass(\"org.jenkinsci.main.modules.instance_identity.InstanceIdentity\");\n                     Object iid = cls.getDeclaredMethod(\"get\").invoke(null);\n                     PrivateKey instanceId = (PrivateKey)cls.getDeclaredMethod(\"getPrivate\").invoke(iid);\n "
    },
    {
        "commit_id": "fe41dc89ab9801c9d57713f84e650788e172e115",
        "commit_message": "Merge pull request #1997 from pjanouse/JENKINS-32273\n\n[JENKINS-32273] Unified an issue handling in CLI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe41dc89ab9801c9d57713f84e650788e172e115",
        "buggy_code": "if (node == null) throw new CmdLineException(owner, \"No such node '\" + nodeName + \"'\");",
        "fixed_code": "if (node == null) throw new IllegalArgumentException(\"No such node '\" + nodeName + \"'\");",
        "patch": "@@ -54,7 +54,7 @@ public int parseArguments(Parameters params) throws CmdLineException {\n         String nodeName = params.getParameter(0);\n \n         final Node node = Jenkins.getInstance().getNode(nodeName);\n-        if (node == null) throw new CmdLineException(owner, \"No such node '\" + nodeName + \"'\");\n+        if (node == null) throw new IllegalArgumentException(\"No such node '\" + nodeName + \"'\");\n \n         setter.addValue(node);\n         return 1;"
    },
    {
        "commit_id": "fe41dc89ab9801c9d57713f84e650788e172e115",
        "commit_message": "Merge pull request #1997 from pjanouse/JENKINS-32273\n\n[JENKINS-32273] Unified an issue handling in CLI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe41dc89ab9801c9d57713f84e650788e172e115",
        "buggy_code": "assertThat(invoker.withStdin(new ByteArrayInputStream(\"<project/>\".getBytes(\"US-ASCII\"))).invokeWithArgs(\"d/p\"), failedWith(-1));",
        "fixed_code": "assertThat(invoker.withStdin(new ByteArrayInputStream(\"<project/>\".getBytes(\"US-ASCII\"))).invokeWithArgs(\"d/p\"), failedWith(6));",
        "patch": "@@ -78,7 +78,7 @@ public class CreateJobCommandTest {\n             }\n         });\n         cmd.setTransportAuth(User.get(\"alice\").impersonate());\n-        assertThat(invoker.withStdin(new ByteArrayInputStream(\"<project/>\".getBytes(\"US-ASCII\"))).invokeWithArgs(\"d/p\"), failedWith(-1));\n+        assertThat(invoker.withStdin(new ByteArrayInputStream(\"<project/>\".getBytes(\"US-ASCII\"))).invokeWithArgs(\"d/p\"), failedWith(6));\n         cmd.setTransportAuth(User.get(\"bob\").impersonate());\n         assertThat(invoker.withStdin(new ByteArrayInputStream(\"<project/>\".getBytes(\"US-ASCII\"))).invokeWithArgs(\"d/p\"), succeededSilently());\n         assertNotNull(d.getItem(\"p\"));"
    },
    {
        "commit_id": "fe41dc89ab9801c9d57713f84e650788e172e115",
        "commit_message": "Merge pull request #1997 from pjanouse/JENKINS-32273\n\n[JENKINS-32273] Unified an issue handling in CLI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe41dc89ab9801c9d57713f84e650788e172e115",
        "buggy_code": "probe(Payload.Spring1, -1);",
        "fixed_code": "probe(Payload.Spring1, 1);",
        "patch": "@@ -76,7 +76,7 @@ public void probeGroovy1() throws Exception {\n     @Test\n     @Issue(\"SECURITY-218\")\n     public void probeSpring1() throws Exception {\n-        probe(Payload.Spring1, -1);\n+        probe(Payload.Spring1, 1);\n     }\n     \n     private void probe(Payload payload, int expectedResultCode) throws Exception {"
    },
    {
        "commit_id": "d5725e6d18c0bcd4a2640943eaea059f137786bc",
        "commit_message": "[JENKINS-32273] Unified an issue handling in CLI\n\nRe-factored all existed CLI code to follow the new proposed scheme for\nraising an exception if issue occurs, handling and reporting it.\nUnified CLIRegisterer as well.\nFixed unit tests to follow the new scheme.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d5725e6d18c0bcd4a2640943eaea059f137786bc",
        "buggy_code": ".withBaseLoader(Jenkins.getInstance().pluginManager.uberClassLoader)",
        "fixed_code": ".withBaseLoader(Jenkins.getActiveInstance().pluginManager.uberClassLoader)",
        "patch": "@@ -77,7 +77,7 @@ protected void runCli(Connection c) throws IOException, InterruptedException {\n             Channel channel = cb\n                     .withMode(Mode.BINARY)\n                     .withRestricted(true)\n-                    .withBaseLoader(Jenkins.getInstance().pluginManager.uberClassLoader)\n+                    .withBaseLoader(Jenkins.getActiveInstance().pluginManager.uberClassLoader)\n                     .build(new BufferedInputStream(c.in), new BufferedOutputStream(c.out));\n \n             channel.setProperty(CliEntryPoint.class.getName(),new CliManagerImpl(channel));"
    },
    {
        "commit_id": "d5725e6d18c0bcd4a2640943eaea059f137786bc",
        "commit_message": "[JENKINS-32273] Unified an issue handling in CLI\n\nRe-factored all existed CLI code to follow the new proposed scheme for\nraising an exception if issue occurs, handling and reporting it.\nUnified CLIRegisterer as well.\nFixed unit tests to follow the new scheme.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d5725e6d18c0bcd4a2640943eaea059f137786bc",
        "buggy_code": "Class<?> cls = Jenkins.getInstance().pluginManager.uberClassLoader.loadClass(\"org.jenkinsci.main.modules.instance_identity.InstanceIdentity\");",
        "fixed_code": "Class<?> cls = Jenkins.getActiveInstance().pluginManager.uberClassLoader.loadClass(\"org.jenkinsci.main.modules.instance_identity.InstanceIdentity\");",
        "patch": "@@ -60,7 +60,7 @@ public void run() throws IOException, InterruptedException {\n \n                 try {\n                     // HACK: TODO: move the transport support into modules\n-                    Class<?> cls = Jenkins.getInstance().pluginManager.uberClassLoader.loadClass(\"org.jenkinsci.main.modules.instance_identity.InstanceIdentity\");\n+                    Class<?> cls = Jenkins.getActiveInstance().pluginManager.uberClassLoader.loadClass(\"org.jenkinsci.main.modules.instance_identity.InstanceIdentity\");\n                     Object iid = cls.getDeclaredMethod(\"get\").invoke(null);\n                     PrivateKey instanceId = (PrivateKey)cls.getDeclaredMethod(\"getPrivate\").invoke(iid);\n "
    },
    {
        "commit_id": "d5725e6d18c0bcd4a2640943eaea059f137786bc",
        "commit_message": "[JENKINS-32273] Unified an issue handling in CLI\n\nRe-factored all existed CLI code to follow the new proposed scheme for\nraising an exception if issue occurs, handling and reporting it.\nUnified CLIRegisterer as well.\nFixed unit tests to follow the new scheme.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d5725e6d18c0bcd4a2640943eaea059f137786bc",
        "buggy_code": "if (node == null) throw new CmdLineException(owner, \"No such node '\" + nodeName + \"'\");",
        "fixed_code": "if (node == null) throw new IllegalArgumentException(\"No such node '\" + nodeName + \"'\");",
        "patch": "@@ -54,7 +54,7 @@ public int parseArguments(Parameters params) throws CmdLineException {\n         String nodeName = params.getParameter(0);\n \n         final Node node = Jenkins.getInstance().getNode(nodeName);\n-        if (node == null) throw new CmdLineException(owner, \"No such node '\" + nodeName + \"'\");\n+        if (node == null) throw new IllegalArgumentException(\"No such node '\" + nodeName + \"'\");\n \n         setter.addValue(node);\n         return 1;"
    },
    {
        "commit_id": "d5725e6d18c0bcd4a2640943eaea059f137786bc",
        "commit_message": "[JENKINS-32273] Unified an issue handling in CLI\n\nRe-factored all existed CLI code to follow the new proposed scheme for\nraising an exception if issue occurs, handling and reporting it.\nUnified CLIRegisterer as well.\nFixed unit tests to follow the new scheme.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d5725e6d18c0bcd4a2640943eaea059f137786bc",
        "buggy_code": "assertThat(invoker.withStdin(new ByteArrayInputStream(\"<project/>\".getBytes(\"US-ASCII\"))).invokeWithArgs(\"d/p\"), failedWith(-1));",
        "fixed_code": "assertThat(invoker.withStdin(new ByteArrayInputStream(\"<project/>\".getBytes(\"US-ASCII\"))).invokeWithArgs(\"d/p\"), failedWith(6));",
        "patch": "@@ -78,7 +78,7 @@ public class CreateJobCommandTest {\n             }\n         });\n         cmd.setTransportAuth(User.get(\"alice\").impersonate());\n-        assertThat(invoker.withStdin(new ByteArrayInputStream(\"<project/>\".getBytes(\"US-ASCII\"))).invokeWithArgs(\"d/p\"), failedWith(-1));\n+        assertThat(invoker.withStdin(new ByteArrayInputStream(\"<project/>\".getBytes(\"US-ASCII\"))).invokeWithArgs(\"d/p\"), failedWith(6));\n         cmd.setTransportAuth(User.get(\"bob\").impersonate());\n         assertThat(invoker.withStdin(new ByteArrayInputStream(\"<project/>\".getBytes(\"US-ASCII\"))).invokeWithArgs(\"d/p\"), succeededSilently());\n         assertNotNull(d.getItem(\"p\"));"
    },
    {
        "commit_id": "d5725e6d18c0bcd4a2640943eaea059f137786bc",
        "commit_message": "[JENKINS-32273] Unified an issue handling in CLI\n\nRe-factored all existed CLI code to follow the new proposed scheme for\nraising an exception if issue occurs, handling and reporting it.\nUnified CLIRegisterer as well.\nFixed unit tests to follow the new scheme.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d5725e6d18c0bcd4a2640943eaea059f137786bc",
        "buggy_code": "probe(Payload.Spring1, -1);",
        "fixed_code": "probe(Payload.Spring1, 1);",
        "patch": "@@ -76,7 +76,7 @@ public void probeGroovy1() throws Exception {\n     @Test\n     @Issue(\"SECURITY-218\")\n     public void probeSpring1() throws Exception {\n-        probe(Payload.Spring1, -1);\n+        probe(Payload.Spring1, 1);\n     }\n     \n     private void probe(Payload payload, int expectedResultCode) throws Exception {"
    },
    {
        "commit_id": "566def3bd6e0d1f9fd8b0cd6f7e9600c95107780",
        "commit_message": "[JENKINS-32765] Fix failing tests",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/566def3bd6e0d1f9fd8b0cd6f7e9600c95107780",
        "buggy_code": "if (workDir == null) {",
        "fixed_code": "if (workDir == null && context != null) {",
        "patch": "@@ -207,7 +207,7 @@ public PluginManager(ServletContext context, File rootDir) {\n         if(!rootDir.exists())\n             rootDir.mkdirs();\n         String workDir = System.getProperty(PluginManager.class.getName()+\".workDir\");\n-        if (workDir == null) {\n+        if (workDir == null && context != null) {\n             workDir = context.getInitParameter(PluginManager.class.getName() + \".workDir\");\n         }\n         this.workDir = workDir == null ? null : new File(workDir);"
    },
    {
        "commit_id": "57473e82ce63db47bbaf53383629aa2bd14def26",
        "commit_message": "Merge pull request #54 from jenkinsci-cert/SECURITY-238\n\n[FIX SECURITY-238] Don't echo command name",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/57473e82ce63db47bbaf53383629aa2bd14def26",
        "buggy_code": "rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command \" + commandName);",
        "fixed_code": "rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command\");",
        "patch": "@@ -78,7 +78,7 @@ public void doCommand(StaplerRequest req, StaplerResponse rsp) throws ServletExc\n         final String commandName = req.getRestOfPath().substring(1);\n         CLICommand command = CLICommand.clone(commandName);\n         if (command == null) {\n-            rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command \" + commandName);\n+            rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command\");\n             return;\n         }\n "
    },
    {
        "commit_id": "f7a9d268f98b870b4cff64eeb33eebe3b2fc6330",
        "commit_message": "Fix tests after renaming in log messages",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f7a9d268f98b870b4cff64eeb33eebe3b2fc6330",
        "buggy_code": "assertThat(text, containsStrings(\"NAME\", \"Slave name, or empty string for master\"));",
        "fixed_code": "assertThat(text, containsStrings(\"NAME\", \"Agent name, or empty string for master\"));",
        "patch": "@@ -101,7 +101,7 @@ private void assertContainsOverviewOfMethodCommand(String text) {\n \n     private void assertContainsUsageOfMethodCommand(String text) {\n         assertThat(text, containsString(\"offline-node NAME [-m VAL]\"));\n-        assertThat(text, containsStrings(\"NAME\", \"Slave name, or empty string for master\"));\n+        assertThat(text, containsStrings(\"NAME\", \"Agent name, or empty string for master\"));\n         assertThat(text, containsStrings(\"-m VAL\", \"Record the note about why you are disconnecting this node\"));\n     }\n "
    },
    {
        "commit_id": "f7a9d268f98b870b4cff64eeb33eebe3b2fc6330",
        "commit_message": "Fix tests after renaming in log messages",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f7a9d268f98b870b4cff64eeb33eebe3b2fc6330",
        "buggy_code": "assertThat(log, containsString(\"Slave went offline during the build\"));",
        "fixed_code": "assertThat(log, containsString(\"Agent went offline during the build\"));",
        "patch": "@@ -140,7 +140,7 @@ public void disconnectCause() throws Exception {\n         assertEquals(b.getResult(), Result.FAILURE);\n         assertThat(log, containsString(\"Finished: FAILURE\"));\n         assertThat(log, containsString(\"Build step 'BlockingBuilder' marked build as failure\"));\n-        assertThat(log, containsString(\"Slave went offline during the build\"));\n+        assertThat(log, containsString(\"Agent went offline during the build\"));\n         assertThat(log, containsString(\"Disconnected by Johnny : Taking offline to break your buil\"));\n     }\n "
    },
    {
        "commit_id": "317d788eff4726dffd73b88caf12bd2295cc5951",
        "commit_message": "[JENKINS-27268] Fix tests after renaming",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/317d788eff4726dffd73b88caf12bd2295cc5951",
        "buggy_code": "assertThat(result.stderr(), containsString(\"user is missing the Slave/Create permission\"));",
        "fixed_code": "assertThat(result.stderr(), containsString(\"user is missing the Agent/Create permission\"));",
        "patch": "@@ -60,7 +60,7 @@ public class CreateNodeCommandTest {\n                 .invoke()\n         ;\n \n-        assertThat(result.stderr(), containsString(\"user is missing the Slave/Create permission\"));\n+        assertThat(result.stderr(), containsString(\"user is missing the Agent/Create permission\"));\n         assertThat(result, hasNoStandardOutput());\n         assertThat(result, failedWith(-1));\n     }"
    },
    {
        "commit_id": "317d788eff4726dffd73b88caf12bd2295cc5951",
        "commit_message": "[JENKINS-27268] Fix tests after renaming",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/317d788eff4726dffd73b88caf12bd2295cc5951",
        "buggy_code": "assertThat(result.stderr(), containsString(\"user is missing the Slave/Delete permission\"));",
        "fixed_code": "assertThat(result.stderr(), containsString(\"user is missing the Agent/Delete permission\"));",
        "patch": "@@ -62,7 +62,7 @@ public class DeleteNodeCommandTest {\n \n         assertThat(result, failedWith(-1));\n         assertThat(result, hasNoStandardOutput());\n-        assertThat(result.stderr(), containsString(\"user is missing the Slave/Delete permission\"));\n+        assertThat(result.stderr(), containsString(\"user is missing the Agent/Delete permission\"));\n     }\n \n     @Test public void deleteNodeShouldSucceed() throws Exception {"
    },
    {
        "commit_id": "317d788eff4726dffd73b88caf12bd2295cc5951",
        "commit_message": "[JENKINS-27268] Fix tests after renaming",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/317d788eff4726dffd73b88caf12bd2295cc5951",
        "buggy_code": "assertThat(result.stderr(), containsString(\"user is missing the Slave/ExtendedRead permission\"));",
        "fixed_code": "assertThat(result.stderr(), containsString(\"user is missing the Agent/ExtendedRead permission\"));",
        "patch": "@@ -59,7 +59,7 @@ public class GetNodeCommandTest {\n                 .invokeWithArgs(\"MySlave\")\n         ;\n \n-        assertThat(result.stderr(), containsString(\"user is missing the Slave/ExtendedRead permission\"));\n+        assertThat(result.stderr(), containsString(\"user is missing the Agent/ExtendedRead permission\"));\n         assertThat(result, failedWith(-1));\n         assertThat(result, hasNoStandardOutput());\n     }"
    },
    {
        "commit_id": "317d788eff4726dffd73b88caf12bd2295cc5951",
        "commit_message": "[JENKINS-27268] Fix tests after renaming",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/317d788eff4726dffd73b88caf12bd2295cc5951",
        "buggy_code": "assertThat(result.stderr(), containsString(\"user is missing the Slave/Configure permission\"));",
        "fixed_code": "assertThat(result.stderr(), containsString(\"user is missing the Agent/Configure permission\"));",
        "patch": "@@ -60,7 +60,7 @@ public class UpdateNodeCommandTest {\n                 .invokeWithArgs(\"MySlave\")\n         ;\n \n-        assertThat(result.stderr(), containsString(\"user is missing the Slave/Configure permission\"));\n+        assertThat(result.stderr(), containsString(\"user is missing the Agent/Configure permission\"));\n         assertThat(result, failedWith(-1));\n         assertThat(result, hasNoStandardOutput());\n     }"
    },
    {
        "commit_id": "317d788eff4726dffd73b88caf12bd2295cc5951",
        "commit_message": "[JENKINS-27268] Fix tests after renaming",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/317d788eff4726dffd73b88caf12bd2295cc5951",
        "buggy_code": "containsString(\"Slave called \u2018nodeA\u2019 already exists\"));",
        "fixed_code": "containsString(\"Agent called \u2018nodeA\u2019 already exists\"));",
        "patch": "@@ -84,7 +84,7 @@ public void testProhibitRenameOverExistingNode() throws Exception {\n         } catch (FailingHttpStatusCodeException e) {\n             assertThat(NOTE, e.getStatusCode(), equalTo(400));\n             assertThat(NOTE, e.getResponse().getContentAsString(),\n-                    containsString(\"Slave called \u2018nodeA\u2019 already exists\"));\n+                    containsString(\"Agent called \u2018nodeA\u2019 already exists\"));\n         }\n     }\n }"
    },
    {
        "commit_id": "559566b1ac62ebe966613933baf1714137daeb8c",
        "commit_message": "[FIX SECURITY-245] Compare crumbs in constant time",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/559566b1ac62ebe966613933baf1714137daeb8c",
        "buggy_code": "return newCrumb.equals(crumb);",
        "fixed_code": "return MessageDigest.isEqual(newCrumb.getBytes(), crumb.getBytes());",
        "patch": "@@ -95,7 +95,7 @@ public boolean validateCrumb(ServletRequest request, String salt, String crumb)\n         if (request instanceof HttpServletRequest) {\n             String newCrumb = issueCrumb(request, salt);\n             if ((newCrumb != null) && (crumb != null)) {\n-                return newCrumb.equals(crumb);\n+                return MessageDigest.isEqual(newCrumb.getBytes(), crumb.getBytes());\n             }\n         }\n         return false;"
    },
    {
        "commit_id": "f5c51fbad2b62b81dc1e0402aeee058a4a478046",
        "commit_message": "[FIX SECURITY-238] Don't echo command name",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f5c51fbad2b62b81dc1e0402aeee058a4a478046",
        "buggy_code": "rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command \" + commandName);",
        "fixed_code": "rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command\");",
        "patch": "@@ -78,7 +78,7 @@ public void doCommand(StaplerRequest req, StaplerResponse rsp) throws ServletExc\n         final String commandName = req.getRestOfPath().substring(1);\n         CLICommand command = CLICommand.clone(commandName);\n         if (command == null) {\n-            rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command \" + commandName);\n+            rsp.sendError(HttpServletResponse.SC_NOT_FOUND, \"No such command\");\n             return;\n         }\n "
    },
    {
        "commit_id": "3f91d342c900ee5fa33623a27cb0bda4509c9e28",
        "commit_message": "UpdateCenterConnectionStatusTest fix for the hoards of people that have a host named \"xyz\" ;)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3f91d342c900ee5fa33623a27cb0bda4509c9e28",
        "buggy_code": "return \"http://xyz\";",
        "fixed_code": "return \"http://xyz./\";",
        "patch": "@@ -73,7 +73,7 @@ public void doConnectionStatus_unknown_site() throws IOException, SAXException {\n     private UpdateSite updateSite = new UpdateSite(UpdateCenter.ID_DEFAULT, \"http://xyz\") {\n         @Override\n         public String getConnectionCheckUrl() {\n-            return \"http://xyz\";\n+            return \"http://xyz./\";\n         }\n     };\n "
    },
    {
        "commit_id": "93b8e003983e316897a19a48330813708bffe74a",
        "commit_message": "[SECURITY-218] - Fix Gadgets to make Spring test running",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/93b8e003983e316897a19a48330813708bffe74a",
        "buggy_code": "import org.apache.xalan.processor.TransformerFactoryImpl;",
        "fixed_code": "import org.apache.xalan.xsltc.trax.TransformerFactoryImpl;",
        "patch": "@@ -34,11 +34,11 @@\n import javassist.ClassPool;\n import javassist.CtClass;\n \n-import org.apache.xalan.processor.TransformerFactoryImpl;\n import org.apache.xalan.xsltc.DOM;\n import org.apache.xalan.xsltc.TransletException;\n import org.apache.xalan.xsltc.runtime.AbstractTranslet;\n import org.apache.xalan.xsltc.trax.TemplatesImpl;\n+import org.apache.xalan.xsltc.trax.TransformerFactoryImpl;\n import org.apache.xml.dtm.DTMAxisIterator;\n import org.apache.xml.serializer.SerializationHandler;\n "
    },
    {
        "commit_id": "c7e0b799320b0f0163bd0aee07125d1950f828c4",
        "commit_message": "Adjusted to the additional fix in remoting",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c7e0b799320b0f0163bd0aee07125d1950f828c4",
        "buggy_code": "ClassFilter.DEFAULT.decorate(getClass().getClassLoader()));",
        "fixed_code": "getClass().getClassLoader(), ClassFilter.DEFAULT);",
        "patch": "@@ -110,7 +110,7 @@ public void writeObject(Object o) throws IOException {\n      */\n     public <T> T readObject() throws IOException, ClassNotFoundException {\n         ObjectInputStream ois = new ObjectInputStreamEx(in,\n-                ClassFilter.DEFAULT.decorate(getClass().getClassLoader()));\n+                getClass().getClassLoader(), ClassFilter.DEFAULT);\n         return (T)ois.readObject();\n     }\n "
    },
    {
        "commit_id": "aff88a0679a08b4d0d49da1eda456b02631b3522",
        "commit_message": "Test problem\n\nanonymous Callable fails to serialize without this.\n\njnlpSlave(jenkins.security.Security218Test)  Time elapsed: 3.616 sec  <<< ERROR!\njava.io.IOException: Unable to serialize jenkins.security.Security218Test$1@72a2ba17\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1180)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1528)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1493)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)\n    at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1528)\n    at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1493)\n    at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1416)\n    at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1174)\n    at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:346)\n    at hudson.remoting.UserRequest._serialize(UserRequest.java:158)\n    at hudson.remoting.UserRequest.serialize(UserRequest.java:167)\n    at hudson.remoting.UserRequest.<init>(UserRequest.java:63)\n    at hudson.remoting.Channel.call(Channel.java:779)\n    at jenkins.security.Security218Test.check(Security218Test.java:65)\n    at jenkins.security.Security218Test.jnlpSlave(Security218Test.java:55)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/aff88a0679a08b4d0d49da1eda456b02631b3522",
        "buggy_code": "private Process jnlp;",
        "fixed_code": "private transient Process jnlp;",
        "patch": "@@ -31,7 +31,7 @@ public class Security218Test implements Serializable {\n     /**\n      * JNLP slave.\n      */\n-    private Process jnlp;\n+    private transient Process jnlp;\n \n     /**\n      * Makes sure SECURITY-218 fix also applies to slaves."
    },
    {
        "commit_id": "5a67c74ce584c506c85c1e8bec5e1d3cba82b64f",
        "commit_message": "Merge pull request #1902 from Vlatombe/jenkinsrule_compare_null_field_list\n\nFix a NPE while trying to compare two data bound beans with null Iterable field.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5a67c74ce584c506c85c1e8bec5e1d3cba82b64f",
        "buggy_code": "if (Iterable.class.isAssignableFrom(types[i])) {",
        "fixed_code": "if (lv != null && rv != null && Iterable.class.isAssignableFrom(types[i])) {",
        "patch": "@@ -1453,7 +1453,7 @@ public void assertEqualDataBoundBeans(Object lhs, Object rhs) throws Exception {\n             Object lv = ReflectionUtils.getPublicProperty(lhs, names[i]);\n             Object rv = ReflectionUtils.getPublicProperty(rhs, names[i]);\n \n-            if (Iterable.class.isAssignableFrom(types[i])) {\n+            if (lv != null && rv != null && Iterable.class.isAssignableFrom(types[i])) {\n                 Iterable lcol = (Iterable) lv;\n                 Iterable rcol = (Iterable) rv;\n                 Iterator ltr,rtr;"
    },
    {
        "commit_id": "3909f5acc4f43d73bdd6749d9762f3c338486b1f",
        "commit_message": "Fix a NPE while trying to compare two data bound beans with null\nIterable field.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3909f5acc4f43d73bdd6749d9762f3c338486b1f",
        "buggy_code": "if (Iterable.class.isAssignableFrom(types[i])) {",
        "fixed_code": "if (lv != null && rv != null && Iterable.class.isAssignableFrom(types[i])) {",
        "patch": "@@ -1453,7 +1453,7 @@ public void assertEqualDataBoundBeans(Object lhs, Object rhs) throws Exception {\n             Object lv = ReflectionUtils.getPublicProperty(lhs, names[i]);\n             Object rv = ReflectionUtils.getPublicProperty(rhs, names[i]);\n \n-            if (Iterable.class.isAssignableFrom(types[i])) {\n+            if (lv != null && rv != null && Iterable.class.isAssignableFrom(types[i])) {\n                 Iterable lcol = (Iterable) lv;\n                 Iterable rcol = (Iterable) rv;\n                 Iterator ltr,rtr;"
    },
    {
        "commit_id": "2e439dc70b15e5ecbad81dab5d18398be727ffe3",
        "commit_message": "Merge pull request #34 from varmenise/security-184\n\n[SECURITY-184] fix test failures checking null value",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2e439dc70b15e5ecbad81dab5d18398be727ffe3",
        "buggy_code": "LOGGER.log(Level.WARNING, \"An attempt was made to connect as {0} from {1} with an incorrect secret\", new Object[]{nodeName, handshake.getSocket().getRemoteSocketAddress()});",
        "fixed_code": "LOGGER.log(Level.WARNING, \"An attempt was made to connect as {0} from {1} with an incorrect secret\", new Object[]{nodeName, handshake.getSocket()!=null?handshake.getSocket().getRemoteSocketAddress():null});",
        "patch": "@@ -91,7 +91,7 @@ private boolean matchesSecret(String nodeName, JnlpSlaveHandshake handshake){\n         String handshakeSecret = handshake.getRequestProperty(\"Secret-Key\");\n         // Verify that the slave secret matches the handshake secret.\n         if (!computer.getJnlpMac().equals(handshakeSecret)) {\n-            LOGGER.log(Level.WARNING, \"An attempt was made to connect as {0} from {1} with an incorrect secret\", new Object[]{nodeName, handshake.getSocket().getRemoteSocketAddress()});\n+            LOGGER.log(Level.WARNING, \"An attempt was made to connect as {0} from {1} with an incorrect secret\", new Object[]{nodeName, handshake.getSocket()!=null?handshake.getSocket().getRemoteSocketAddress():null});\n             return false;\n         } else {\n             return true;"
    },
    {
        "commit_id": "d85bf665425091470363e14143a7d35745ea28c7",
        "commit_message": "[SECURITY-184] fix test failures checking null value",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d85bf665425091470363e14143a7d35745ea28c7",
        "buggy_code": "LOGGER.log(Level.WARNING, \"An attempt was made to connect as {0} from {1} with an incorrect secret\", new Object[]{nodeName, handshake.getSocket().getRemoteSocketAddress()});",
        "fixed_code": "LOGGER.log(Level.WARNING, \"An attempt was made to connect as {0} from {1} with an incorrect secret\", new Object[]{nodeName, handshake.getSocket()!=null?handshake.getSocket().getRemoteSocketAddress():null});",
        "patch": "@@ -91,7 +91,7 @@ private boolean matchesSecret(String nodeName, JnlpSlaveHandshake handshake){\n         String handshakeSecret = handshake.getRequestProperty(\"Secret-Key\");\n         // Verify that the slave secret matches the handshake secret.\n         if (!computer.getJnlpMac().equals(handshakeSecret)) {\n-            LOGGER.log(Level.WARNING, \"An attempt was made to connect as {0} from {1} with an incorrect secret\", new Object[]{nodeName, handshake.getSocket().getRemoteSocketAddress()});\n+            LOGGER.log(Level.WARNING, \"An attempt was made to connect as {0} from {1} with an incorrect secret\", new Object[]{nodeName, handshake.getSocket()!=null?handshake.getSocket().getRemoteSocketAddress():null});\n             return false;\n         } else {\n             return true;"
    },
    {
        "commit_id": "5c66fcc6b0318ba151ab3a7fcfbd8ec68b5fea42",
        "commit_message": "Merge pull request #1641 from tfennelly/JENKINS-26445-pagination-search\n\n[FIX JENKINS-26445] Build history pagination and search",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c66fcc6b0318ba151ab3a7fcfbd8ec68b5fea42",
        "buggy_code": "HtmlPage page = wc.getPage(upstream, \"configure\");",
        "fixed_code": "HtmlPage page = wc.getHistoryPageFilter(upstream, \"configure\");",
        "patch": "@@ -209,7 +209,7 @@ public void downstreamProjectSecurity() throws Exception {\n         /* The long way:\n         WebClient wc = createWebClient();\n         wc.login(\"alice\");\n-        HtmlPage page = wc.getPage(upstream, \"configure\");\n+        HtmlPage page = wc.getHistoryPageFilter(upstream, \"configure\");\n         HtmlForm config = page.getFormByName(\"config\");\n         config.getButtonByCaption(\"Add post-build action\").click(); // lib/hudson/project/config-publishers2.jelly\n         page.getAnchorByText(\"Build other projects\").click();"
    },
    {
        "commit_id": "955eb7274a02e3549493cd2e1e0de785a0893784",
        "commit_message": "Merge branch 'master' into plugin-manager-dependants\n\n* master: (58 commits)\n  Changelog: Replace the PR reference by the JIRA issue reference\n  Noting https://github.com/jenkinsci/jenkins/pull/1818\n  Noting https://github.com/jenkinsci/jenkins/pull/1804\n  [JENKINS-30002] Improve Util.isOverridden\n  Noting #1842\n  [FIXED JENKINS-30777] this concludes the fix\n  [JENKINS-30777] also allow slaves to decorate logger\n  [JENKINS-30777] Generalized the signature to work with Run, not just AbstractBuild.\n  Diamond operator\n  [FIXED JENKINS-29876] CheckForNull job in ReverseBuildTrigger\n  Noting JENKINS-30084 in changelog\n  [JENKINS-30084] remove extra space\n  [JENKINS-30084] address feedbacks\n  [JENKINS-30084] indent back\n  [JENKINS-30084] fixing test\n  [JENKINS-30084] fixing test\n  [JENKINS-30084] enhancing test case\n  [JENKINS-30084] test added to make sure a flyweight task can be blocked at last minute\n  [JENKINS-30084] fix regression when flyweight task is blocked by upstream/downstream project\n  [JENKINS-30084] some more polish\n  ...",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/955eb7274a02e3549493cd2e1e0de785a0893784",
        "buggy_code": "logger = filter.decorateLogger((AbstractBuild) build, logger);",
        "fixed_code": "logger = filter.decorateLogger(build, logger);",
        "patch": "@@ -1710,7 +1710,7 @@ protected final void execute(@Nonnull RunExecution job) {\n \n                     // Global log filters\n                     for (ConsoleLogFilter filter : ConsoleLogFilter.all()) {\n-                        logger = filter.decorateLogger((AbstractBuild) build, logger);\n+                        logger = filter.decorateLogger(build, logger);\n                     }\n \n                     // Project specific log filters"
    },
    {
        "commit_id": "750cdb64bf7115c225714eb19d9676817d0f1b23",
        "commit_message": "[JENKINS-30084] updated references of Jenkins Issue",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/750cdb64bf7115c225714eb19d9676817d0f1b23",
        "buggy_code": "@Issue(\"OSS-192\")",
        "fixed_code": "@Issue(\"JENKINS-30084\")",
        "patch": "@@ -95,7 +95,7 @@ public String getDisplayName() {\n         }\n     }\n \n-    @Issue(\"OSS-192\")\n+    @Issue(\"JENKINS-30084\")\n     @Test\n     /*\n      * this is to test that when the assigned executor is not available the flyweighttask is put into the buildable list,"
    },
    {
        "commit_id": "a2ba196e63cfdc41c9d4d31422f6946a57403a04",
        "commit_message": "test-annotations -> 1.2\n\nAllows @Issue(String[])",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a2ba196e63cfdc41c9d4d31422f6946a57403a04",
        "buggy_code": "@Issue(\"SECURITY-131\") // TODO test-annotations 1.2+: @Issue({\"SECURITY-131\", \"SECURITY-155\"})",
        "fixed_code": "@Issue({\"SECURITY-131\", \"SECURITY-155\"})",
        "patch": "@@ -34,7 +34,7 @@ public class PluginTest {\n \n     @Rule public JenkinsRule r = new JenkinsRule();\n \n-    @Issue(\"SECURITY-131\") // TODO test-annotations 1.2+: @Issue({\"SECURITY-131\", \"SECURITY-155\"})\n+    @Issue({\"SECURITY-131\", \"SECURITY-155\"})\n     @Test public void doDynamic() throws Exception {\n         r.createWebClient().goTo(\"plugin/credentials/images/24x24/credentials.png\", \"image/png\");\n         /* Collapsed somewhere before it winds up in restOfPath:"
    },
    {
        "commit_id": "4c7daf643ff4dbf62e75390dc702c800a52a4429",
        "commit_message": "Merge pull request #1768 from eitoball/fix-typo\n\nFix typo",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4c7daf643ff4dbf62e75390dc702c800a52a4429",
        "buggy_code": "throw new IllegalStateException(rootDir + \" already existed; will not overwite with \" + r);",
        "fixed_code": "throw new IllegalStateException(rootDir + \" already existed; will not overwrite with \" + r);",
        "patch": "@@ -186,7 +186,7 @@ public R put(R r) {\n         // Defense against JENKINS-23152 and its ilk.\n         File rootDir = r.getRootDir();\n         if (rootDir.isDirectory()) {\n-            throw new IllegalStateException(rootDir + \" already existed; will not overwite with \" + r);\n+            throw new IllegalStateException(rootDir + \" already existed; will not overwrite with \" + r);\n         }\n         if (!r.getClass().getName().equals(\"hudson.matrix.MatrixRun\")) { // JENKINS-26739: grandfathered in\n             proposeNewNumber(r.getNumber());"
    },
    {
        "commit_id": "669f94f4c31bb6676b79c5786d387391c2420e03",
        "commit_message": "Fix typo",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/669f94f4c31bb6676b79c5786d387391c2420e03",
        "buggy_code": "throw new IllegalStateException(rootDir + \" already existed; will not overwite with \" + r);",
        "fixed_code": "throw new IllegalStateException(rootDir + \" already existed; will not overwrite with \" + r);",
        "patch": "@@ -186,7 +186,7 @@ public R put(R r) {\n         // Defense against JENKINS-23152 and its ilk.\n         File rootDir = r.getRootDir();\n         if (rootDir.isDirectory()) {\n-            throw new IllegalStateException(rootDir + \" already existed; will not overwite with \" + r);\n+            throw new IllegalStateException(rootDir + \" already existed; will not overwrite with \" + r);\n         }\n         if (!r.getClass().getName().equals(\"hudson.matrix.MatrixRun\")) { // JENKINS-26739: grandfathered in\n             proposeNewNumber(r.getNumber());"
    },
    {
        "commit_id": "8af198e9c86a95474675990b4e7601dad51dda6e",
        "commit_message": "Merge pull request #1760 from olivergondza/fix-interactiveBreak\n\nFix url presented by JenkinsRule#interactiveBreak",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8af198e9c86a95474675990b4e7601dad51dda6e",
        "buggy_code": "System.out.println(\"Jenkins is running at http://localhost:\"+localPort+\"/\");",
        "fixed_code": "System.out.println(\"Jenkins is running at \" + getURL());",
        "patch": "@@ -967,7 +967,7 @@ public void onOnline(Computer C, TaskListener t) {\n      * This is useful during debugging a test so that one can inspect the state of Hudson through the web browser.\n      */\n     public void interactiveBreak() throws Exception {\n-        System.out.println(\"Jenkins is running at http://localhost:\"+localPort+\"/\");\n+        System.out.println(\"Jenkins is running at \" + getURL());\n         new BufferedReader(new InputStreamReader(System.in)).readLine();\n     }\n "
    },
    {
        "commit_id": "f32e9673af478f8167d65c8efb734afc2cfd37ef",
        "commit_message": "Fix url presented by JenkinsRule#interactiveBreak",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f32e9673af478f8167d65c8efb734afc2cfd37ef",
        "buggy_code": "System.out.println(\"Jenkins is running at http://localhost:\"+localPort+\"/\");",
        "fixed_code": "System.out.println(\"Jenkins is running at \" + getURL());",
        "patch": "@@ -967,7 +967,7 @@ public void onOnline(Computer C, TaskListener t) {\n      * This is useful during debugging a test so that one can inspect the state of Hudson through the web browser.\n      */\n     public void interactiveBreak() throws Exception {\n-        System.out.println(\"Jenkins is running at http://localhost:\"+localPort+\"/\");\n+        System.out.println(\"Jenkins is running at \" + getURL());\n         new BufferedReader(new InputStreamReader(System.in)).readLine();\n     }\n "
    },
    {
        "commit_id": "5dfe78d2fcda17d92226af141c9522942b228330",
        "commit_message": "Moved Build History pagination and search classes to jenkins as requested by @jglick\n\nI understand the motivation for this but I think it creates a bit of a maint/comprehension issue in that splits related classes across 2 different package hierarchies. I know we'll say that's ok but I don't like it. Just say'n.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5dfe78d2fcda17d92226af141c9522942b228330",
        "buggy_code": "import hudson.model.ModelObject;",
        "fixed_code": "import jenkins.widgets.HistoryPageFilter;",
        "patch": "@@ -23,10 +23,10 @@\n  */\n package hudson.widgets;\n \n-import hudson.model.ModelObject;\n import jenkins.model.Jenkins;\n import hudson.model.Queue.Item;\n import hudson.model.Queue.Task;\n+import jenkins.widgets.HistoryPageFilter;\n import org.apache.commons.collections.IteratorUtils;\n \n import java.util.Collection;"
    },
    {
        "commit_id": "5dfe78d2fcda17d92226af141c9522942b228330",
        "commit_message": "Moved Build History pagination and search classes to jenkins as requested by @jglick\n\nI understand the motivation for this but I think it creates a bit of a maint/comprehension issue in that splits related classes across 2 different package hierarchies. I know we'll say that's ok but I don't like it. Just say'n.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5dfe78d2fcda17d92226af141c9522942b228330",
        "buggy_code": "package hudson.widgets;",
        "fixed_code": "package jenkins.widgets;",
        "patch": "@@ -21,7 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.widgets;\n+package jenkins.widgets;\n \n import hudson.model.Queue;\n import hudson.model.Run;"
    },
    {
        "commit_id": "5dfe78d2fcda17d92226af141c9522942b228330",
        "commit_message": "Moved Build History pagination and search classes to jenkins as requested by @jglick\n\nI understand the motivation for this but I think it creates a bit of a maint/comprehension issue in that splits related classes across 2 different package hierarchies. I know we'll say that's ok but I don't like it. Just say'n.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5dfe78d2fcda17d92226af141c9522942b228330",
        "buggy_code": "package hudson.widgets.buildsearch;",
        "fixed_code": "package jenkins.widgets.buildsearch;",
        "patch": "@@ -21,7 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.widgets.buildsearch;\n+package jenkins.widgets.buildsearch;\n \n import javax.annotation.Nonnull;\n import java.util.ArrayList;"
    },
    {
        "commit_id": "5dfe78d2fcda17d92226af141c9522942b228330",
        "commit_message": "Moved Build History pagination and search classes to jenkins as requested by @jglick\n\nI understand the motivation for this but I think it creates a bit of a maint/comprehension issue in that splits related classes across 2 different package hierarchies. I know we'll say that's ok but I don't like it. Just say'n.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5dfe78d2fcda17d92226af141c9522942b228330",
        "buggy_code": "package hudson.widgets.buildsearch;",
        "fixed_code": "package jenkins.widgets.buildsearch;",
        "patch": "@@ -21,7 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.widgets.buildsearch;\n+package jenkins.widgets.buildsearch;\n \n import org.junit.Assert;\n import org.junit.Test;"
    },
    {
        "commit_id": "408b53193125a8326f904b1716671db2ae0c5a6e",
        "commit_message": "Merge pull request #1651 from deadmoose/logger_class\n\nFix some loggers which are identifying as the wrong class.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/408b53193125a8326f904b1716671db2ae0c5a6e",
        "buggy_code": "private static final Logger LOGGER = Logger.getLogger(ConsoleAnnotationOutputStream.class.getName());",
        "fixed_code": "private static final Logger LOGGER = Logger.getLogger(PlainTextConsoleOutputStream.class.getName());",
        "patch": "@@ -89,5 +89,5 @@ public void close() throws IOException {\n     }\n \n \n-    private static final Logger LOGGER = Logger.getLogger(ConsoleAnnotationOutputStream.class.getName());\n+    private static final Logger LOGGER = Logger.getLogger(PlainTextConsoleOutputStream.class.getName());\n }"
    },
    {
        "commit_id": "408b53193125a8326f904b1716671db2ae0c5a6e",
        "commit_message": "Merge pull request #1651 from deadmoose/logger_class\n\nFix some loggers which are identifying as the wrong class.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/408b53193125a8326f904b1716671db2ae0c5a6e",
        "buggy_code": "Logger.getLogger(ItemGroupMixIn.class.getName()).log(Level.WARNING, \"could not load \" + subdir, e);",
        "fixed_code": "Logger.getLogger(Nodes.class.getName()).log(Level.WARNING, \"could not load \" + subdir, e);",
        "patch": "@@ -238,7 +238,7 @@ public boolean accept(File child) {\n                         newNodes.put(node.getNodeName(), node);\n                     }\n                 } catch (IOException e) {\n-                    Logger.getLogger(ItemGroupMixIn.class.getName()).log(Level.WARNING, \"could not load \" + subdir, e);\n+                    Logger.getLogger(Nodes.class.getName()).log(Level.WARNING, \"could not load \" + subdir, e);\n                 }\n             }\n         }"
    },
    {
        "commit_id": "408b53193125a8326f904b1716671db2ae0c5a6e",
        "commit_message": "Merge pull request #1651 from deadmoose/logger_class\n\nFix some loggers which are identifying as the wrong class.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/408b53193125a8326f904b1716671db2ae0c5a6e",
        "buggy_code": "private static final Logger LOGGER = Logger.getLogger(ApiTokenFilter.class.getName());",
        "fixed_code": "private static final Logger LOGGER = Logger.getLogger(BasicHeaderProcessor.class.getName());",
        "patch": "@@ -158,5 +158,5 @@ protected List<? extends BasicHeaderAuthenticator> all() {\n     public void destroy() {\n     }\n \n-    private static final Logger LOGGER = Logger.getLogger(ApiTokenFilter.class.getName());\n+    private static final Logger LOGGER = Logger.getLogger(BasicHeaderProcessor.class.getName());\n }"
    },
    {
        "commit_id": "8e19340c0c2645dc02d06b5faeae73b7be2d3dea",
        "commit_message": "Fixing PR comments:\n\n- Typo\n- Print error combined\n- Set result only when phase like in other code parts.\n- Test for expected error message in log\n\n(cherry picked from commit 161a009271f4b05ed5d865932a0dae70fc276e31)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8e19340c0c2645dc02d06b5faeae73b7be2d3dea",
        "buggy_code": "throw new IOException(\"Throwed IOException from publisher!\");",
        "fixed_code": "throw new IOException(\"Threw IOException from publisher!\");",
        "patch": "@@ -19,7 +19,7 @@\n public class IOExceptionPublisher extends Recorder {\n     @Override\n     public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n-        throw new IOException(\"Throwed IOException from publisher!\");\n+        throw new IOException(\"Threw IOException from publisher!\");\n     }\n \n     @Override"
    },
    {
        "commit_id": "231f658d79a79ebe88ff8412bc3856590b0e2853",
        "commit_message": "Fix PR comments\n\n- Print publisher display name instead of class, so user can understand what publisher in UI was used and failed.\n- Setter for artifact archiver shows how it handle status\n- Minor typos\n- Added test for stacktraces in build log\n\n(cherry picked from commit 92734a8345b782ffd7e5f7c6f023b6228aa4c93d)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/231f658d79a79ebe88ff8412bc3856590b0e2853",
        "buggy_code": "throw new AbortException(\"Throwed AbortException from publisher!\");",
        "fixed_code": "throw new AbortException(\"Threw AbortException from publisher!\");",
        "patch": "@@ -19,7 +19,7 @@\n public class AbortExceptionPublisher extends Recorder {\n     @Override\n     public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n-        throw new AbortException(\"Throwed AbortException from publisher!\");\n+        throw new AbortException(\"Threw AbortException from publisher!\");\n     }\n \n     @Override"
    },
    {
        "commit_id": "41dd74dd43baf77884041ea900cb20920ef274ed",
        "commit_message": "DefaultJnlpSlaveReceiver should return true when rejecting a takeover.\n\nThe contract for JnlpAgentReceiver in case of error on a claimed node is\nto call handshake.error() but still return true so other handlers don't\ntake another crack a it.\n\nAlso added unit tests DefaultJnlpSlaveReceiver.\n\n(cherry picked from commit 2d452b6eb30181f477ff089a8d0d970b0b804f27)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/41dd74dd43baf77884041ea900cb20920ef274ed",
        "buggy_code": "return false;",
        "fixed_code": "return true;",
        "patch": "@@ -48,7 +48,7 @@ public boolean handle(String nodeName, JnlpSlaveHandshake handshake) throws IOEx\n                 }\n             } else {\n                 handshake.error(nodeName + \" is already connected to this master. Rejecting this connection.\");\n-                return false;\n+                return true;\n             }\n         }\n "
    },
    {
        "commit_id": "bf7f14b165f235fed69ebabec0a852bff1874965",
        "commit_message": "[JENKINS-25734] - Prevent NPE in Executor/causeOfDeath page if the field is null\n\nThe change does not fix the issue, but it suppresses NPE at least.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bf7f14b165f235fed69ebabec0a852bff1874965",
        "buggy_code": "public Throwable getCauseOfDeath() {",
        "fixed_code": "public @CheckForNull Throwable getCauseOfDeath() {",
        "patch": "@@ -380,7 +380,7 @@ public boolean isParking() {\n      * @return null if the death is expected death or the thread is {@link #isAlive() still alive}.\n      * @since 1.142\n      */\n-    public Throwable getCauseOfDeath() {\n+    public @CheckForNull Throwable getCauseOfDeath() {\n         return causeOfDeath;\n     }\n "
    },
    {
        "commit_id": "2c6bc734b741ab18631973ecd9722322b22616ca",
        "commit_message": "Merge branch 'master' into extensionlist-listener\n\n* master: (61 commits)\n  [JENKINS-28384] Noting merge of #1700.\n  update changelog: PR 1682 -> issue 28233, fix markup issue\n  Remove duplicated 1.613 section from changelog\n  [FIXED JENKINS-28384] NPE when Node.toComputer \u2192 null.\n  Refactor fingerprint classes: Javadoc and annotations\n  fixup ce747f942c3502f3dc93b69079b4786ceb38fe86\n  Refactor ArgumentListBuilder#toWindowsCommand\n  Improve ArgumentListBuilder#toWindowsCommand test coverage\n  Forgotten @Test annotation\n  updated changelog for release\n  updated changelog for release\n  [maven-release-plugin] prepare release jenkins-1.613\n  [maven-release-plugin] prepare for next development iteration\n  Report launcher exited before establishing the channel\n  Remove erroneous '+ ' from log message.\n  Increase visibility of Java 7 requirement\n  Expose SlaveComputer#getLogDir() explicitly\n  [FIXED JENKINS-28227] Switch to Enblish locale in RunTest#getDurationString to test messages.\n  Noting #1591\n  Noting #1682\n  ...",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2c6bc734b741ab18631973ecd9722322b22616ca",
        "buggy_code": "LOGGER.log(Level.WARNING, Thread.currentThread().getName()+\" for + \" + nodeName + \" terminated\",cause);",
        "fixed_code": "LOGGER.log(Level.WARNING, Thread.currentThread().getName() + \" for \" + nodeName + \" terminated\", cause);",
        "patch": "@@ -123,7 +123,7 @@ protected Channel jnlpConnect(SlaveComputer computer) throws InterruptedExceptio\n                         @Override\n                         public void onClosed(Channel channel, IOException cause) {\n                             if(cause!=null)\n-                                LOGGER.log(Level.WARNING, Thread.currentThread().getName()+\" for + \" + nodeName + \" terminated\",cause);\n+                                LOGGER.log(Level.WARNING, Thread.currentThread().getName() + \" for \" + nodeName + \" terminated\", cause);\n                             try {\n                                 socket.close();\n                             } catch (IOException e) {"
    },
    {
        "commit_id": "2c6bc734b741ab18631973ecd9722322b22616ca",
        "commit_message": "Merge branch 'master' into extensionlist-listener\n\n* master: (61 commits)\n  [JENKINS-28384] Noting merge of #1700.\n  update changelog: PR 1682 -> issue 28233, fix markup issue\n  Remove duplicated 1.613 section from changelog\n  [FIXED JENKINS-28384] NPE when Node.toComputer \u2192 null.\n  Refactor fingerprint classes: Javadoc and annotations\n  fixup ce747f942c3502f3dc93b69079b4786ceb38fe86\n  Refactor ArgumentListBuilder#toWindowsCommand\n  Improve ArgumentListBuilder#toWindowsCommand test coverage\n  Forgotten @Test annotation\n  updated changelog for release\n  updated changelog for release\n  [maven-release-plugin] prepare release jenkins-1.613\n  [maven-release-plugin] prepare for next development iteration\n  Report launcher exited before establishing the channel\n  Remove erroneous '+ ' from log message.\n  Increase visibility of Java 7 requirement\n  Expose SlaveComputer#getLogDir() explicitly\n  [FIXED JENKINS-28227] Switch to Enblish locale in RunTest#getDurationString to test messages.\n  Noting #1591\n  Noting #1682\n  ...",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2c6bc734b741ab18631973ecd9722322b22616ca",
        "buggy_code": "public void testNullHome() throws Exception {",
        "fixed_code": "@Test public void testNullHome() {",
        "patch": "@@ -262,7 +262,7 @@ public void parametersReferencedFromPropertiesShouldRetainBackslashes() throws E\n     }\n \n     @Issue(\"JENKINS-18898\")\n-    public void testNullHome() throws Exception {\n+    @Test public void testNullHome() {\n         EnvVars env = new EnvVars();\n         new MavenInstallation(\"_\", \"\", Collections.<ToolProperty<?>>emptyList()).buildEnvVars(env);\n         assertEquals(\"{}\", env.toString());"
    },
    {
        "commit_id": "f06add2b466280053e52a369c60c21271d03b3fc",
        "commit_message": "Merge pull request #1689 from deadmoose/patch-3\n\nRemove erroneous '+ ' from log message.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f06add2b466280053e52a369c60c21271d03b3fc",
        "buggy_code": "LOGGER.log(Level.WARNING, Thread.currentThread().getName()+\" for + \" + nodeName + \" terminated\",cause);",
        "fixed_code": "LOGGER.log(Level.WARNING, Thread.currentThread().getName() + \" for \" + nodeName + \" terminated\", cause);",
        "patch": "@@ -123,7 +123,7 @@ protected Channel jnlpConnect(SlaveComputer computer) throws InterruptedExceptio\n                         @Override\n                         public void onClosed(Channel channel, IOException cause) {\n                             if(cause!=null)\n-                                LOGGER.log(Level.WARNING, Thread.currentThread().getName()+\" for + \" + nodeName + \" terminated\",cause);\n+                                LOGGER.log(Level.WARNING, Thread.currentThread().getName() + \" for \" + nodeName + \" terminated\", cause);\n                             try {\n                                 socket.close();\n                             } catch (IOException e) {"
    },
    {
        "commit_id": "161a009271f4b05ed5d865932a0dae70fc276e31",
        "commit_message": "Fixing PR comments:\n\n- Typo\n- Print error combined\n- Set result only when phase like in other code parts.\n- Test for expected error message in log",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/161a009271f4b05ed5d865932a0dae70fc276e31",
        "buggy_code": "throw new IOException(\"Throwed IOException from publisher!\");",
        "fixed_code": "throw new IOException(\"Threw IOException from publisher!\");",
        "patch": "@@ -19,7 +19,7 @@\n public class IOExceptionPublisher extends Recorder {\n     @Override\n     public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n-        throw new IOException(\"Throwed IOException from publisher!\");\n+        throw new IOException(\"Threw IOException from publisher!\");\n     }\n \n     @Override"
    },
    {
        "commit_id": "92734a8345b782ffd7e5f7c6f023b6228aa4c93d",
        "commit_message": "Fix PR comments\n\n- Print publisher display name instead of class, so user can understand what publisher in UI was used and failed.\n- Setter for artifact archiver shows how it handle status\n- Minor typos\n- Added test for stacktraces in build log",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/92734a8345b782ffd7e5f7c6f023b6228aa4c93d",
        "buggy_code": "throw new AbortException(\"Throwed AbortException from publisher!\");",
        "fixed_code": "throw new AbortException(\"Threw AbortException from publisher!\");",
        "patch": "@@ -19,7 +19,7 @@\n public class AbortExceptionPublisher extends Recorder {\n     @Override\n     public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n-        throw new AbortException(\"Throwed AbortException from publisher!\");\n+        throw new AbortException(\"Threw AbortException from publisher!\");\n     }\n \n     @Override"
    },
    {
        "commit_id": "d39865c6b23b5b2c90006f13bb61e353988c4902",
        "commit_message": "Fix some loggers which are identifying as the wrong class.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d39865c6b23b5b2c90006f13bb61e353988c4902",
        "buggy_code": "private static final Logger LOGGER = Logger.getLogger(ConsoleAnnotationOutputStream.class.getName());",
        "fixed_code": "private static final Logger LOGGER = Logger.getLogger(PlainTextConsoleOutputStream.class.getName());",
        "patch": "@@ -89,5 +89,5 @@ public void close() throws IOException {\n     }\n \n \n-    private static final Logger LOGGER = Logger.getLogger(ConsoleAnnotationOutputStream.class.getName());\n+    private static final Logger LOGGER = Logger.getLogger(PlainTextConsoleOutputStream.class.getName());\n }"
    },
    {
        "commit_id": "d39865c6b23b5b2c90006f13bb61e353988c4902",
        "commit_message": "Fix some loggers which are identifying as the wrong class.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d39865c6b23b5b2c90006f13bb61e353988c4902",
        "buggy_code": "Logger.getLogger(ItemGroupMixIn.class.getName()).log(Level.WARNING, \"could not load \" + subdir, e);",
        "fixed_code": "Logger.getLogger(Nodes.class.getName()).log(Level.WARNING, \"could not load \" + subdir, e);",
        "patch": "@@ -238,7 +238,7 @@ public boolean accept(File child) {\n                         newNodes.put(node.getNodeName(), node);\n                     }\n                 } catch (IOException e) {\n-                    Logger.getLogger(ItemGroupMixIn.class.getName()).log(Level.WARNING, \"could not load \" + subdir, e);\n+                    Logger.getLogger(Nodes.class.getName()).log(Level.WARNING, \"could not load \" + subdir, e);\n                 }\n             }\n         }"
    },
    {
        "commit_id": "d39865c6b23b5b2c90006f13bb61e353988c4902",
        "commit_message": "Fix some loggers which are identifying as the wrong class.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d39865c6b23b5b2c90006f13bb61e353988c4902",
        "buggy_code": "private static final Logger LOGGER = Logger.getLogger(ApiTokenFilter.class.getName());",
        "fixed_code": "private static final Logger LOGGER = Logger.getLogger(BasicHeaderProcessor.class.getName());",
        "patch": "@@ -158,5 +158,5 @@ protected List<? extends BasicHeaderAuthenticator> all() {\n     public void destroy() {\n     }\n \n-    private static final Logger LOGGER = Logger.getLogger(ApiTokenFilter.class.getName());\n+    private static final Logger LOGGER = Logger.getLogger(BasicHeaderProcessor.class.getName());\n }"
    },
    {
        "commit_id": "2d452b6eb30181f477ff089a8d0d970b0b804f27",
        "commit_message": "DefaultJnlpSlaveReceiver should return true when rejecting a takeover.\n\nThe contract for JnlpAgentReceiver in case of error on a claimed node is\nto call handshake.error() but still return true so other handlers don't\ntake another crack a it.\n\nAlso added unit tests DefaultJnlpSlaveReceiver.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2d452b6eb30181f477ff089a8d0d970b0b804f27",
        "buggy_code": "return false;",
        "fixed_code": "return true;",
        "patch": "@@ -48,7 +48,7 @@ public boolean handle(String nodeName, JnlpSlaveHandshake handshake) throws IOEx\n                 }\n             } else {\n                 handshake.error(nodeName + \" is already connected to this master. Rejecting this connection.\");\n-                return false;\n+                return true;\n             }\n         }\n "
    },
    {
        "commit_id": "2dcc16e38f09c587ab293307a4099b2af6c27153",
        "commit_message": "It's whack-a-mole trying to fix this in my own personal time!",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2dcc16e38f09c587ab293307a4099b2af6c27153",
        "buggy_code": "final Method getNodes = clazz.getDeclaredMethod(\"matches\", SubTask.class);",
        "fixed_code": "final Method getNodes = clazz.getDeclaredMethod(\"matches\", Queue.Item.class, SubTask.class);",
        "patch": "@@ -167,7 +167,7 @@ protected LoadStatistics(int initialOnlineExecutors, int initialBusyExecutors) {\n             }\n             if (!hasMatches) {\n                 try {\n-                    final Method getNodes = clazz.getDeclaredMethod(\"matches\", SubTask.class);\n+                    final Method getNodes = clazz.getDeclaredMethod(\"matches\", Queue.Item.class, SubTask.class);\n                     hasMatches = !Modifier.isAbstract(getNodes.getModifiers());\n                 } catch (NoSuchMethodException e) {\n                     // ignore"
    },
    {
        "commit_id": "d9e4e36fdee7bc004098788634e390a94d5bead9",
        "commit_message": "fix build",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d9e4e36fdee7bc004098788634e390a94d5bead9",
        "buggy_code": "protected boolean matches(SubTask item) {",
        "fixed_code": "protected boolean matches(Queue.Item item, SubTask subTask) {",
        "patch": "@@ -75,7 +75,7 @@ protected Iterable<Node> getNodes() {\n     }\n \n     @Override\n-    protected boolean matches(SubTask item) {\n+    protected boolean matches(Queue.Item item, SubTask subTask) {\n         return true;\n     }\n "
    },
    {
        "commit_id": "ecac963eaff0608accf950d90d75cff8b66bdc4c",
        "commit_message": "Merge pull request #1596 from stephenc/threadsafe-node-queue\n\n[JENKINS-27565] Fix threading issues with Nodes and Queue",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ecac963eaff0608accf950d90d75cff8b66bdc4c",
        "buggy_code": "return (List)slaves;",
        "fixed_code": "return (List)getNodes();",
        "patch": "@@ -121,7 +121,7 @@ public Slave getSlave(String name) {\n      *      Use {@link #getNodes()}. Since 1.252.\n      */\n     public List<Slave> getSlaves() {\n-        return (List)slaves;\n+        return (List)getNodes();\n     }\n \n     /**"
    },
    {
        "commit_id": "ecac963eaff0608accf950d90d75cff8b66bdc4c",
        "commit_message": "Merge pull request #1596 from stephenc/threadsafe-node-queue\n\n[JENKINS-27565] Fix threading issues with Nodes and Queue",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ecac963eaff0608accf950d90d75cff8b66bdc4c",
        "buggy_code": "replace(\"config.xml\", \"oldLabel\", \"newLabel\");",
        "fixed_code": "replace(node.getNodeName().equals(\"\") ? \"config.xml\" : String.format(\"nodes/%s/config.xml\",node.getNodeName()), \"oldLabel\", \"newLabel\");",
        "patch": "@@ -47,7 +47,7 @@ public void reloadSlaveConfig() throws Exception {\n     }\n \n     private void modifyNode(Node node) throws Exception {\n-        replace(\"config.xml\", \"oldLabel\", \"newLabel\");\n+        replace(node.getNodeName().equals(\"\") ? \"config.xml\" : String.format(\"nodes/%s/config.xml\",node.getNodeName()), \"oldLabel\", \"newLabel\");\n \n         assertEquals(\"oldLabel\", node.getLabelString());\n "
    },
    {
        "commit_id": "027b8a9b37a461e1b7c411af37ff6c976f7d4f8d",
        "commit_message": "fix failing tests (hopefully)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/027b8a9b37a461e1b7c411af37ff6c976f7d4f8d",
        "buggy_code": "replace(\"config.xml\", \"oldLabel\", \"newLabel\");",
        "fixed_code": "replace(String.format(\"nodes/%s/config.xml\",node.getNodeName()), \"oldLabel\", \"newLabel\");",
        "patch": "@@ -47,7 +47,7 @@ public void reloadSlaveConfig() throws Exception {\n     }\n \n     private void modifyNode(Node node) throws Exception {\n-        replace(\"config.xml\", \"oldLabel\", \"newLabel\");\n+        replace(String.format(\"nodes/%s/config.xml\",node.getNodeName()), \"oldLabel\", \"newLabel\");\n \n         assertEquals(\"oldLabel\", node.getLabelString());\n "
    },
    {
        "commit_id": "92147c3597308bc05e6448ccc41409fcc7c05fd7",
        "commit_message": "[FIXED JENKINS-27565] Refactor the Queue and Nodes to use a consistent locking strategy\n\nThe test system I set up to verify resolution of customer(s)' issues driving this change, required\nadditional changes in order to fully resolve the issues at hand. As a result I am bundling these\nchanges:\n\n- Moves nodes to being store in separate config files outside of the main config file (improves performance) [FIXED JENKINS-27562]\n- Makes the Jenkins is loading screen not block on the extensions loading lock [FIXED JENKINS-27563]\n- Removes race condition rendering the list of executors [FIXED JENKINS-27564] [FIXED JENKINS-15355]\n- Tidy up the locks that were causing deadlocks with the once retention strategy in durable tasks [FIXED JENKINS-27476]\n- Remove any requirement from Jenkins Core to lock on the Queue when rendering the Jenkins UI [FIXED-JENKINS-27566]",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/92147c3597308bc05e6448ccc41409fcc7c05fd7",
        "buggy_code": "return (List)slaves;",
        "fixed_code": "return (List)getNodes();",
        "patch": "@@ -121,7 +121,7 @@ public Slave getSlave(String name) {\n      *      Use {@link #getNodes()}. Since 1.252.\n      */\n     public List<Slave> getSlaves() {\n-        return (List)slaves;\n+        return (List)getNodes();\n     }\n \n     /**"
    },
    {
        "commit_id": "3344c23a0ea3963e572b02c73d68efd3c1addb76",
        "commit_message": "Fix mime tipe with JSONP\n\nUsing https://github.com/stapler/stapler/pull/45 if the request contain jsonp parameter send the correct MIME type to avoid the error:\r\nRefused to execute script from 'JENKINS_URL' because its MIME type ('application/json') is not executable, and strict MIME type checking is enabled.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3344c23a0ea3963e572b02c73d68efd3c1addb76",
        "buggy_code": "rsp.serveExposedBean(req,bean, Flavor.JSON);",
        "fixed_code": "rsp.serveExposedBean(req,bean, req.getParameter(\"jsonp\") == null ? Flavor.JSON : Flavor.JSONP);",
        "patch": "@@ -208,7 +208,7 @@ public void doSchema(StaplerRequest req, StaplerResponse rsp) throws IOException\n     public void doJson(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {\n         if (req.getParameter(\"jsonp\") == null || permit(req)) {\n             setHeaders(rsp);\n-            rsp.serveExposedBean(req,bean, Flavor.JSON);\n+            rsp.serveExposedBean(req,bean, req.getParameter(\"jsonp\") == null ? Flavor.JSON : Flavor.JSONP);\n         } else {\n             rsp.sendError(HttpURLConnection.HTTP_FORBIDDEN, \"jsonp forbidden; implement jenkins.security.SecureRequester\");\n         }"
    },
    {
        "commit_id": "17baaf7151fb3dbb5c7c79ac61a3bf2769dd82f6",
        "commit_message": "Merge pull request #1565 from olivergondza/fix-windows-tests\n\nFix few tests on windows",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/17baaf7151fb3dbb5c7c79ac61a3bf2769dd82f6",
        "buggy_code": "? new BatchFile(\"echo %jenkins_19926\")",
        "fixed_code": "? new BatchFile(\"echo %jenkins_19926%\")",
        "patch": "@@ -82,7 +82,7 @@ public void overwriteSystemEnvVars() throws Exception {\n         FreeStyleProject project = rule.createFreeStyleProject();\n         project.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition(\"jenkins_19926\", \"${jenkins_19926} and new value\")));\n         final CommandInterpreter script = Functions.isWindows()\n-                ? new BatchFile(\"echo %jenkins_19926\")\n+                ? new BatchFile(\"echo %jenkins_19926%\")\n                 : new Shell(\"echo ${jenkins_19926}\")\n         ;\n         project.getBuildersList().add(script);"
    },
    {
        "commit_id": "09c04e3b666ef0832201d4433326b35b4bf84991",
        "commit_message": "Resolve feedback on SECURITY-165",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/09c04e3b666ef0832201d4433326b35b4bf84991",
        "buggy_code": "public static final String[] ILLEGAL_PERSISTED_USERNAMES = new String[]{\"anonymous\", \"system\", \"unknown\"};",
        "fixed_code": "private static final String[] ILLEGAL_PERSISTED_USERNAMES = new String[]{\"anonymous\", \"system\", \"unknown\"};",
        "patch": "@@ -110,7 +110,7 @@ public class User extends AbstractModelObject implements AccessControlled, Descr\n      * These usernames should not be used by real users logging into Jenkins. Therefore, we prevent\n      * users with these names from being saved.\n      */\n-    public static final String[] ILLEGAL_PERSISTED_USERNAMES = new String[]{\"anonymous\", \"system\", \"unknown\"};\n+    private static final String[] ILLEGAL_PERSISTED_USERNAMES = new String[]{\"anonymous\", \"system\", \"unknown\"};\n     private transient final String id;\n \n     private volatile String fullName;"
    },
    {
        "commit_id": "ee309ef92096610259b0ec01e82940ba022bed1a",
        "commit_message": "[JENKINS-22811] Fix log message to report more verbose message.\n\n(cherry picked from commit da1c74f619feea134aa887b1e5b1774307ea0e47)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ee309ef92096610259b0ec01e82940ba022bed1a",
        "buggy_code": "LOGGER.log(Level.SEVERE, \"Error loading transient project action factory.\");",
        "fixed_code": "LOGGER.log(Level.SEVERE, \"Could not load actions from \" + tpaf + \" for \" + this, e);",
        "patch": "@@ -755,7 +755,7 @@ protected List<Action> createTransientActions() {\n             try {\n                 ta.addAll(Util.fixNull(tpaf.createFor(this))); // be defensive against null\n             } catch (Exception e) {\n-                LOGGER.log(Level.SEVERE, \"Error loading transient project action factory.\");\n+                LOGGER.log(Level.SEVERE, \"Could not load actions from \" + tpaf + \" for \" + this, e);\n             }\n         }\n         return ta;"
    },
    {
        "commit_id": "ee309ef92096610259b0ec01e82940ba022bed1a",
        "commit_message": "[JENKINS-22811] Fix log message to report more verbose message.\n\n(cherry picked from commit da1c74f619feea134aa887b1e5b1774307ea0e47)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ee309ef92096610259b0ec01e82940ba022bed1a",
        "buggy_code": "LOGGER.log(Level.SEVERE, \"Error loading action.\", e);",
        "fixed_code": "LOGGER.log(Level.SEVERE, \"Could not load actions from \" + taf + \" for \" + this, e);",
        "patch": "@@ -97,7 +97,7 @@ public final List<? extends Action> getAllActions() {\n                 try {\n                     _actions.addAll(createFor(taf));\n                 } catch (Exception e) {\n-                    LOGGER.log(Level.SEVERE, \"Error loading action.\", e);\n+                    LOGGER.log(Level.SEVERE, \"Could not load actions from \" + taf + \" for \" + this, e);\n                 }\n             }\n         }"
    },
    {
        "commit_id": "82e97c4d3a621dbe11d6033cdc213b8f61eed188",
        "commit_message": "Compilability fix.\nFor some reason (probably a mistake), BuildWrapper.Environment is nonstatic.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/82e97c4d3a621dbe11d6033cdc213b8f61eed188",
        "buggy_code": "private static class EnvironmentWrapper extends Environment {",
        "fixed_code": "private class EnvironmentWrapper extends Environment {",
        "patch": "@@ -104,7 +104,7 @@ protected boolean runPreCheckout() {\n         }\n     }\n \n-    private static class EnvironmentWrapper extends Environment {\n+    private class EnvironmentWrapper extends Environment {\n         private final Context c;\n         private final Launcher launcher;\n         EnvironmentWrapper(Context c, Launcher launcher) {"
    },
    {
        "commit_id": "877f4b37ee49e46c6bb6e13536f1f4f53560fa97",
        "commit_message": "Misleading error message.\n(cherry picked from commit e4c5c7104206536c80379ce18ec640f56b7dba74)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/877f4b37ee49e46c6bb6e13536f1f4f53560fa97",
        "buggy_code": "throw new IOException(\"Failed to persist the key: \"+key.getId(),e);",
        "fixed_code": "throw new IOException(\"Failed to load the key: \"+key.getId(),e);",
        "patch": "@@ -106,7 +106,7 @@ protected byte[] load(ConfidentialKey key) throws IOException {\n             byte[] bytes = IOUtils.toByteArray(cis);\n             return verifyMagic(bytes);\n         } catch (GeneralSecurityException e) {\n-            throw new IOException(\"Failed to persist the key: \"+key.getId(),e);\n+            throw new IOException(\"Failed to load the key: \"+key.getId(),e);\n         } finally {\n             IOUtils.closeQuietly(cis);\n             IOUtils.closeQuietly(fis);"
    },
    {
        "commit_id": "da1c74f619feea134aa887b1e5b1774307ea0e47",
        "commit_message": "Fix log message to report more verbose message.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/da1c74f619feea134aa887b1e5b1774307ea0e47",
        "buggy_code": "LOGGER.log(Level.SEVERE, \"Error loading transient project action factory.\");",
        "fixed_code": "LOGGER.log(Level.SEVERE, \"Could not load actions from \" + tpaf + \" for \" + this, e);",
        "patch": "@@ -755,7 +755,7 @@ protected List<Action> createTransientActions() {\n             try {\n                 ta.addAll(Util.fixNull(tpaf.createFor(this))); // be defensive against null\n             } catch (Exception e) {\n-                LOGGER.log(Level.SEVERE, \"Error loading transient project action factory.\");\n+                LOGGER.log(Level.SEVERE, \"Could not load actions from \" + tpaf + \" for \" + this, e);\n             }\n         }\n         return ta;"
    },
    {
        "commit_id": "da1c74f619feea134aa887b1e5b1774307ea0e47",
        "commit_message": "Fix log message to report more verbose message.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/da1c74f619feea134aa887b1e5b1774307ea0e47",
        "buggy_code": "LOGGER.log(Level.SEVERE, \"Error loading action.\", e);",
        "fixed_code": "LOGGER.log(Level.SEVERE, \"Could not load actions from \" + taf + \" for \" + this, e);",
        "patch": "@@ -97,7 +97,7 @@ public final List<? extends Action> getAllActions() {\n                 try {\n                     _actions.addAll(createFor(taf));\n                 } catch (Exception e) {\n-                    LOGGER.log(Level.SEVERE, \"Error loading action.\", e);\n+                    LOGGER.log(Level.SEVERE, \"Could not load actions from \" + taf + \" for \" + this, e);\n                 }\n             }\n         }"
    },
    {
        "commit_id": "84575541491cf44f9b27f867b57bf5f460849d8f",
        "commit_message": "Merge pull request #1518 from darxriggs/Bug-to-Issue\n\nreplace all deprecated @Bug annotations with @Issue",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/84575541491cf44f9b27f867b57bf5f460849d8f",
        "buggy_code": "@Bug(18393)",
        "fixed_code": "@Issue(\"JENKINS-18393\")",
        "patch": "@@ -68,7 +68,7 @@ public void failForNonexistingName() throws Exception {\n \n     /*\n     @Test\n-    @Bug(18393)\n+    @Issue(\"JENKINS-18393\")\n     public void failForMatrixProject() throws Exception {\n \n         final MatrixProject matrix = mock(MatrixProject.class);"
    },
    {
        "commit_id": "84575541491cf44f9b27f867b57bf5f460849d8f",
        "commit_message": "Merge pull request #1518 from darxriggs/Bug-to-Issue\n\nreplace all deprecated @Bug annotations with @Issue",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/84575541491cf44f9b27f867b57bf5f460849d8f",
        "buggy_code": "@Bug(18259)",
        "fixed_code": "@Issue(\"JENKINS-18259\")",
        "patch": "@@ -40,7 +40,7 @@\n  * When using JenkinsRule, the exception is squashed in after(),\r\n  * and does not cause failures.\r\n  */\r\n-@Bug(18259)\r\n+@Issue(\"JENKINS-18259\")\r\n public class HudsonTestCaseShutdownSlaveTest extends HudsonTestCase {\r\n     public void testShutdownSlave() throws Exception {\r\n         DumbSlave slave1 = createOnlineSlave(); // online, and a build finished.\r"
    },
    {
        "commit_id": "bd1d6251e018d09b4f10606d3b418255a4c09513",
        "commit_message": "replace all deprecated @Bug annotations with @Issue",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bd1d6251e018d09b4f10606d3b418255a4c09513",
        "buggy_code": "@Bug(18393)",
        "fixed_code": "@Issue(\"JENKINS-18393\")",
        "patch": "@@ -68,7 +68,7 @@ public void failForNonexistingName() throws Exception {\n \n     /*\n     @Test\n-    @Bug(18393)\n+    @Issue(\"JENKINS-18393\")\n     public void failForMatrixProject() throws Exception {\n \n         final MatrixProject matrix = mock(MatrixProject.class);"
    },
    {
        "commit_id": "bd1d6251e018d09b4f10606d3b418255a4c09513",
        "commit_message": "replace all deprecated @Bug annotations with @Issue",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bd1d6251e018d09b4f10606d3b418255a4c09513",
        "buggy_code": "@Bug(18259)",
        "fixed_code": "@Issue(\"JENKINS-18259\")",
        "patch": "@@ -40,7 +40,7 @@\n  * When using JenkinsRule, the exception is squashed in after(),\r\n  * and does not cause failures.\r\n  */\r\n-@Bug(18259)\r\n+@Issue(\"JENKINS-18259\")\r\n public class HudsonTestCaseShutdownSlaveTest extends HudsonTestCase {\r\n     public void testShutdownSlave() throws Exception {\r\n         DumbSlave slave1 = createOnlineSlave(); // online, and a build finished.\r"
    },
    {
        "commit_id": "9595175f1002e10e4468f6e51f185a5d2b624240",
        "commit_message": "Use JUnit4 in merged patch too",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9595175f1002e10e4468f6e51f185a5d2b624240",
        "buggy_code": "FreeStyleProject p = createFreeStyleProject();",
        "fixed_code": "FreeStyleProject p = r.createFreeStyleProject();",
        "patch": "@@ -571,7 +571,7 @@ public String getDisplayName() {\n \n     public void testWaitForStartAndCancelBeforeStart() throws Exception {\n         final OneShotEvent ev = new OneShotEvent();\n-        FreeStyleProject p = createFreeStyleProject();\n+        FreeStyleProject p = r.createFreeStyleProject();\n \n         QueueTaskFuture<FreeStyleBuild> f = p.scheduleBuild2(10);\n         final Queue.Item item = Queue.getInstance().getItem(p);"
    },
    {
        "commit_id": "5e02457709e72c1577cf9a6a52a6bd9450acd590",
        "commit_message": "Misleading error message.\n(cherry picked from commit e4c5c7104206536c80379ce18ec640f56b7dba74)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5e02457709e72c1577cf9a6a52a6bd9450acd590",
        "buggy_code": "throw new IOException(\"Failed to persist the key: \"+key.getId(),e);",
        "fixed_code": "throw new IOException(\"Failed to load the key: \"+key.getId(),e);",
        "patch": "@@ -106,7 +106,7 @@ protected byte[] load(ConfidentialKey key) throws IOException {\n             byte[] bytes = IOUtils.toByteArray(cis);\n             return verifyMagic(bytes);\n         } catch (GeneralSecurityException e) {\n-            throw new IOException(\"Failed to persist the key: \"+key.getId(),e);\n+            throw new IOException(\"Failed to load the key: \"+key.getId(),e);\n         } finally {\n             IOUtils.closeQuietly(cis);\n             IOUtils.closeQuietly(fis);"
    },
    {
        "commit_id": "0cd13e96703d8a506d75b2b175032e01e82a2989",
        "commit_message": "Compilability fix.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0cd13e96703d8a506d75b2b175032e01e82a2989",
        "buggy_code": "a.put(new Build(7, \"D\"));",
        "fixed_code": "a.put(new Build(7));",
        "patch": "@@ -332,7 +332,7 @@ public void entrySetSize() {\n     @Issue(\"JENKINS-25655\")\n     @Test public void entrySetChanges() {\n         assertEquals(3, a.entrySet().size());\n-        a.put(new Build(7, \"D\"));\n+        a.put(new Build(7));\n         assertEquals(4, a.entrySet().size());\n     }\n "
    },
    {
        "commit_id": "e4c5c7104206536c80379ce18ec640f56b7dba74",
        "commit_message": "Misleading error message.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e4c5c7104206536c80379ce18ec640f56b7dba74",
        "buggy_code": "throw new IOException(\"Failed to persist the key: \"+key.getId(),e);",
        "fixed_code": "throw new IOException(\"Failed to load the key: \"+key.getId(),e);",
        "patch": "@@ -106,7 +106,7 @@ protected byte[] load(ConfidentialKey key) throws IOException {\n             byte[] bytes = IOUtils.toByteArray(cis);\n             return verifyMagic(bytes);\n         } catch (GeneralSecurityException e) {\n-            throw new IOException(\"Failed to persist the key: \"+key.getId(),e);\n+            throw new IOException(\"Failed to load the key: \"+key.getId(),e);\n         } finally {\n             IOUtils.closeQuietly(cis);\n             IOUtils.closeQuietly(fis);"
    },
    {
        "commit_id": "cee15013b41a22a873f4d29088e3b5453d80936a",
        "commit_message": "Keep consistent with LoadStatistics\n\n- There is still the issue with adding isConnecting() polluting the NodeProvisioner, but this is\n  a simple, low risk but important change",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cee15013b41a22a873f4d29088e3b5453d80936a",
        "buggy_code": "if (node != null && node.getMode() == Mode.NORMAL && (c.isOnline() || c.isConnecting())) {",
        "fixed_code": "if (node != null && node.getMode() == Mode.NORMAL && (c.isOnline() || c.isConnecting()) && c.isAcceptingTasks()) {",
        "patch": "@@ -50,7 +50,7 @@ public int computeIdleExecutors() {\n         int r=0;\n         for (Computer c : Jenkins.getInstance().getComputers()) {\n             Node node = c.getNode();\n-            if (node != null && node.getMode() == Mode.NORMAL && (c.isOnline() || c.isConnecting())) {\n+            if (node != null && node.getMode() == Mode.NORMAL && (c.isOnline() || c.isConnecting()) && c.isAcceptingTasks()) {\n                 r += c.countIdle();\n             }\n         }"
    },
    {
        "commit_id": "2750dec317204968ba931ac1910b212fcd151861",
        "commit_message": "Merge pull request #1449 from ndimiduk/log-param-name-with-error\n\nInclude parameter name in exception when value is invalid",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2750dec317204968ba931ac1910b212fcd151861",
        "buggy_code": "throw new IllegalArgumentException(\"Illegal choice: \" + value.value);",
        "fixed_code": "throw new IllegalArgumentException(\"Illegal choice for parameter \" + getName() + \": \" + value.value);",
        "patch": "@@ -72,7 +72,7 @@ public StringParameterValue getDefaultParameterValue() {\n \n     private StringParameterValue checkValue(StringParameterValue value) {\n         if (!choices.contains(value.value))\n-            throw new IllegalArgumentException(\"Illegal choice: \" + value.value);\n+            throw new IllegalArgumentException(\"Illegal choice for parameter \" + getName() + \": \" + value.value);\n         return value;\n     }\n "
    },
    {
        "commit_id": "9342558ab1959382463d8ba423d4739fc323feb5",
        "commit_message": "Based on a discussion with Daniel Beck, implemented a master kill switch as an admin configurable feature.\n\nThe wiki page already talks about how an admin can do this: https://wiki.jenkins-ci.org/display/JENKINS/Slave+To+Master+Access+Control#SlaveToMasterAccessControl-Disabletheaccesscontrolmechanismaltogether\n\nThere's a risk in making this too easy, but we keep finding more plugins that need SECURITY-144 adjustments, and I'm really worried\nabout SECURITY-144 fix blowing up in the face of too many people.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9342558ab1959382463d8ba423d4739fc323feb5",
        "buggy_code": "return rule.filePathRules.checkFileAccess(op,path);",
        "fixed_code": "return rule.checkFileAccess(op,path);",
        "patch": "@@ -29,7 +29,7 @@ public AdminFilePathFilter(AdminWhitelistRule rule) {\n \n     @Override\n     protected boolean op(String op, File path) throws SecurityException {\n-        return rule.filePathRules.checkFileAccess(op,path);\n+        return rule.checkFileAccess(op,path);\n     }\n \n     @Extension"
    },
    {
        "commit_id": "698858fd9264c7213d4227ac00a8c045f96e0ce7",
        "commit_message": "Changes in remoting make wrapping IOException less necessary.\nStill do it so we capture FilePath.remote (which many JRE methods suppress),\nbut fix the wrapper Throwable.message to include cause.toString() according to convention.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/698858fd9264c7213d4227ac00a8c045f96e0ce7",
        "buggy_code": "throw new IOException2(\"remote file operation failed: \"+remote+\" at \"+channel,e);",
        "fixed_code": "throw new IOException(\"remote file operation failed: \" + remote + \" at \" + channel + \": \" + e, e);",
        "patch": "@@ -943,7 +943,7 @@ private <T> T act(final FileCallable<T> callable, ClassLoader cl) throws IOExcep\n                 throw e;    // pass through so that the caller can catch it as AbortException\n             } catch (IOException e) {\n                 // wrap it into a new IOException so that we get the caller's stack trace as well.\n-                throw new IOException2(\"remote file operation failed: \"+remote+\" at \"+channel,e);\n+                throw new IOException(\"remote file operation failed: \" + remote + \" at \" + channel + \": \" + e, e);\n             }\n         } else {\n             // the file is on the local machine."
    },
    {
        "commit_id": "e47dc1d5551bee290b31916b291f20c0840e3379",
        "commit_message": "I'm begging Jesse to keep those properties modifiable at runtime!\n\nIt would just provide so much flexibility that would come in handy for operators.\n\n  - One can control this feature from $JENKINS_HOME/groovy.init.d/*.groovy. When these are managed by Chef/puppet,\n    this make it very clean to apply this as a patch.\n  - The log file is getting too big and wants to rotate? No problem with quick groovy script from the console\n    (or from CLI if you need to do the same with 12 masters)\n  - Shipping the log over to network instead of local file? No problem!\n\nI thought your primary concern of field being unreachable from outside is already addressed via @Restricted(NoExternalUse).",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e47dc1d5551bee290b31916b291f20c0840e3379",
        "buggy_code": "private static final PrintWriter BYPASS_LOG;",
        "fixed_code": "public static PrintWriter BYPASS_LOG;",
        "patch": "@@ -51,7 +51,7 @@ public class CallableDirectionChecker extends RoleChecker {\n     /**\n      * Test feature that is meant to replace all logging, and log what would have been violations.\n      */\n-    private static final PrintWriter BYPASS_LOG;\n+    public static PrintWriter BYPASS_LOG;\n \n     static {\n         String log = System.getProperty(CallableDirectionChecker.class.getName()+\".log\");"
    },
    {
        "commit_id": "253943e13ef16a9e14b71ef07a30e51e6a66e38f",
        "commit_message": "[JENKINS-5756] Removing workarounds for HotSpot bug.\nhttps://bugs.openjdk.java.net/browse/JDK-6933067 claims to be fixed as of Java 6, our baseline.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/253943e13ef16a9e14b71ef07a30e51e6a66e38f",
        "buggy_code": "r.addAll(finder._find(type, hudson));",
        "fixed_code": "r.addAll(finder.find(type, hudson));",
        "patch": "@@ -340,7 +340,7 @@ public <T> List<ExtensionComponent<T>> findComponents(Class<T> type, Hudson huds\n         List<ExtensionComponent<T>> r = Lists.newArrayList();\n         for (ExtensionFinder finder : finders) {\n             try {\n-                r.addAll(finder._find(type, hudson));\n+                r.addAll(finder.find(type, hudson));\n             } catch (AbstractMethodError e) {\n                 // backward compatibility\n                 for (T t : finder.findExtensions(type, hudson))"
    },
    {
        "commit_id": "253943e13ef16a9e14b71ef07a30e51e6a66e38f",
        "commit_message": "[JENKINS-5756] Removing workarounds for HotSpot bug.\nhttps://bugs.openjdk.java.net/browse/JDK-6933067 claims to be fixed as of Java 6, our baseline.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/253943e13ef16a9e14b71ef07a30e51e6a66e38f",
        "buggy_code": "baseline = getScm()._calcRevisionsFromBuild(build, launcher, listener);",
        "fixed_code": "baseline = getScm().calcRevisionsFromBuild(build, launcher, listener);",
        "patch": "@@ -1266,7 +1266,7 @@ private void calcPollingBaseline(AbstractBuild build, Launcher launcher, TaskLis\n         SCMRevisionState baseline = build.getAction(SCMRevisionState.class);\n         if (baseline==null) {\n             try {\n-                baseline = getScm()._calcRevisionsFromBuild(build, launcher, listener);\n+                baseline = getScm().calcRevisionsFromBuild(build, launcher, listener);\n             } catch (AbstractMethodError e) {\n                 baseline = SCMRevisionState.NONE; // pre-1.345 SCM implementations, which doesn't use the baseline in polling\n             }"
    },
    {
        "commit_id": "a2341e6b4c854a0cc183b601acdba7572ad79152",
        "commit_message": "[FIXED JENKINS-24251] Do not issue bogus warning about missing default JDK.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a2341e6b4c854a0cc183b601acdba7572ad79152",
        "buggy_code": "} else if (jdk != null) {",
        "fixed_code": "} else if (jdk != null && !jdk.equals(JDK.DEFAULT_NAME)) {",
        "patch": "@@ -350,7 +350,7 @@ public EnvVars getEnvironment(Node node, TaskListener listener) throws IOExcepti\n                 jdkTool = jdkTool.forNode(node, listener);\n             }\n             jdkTool.buildEnvVars(env);\n-        } else if (jdk != null) {\n+        } else if (jdk != null && !jdk.equals(JDK.DEFAULT_NAME)) {\n             listener.getLogger().println(\"No JDK named \u2018\" + jdk + \"\u2019 found\");\n         }\n "
    },
    {
        "commit_id": "a2341e6b4c854a0cc183b601acdba7572ad79152",
        "commit_message": "[FIXED JENKINS-24251] Do not issue bogus warning about missing default JDK.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a2341e6b4c854a0cc183b601acdba7572ad79152",
        "buggy_code": "if(!value.equals(\"(Default)\"))",
        "fixed_code": "if(!value.equals(JDK.DEFAULT_NAME))",
        "patch": "@@ -3598,7 +3598,7 @@ public void doWorkspaceCleanup(StaplerResponse rsp) throws IOException {\n      * If the user chose the default JDK, make sure we got 'java' in PATH.\n      */\n     public FormValidation doDefaultJDKCheck(StaplerRequest request, @QueryParameter String value) {\n-        if(!value.equals(\"(Default)\"))\n+        if(!value.equals(JDK.DEFAULT_NAME))\n             // assume the user configured named ones properly in system config ---\n             // or else system config should have reported form field validation errors.\n             return FormValidation.ok();"
    },
    {
        "commit_id": "7a43fdfa2c336ff7909f98c7fcbfb6302eea3fe0",
        "commit_message": "Reverting portions of patch that were moved to junit-plugin.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7a43fdfa2c336ff7909f98c7fcbfb6302eea3fe0",
        "buggy_code": "hudson.tasks.junit.TestResult result = (new JUnitParser()).parseResult( testResultLocation, build, build.getWorkspace(), launcher, listener);",
        "fixed_code": "hudson.tasks.junit.TestResult result = (new JUnitParser()).parse( testResultLocation, build, launcher, listener);",
        "patch": "@@ -66,7 +66,7 @@ public boolean perform(AbstractBuild<?, ?> build,\n             }\n \n             System.out.println(\"...touched everything\");\n-            hudson.tasks.junit.TestResult result = (new JUnitParser()).parseResult( testResultLocation, build, build.getWorkspace(), launcher, listener);\n+            hudson.tasks.junit.TestResult result = (new JUnitParser()).parse( testResultLocation, build, launcher, listener);\n \n             System.out.println(\"back from parse\");\n             assertNotNull(\"we should have a non-null result\", result);"
    },
    {
        "commit_id": "c57761a308777b34861b7452e8c84917d3bf2e61",
        "commit_message": "Fix typo in test name",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c57761a308777b34861b7452e8c84917d3bf2e61",
        "buggy_code": "public void testEncyrpt() throws Throwable {",
        "fixed_code": "public void testEncrypt() throws Throwable {",
        "patch": "@@ -28,7 +28,7 @@ public void setUp() throws IOException {\n     }\n \n     @Test\n-    public void testEncyrpt() throws Throwable {\n+    public void testEncrypt() throws Throwable {\n         final SecretKey sessionKey = new SecretKeySpec(new byte[16],\"AES\");\n \n         Thread t1 = new Thread() {"
    },
    {
        "commit_id": "3ddef512b21b336e2911598ad3f62def62cb0e18",
        "commit_message": "Fix of JENKINS-8408 broke some tests of workspace-based polling; disable the fix when inside a test, for better predictability.\n(Ideally Jenkins would actually detect whether there was a *plan* to connect a slave of a given name.)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3ddef512b21b336e2911598ad3f62def62cb0e18",
        "buggy_code": "if (remaining>0) {",
        "fixed_code": "if (remaining>0 && /* this logic breaks tests of polling */!Functions.getIsUnitTest()) {",
        "patch": "@@ -1380,7 +1380,7 @@ private PollingResult _poll(TaskListener listener, SCM scm) throws IOException,\n                 // give time for slaves to come online if we are right after reconnection (JENKINS-8408)\n                 long running = Jenkins.getInstance().getInjector().getInstance(Uptime.class).getUptime();\n                 long remaining = TimeUnit2.MINUTES.toMillis(10)-running;\n-                if (remaining>0) {\n+                if (remaining>0 && /* this logic breaks tests of polling */!Functions.getIsUnitTest()) {\n                     listener.getLogger().print(Messages.AbstractProject_AwaitingWorkspaceToComeOnline(remaining/1000));\n                     listener.getLogger().println( \" (\" + workspaceOfflineReason.name() + \")\");\n                     return NO_CHANGES;"
    },
    {
        "commit_id": "4af464a624ee88d479a77f401be9d4f10ffaa791",
        "commit_message": "Merge pull request #576 from JoelJ/patch-2\n\n[FIXED JENKINS-18626] - Test result page keeps identifying tests as age 1",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4af464a624ee88d479a77f401be9d4f10ffaa791",
        "buggy_code": "this.failedSince = prev.failedSince;",
        "fixed_code": "this.failedSince = prev.getFailedSince();",
        "patch": "@@ -373,7 +373,7 @@ public int getFailedSince() {\n         if (failedSince==0 && getFailCount()==1) {\n             CaseResult prev = getPreviousResult();\n             if(prev!=null && !prev.isPassed())\n-                this.failedSince = prev.failedSince;\n+                this.failedSince = prev.getFailedSince();\n             else if (getOwner() != null) {\n                 this.failedSince = getOwner().getNumber();\n             } else {"
    },
    {
        "commit_id": "d5fc738e636f74856b95ddb26417a0c2ae020dfa",
        "commit_message": "Merge pull request #1249 from daniel-beck/JENKINS-8358\n\n[FIX JENKINS-8358] Use DISABLED_ANIME icon while building",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d5fc738e636f74856b95ddb26417a0c2ae020dfa",
        "buggy_code": "return BallColor.DISABLED;",
        "fixed_code": "return isBuilding() ? BallColor.DISABLED_ANIME : BallColor.DISABLED;",
        "patch": "@@ -722,7 +722,7 @@ public void enable() throws IOException {\n     @Override\n     public BallColor getIconColor() {\n         if(isDisabled())\n-            return BallColor.DISABLED;\n+            return isBuilding() ? BallColor.DISABLED_ANIME : BallColor.DISABLED;\n         else\n             return super.getIconColor();\n     }"
    },
    {
        "commit_id": "3ddd2b0c0876239316b5cfc6bca497821bd200b8",
        "commit_message": "[FIX JENKINS-22818] fix jenkins restart on Linux after plugin update if the java executable running Jenkins is started without its full path\n\nThe patch uses 'execvp' instead of 'execv' to lookup the java executable filename in the PATH if the specified filename does not contain a slash (/) character.\nRegression introduced in 547d4ed8d35de6be4b2788e4816019bb8cc94902",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3ddd2b0c0876239316b5cfc6bca497821bd200b8",
        "buggy_code": "LIBC.execv(exe, new StringArray(args.toArray(new String[args.size()])));",
        "fixed_code": "LIBC.execvp(exe, new StringArray(args.toArray(new String[args.size()])));",
        "patch": "@@ -80,7 +80,7 @@ public void restart() throws IOException, InterruptedException {\n \n         // exec to self\n         String exe = args.get(0);\n-        LIBC.execv(exe, new StringArray(args.toArray(new String[args.size()])));\n+        LIBC.execvp(exe, new StringArray(args.toArray(new String[args.size()])));\n         throw new IOException(\"Failed to exec '\"+exe+\"' \"+LIBC.strerror(Native.getLastError()));\n     }\n "
    },
    {
        "commit_id": "916340750e5b1588248a92e7d6730c62e5978552",
        "commit_message": "[FIX JENKINS-8358] Use DISABLED_ANIME icon while building",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/916340750e5b1588248a92e7d6730c62e5978552",
        "buggy_code": "return BallColor.DISABLED;",
        "fixed_code": "return isBuilding() ? BallColor.DISABLED_ANIME : BallColor.DISABLED;",
        "patch": "@@ -721,7 +721,7 @@ public void enable() throws IOException {\n     @Override\n     public BallColor getIconColor() {\n         if(isDisabled())\n-            return BallColor.DISABLED;\n+            return isBuilding() ? BallColor.DISABLED_ANIME : BallColor.DISABLED;\n         else\n             return super.getIconColor();\n     }"
    },
    {
        "commit_id": "b3109de4bb174dacbc78d7c76100334c46f1ce11",
        "commit_message": "Merge branch 'fix' of github.com:KostyaSha/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b3109de4bb174dacbc78d7c76100334c46f1ce11",
        "buggy_code": "Class clazz = Class.forName(className);",
        "fixed_code": "Class clazz = Class.forName(className, true, Jenkins.getInstance().getPluginManager().uberClassLoader);",
        "patch": "@@ -46,7 +46,7 @@ public boolean configure(StaplerRequest req, JSONObject json) throws hudson.mode\n             final JSONObject strategyObject = optJSONObject.getJSONObject(\"namingStrategy\");\n             final String className = strategyObject.getString(\"stapler-class\");\n             try {\n-                Class clazz = Class.forName(className);\n+                Class clazz = Class.forName(className, true, Jenkins.getInstance().getPluginManager().uberClassLoader);\n                 final ProjectNamingStrategy strategy = (ProjectNamingStrategy) req.bindJSON(clazz, strategyObject);\n                 j.setProjectNamingStrategy(strategy);\n             } catch (ClassNotFoundException e) {"
    },
    {
        "commit_id": "703c7ad9e0f31be09331fd4562a6731af0f5d73b",
        "commit_message": "Fix test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/703c7ad9e0f31be09331fd4562a6731af0f5d73b",
        "buggy_code": "assertEquals(\"~john.~smith$0040acme.org\", User.idStrategy().filenameOf(user2.getId()));",
        "fixed_code": "assertEquals(\"~john.~smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));",
        "patch": "@@ -207,7 +207,7 @@ public IdStrategy getUserIdStrategy() {\n         assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user.getId()));\n         assertEquals(\"john.smith@acme.org\", User.idStrategy().filenameOf(user.getId()));\n         assertEquals(\"John.Smith@acme.org\", User.idStrategy().keyFor(user2.getId()));\n-        assertEquals(\"~john.~smith$0040acme.org\", User.idStrategy().filenameOf(user2.getId()));\n+        assertEquals(\"~john.~smith@acme.org\", User.idStrategy().filenameOf(user2.getId()));\n         user2 = User.get(\"john.smith@ACME.ORG\");\n         assertEquals(\"Users should have the same id.\", user.getId(), user2.getId());\n         assertEquals(\"john.smith@acme.org\", User.idStrategy().keyFor(user2.getId()));"
    },
    {
        "commit_id": "b6b7bfd27c9b5551fde04416ee9b7b5faf16ad99",
        "commit_message": "[FIXED JENKINS-22681] Fix of JENKINS-19418 should have used getById, not load, to avoid reloading the last build gratuitously.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b6b7bfd27c9b5551fde04416ee9b7b5faf16ad99",
        "buggy_code": "R r = load(idOnDisk.get(hi-1), null);",
        "fixed_code": "R r = getById(idOnDisk.get(hi-1));",
        "patch": "@@ -509,7 +509,7 @@ public R get(int n) {\n             return getById(idOnDisk.get(lo-1));\n         case EXACT:\n             if (hi<=0)                 return null;\n-            R r = load(idOnDisk.get(hi-1), null);\n+            R r = getById(idOnDisk.get(hi-1));\n             if (r==null)               return null;\n \n             int found = getNumberOf(r);"
    },
    {
        "commit_id": "16143d03259372fabc3121d9e00e9bd91f6fca7d",
        "commit_message": "Merge pull request #1192 from ydubreuil/fix-restart-after-jre-system-update\n\nFix jenkins restart on Linux after a JRE system update",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/16143d03259372fabc3121d9e00e9bd91f6fca7d",
        "buggy_code": "String exe = Daemon.getCurrentExecutable();",
        "fixed_code": "String exe = args.get(0);",
        "patch": "@@ -79,7 +79,7 @@ public void restart() throws IOException, InterruptedException {\n         }\n \n         // exec to self\n-        String exe = Daemon.getCurrentExecutable();\n+        String exe = args.get(0);\n         LIBC.execv(exe, new StringArray(args.toArray(new String[args.size()])));\n         throw new IOException(\"Failed to exec '\"+exe+\"' \"+LIBC.strerror(Native.getLastError()));\n     }"
    },
    {
        "commit_id": "547d4ed8d35de6be4b2788e4816019bb8cc94902",
        "commit_message": "Fix jenkins restart on Linux after a JRE system update\n\nDaemon.getCurrentExecutable() use /proc/PID/exe to retrieve the used JRE. This link is broken when the target changes (ie after a JRE system update) because the kernel appends ' (deleted)' to the symlink. This patch uses the first argument of the command line (in /proc/PID/cmdline) instead.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/547d4ed8d35de6be4b2788e4816019bb8cc94902",
        "buggy_code": "String exe = Daemon.getCurrentExecutable();",
        "fixed_code": "String exe = args.get(0);",
        "patch": "@@ -79,7 +79,7 @@ public void restart() throws IOException, InterruptedException {\n         }\n \n         // exec to self\n-        String exe = Daemon.getCurrentExecutable();\n+        String exe = args.get(0);\n         LIBC.execv(exe, new StringArray(args.toArray(new String[args.size()])));\n         throw new IOException(\"Failed to exec '\"+exe+\"' \"+LIBC.strerror(Native.getLastError()));\n     }"
    },
    {
        "commit_id": "accc0e59d3d7ced94de357be4a8009a1005dd03d",
        "commit_message": "NPE fix",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/accc0e59d3d7ced94de357be4a8009a1005dd03d",
        "buggy_code": "return new org.acegisecurity.userdetails.User(username,null,true,true,true,true,",
        "fixed_code": "return new org.acegisecurity.userdetails.User(username,\"\",true,true,true,true,",
        "patch": "@@ -43,7 +43,7 @@ protected UserDetails attemptToImpersonate(String username, RuntimeException e)\n         if (u!=null) {\n             LastGrantedAuthoritiesProperty p = u.getProperty(LastGrantedAuthoritiesProperty.class);\n             if (p!=null)\n-                return new org.acegisecurity.userdetails.User(username,null,true,true,true,true,\n+                return new org.acegisecurity.userdetails.User(username,\"\",true,true,true,true,\n                         p.getAuthorities());\n         }\n "
    },
    {
        "commit_id": "00d27176f3a452e38bd0caafebe78c7bc2fa822f",
        "commit_message": "[FIXED JENKINS-22001] Simpler fix of JENKINS-19446 that does not introduce asynchronous behavior.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/00d27176f3a452e38bd0caafebe78c7bc2fa822f",
        "buggy_code": "@Override public synchronized void delete() throws IOException, InterruptedException {",
        "fixed_code": "@Override public void delete() throws IOException, InterruptedException {",
        "patch": "@@ -617,7 +617,7 @@ public void renameTo(String newName) throws IOException {\n         }\n     }\n \n-    @Override public synchronized void delete() throws IOException, InterruptedException {\n+    @Override public void delete() throws IOException, InterruptedException {\n         super.delete();\n         Util.deleteRecursive(getBuildDir());\n     }"
    },
    {
        "commit_id": "4effdb0da5e89f96b791a66b68685658ea5d805a",
        "commit_message": "Merge pull request #1118 from daniel-beck/fix-ooom-message\n\n[FIXED JENKINS-20730] Use correct folder in log message",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4effdb0da5e89f96b791a66b68685658ea5d805a",
        "buggy_code": "listener.getLogger().println(\"Renaming \"+dir);",
        "fixed_code": "listener.getLogger().println(\"Renaming \"+buildDir);",
        "patch": "@@ -89,7 +89,7 @@ public void fix(TaskListener listener) throws IOException, InterruptedException\n         File dir = new File(job.getRootDir(), \"outOfOrderBuilds\");\n         dir.mkdirs();\n         File dst = new File(dir, buildDir.getName());\n-        listener.getLogger().println(\"Renaming \"+dir);\n+        listener.getLogger().println(\"Renaming \"+buildDir);\n         listener.getLogger().println(\"  -> \"+dst);\n         if (!buildDir.renameTo(dst)) {\n             FilePath bd = new FilePath(buildDir);"
    },
    {
        "commit_id": "380dad924e5321c8346fb820912033dc9a7efa28",
        "commit_message": "Merge pull request #1109 from olivergondza/JENKINS-21474\n\n[JENKINS-21474] Fix NPE in View.getComputers()",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/380dad924e5321c8346fb820912033dc9a7efa28",
        "buggy_code": "public Label getAssignedLabel() {",
        "fixed_code": "public @CheckForNull Label getAssignedLabel() {",
        "patch": "@@ -401,7 +401,7 @@ public void setConcurrentBuild(boolean b) throws IOException {\n      * If this project is configured to be always built on this node,\n      * return that {@link Node}. Otherwise null.\n      */\n-    public Label getAssignedLabel() {\n+    public @CheckForNull Label getAssignedLabel() {\n         if(canRoam)\n             return null;\n "
    },
    {
        "commit_id": "380dad924e5321c8346fb820912033dc9a7efa28",
        "commit_message": "Merge pull request #1109 from olivergondza/JENKINS-21474\n\n[JENKINS-21474] Fix NPE in View.getComputers()",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/380dad924e5321c8346fb820912033dc9a7efa28",
        "buggy_code": "if (l.contains(node))",
        "fixed_code": "if (l != null && l.contains(node))",
        "patch": "@@ -448,7 +448,7 @@ private boolean isRelevant(Collection<Label> labels, Computer computer) {\n         if (labels.contains(null) && node.getMode() == Mode.NORMAL) return true;\n \n         for (Label l : labels)\n-            if (l.contains(node))\n+            if (l != null && l.contains(node))\n                 return true;\n         return false;\n     }"
    },
    {
        "commit_id": "e31f8dc2d361990194cb559395c55866092b35cb",
        "commit_message": "[JENKINS-21474] Fix NPE in View.getComputers()",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e31f8dc2d361990194cb559395c55866092b35cb",
        "buggy_code": "public Label getAssignedLabel() {",
        "fixed_code": "public @CheckForNull Label getAssignedLabel() {",
        "patch": "@@ -401,7 +401,7 @@ public void setConcurrentBuild(boolean b) throws IOException {\n      * If this project is configured to be always built on this node,\n      * return that {@link Node}. Otherwise null.\n      */\n-    public Label getAssignedLabel() {\n+    public @CheckForNull Label getAssignedLabel() {\n         if(canRoam)\n             return null;\n "
    },
    {
        "commit_id": "e31f8dc2d361990194cb559395c55866092b35cb",
        "commit_message": "[JENKINS-21474] Fix NPE in View.getComputers()",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e31f8dc2d361990194cb559395c55866092b35cb",
        "buggy_code": "if (l.contains(node))",
        "fixed_code": "if (l != null && l.contains(node))",
        "patch": "@@ -448,7 +448,7 @@ private boolean isRelevant(Collection<Label> labels, Computer computer) {\n         if (labels.contains(null) && node.getMode() == Mode.NORMAL) return true;\n \n         for (Label l : labels)\n-            if (l.contains(node))\n+            if (l != null && l.contains(node))\n                 return true;\n         return false;\n     }"
    },
    {
        "commit_id": "22f2238b23312a54e8e07d6100446d30bfc67d0a",
        "commit_message": "[JENKINS-16417]\n\nMy recommended fix in response to https://github.com/jenkinsci/jenkins/pull/1093. This does not eliminate nor exclude the need for more generic pluggability, but it would at least address the security concern.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/22f2238b23312a54e8e07d6100446d30bfc67d0a",
        "buggy_code": "checkPermission(UPDATE);",
        "fixed_code": "checkPermission(newValue ? UPDATE : DELETE);",
        "patch": "@@ -2086,7 +2086,7 @@ public final void keepLog() throws IOException {\n     }\n \n     public void keepLog(boolean newValue) throws IOException {\n-        checkPermission(UPDATE);\n+        checkPermission(newValue ? UPDATE : DELETE);\n         keepLog = newValue;\n         save();\n     }"
    },
    {
        "commit_id": "bfaab5118d079405b82b80301d90e19f39970366",
        "commit_message": "[JENKINS-18410] NPE from previous fix (fcdf749) under some conditions, which the test case was not exercising.\njava.lang.NullPointerException\n\tat hudson.tasks.test.AggregatedTestResultPublisher$TestResultAction.getProject(AggregatedTestResultPublisher.java:173)\n\tat hudson.tasks.test.AggregatedTestResultPublisher$TestResultAction.<init>(AggregatedTestResultPublisher.java:146)\n\tat hudson.tasks.test.AggregatedTestResultPublisher$TestResultAction.<init>(AggregatedTestResultPublisher.java:135)\n\tat hudson.tasks.test.AggregatedTestResultPublisher.perform(AggregatedTestResultPublisher.java:90)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bfaab5118d079405b82b80301d90e19f39970366",
        "buggy_code": "upstreamProject.getPublishersList().add(new AggregatedTestResultPublisher(TEST_PROJECT_NAME));",
        "fixed_code": "upstreamProject.getPublishersList().add(new AggregatedTestResultPublisher(null));",
        "patch": "@@ -167,7 +167,7 @@ private void createDownstreamProjectWithNoTests() throws Exception {\n         addFingerprinterToProject(downstreamProject, singleContents, singleFiles);\n \n         upstreamProject.getPublishersList().add(new BuildTrigger(ImmutableList.of(downstreamProject), Result.SUCCESS));\n-        upstreamProject.getPublishersList().add(new AggregatedTestResultPublisher(TEST_PROJECT_NAME));\n+        upstreamProject.getPublishersList().add(new AggregatedTestResultPublisher(null));\n \n         j.jenkins.rebuildDependencyGraph();\n     }"
    },
    {
        "commit_id": "6a9ce7f9332bddfcf92805ade444583bb5067e77",
        "commit_message": "Incorrect filename in error.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6a9ce7f9332bddfcf92805ade444583bb5067e77",
        "buggy_code": "throw new IOException(\"Failed to persist configuration.xml\", e);",
        "fixed_code": "throw new IOException(\"Failed to persist config.xml\", e);",
        "patch": "@@ -588,7 +588,7 @@ public void updateByXml(Source source) throws IOException {\n                         new StreamResult(out));\n                 out.close();\n             } catch (TransformerException e) {\n-                throw new IOException(\"Failed to persist configuration.xml\", e);\n+                throw new IOException(\"Failed to persist config.xml\", e);\n             }\n \n             // try to reflect the changes by reloading"
    },
    {
        "commit_id": "9f23c0bdb3a3ed6485e161ff5c57ebba64f88035",
        "commit_message": "JavaScript error when showing a FormException after Apply is clicked. Related to JENKINS-20772 but probably not the same.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9f23c0bdb3a3ed6485e161ff5c57ebba64f88035",
        "buggy_code": "FormApply.applyResponse(\"notificationBar.show(\" + quote(getMessage())+ \",notificationBar.defaultOptions.ERROR)\")",
        "fixed_code": "FormApply.applyResponse(\"notificationBar.show(\" + quote(getMessage())+ \",notificationBar.ERROR)\")",
        "patch": "@@ -967,7 +967,7 @@ public String getFormField() {\n \n         public void generateResponse(StaplerRequest req, StaplerResponse rsp, Object node) throws IOException, ServletException {\n             if (FormApply.isApply(req)) {\n-                FormApply.applyResponse(\"notificationBar.show(\" + quote(getMessage())+ \",notificationBar.defaultOptions.ERROR)\")\n+                FormApply.applyResponse(\"notificationBar.show(\" + quote(getMessage())+ \",notificationBar.ERROR)\")\n                         .generateResponse(req, rsp, node);\n             } else {\n                 // for now, we can't really use the field name that caused the problem."
    },
    {
        "commit_id": "c5e23739fa85a6fe93ad90a35da4051a2767c874",
        "commit_message": "[JENKINS-20892] Partial fix of poor scalability in /builds and related displays.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c5e23739fa85a6fe93ad90a35da4051a2767c874",
        "buggy_code": "for (Run r : getBuilds()) {",
        "fixed_code": "for (Run r : getNewBuilds()) {",
        "patch": "@@ -1269,7 +1269,7 @@ public String toString() {\n                 }\n \n                 DataSetBuilder<String, ChartLabel> data = new DataSetBuilder<String, ChartLabel>();\n-                for (Run r : getBuilds()) {\n+                for (Run r : getNewBuilds()) {\n                     if (r.isBuilding())\n                         continue;\n                     data.add(((double) r.getDuration()) / (1000 * 60), \"min\","
    },
    {
        "commit_id": "67f2fe64098f0ff683d2242d48a272a1bfbb3488",
        "commit_message": "Merge pull request #1034 from daniel-beck/fix-copy-job-command\n\n[FIXED JENKINS-20744] Don't hold off building jobs copied from CLI",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/67f2fe64098f0ff683d2242d48a272a1bfbb3488",
        "buggy_code": "ig.copy(src,dst);",
        "fixed_code": "ig.copy(src,dst).save();",
        "patch": "@@ -75,7 +75,7 @@ protected int run() throws Exception {\n             dst = dst.substring(i + 1);\n         }\n \n-        ig.copy(src,dst);\n+        ig.copy(src,dst).save();\n         return 0;\n     }\n }"
    },
    {
        "commit_id": "37d2575f6b11234a37d45695c05e4f95a6faefa2",
        "commit_message": "[JENKINS-18922] Trying to make this error (missing maven-plugin) nonfatal during startup.\nMay not suffice: a fatal error may simply be thrown later on.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/37d2575f6b11234a37d45695c05e4f95a6faefa2",
        "buggy_code": "@Initializer(after=PLUGINS_STARTED)",
        "fixed_code": "@Initializer(after=PLUGINS_STARTED, fatal=false)",
        "patch": "@@ -1544,7 +1544,7 @@ public static class PageDecoratorImpl extends PageDecorator {\n      *\n      * This has to wait until after all plugins load, to let custom UpdateCenterConfiguration take effect first.\n      */\n-    @Initializer(after=PLUGINS_STARTED)\n+    @Initializer(after=PLUGINS_STARTED, fatal=false)\n     public static void init(Jenkins h) throws IOException {\n         h.getUpdateCenter().load();\n     }"
    },
    {
        "commit_id": "e116b906bd3395ec0111a770886373f2b8a14d33",
        "commit_message": "improving error reporting",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e116b906bd3395ec0111a770886373f2b8a14d33",
        "buggy_code": "assertTrue(items[0] instanceof BlockedItem);",
        "fixed_code": "assertTrue(\"Got \"+items[0], items[0] instanceof BlockedItem);",
        "patch": "@@ -169,7 +169,7 @@ public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListen\n         Thread.sleep(1000);\n         Queue.Item[] items = q.getItems();\n         assertEquals(1,items.length);\n-        assertTrue(items[0] instanceof BlockedItem);\n+        assertTrue(\"Got \"+items[0], items[0] instanceof BlockedItem);\n \n         q.save();\n     }"
    },
    {
        "commit_id": "872a6d740ddcc9863fe6a41a5afe9823cc7830a3",
        "commit_message": "fix computeRelativeNamesAfterRenaming for job tbs using same prefix in name",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/872a6d740ddcc9863fe6a41a5afe9823cc7830a3",
        "buggy_code": "if (canonicalName.startsWith(oldFullName)) {",
        "fixed_code": "if (canonicalName.equals(oldFullName) || canonicalName.startsWith(oldFullName+'/')) {",
        "patch": "@@ -166,7 +166,7 @@ public static String computeRelativeNamesAfterRenaming(String oldFullName, Strin\n         while(tokens.hasMoreTokens()) {\n             String relativeName = tokens.nextToken().trim();\n             String canonicalName = getCanonicalName(context, relativeName);\n-            if (canonicalName.startsWith(oldFullName)) {\n+            if (canonicalName.equals(oldFullName) || canonicalName.startsWith(oldFullName+'/')) {\n                 String newCanonicalName = newFullName + canonicalName.substring(oldFullName.length());\n                 // relative name points to the renamed item, let's compute the new relative name\n                 newValue.add( computeRelativeNameAfterRenaming(canonicalName, newCanonicalName, relativeName) );"
    },
    {
        "commit_id": "b7488b6c313fc470e5f96b5141b9deb77e2ce2f1",
        "commit_message": "fix unit test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b7488b6c313fc470e5f96b5141b9deb77e2ce2f1",
        "buggy_code": "Assert.assertTrue( MavenUtil.supportEventSpy( \"3.0.2\" ) );",
        "fixed_code": "Assert.assertFalse( MavenUtil.supportEventSpy( \"3.0.2\" ) );",
        "patch": "@@ -57,7 +57,7 @@ public void eventSpy301(){\n \n     @Test\n     public void eventSpy302(){\n-        Assert.assertTrue( MavenUtil.supportEventSpy( \"3.0.2\" ) );\n+        Assert.assertFalse( MavenUtil.supportEventSpy( \"3.0.2\" ) );\n     }\n \n     @Test"
    },
    {
        "commit_id": "c9282915416653ff6fc904c3f9e467cb2d46ff3e",
        "commit_message": "more bug fix",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c9282915416653ff6fc904c3f9e467cb2d46ff3e",
        "buggy_code": "private AtomicReferenceFieldUpdater<AbstractProject,DescribableList> triggersUpdater",
        "fixed_code": "private static final AtomicReferenceFieldUpdater<AbstractProject,DescribableList> triggersUpdater",
        "patch": "@@ -241,7 +241,7 @@ public abstract class AbstractProject<P extends AbstractProject<P,R>,R extends A\n      * List of all {@link Trigger}s for this project.\n      */\n     protected volatile DescribableList<Trigger<?>,TriggerDescriptor> triggers = new DescribableList<Trigger<?>,TriggerDescriptor>(this);\n-    private AtomicReferenceFieldUpdater<AbstractProject,DescribableList> triggersUpdater\n+    private static final AtomicReferenceFieldUpdater<AbstractProject,DescribableList> triggersUpdater\n             = AtomicReferenceFieldUpdater.newUpdater(AbstractProject.class,DescribableList.class,\"triggers\");\n \n     /**"
    },
    {
        "commit_id": "c7c05f6a49d89d0fab360d857981964f49b2320a",
        "commit_message": "Merge pull request #826 from lmwang/windows_test\n\nFix ListJobsCommandTest failed on Windows by replace line ending",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c7c05f6a49d89d0fab360d857981964f49b2320a",
        "buggy_code": "Arrays.asList(item.toString().split(\"\\n\"))",
        "fixed_code": "Arrays.asList(item.toString().split(System.getProperty(\"line.separator\")))",
        "patch": "@@ -170,7 +170,7 @@ private TypeSafeMatcher<ByteArrayOutputStream> listsJobs(final String... expecte\n             protected boolean matchesSafely(ByteArrayOutputStream item) {\n \n                 final HashSet<String> jobs = new HashSet<String>(\n-                        Arrays.asList(item.toString().split(\"\\n\"))\n+                        Arrays.asList(item.toString().split(System.getProperty(\"line.separator\")))\n                 );\n \n                 return new HashSet<String>(Arrays.asList(expected)).equals(jobs);"
    },
    {
        "commit_id": "b6e1aa05491f4a9f20c9b987e732968d67edfd1b",
        "commit_message": "Fix ListJobsCommandTest failed on Windows by replace line ending",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b6e1aa05491f4a9f20c9b987e732968d67edfd1b",
        "buggy_code": "Arrays.asList(item.toString().split(\"\\n\"))",
        "fixed_code": "Arrays.asList(item.toString().split(System.getProperty(\"line.separator\")))",
        "patch": "@@ -170,7 +170,7 @@ private TypeSafeMatcher<ByteArrayOutputStream> listsJobs(final String... expecte\n             protected boolean matchesSafely(ByteArrayOutputStream item) {\n \n                 final HashSet<String> jobs = new HashSet<String>(\n-                        Arrays.asList(item.toString().split(\"\\n\"))\n+                        Arrays.asList(item.toString().split(System.getProperty(\"line.separator\")))\n                 );\n \n                 return new HashSet<String>(Arrays.asList(expected)).equals(jobs);"
    },
    {
        "commit_id": "6badbb3227701f93aeebf208cc47f8b1540617da",
        "commit_message": "Added the error handling screen\n\nThis page gets displayed when we throw an unhandled exception.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6badbb3227701f93aeebf208cc47f8b1540617da",
        "buggy_code": "initThread = new Thread(\"hudson initialization thread\") {",
        "fixed_code": "initThread = new Thread(\"Jenkins initialization thread\") {",
        "patch": "@@ -206,7 +206,7 @@ public Locale get() {\n \n             context.setAttribute(APP,new HudsonIsLoading());\n \n-            initThread = new Thread(\"hudson initialization thread\") {\n+            initThread = new Thread(\"Jenkins initialization thread\") {\n                 @Override\n                 public void run() {\n                     boolean success = false;"
    },
    {
        "commit_id": "20391abe462119973206ee96469724801a524e16",
        "commit_message": "[JENKINS-18427] log formatter error\nuse more explicit method name\nuse formattedDescription for all parameter types",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/20391abe462119973206ee96469724801a524e16",
        "buggy_code": "assertEquals(\"choice description\", ((HtmlElement) element.selectSingleNode(\"td/div\")).getAttribute(\"description\"));",
        "fixed_code": "assertEquals(\"choice description\", ((HtmlElement) element.getNextSibling().getNextSibling().selectSingleNode(\"td[@class='setting-description']\")).getTextContent());",
        "patch": "@@ -89,7 +89,7 @@ public void testChoiceWithLTGT() throws Exception {\n \n         HtmlElement element = (HtmlElement) form.selectSingleNode(\".//tr[td/div/input/@value='choice']\");\n         assertNotNull(element);\n-        assertEquals(\"choice description\", ((HtmlElement) element.selectSingleNode(\"td/div\")).getAttribute(\"description\"));\n+        assertEquals(\"choice description\", ((HtmlElement) element.getNextSibling().getNextSibling().selectSingleNode(\"td[@class='setting-description']\")).getTextContent());\n         assertEquals(\"choice\", ((HtmlElement) element.selectSingleNode(\"td[@class='setting-name']\")).getTextContent());\n         HtmlOption opt = (HtmlOption)element.selectSingleNode(\"td/div/select/option[@value='Choice <2>']\");\n         assertNotNull(opt);"
    },
    {
        "commit_id": "ffd77fcf5ce5b0e949020d921fa5f0ceae8a30e0",
        "commit_message": "Merge pull request #786 from arihyttinen/master\n\nFix TestResult.toPrettyString() pass count\r\nThanks!",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ffd77fcf5ce5b0e949020d921fa5f0ceae8a30e0",
        "buggy_code": "sb.append(\"Pass: \").append(this.getSkipCount()).append(\",\\n\");",
        "fixed_code": "sb.append(\"Pass: \").append(this.getPassCount()).append(\",\\n\");",
        "patch": "@@ -246,7 +246,7 @@ public String toPrettyString() {\n         sb.append(\"Total Count: \").append(this.getTotalCount()).append(\", \");\n         sb.append(\"Fail: \").append(this.getFailCount()).append(\", \");\n         sb.append(\"Skipt: \").append(this.getSkipCount()).append(\", \");\n-        sb.append(\"Pass: \").append(this.getSkipCount()).append(\",\\n\");\n+        sb.append(\"Pass: \").append(this.getPassCount()).append(\",\\n\");\n         sb.append(\"Test Result Class: \" ).append(this.getClass().getName()).append(\" }\\n\");\n         return sb.toString(); \n     }"
    },
    {
        "commit_id": "21bf5c45d4249dd4cbb52c0cc61ef3ae117d3dc6",
        "commit_message": "Diagnosis for test failure.\nhttps://jenkins.ci.cloudbees.com/job/core/job/jenkins_main_trunk/850/testReport/jenkins.security/RekeySecretAdminMonitorTest/testBasicWorkflow/\ncom.gargoylesoftware.htmlunit.FailingHttpStatusCodeException: 400 Bad Request for http://localhost:60027//administrativeMonitor/jenkins.security.RekeySecretAdminMonitor/scan\n\tat com.gargoylesoftware.htmlunit.WebClient.throwFailingHttpStatusCodeExceptionIfNecessary(WebClient.java:549)\n\tat com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:333)\n\tat com.gargoylesoftware.htmlunit.WebClient.getPage(WebClient.java:357)\n\tat com.gargoylesoftware.htmlunit.html.HtmlForm.submit(HtmlForm.java:196)\n\tat org.jvnet.hudson.test.HudsonTestCase.submit(HudsonTestCase.java:1178)\n\tat jenkins.security.RekeySecretAdminMonitorTest.testBasicWorkflow(RekeySecretAdminMonitorTest.java:112)\njava.lang.Exception: Invalid request submission\n\tat org.kohsuke.stapler.HttpResponses.error(HttpResponses.java:79)\n\tat jenkins.security.RekeySecretAdminMonitor.doScan(RekeySecretAdminMonitor.java:117)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/21bf5c45d4249dd4cbb52c0cc61ef3ae117d3dc6",
        "buggy_code": "throw HttpResponses.error(400,\"Invalid request submission\");",
        "fixed_code": "throw HttpResponses.error(400,\"Invalid request submission: \" + req.getParameterMap());",
        "patch": "@@ -114,7 +114,7 @@ public HttpResponse doScan(StaplerRequest req) throws IOException, GeneralSecuri\n         if(req.hasParameter(\"dismiss\")) {\n             disable(true);\n         } else\n-            throw HttpResponses.error(400,\"Invalid request submission\");\n+            throw HttpResponses.error(400,\"Invalid request submission: \" + req.getParameterMap());\n \n         return HttpResponses.redirectViaContextPath(\"/manage\");\n     }"
    },
    {
        "commit_id": "a49d8f8a968b5a4a1481b49cd6583faa3ac8b18b",
        "commit_message": "Revert \"type error fix\"\n\nThis reverts commit 3f0fff9867d34b4bb5df7fafe15e53dc8b8da538.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a49d8f8a968b5a4a1481b49cd6583faa3ac8b18b",
        "buggy_code": "return getArtifactManager().getArtifactsUpTo(_this(), n);",
        "fixed_code": "return getArtifactManager().getArtifactsUpTo(this, n);",
        "patch": "@@ -1004,7 +1004,7 @@ public List<Artifact> getArtifacts() {\n      * Gets the first N artifacts.\n      */\n     public List<Artifact> getArtifactsUpTo(int n) {\n-        return getArtifactManager().getArtifactsUpTo(_this(), n);\n+        return getArtifactManager().getArtifactsUpTo(this, n);\n     }\n \n     /**"
    },
    {
        "commit_id": "3f0fff9867d34b4bb5df7fafe15e53dc8b8da538",
        "commit_message": "type error fix",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3f0fff9867d34b4bb5df7fafe15e53dc8b8da538",
        "buggy_code": "return getArtifactManager().getArtifactsUpTo(this, n);",
        "fixed_code": "return getArtifactManager().getArtifactsUpTo(_this(), n);",
        "patch": "@@ -1004,7 +1004,7 @@ public List<Artifact> getArtifacts() {\n      * Gets the first N artifacts.\n      */\n     public List<Artifact> getArtifactsUpTo(int n) {\n-        return getArtifactManager().getArtifactsUpTo(this, n);\n+        return getArtifactManager().getArtifactsUpTo(_this(), n);\n     }\n \n     /**"
    },
    {
        "commit_id": "f7c9e810605e89b4f8d841cfc2df2342037982f1",
        "commit_message": "[JENKINS-16089] Revising 88feabb4296d6483bdb5c85fed489e5014161ca5\n\nBased on comments from Jesse, revising the fix.\n\nI'm now putting permlinks inside the builds/ directory to avoid the computing hassle involved in the split $JENKINS_HOME.\n\nWhat we historically had in $JENKINS_HOME/jobs/JOB/lastSuccessfulBuild is also now subsumed by this feature. I initially attempted to create these permalinks in the buidl root directory, but turns out those symlinks aren't the same name as the ID of permalinks, so it doesn't mesh well.\n\nAnd finally, a test!",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f7c9e810605e89b4f8d841cfc2df2342037982f1",
        "buggy_code": "protected File getBuildDir() {",
        "fixed_code": "public File getBuildDir() {",
        "patch": "@@ -744,7 +744,7 @@ public Object getDynamic(String token, StaplerRequest req,\n      * \n      * @see RunMap\n      */\n-    protected File getBuildDir() {\n+    public File getBuildDir() {\n         return Jenkins.getInstance().getBuildDirFor(this);\n     }\n "
    },
    {
        "commit_id": "f7c9e810605e89b4f8d841cfc2df2342037982f1",
        "commit_message": "[JENKINS-16089] Revising 88feabb4296d6483bdb5c85fed489e5014161ca5\n\nBased on comments from Jesse, revising the fix.\n\nI'm now putting permlinks inside the builds/ directory to avoid the computing hassle involved in the split $JENKINS_HOME.\n\nWhat we historically had in $JENKINS_HOME/jobs/JOB/lastSuccessfulBuild is also now subsumed by this feature. I initially attempted to create these permalinks in the buidl root directory, but turns out those symlinks aren't the same name as the ID of permalinks, so it doesn't mesh well.\n\nAnd finally, a test!",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f7c9e810605e89b4f8d841cfc2df2342037982f1",
        "buggy_code": "@Override protected File getBuildDir() {",
        "fixed_code": "@Override public File getBuildDir() {",
        "patch": "@@ -57,7 +57,7 @@ protected void removeRun(Run run) {\n         \n     }\n \n-    @Override protected File getBuildDir() {\n+    @Override public File getBuildDir() {\n         return new File(System.getProperty(\"java.io.tmpdir\"));\n     }\n     "
    },
    {
        "commit_id": "dbc212e2e3ac364d08f73897c1b8f1202b5d937e",
        "commit_message": "unit test to reproduce JENKINS-13502 and confirm fix",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/dbc212e2e3ac364d08f73897c1b8f1202b5d937e",
        "buggy_code": "private void convertUpstreamBuildTrigger(Set<AbstractProject> upstream) throws IOException {",
        "fixed_code": "protected void convertUpstreamBuildTrigger(Set<AbstractProject> upstream) throws IOException {",
        "patch": "@@ -763,7 +763,7 @@ public void doConfigSubmit( StaplerRequest req, StaplerResponse rsp ) throws IOE\n     /**\n      * Reflect the submission of the pseudo 'upstream build trigger'.\n      */\n-    private void convertUpstreamBuildTrigger(Set<AbstractProject> upstream) throws IOException {\n+    protected void convertUpstreamBuildTrigger(Set<AbstractProject> upstream) throws IOException {\n \n         SecurityContext saveCtx = ACL.impersonate(ACL.SYSTEM);\n         try {"
    },
    {
        "commit_id": "ae7a2716e2262066532a4a3bcd8b299f7dddf139",
        "commit_message": "fixing bug that Lars found from Munich",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ae7a2716e2262066532a4a3bcd8b299f7dddf139",
        "buggy_code": "if (isDisabled()) {",
        "fixed_code": "if (!isBuildable()) {",
        "patch": "@@ -1379,7 +1379,7 @@ public PollingResult poll( TaskListener listener ) {\n             listener.getLogger().println(Messages.AbstractProject_NoSCM());\n             return NO_CHANGES;\n         }\n-        if (isDisabled()) {\n+        if (!isBuildable()) {\n             listener.getLogger().println(Messages.AbstractProject_Disabled());\n             return NO_CHANGES;\n         }"
    },
    {
        "commit_id": "554d9d55a4aac0c456209e6160cf67dabeb7d8bb",
        "commit_message": "Diagnosis of an NPE probably caused by a transient slave connection error.\njava.lang.NullPointerException\n\tat hudson.tasks.CommandInterpreter.createScriptFile(CommandInterpreter.java:104)\n\tat hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:66)\n\tat hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:58)\n\tat com.cloudbees.hudson.plugins.modeling.impl.builder.BuilderImpl.perform(BuilderImpl.java:58)\n\tat hudson.plugins.m2extrasteps.M2ExtraStepsWrapper.executeBuildSteps(M2ExtraStepsWrapper.java:166)\n\tat hudson.plugins.m2extrasteps.M2ExtraStepsWrapper.access$200(M2ExtraStepsWrapper.java:43)\n\tat hudson.plugins.m2extrasteps.M2ExtraStepsWrapper$1.tearDown(M2ExtraStepsWrapper.java:137)\n\tat hudson.maven.MavenModuleSetBuild$RunnerImpl.doRun(MavenModuleSetBuild.java:817)\n\tat hudson.model.AbstractBuild$AbstractRunner.run(AbstractBuild.java:490)\n\tat hudson.model.Run.run(Run.java:1442)\n\tat hudson.maven.MavenModuleSetBuild.run(MavenModuleSetBuild.java:477)\n\tat hudson.model.ResourceController.execute(ResourceController.java:88)\n\tat hudson.model.Executor.run(Executor.java:239)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/554d9d55a4aac0c456209e6160cf67dabeb7d8bb",
        "buggy_code": "public Node getBuiltOn() {",
        "fixed_code": "public @CheckForNull Node getBuiltOn() {",
        "patch": "@@ -263,7 +263,7 @@ public R getNextBuild() {\n      * @return\n      *      null, for example if the slave that this build run no longer exists.\n      */\n-    public Node getBuiltOn() {\n+    public @CheckForNull Node getBuiltOn() {\n         if (builtOn==null || builtOn.equals(\"\"))\n             return Jenkins.getInstance();\n         else"
    },
    {
        "commit_id": "554d9d55a4aac0c456209e6160cf67dabeb7d8bb",
        "commit_message": "Diagnosis of an NPE probably caused by a transient slave connection error.\njava.lang.NullPointerException\n\tat hudson.tasks.CommandInterpreter.createScriptFile(CommandInterpreter.java:104)\n\tat hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:66)\n\tat hudson.tasks.CommandInterpreter.perform(CommandInterpreter.java:58)\n\tat com.cloudbees.hudson.plugins.modeling.impl.builder.BuilderImpl.perform(BuilderImpl.java:58)\n\tat hudson.plugins.m2extrasteps.M2ExtraStepsWrapper.executeBuildSteps(M2ExtraStepsWrapper.java:166)\n\tat hudson.plugins.m2extrasteps.M2ExtraStepsWrapper.access$200(M2ExtraStepsWrapper.java:43)\n\tat hudson.plugins.m2extrasteps.M2ExtraStepsWrapper$1.tearDown(M2ExtraStepsWrapper.java:137)\n\tat hudson.maven.MavenModuleSetBuild$RunnerImpl.doRun(MavenModuleSetBuild.java:817)\n\tat hudson.model.AbstractBuild$AbstractRunner.run(AbstractBuild.java:490)\n\tat hudson.model.Run.run(Run.java:1442)\n\tat hudson.maven.MavenModuleSetBuild.run(MavenModuleSetBuild.java:477)\n\tat hudson.model.ResourceController.execute(ResourceController.java:88)\n\tat hudson.model.Executor.run(Executor.java:239)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/554d9d55a4aac0c456209e6160cf67dabeb7d8bb",
        "buggy_code": "public Node getNode(String name) {",
        "fixed_code": "public @CheckForNull Node getNode(String name) {",
        "patch": "@@ -1635,7 +1635,7 @@ public JDK getJDK(String name) {\n     /**\n      * Gets the slave node of the give name, hooked under this Hudson.\n      */\n-    public Node getNode(String name) {\n+    public @CheckForNull Node getNode(String name) {\n         return slaves.getNode(name);\n     }\n "
    },
    {
        "commit_id": "4dde24e62037439b7b73addd7cefae83a254eb3c",
        "commit_message": "[FIXED JENKINS-13536] Using file parameters could cause build records to not load.\nSolves the issue for newly created builds by not attempting to persist the original file upload record, which is useless after the build has run (the fileParameters dir in the build already archives them).\nDoes not help loading pre-fix builds in which the upload temp file has been deleted; for these, you must manually delete <file class=\"org.apache.commons.fileupload.disk.DiskFileItem\" serialization=\"custom\">\u2026</file> from the build.xml.\n(Did not find a straightforward way to just instruct XStream to ignore this bit of XML: it is easy to avoid serializing a field, but deserializing is different.)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4dde24e62037439b7b73addd7cefae83a254eb3c",
        "buggy_code": "private final FileItem file;",
        "fixed_code": "private transient final FileItem file;",
        "patch": "@@ -59,7 +59,7 @@\n  * @author Kohsuke Kawaguchi\n  */\n public class FileParameterValue extends ParameterValue {\n-    private final FileItem file;\n+    private transient final FileItem file;\n \n     /**\n      * The name of the originally uploaded file."
    },
    {
        "commit_id": "6b9437786489a9f990419d6cf162ada46951d8a8",
        "commit_message": "fix PluginUpdateMonitor rendering issue",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6b9437786489a9f990419d6cf162ada46951d8a8",
        "buggy_code": "private static class PluginUpdateInfo {",
        "fixed_code": "public static class PluginUpdateInfo {",
        "patch": "@@ -1091,7 +1091,7 @@ public List<PluginUpdateInfo> getPluginsToBeUpdated() {\n             return pluginsToBeUpdated;\n         }\n         \n-        private static class PluginUpdateInfo {\n+        public static class PluginUpdateInfo {\n             public final String pluginName;\n             public final String message;\n             public PluginUpdateInfo(String pluginName, String message) {"
    },
    {
        "commit_id": "7639674b5952497dca4235712dba80beae901a01",
        "commit_message": "use large intervals between defined links, so that new links can be added in future. Fix missing permission on ConsoleLink",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7639674b5952497dca4235712dba80beae901a01",
        "buggy_code": "@Extension(ordinal = Integer.MAX_VALUE - 8)",
        "fixed_code": "@Extension(ordinal = Integer.MAX_VALUE - 800)",
        "patch": "@@ -30,7 +30,7 @@\n /**\n  * @author <a href=\"mailto:nicolas.deloof@gmail.com\">Nicolas De Loof</a>\n  */\n-@Extension(ordinal = Integer.MAX_VALUE - 8)\n+@Extension(ordinal = Integer.MAX_VALUE - 800)\n public class CliLink extends ManagementLink {\n \n     @Override"
    },
    {
        "commit_id": "7639674b5952497dca4235712dba80beae901a01",
        "commit_message": "use large intervals between defined links, so that new links can be added in future. Fix missing permission on ConsoleLink",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7639674b5952497dca4235712dba80beae901a01",
        "buggy_code": "@Extension(ordinal = Integer.MAX_VALUE - 2)",
        "fixed_code": "@Extension(ordinal = Integer.MAX_VALUE - 200)",
        "patch": "@@ -30,7 +30,7 @@\n /**\n  * @author <a href=\"mailto:nicolas.deloof@gmail.com\">Nicolas De Loof</a>\n  */\n-@Extension(ordinal = Integer.MAX_VALUE - 2)\n+@Extension(ordinal = Integer.MAX_VALUE - 200)\n public class ConfigureLink extends ManagementLink {\n \n     @Override"
    },
    {
        "commit_id": "7639674b5952497dca4235712dba80beae901a01",
        "commit_message": "use large intervals between defined links, so that new links can be added in future. Fix missing permission on ConsoleLink",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7639674b5952497dca4235712dba80beae901a01",
        "buggy_code": "@Extension(ordinal = Integer.MAX_VALUE - 10)",
        "fixed_code": "@Extension(ordinal = Integer.MAX_VALUE - 1000)",
        "patch": "@@ -32,7 +32,7 @@\n /**\n  * @author <a href=\"mailto:nicolas.deloof@gmail.com\">Nicolas De Loof</a>\n  */\n-@Extension(ordinal = Integer.MAX_VALUE - 10)\n+@Extension(ordinal = Integer.MAX_VALUE - 1000)\n public class NodesLink extends ManagementLink {\n \n     @Override"
    },
    {
        "commit_id": "7639674b5952497dca4235712dba80beae901a01",
        "commit_message": "use large intervals between defined links, so that new links can be added in future. Fix missing permission on ConsoleLink",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7639674b5952497dca4235712dba80beae901a01",
        "buggy_code": "@Extension(ordinal = Integer.MAX_VALUE - 4)",
        "fixed_code": "@Extension(ordinal = Integer.MAX_VALUE - 400)",
        "patch": "@@ -30,7 +30,7 @@\n /**\n  * @author <a href=\"mailto:nicolas.deloof@gmail.com\">Nicolas De Loof</a>\n  */\n-@Extension(ordinal = Integer.MAX_VALUE - 4)\n+@Extension(ordinal = Integer.MAX_VALUE - 400)\n public class PluginsLink extends ManagementLink {\n \n     @Override"
    },
    {
        "commit_id": "7639674b5952497dca4235712dba80beae901a01",
        "commit_message": "use large intervals between defined links, so that new links can be added in future. Fix missing permission on ConsoleLink",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7639674b5952497dca4235712dba80beae901a01",
        "buggy_code": "@Extension(ordinal = Integer.MAX_VALUE - 3)",
        "fixed_code": "@Extension(ordinal = Integer.MAX_VALUE - 300)",
        "patch": "@@ -30,7 +30,7 @@\n /**\n  * @author <a href=\"mailto:nicolas.deloof@gmail.com\">Nicolas De Loof</a>\n  */\n-@Extension(ordinal = Integer.MAX_VALUE - 3)\n+@Extension(ordinal = Integer.MAX_VALUE - 300)\n public class ReloadLink extends ManagementLink {\n \n     @Override"
    },
    {
        "commit_id": "7639674b5952497dca4235712dba80beae901a01",
        "commit_message": "use large intervals between defined links, so that new links can be added in future. Fix missing permission on ConsoleLink",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7639674b5952497dca4235712dba80beae901a01",
        "buggy_code": "@Extension(ordinal = Integer.MAX_VALUE - 7)",
        "fixed_code": "@Extension(ordinal = Integer.MAX_VALUE - 700)",
        "patch": "@@ -30,7 +30,7 @@\n /**\n  * @author <a href=\"mailto:nicolas.deloof@gmail.com\">Nicolas De Loof</a>\n  */\n-@Extension(ordinal = Integer.MAX_VALUE - 7)\n+@Extension(ordinal = Integer.MAX_VALUE - 700)\n public class StatisticsLink extends ManagementLink {\n \n     @Override"
    },
    {
        "commit_id": "7639674b5952497dca4235712dba80beae901a01",
        "commit_message": "use large intervals between defined links, so that new links can be added in future. Fix missing permission on ConsoleLink",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7639674b5952497dca4235712dba80beae901a01",
        "buggy_code": "@Extension(ordinal = Integer.MAX_VALUE - 5)",
        "fixed_code": "@Extension(ordinal = Integer.MAX_VALUE - 500)",
        "patch": "@@ -30,7 +30,7 @@\n /**\n  * @author <a href=\"mailto:nicolas.deloof@gmail.com\">Nicolas De Loof</a>\n  */\n-@Extension(ordinal = Integer.MAX_VALUE - 5)\n+@Extension(ordinal = Integer.MAX_VALUE - 500)\n public class SystemInfoLink extends ManagementLink {\n \n     @Override"
    },
    {
        "commit_id": "7639674b5952497dca4235712dba80beae901a01",
        "commit_message": "use large intervals between defined links, so that new links can be added in future. Fix missing permission on ConsoleLink",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7639674b5952497dca4235712dba80beae901a01",
        "buggy_code": "@Extension(ordinal = Integer.MAX_VALUE - 6)",
        "fixed_code": "@Extension(ordinal = Integer.MAX_VALUE - 600)",
        "patch": "@@ -30,7 +30,7 @@\n /**\n  * @author <a href=\"mailto:nicolas.deloof@gmail.com\">Nicolas De Loof</a>\n  */\n-@Extension(ordinal = Integer.MAX_VALUE - 6)\n+@Extension(ordinal = Integer.MAX_VALUE - 600)\n public class SystemLogLink extends ManagementLink {\n \n     @Override"
    },
    {
        "commit_id": "346fc998b16f2021cbd6b3bb1cd1878a2b19ff5b",
        "commit_message": "Enabled transparent compression support.\n\nThis only works if the \"transparent GZIP support\" patch has been\napplied against Stapler. Otherwise, this patch will not compile\nas the new \"LargeText\" constructor will not be found.\n\nAdditionally, the console.jelly was modified to make use of the\nstream instead of the raw file, which is necessary to get the\ncorrect uncompressed size of the file for skipping bytes.\n\n[JENKINS-2551]\n[JENKINS-10400]\n[JENKINS-13655]\n\nSigned-off-by: Martin Schroeder <martin.h.schroeder@intel.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/346fc998b16f2021cbd6b3bb1cd1878a2b19ff5b",
        "buggy_code": "super(file, charset, completed);",
        "fixed_code": "super(file, charset, completed, true);",
        "patch": "@@ -77,7 +77,7 @@ public class AnnotatedLargeText<T> extends LargeText {\n     private T context;\n \n     public AnnotatedLargeText(File file, Charset charset, boolean completed, T context) {\n-        super(file, charset, completed);\n+        super(file, charset, completed, true);\n         this.context = context;\n     }\n "
    },
    {
        "commit_id": "e6685a700c2c7e34f6cbd2c9ad474b2c201919f4",
        "commit_message": "do not remove maven installation which does not have a home, like maven installation with automatic installer (bug associated with JENKINS-14510 fix ... sorry..)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e6685a700c2c7e34f6cbd2c9ad474b2c201919f4",
        "buggy_code": "if(Util.fixEmptyAndTrim(installation.getName()) == null || Util.fixEmptyAndTrim(installation.getHome()) == null) {",
        "fixed_code": "if(Util.fixEmptyAndTrim(installation.getName()) == null) {",
        "patch": "@@ -353,7 +353,7 @@ public void setInstallations(MavenInstallation... installations) {\n \t\t\tif(installations != null) {\n \t\t\t\tCollections.addAll(tmpList, installations);\n \t\t\t\tfor(MavenInstallation installation : installations) {\n-\t\t\t\t\tif(Util.fixEmptyAndTrim(installation.getName()) == null || Util.fixEmptyAndTrim(installation.getHome()) == null) {\n+\t\t\t\t\tif(Util.fixEmptyAndTrim(installation.getName()) == null) {\n \t\t\t\t\t\ttmpList.remove(installation);\n \t\t\t\t\t}\n \t\t\t\t}"
    },
    {
        "commit_id": "6d9cc46dd6bb78b7d6606b649eb19a4d28dd7fc4",
        "commit_message": "off by one bug.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6d9cc46dd6bb78b7d6606b649eb19a4d28dd7fc4",
        "buggy_code": "int lo = start, hi = end+1;",
        "fixed_code": "int lo = start, hi = end-1; // search range is [lo,hi]",
        "patch": "@@ -153,7 +153,7 @@ public void removeValue(int n) {\n      * Switch to {@code java.util.Arrays.binarySearch} when we depend on Java6.\n      */\n     private static int binarySearch(int[] a, int start, int end, int key) {\n-        int lo = start, hi = end+1;\n+        int lo = start, hi = end-1; // search range is [lo,hi]\n \n         // invariant lo<=hi\n         while (lo <= hi) {"
    },
    {
        "commit_id": "c2f9bb16776de958a2a16aebf34f82e712bd8bd7",
        "commit_message": "Merge pull request #568 from jeffmaury/JENKINS-15207\n\n[JENKINS-15207] Fix typo in warning message when config-file-provider pl...\r\nThanks!",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c2f9bb16776de958a2a16aebf34f82e712bd8bd7",
        "buggy_code": "LOGGER.warning(\"'config-file-provider' plugin installed..., administration of setting.xml will not be available!\");",
        "fixed_code": "LOGGER.warning(\"'config-file-provider' plugin not installed..., administration of setting.xml will not be available!\");",
        "patch": "@@ -37,7 +37,7 @@ public ConfigProviderDelegate() {\n         if (Jenkins.getInstance().getPlugin(\"config-file-provider\") != null) {\n             cpf = new ConfigProviderMediator();\n         } else {\n-            LOGGER.warning(\"'config-file-provider' plugin installed..., administration of setting.xml will not be available!\");\n+            LOGGER.warning(\"'config-file-provider' plugin not installed..., administration of setting.xml will not be available!\");\n             cpf = new DefaultConfigProviderFacade();\n         }\n     }"
    },
    {
        "commit_id": "1bab7100128785391f8a33ad823996b914a148f1",
        "commit_message": "[JENKINS-15207] Fix typo in warning message when config-file-provider plugin is not installed",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1bab7100128785391f8a33ad823996b914a148f1",
        "buggy_code": "LOGGER.warning(\"'config-file-provider' plugin installed..., administration of setting.xml will not be available!\");",
        "fixed_code": "LOGGER.warning(\"'config-file-provider' plugin not installed..., administration of setting.xml will not be available!\");",
        "patch": "@@ -37,7 +37,7 @@ public ConfigProviderDelegate() {\n         if (Jenkins.getInstance().getPlugin(\"config-file-provider\") != null) {\n             cpf = new ConfigProviderMediator();\n         } else {\n-            LOGGER.warning(\"'config-file-provider' plugin installed..., administration of setting.xml will not be available!\");\n+            LOGGER.warning(\"'config-file-provider' plugin not installed..., administration of setting.xml will not be available!\");\n             cpf = new DefaultConfigProviderFacade();\n         }\n     }"
    },
    {
        "commit_id": "a0b29cd332dcd57db449ecb1c9df65662ba11816",
        "commit_message": "fix typo",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a0b29cd332dcd57db449ecb1c9df65662ba11816",
        "buggy_code": "listener.getLogger().println( \"Maven RedeployPublished use remote \" + (buildNode != null ? buildNode.getNodeName() : \"local\" )",
        "fixed_code": "listener.getLogger().println( \"Maven RedeployPublisher use remote \" + (buildNode != null ? buildNode.getNodeName() : \"local\" )",
        "patch": "@@ -287,7 +287,7 @@ private MavenEmbedder createEmbedder(TaskListener listener, AbstractBuild<?,?> b\n                     String settingsPath = mavenHome + \"/conf/settings.xml\";\n                     remoteSettings = build.getWorkspace().child( settingsPath);\n                 }\n-                listener.getLogger().println( \"Maven RedeployPublished use remote \" + (buildNode != null ? buildNode.getNodeName() : \"local\" )  \n+                listener.getLogger().println( \"Maven RedeployPublisher use remote \" + (buildNode != null ? buildNode.getNodeName() : \"local\" )\n                                               + \" maven settings from : \" + remoteSettings.getRemote() );\n                 remoteSettings.copyTo( filePath );\n                 settingsLoc = tmpSettings;"
    },
    {
        "commit_id": "06ff45dc62fa0ff708c77595438621f48bb493f6",
        "commit_message": "Merge pull request #524 from mkalkov/master\n\nA fix for a failure at line 75 in the hudson.util.io.TarArchiverTest",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/06ff45dc62fa0ff708c77595438621f48bb493f6",
        "buggy_code": "assertEquals(0, new LocalLauncher(new StreamTaskListener(System.out)).launch().cmds(\"tar\", \"xvf\", tar.getAbsolutePath()).pwd(e).join());",
        "fixed_code": "assertEquals(0, new LocalLauncher(new StreamTaskListener(System.out)).launch().cmds(\"tar\", \"xvpf\", tar.getAbsolutePath()).pwd(e).join());",
        "patch": "@@ -70,7 +70,7 @@ public void testPermission() throws Exception {\n             e.mkdirs();\n \n             // extract via the tar command\n-            assertEquals(0, new LocalLauncher(new StreamTaskListener(System.out)).launch().cmds(\"tar\", \"xvf\", tar.getAbsolutePath()).pwd(e).join());\n+            assertEquals(0, new LocalLauncher(new StreamTaskListener(System.out)).launch().cmds(\"tar\", \"xvpf\", tar.getAbsolutePath()).pwd(e).join());\n \n             assertEquals(0100755,e.child(\"a.txt\").mode());\n             assertEquals(dirMode,e.child(\"subdir\").mode());"
    },
    {
        "commit_id": "c75caf937cacfaced35bbb5daeec9131b742bb0c",
        "commit_message": "bug fix when there's no children nor value",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c75caf937cacfaced35bbb5daeec9131b742bb0c",
        "buggy_code": "for (XStreamDOM c : dom.children) {",
        "fixed_code": "for (XStreamDOM c : Util.fixNull(dom.children)) {",
        "patch": "@@ -377,7 +377,7 @@ public void marshal(Object source, HierarchicalStreamWriter w, MarshallingContex\n             if (dom.value!=null)\n                 w.setValue(dom.value);\n             else {\n-                for (XStreamDOM c : dom.children) {\n+                for (XStreamDOM c : Util.fixNull(dom.children)) {\n                     marshal(c, w, context);\n                 }\n             }"
    },
    {
        "commit_id": "4e7a43c5863b5e7ad637a5034f75d3c144c45129",
        "commit_message": "[FIXED JENKINS-14113]\n\nThe proposed fix https://github.com/buckett/jenkins/commit/eec16f1b6156aea76bd0cc6e0262538713ebffb6 has a problem in that it'd allow anything that has the given URL name as a prefix.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4e7a43c5863b5e7ad637a5034f75d3c144c45129",
        "buggy_code": "if (rest.startsWith(\"/\"+a.getUrlName()+\"/\"))",
        "fixed_code": "if (rest.startsWith(\"/\"+a.getUrlName()+\"/\") || rest.equals(\"/\"+a.getUrlName()))",
        "patch": "@@ -3520,7 +3520,7 @@ public Object getTarget() {\n \n             for (Action a : getActions()) {\n                 if (a instanceof UnprotectedRootAction) {\n-                    if (rest.startsWith(\"/\"+a.getUrlName()+\"/\"))\n+                    if (rest.startsWith(\"/\"+a.getUrlName()+\"/\") || rest.equals(\"/\"+a.getUrlName()))\n                         return this;\n                 }\n             }"
    },
    {
        "commit_id": "5379a8100cb6dfe5cae99cdf26afdcdd6c3ade50",
        "commit_message": "Merge pull request #496 from lvotypko/url-without-ampersand\n\nFix UtilTest and replace ampersand in method encode too\r\nThanks !",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5379a8100cb6dfe5cae99cdf26afdcdd6c3ade50",
        "buggy_code": "if (c<128 && c!=' ') {",
        "fixed_code": "if (c<128 && (c!=' ' && c!='&')) {",
        "patch": "@@ -678,7 +678,7 @@ public static String encode(String s) {\n \n             for (int i = 0; i < s.length(); i++) {\n                 int c = s.charAt(i);\n-                if (c<128 && c!=' ') {\n+                if (c<128 && (c!=' ' && c!='&')) {\n                     out.append((char) c);\n                 } else {\n                     // 1 char -> UTF8"
    },
    {
        "commit_id": "c667523d446614ea70dd8fd10ccdad4d3001f246",
        "commit_message": "Fix UtilTest and replace ampersand in method encode too",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c667523d446614ea70dd8fd10ccdad4d3001f246",
        "buggy_code": "if (c<128 && c!=' ') {",
        "fixed_code": "if (c<128 && (c!=' ' && c!='&')) {",
        "patch": "@@ -678,7 +678,7 @@ public static String encode(String s) {\n \n             for (int i = 0; i < s.length(); i++) {\n                 int c = s.charAt(i);\n-                if (c<128 && c!=' ') {\n+                if (c<128 && (c!=' ' && c!='&')) {\n                     out.append((char) c);\n                 } else {\n                     // 1 char -> UTF8"
    },
    {
        "commit_id": "07c09bebb8396a48063c1da4fc4b628acddd72a8",
        "commit_message": "do not approximate the aggregated test result.\n\nAggregatedTestResultAction remembers the exact build # of the child build, so honor that number, and don't let MatrixBuild.getRunFor(Configuration) picks up some earlier run.\n\nThe problem was discovered in the following situation:\n\n - there's a matrix project M with single configuration X\n - M #868 run normally, with 69 failures.\n - M #869 run with 258 failures, and that was reported in MatrixTestResult.add(AbstractTestResultAction), updating  the total count.\n - but for whatever reason, X #869 is lost\n - now if you look at M #869 test report, you'll see 258 as the total count, but the detail drill down would show 69, from X #868.\n\n----\n(05:25:57 PM) veebers: Hi all, I  have an odd issue with the 'test results'\n(05:26:12 PM) veebers: In this result: Test Result (258 failures / +189) where could the +189 come from?\n(05:26:20 PM) veebers: I can only actually see 69 failed tests :P\n(05:26:48 PM) kohsuke: it means comparing to the last test result, you got 189 more failure\n(05:27:37 PM) veebers: ah ok, but how can I have +189 failing tests when there are only 69 failed this time around?\n(05:28:21 PM) kohsuke: I wonder if it cuts off the summary display at 70 (out of your 258 failures)?\n(05:29:48 PM) veebers: Hmmm, kohsuke I don't know about that. Clicking the 'show all failed tests'  only shows 69 tests :P\n(05:30:22 PM) veebers: and when I look at a prev. failing test, one that has ~200 fails\n(05:30:24 PM) veebers: it shows the lot\n(05:31:07 PM) kohsuke: veebers: want to do the screenshot?\n(05:34:59 PM) veebers: kohsuke: sure: http://static.inky.ws/image/2143/image.jpg\n(05:35:40 PM) kohsuke: this is a matrix project that just has one configuration?\n(05:35:49 PM) kohsuke: Or is it a partial re-run?\n(05:35:53 PM) mode (+o abayer) by ChanServ\n(05:36:46 PM) veebers: first option. Only one config\n(05:37:56 PM) kohsuke: I wonder if this is some kind of rendering gritch\n(05:38:06 PM) kohsuke: perhaps if somehow it's showing the data of the previous run?\n(05:38:24 PM) kohsuke: 69+189=258 can't be a coincidence\n(05:38:53 PM) kohsuke: is this instance publicly visible?\n(05:39:25 PM) veebers: err not that one, just checking if the results are published to the public one\n(05:41:16 PM) veebers: hmm, that's odd. The publicly avail. one isn't showing the right details :P\n(05:41:24 PM) kohsuke: URL?\n(05:41:26 PM) veebers: well, perhaps there is something screwy with that setup\n(05:42:14 PM) veebers: kohsuke: https://jenkins.qa.ubuntu.com/job/dx-autopilot-run/869/\n(05:43:33 PM) veebers: kohsuke: although I don't think that's going to be much help as that gives me a 500 error :P\n(05:43:45 PM) kohsuke: that's a bug of its own\n(05:43:51 PM) kohsuke: I think I can fix that one\n(05:50:29 PM) kohsuke: veebers: I think I have a hypothesis\n(05:51:00 PM) kohsuke: when you do click that 69 failed tests reported under a configuration, I suspect you'll be actually taken to the different build number\n(05:51:23 PM) kohsuke: likely the same configuration build of the previous one\n(05:53:02 PM) veebers: kohsuke: hmm, not sure that's it.\n(05:53:10 PM) veebers: it's the same build number all over\n(05:53:53 PM) kohsuke: I'm pretty sure that's it\n(05:54:01 PM) kohsuke: let me think of other ways to prove this\n(05:54:27 PM) veebers: sure\n(05:54:36 PM) kohsuke: try /job/dx-autopilot-run/869/label=1EBEE0FF-DAC9-11DF-BBDA-64A98C34D485/parentBuild/\n(05:54:43 PM) kohsuke: and I predict you'll see #868 in the UI\n(05:54:45 PM) veebers: so, the public page there says: Test Result (258 failures / +189)\n(05:55:16 PM) veebers: When I click that link in the private server it takes me to that report you saw in the screenshot\n(05:55:43 PM) veebers: which says: .../869/testReport/\n(05:55:52 PM) veebers: and any other link on that page references 869\n(05:56:04 PM) veebers: so perhaps it's somewhere in the background that might be accessing a prev build?\n(05:56:36 PM) veebers: i.e. whatever builds up the top graph bar (at the top of the page) in server end rendering?\n(05:56:50 PM) kohsuke: does /job/dx-autopilot-run/869/ show gray ball?\n(05:57:27 PM) veebers: no, it shows the default config\n(05:57:37 PM) veebers: (yeah, something is wrong with the public facing one :P)\n(05:59:29 PM) veebers: not sure why you can't click through\n(06:00:40 PM) veebers: kohsuke: ah, looks like you are correct\n(06:00:50 PM) veebers: I was looking in the wrong place\n(06:01:01 PM) veebers: kohsuke: d'oh, thanks for pointing that out :)\n(06:01:41 PM) kohsuke: OK, I understand what happened\n(06:02:38 PM) veebers: so yeah, clicking on that config, I can see the line: Started by upstream project dx-autopilot-run build number 868\n(06:04:37 PM) kohsuke: #869 really did have 258 failures, but for some reason Jenkins lost the record of it\n(06:05:02 PM) kohsuke: and when it's displaying this to you, it's approximating the lost record by using the nearest build, that was #868\n(06:05:20 PM) kohsuke: and that's why the public instance, which runs ancient version of Jenkins, reports NPE\n(06:05:30 PM) kohsuke: this version doesn't have that approximation feature\n(06:05:42 PM) kohsuke: veebers: BTW you really should upgrade that publicly facing instance\n(06:06:00 PM) kohsuke: there have been some security advisories issued since then\n(06:06:11 PM) veebers: kohsuke: Makes sense, will get onto that\n(06:06:30 PM) kohsuke: I'm fixing this in the trunk so that it doesn't incorrectly approximate here\n(06:06:36 PM) veebers: nice",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/07c09bebb8396a48063c1da4fc4b628acddd72a8",
        "buggy_code": "return b.getRun(Combination.fromString(child.name));",
        "fixed_code": "return b.getProject().getItem(Combination.fromString(child.name)).getBuildByNumber(child.build);",
        "patch": "@@ -53,7 +53,7 @@ protected String getChildName(AbstractTestResultAction tr) {\n     @Override\n     public AbstractBuild<?,?> resolveChild(Child child) {\n         MatrixBuild b = (MatrixBuild)owner;\n-        return b.getRun(Combination.fromString(child.name));\n+        return b.getProject().getItem(Combination.fromString(child.name)).getBuildByNumber(child.build);\n     }\n \n     @Override"
    },
    {
        "commit_id": "35fc7a13c8b69ca056b47a8990d9c059cd5f0f74",
        "commit_message": "fixed test error. we expected application/json.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/35fc7a13c8b69ca056b47a8990d9c059cd5f0f74",
        "buggy_code": "Page result = wc.goTo(\"search/suggest?query=name\", \"application/javascript\");",
        "fixed_code": "Page result = wc.goTo(\"search/suggest?query=name\", \"application/json\");",
        "patch": "@@ -173,7 +173,7 @@ public void testGetSuggestionsHasBothNamesAndDisplayNames() throws Exception {\n         project1.setDisplayName(displayName);\n         \n         WebClient wc = new WebClient();\n-        Page result = wc.goTo(\"search/suggest?query=name\", \"application/javascript\");\n+        Page result = wc.goTo(\"search/suggest?query=name\", \"application/json\");\n         Assert.assertNotNull(result);\n         assertGoodStatus(result);\n         "
    },
    {
        "commit_id": "12a2a3a0c32b1b0d92ba93d60a09ee4c7be13778",
        "commit_message": "Follow up fix to 00a221d42fcbb779602e41a4404f082456ec54d9\n\nThe code wasn't compiling. Oops.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/12a2a3a0c32b1b0d92ba93d60a09ee4c7be13778",
        "buggy_code": "public void testIncludeUpstreamCulprits() throws MessagingException, InterruptedException {",
        "fixed_code": "public void testIncludeUpstreamCulprits() throws Exception {",
        "patch": "@@ -110,7 +110,7 @@ private static void createPreviousNextRelationShip(AbstractBuild... builds) {\n      * list.\n      */\n     @Test\n-    public void testIncludeUpstreamCulprits() throws MessagingException, InterruptedException {\n+    public void testIncludeUpstreamCulprits() throws Exception {\n         Collection<AbstractProject> upstreamProjects = Collections.singleton(this.upstreamProject);\n         \n         MailSender sender = new MailSender(\"\", false, false, \"UTF-8\", upstreamProjects);"
    },
    {
        "commit_id": "be1f8f91a3dcdcdfd2ed07198659e7eb68abf1f7",
        "commit_message": "Fixed a bug in Jenkins.overallNodeProvisioner\n\nUntil now, Jenkins.overallNodeProvisioner was tracking an inconsistent\npair of numbers. On one hand, it was tracking all the executors in the\nsystem, but then it was also only tracking the # of free-roaming\nlabel-unassigned jobs as the queue length.\n\nSo if all your slaves are set with Node.Mode.EXCLUSIVE and you have some\nfree-roaming jobs, then it'll never tickle NodePrivisioner.\n\nIn other words, the # of executors weren't reflecting the actual # of\nexecutors that can execute what's counted as the queue length.\n\nSee the problem report at\nhttps://groups.google.com/forum/?fromgroups#!topic/jenkinsci-dev/bUwGEgOwv4Q\n\nTo fix this, I introduced another LoadStatistics that only counts\nthe # of executors that can execute free-roaming jobs, and # of\nfree-roaming jobs as the queue length. In this way, two pairs of numbers\nare consistent.\n\nThis now allows us to use overallLoadStatistics for really the entire\nsystem, including all executors and the total queue length. This is\nprimarily for administrators to see the resource utilization, and it is\nnot useful for NodeProvisioner input because it's mixing too many\ndifferent things.\n\nThe semantics change in OverallLoadStatistics.queueLength allows us to\ndeprecate its totalQueueLength field.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/be1f8f91a3dcdcdfd2ed07198659e7eb68abf1f7",
        "buggy_code": "h.overallNodeProvisioner.update();",
        "fixed_code": "h.unlabeledNodeProvisioner.update();",
        "patch": "@@ -305,7 +305,7 @@ public long getRecurrencePeriod() {\n         @Override\n         protected void doRun() {\n             Jenkins h = Jenkins.getInstance();\n-            h.overallNodeProvisioner.update();\n+            h.unlabeledNodeProvisioner.update();\n             for( Label l : h.getLabels() )\n                 l.nodeProvisioner.update();\n         }"
    },
    {
        "commit_id": "f5f77bf2b54c12870fbdf51daf2b29c4f57fb7fe",
        "commit_message": "[FIXED JENKINS-13826] Include file system path in error\n\nInclude the file system path that was checked in the low disk space\nerror message",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f5f77bf2b54c12870fbdf51daf2b29c4f57fb7fe",
        "buggy_code": "return new DiskSpace(s);",
        "fixed_code": "return new DiskSpace(f.getCanonicalPath(), s);",
        "patch": "@@ -89,7 +89,7 @@ public DiskSpace invoke(File f, VirtualChannel channel) throws IOException {\n                 f = new File(System.getProperty(\"java.io.tmpdir\"));\n                 long s = f.getUsableSpace();\n                 if(s<=0)    return null;\n-                return new DiskSpace(s);\n+                return new DiskSpace(f.getCanonicalPath(), s);\n             } catch (LinkageError e) {\n                 // pre-mustang\n                 return null;"
    },
    {
        "commit_id": "33a4c2f08c318d81ee2633363b18797b1732b517",
        "commit_message": "redone the custom workspace support in matrix project.\n\nThe previous implementation was always appending the per-configuration unique suffix, making it impossible for different configuration builds to share workspaces. In this fix, we introduce a secondary field to control the workspace of sub-builds (which can be either absolute or relative to the matrix head workspace.)",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/33a4c2f08c318d81ee2633363b18797b1732b517",
        "buggy_code": "return wsl.allocate(n.getWorkspaceFor((TopLevelItem)getProject()));",
        "fixed_code": "return wsl.allocate(n.getWorkspaceFor((TopLevelItem)getProject()), getBuild());",
        "patch": "@@ -444,7 +444,7 @@ protected Lease decideWorkspace(Node n, WorkspaceList wsl) throws InterruptedExc\n                 return Lease.createDummyLease(n.getRootPath().child(getEnvironment(listener).expand(customWorkspace)));\n             }\n             // TODO: this cast is indicative of abstraction problem\n-            return wsl.allocate(n.getWorkspaceFor((TopLevelItem)getProject()));\n+            return wsl.allocate(n.getWorkspaceFor((TopLevelItem)getProject()), getBuild());\n         }\n \n         public Result run(BuildListener listener) throws Exception {"
    },
    {
        "commit_id": "fe67909c6fd7c45ee47fa4dd8998e0c48adf430f",
        "commit_message": "If the JDK file size is too small, don't use it as a cache.\n\nIn the past JDK download site had served error message with 200 error code, making Jenkins think that the download is actually successful. Without this check, such cache polution will not be corrected.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/fe67909c6fd7c45ee47fa4dd8998e0c48adf430f",
        "buggy_code": "if (cache.exists()) return cache.toURL();",
        "fixed_code": "if (cache.exists() && cache.length()>1*1024*1024) return cache.toURL(); // if the file is too small, don't trust it. In the past, the download site served error message in 200 status code",
        "patch": "@@ -324,7 +324,7 @@ private File getLocalCacheFile(Platform platform, CPU cpu) {\n      */\n     public URL locate(TaskListener log, Platform platform, CPU cpu) throws IOException {\n         File cache = getLocalCacheFile(platform, cpu);\n-        if (cache.exists()) return cache.toURL();\n+        if (cache.exists() && cache.length()>1*1024*1024) return cache.toURL(); // if the file is too small, don't trust it. In the past, the download site served error message in 200 status code\n \n         log.getLogger().println(\"Installing JDK \"+id);\n         JDKFamilyList families = JDKList.all().get(JDKList.class).toList();"
    },
    {
        "commit_id": "668a0cc4dc786dc1b6a726b17db74e9974afa82a",
        "commit_message": "[FIXED JENKINS-13378] Remove XML string writer from IOException2 when XPath error occurs.\n\nRemove XML string writer from IOException2 message when XPath error\noccurs in /api/xml request.\n\nThe XML string writer has the potential to be very large (many\nmegabytes or even gigabytes) and these exceptions will be logged to\nthe default jenkins logfile by winstone. This has the potential to\nquickly use all available disk space if, for example, a jenkins poller\n(i.e. a chrome extension) makes frequent calls to the API that cause\nerrors.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/668a0cc4dc786dc1b6a726b17db74e9974afa82a",
        "buggy_code": "throw new IOException2(\"Failed to do XPath/wrapper handling. XML is as follows:\"+sw,e);",
        "fixed_code": "throw new IOException2(\"Failed to do XPath/wrapper handling.\",e);",
        "patch": "@@ -139,7 +139,7 @@ public void doXml(StaplerRequest req, StaplerResponse rsp,\n             }\n \n         } catch (DocumentException e) {\n-            throw new IOException2(\"Failed to do XPath/wrapper handling. XML is as follows:\"+sw,e);\n+            throw new IOException2(\"Failed to do XPath/wrapper handling.\",e);\n         }\n \n         OutputStream o = rsp.getCompressedOutputStream(req);"
    },
    {
        "commit_id": "dbaf2e8f74b6b06a8629034fb650b6538b01da12",
        "commit_message": "bug in the lock",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/dbaf2e8f74b6b06a8629034fb650b6538b01da12",
        "buggy_code": "wait();",
        "fixed_code": "markCountLock.wait();",
        "patch": "@@ -144,7 +144,7 @@ public void synchronizeOnMark(Channel ch) throws IOException, InterruptedExcepti\n             \n             // and block until we receive a mark\n             while (markCount==start)\n-                wait();\n+                markCountLock.wait();\n         }\n     }\n     "
    },
    {
        "commit_id": "5a56ba2fb114c2a8f499a172505127bfef83fe74",
        "commit_message": "making it verbose improves error messages",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5a56ba2fb114c2a8f499a172505127bfef83fe74",
        "buggy_code": "return false;",
        "fixed_code": "return true;",
        "patch": "@@ -51,7 +51,7 @@ public void warn(WARNING_ID warning_id, String s, Object... objects) {\n         }\n \n         public boolean isVerbose() {\n-            return false;\n+            return true;\n         }\n \n         public File getCurrentWorkingDirectory() {"
    },
    {
        "commit_id": "398154fca4f9ba6206e8ee8741a57cc4d6d2a359",
        "commit_message": "fixed COMPILATION ERROR",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/398154fca4f9ba6206e8ee8741a57cc4d6d2a359",
        "buggy_code": "SESSION_HASH = Util.getDigestOf(ver+System.currentTimeMillis()).substring(0, 8)",
        "fixed_code": "SESSION_HASH = Util.getDigestOf(ver+System.currentTimeMillis()).substring(0, 8);",
        "patch": "@@ -3709,7 +3709,7 @@ private static void computeVersion(ServletContext context) {\n         context.setAttribute(\"version\",ver);\n \n         VERSION_HASH = Util.getDigestOf(ver).substring(0, 8);\n-        SESSION_HASH = Util.getDigestOf(ver+System.currentTimeMillis()).substring(0, 8)\n+        SESSION_HASH = Util.getDigestOf(ver+System.currentTimeMillis()).substring(0, 8);\n \n         if(ver.equals(\"?\") || Boolean.getBoolean(\"hudson.script.noCache\"))\n             RESOURCE_PATH = \"\";"
    },
    {
        "commit_id": "7415fda1515a6e8eefaf5c37633eefd273746e66",
        "commit_message": "updated the test to fix a regression",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7415fda1515a6e8eefaf5c37633eefd273746e66",
        "buggy_code": "assertNull(p.getSorter());",
        "fixed_code": "assertEqualDataBoundBeans(new NoopMatrixConfigurationSorter(),p.getSorter());",
        "patch": "@@ -14,7 +14,7 @@ public class MatrixConfigurationSorterTest extends HudsonTestCase {\n     public void testConfigRoundtrip() throws Exception {\n         MatrixProject p = createMatrixProject();\n         configRoundtrip((Item)p);\n-        assertNull(p.getSorter());\n+        assertEqualDataBoundBeans(new NoopMatrixConfigurationSorter(),p.getSorter());\n \n         SorterImpl before = new SorterImpl();\n         p.setSorter(before);"
    },
    {
        "commit_id": "8129412155caa9abe747518c7dfe278331e91695",
        "commit_message": "follow up fix to c51114a1970738dcc7d178c486fda03a7ada8755.\n\nThis still is slightly more robust than the original in the sense that it's not affected by the presence/absence of the trailing '/' in itUrl.\n\n----------------------\nComment from @ohtake:\n\ngetContextPath() will return \"\" if Jenkins is served at ROOT.\n\nAssume that getContextPath() => \"\", itUrl => \"iturl\" and urlName => \"urlName\",\nvalue returned was \"/iturl/urlName\", but is \"iturl/urlName\" (no slash at 0).",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8129412155caa9abe747518c7dfe278331e91695",
        "buggy_code": "return joinPath(Stapler.getCurrentRequest().getContextPath(),itUrl,urlName);",
        "fixed_code": "return joinPath(Stapler.getCurrentRequest().getContextPath()+'/'+itUrl,urlName);",
        "patch": "@@ -1204,7 +1204,7 @@ public static String getActionUrl(String itUrl,Action action) {\n             return joinPath(Stapler.getCurrentRequest().getContextPath(),urlName);\n         else\n             // relative URL name\n-            return joinPath(Stapler.getCurrentRequest().getContextPath(),itUrl,urlName);\n+            return joinPath(Stapler.getCurrentRequest().getContextPath()+'/'+itUrl,urlName);\n     }\n \n     /**"
    },
    {
        "commit_id": "95fa53c44c0e6a8ed5dec28b594c6c33c418840c",
        "commit_message": "Adjusted the error handling responsibility.\n\nSo that parameter definitions can define optional parameters.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/95fa53c44c0e6a8ed5dec28b594c6c33c418840c",
        "buggy_code": "File local = File.createTempFile(\"hudson\",\"parameter\");",
        "fixed_code": "File local = File.createTempFile(\"jenkins\",\"parameter\");",
        "patch": "@@ -96,7 +96,7 @@ public ParameterValue createValue(StaplerRequest req) {\n     public ParameterValue createValue(CLICommand command, String value) throws IOException, InterruptedException {\n         // capture the file to the server\n         FilePath src = new FilePath(command.checkChannel(),value);\n-        File local = File.createTempFile(\"hudson\",\"parameter\");\n+        File local = File.createTempFile(\"jenkins\",\"parameter\");\n         src.copyTo(new FilePath(local));\n \n         FileParameterValue p = new FileParameterValue(getName(), local, src.getName());"
    },
    {
        "commit_id": "c24238ebbefda61e991b7b208fc57d7b01cb7ca5",
        "commit_message": "Fix method name",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c24238ebbefda61e991b7b208fc57d7b01cb7ca5",
        "buggy_code": "public void isSundayAndNextRunIsPreviousSunday() throws Exception {",
        "fixed_code": "public void isSundayAndPreviousRunIsPreviousSunday() throws Exception {",
        "patch": "@@ -260,7 +260,7 @@ public void isSundayAndNextRunIsNextSunday() throws Exception {\n     }\n     \n     @Test\n-    public void isSundayAndNextRunIsPreviousSunday() throws Exception {\n+    public void isSundayAndPreviousRunIsPreviousSunday() throws Exception {\n         final Calendar cal = Calendar.getInstance(locale);\n         cal.set(2011, 0, 16, 0, 0, 0); // Sunday, Jan 16th 2011, 00:00\n         final String cronStr = \"0 1 * * 0\"; // Sundays @01:00"
    },
    {
        "commit_id": "867b67ad70c5b319094f3c1cf54441de0400551f",
        "commit_message": "[JENKINS-12119] Fix for symlinks not created when native libs don't work",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/867b67ad70c5b319094f3c1cf54441de0400551f",
        "buggy_code": "public boolean isNative() {",
        "fixed_code": "public static boolean isNative() {",
        "patch": "@@ -25,7 +25,7 @@ public static POSIX get() {\n      * Determine if the jna-posix library could not provide native support, and\n      * used a fallback java implementation which does not support many operations.\n      */\n-    public boolean isNative() {\n+    public static boolean isNative() {\n         return !(posix instanceof JavaPOSIX);\n     }\n "
    },
    {
        "commit_id": "4756d58747eccb12b89f42ac5c2098fc72fa0d6c",
        "commit_message": "Merge pull request #325 from lvotypko/master\n\nFix prematurely re-drawing graph for matrix build.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4756d58747eccb12b89f42ac5c2098fc72fa0d6c",
        "buggy_code": "if(a!=null) return a;",
        "fixed_code": "if(a!=null && (!b.isBuilding())) return a;",
        "patch": "@@ -77,7 +77,7 @@ public AbstractTestResultAction getLastTestResultAction() {\n         AbstractBuild<?,?> b=project.getLastBuild();\n         while(b!=null) {\n             AbstractTestResultAction a = b.getTestResultAction();\n-            if(a!=null) return a;\n+            if(a!=null && (!b.isBuilding())) return a;\n             if(b==tb)\n                 // if even the last successful build didn't produce the test result,\n                 // that means we just don't have any tests configured."
    },
    {
        "commit_id": "65af34a3bdcdc712c9b09c52b9dc37c1c4515f11",
        "commit_message": "Fix prematurely re-drawing graph for matrix build.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/65af34a3bdcdc712c9b09c52b9dc37c1c4515f11",
        "buggy_code": "if(a!=null) return a;",
        "fixed_code": "if(a!=null && (!b.isBuilding())) return a;",
        "patch": "@@ -77,7 +77,7 @@ public AbstractTestResultAction getLastTestResultAction() {\n         AbstractBuild<?,?> b=project.getLastBuild();\n         while(b!=null) {\n             AbstractTestResultAction a = b.getTestResultAction();\n-            if(a!=null) return a;\n+            if(a!=null && (!b.isBuilding())) return a;\n             if(b==tb)\n                 // if even the last successful build didn't produce the test result,\n                 // that means we just don't have any tests configured."
    },
    {
        "commit_id": "92496f99e4c941de9d7dab628466cadcde70d808",
        "commit_message": "[FIXED JENKINS-11130] SEVERE: I/O error in channel Chunked connection when using jenkins-cli.jar\n\nWhen using HTTP full duplex connections the upstream channel can be idle for\nlong periods of time and the webserver will time the connection out. Jenkins\nsees this and terminates the downstream channel causing the unexpected closure\nof the read channel in the CLI client.\n\nTimeout of 15 seconds is based on the 20 second default timeout as seen in\nUbuntu Oneiric Tomcat 6 installations.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/92496f99e4c941de9d7dab628466cadcde70d808",
        "buggy_code": "new PingThread(ch,30*1000) {",
        "fixed_code": "new PingThread(ch,15*1000) {",
        "patch": "@@ -122,7 +122,7 @@ private Channel connectViaHttp(String url) throws IOException {\n         FullDuplexHttpStream con = new FullDuplexHttpStream(jenkins);\n         Channel ch = new Channel(\"Chunked connection to \"+jenkins,\n                 pool,con.getInputStream(),con.getOutputStream());\n-        new PingThread(ch,30*1000) {\n+        new PingThread(ch,15*1000) {\n             protected void onDead() {\n                 // noop. the point of ping is to keep the connection alive\n                 // as most HTTP servers have a rather short read time out"
    },
    {
        "commit_id": "9514e6c939931c283357adde05f3346f1533e759",
        "commit_message": "improving the error message",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9514e6c939931c283357adde05f3346f1533e759",
        "buggy_code": "throw new AbortException(\"Unable to install JDK unless a valid username/password is provided.\");",
        "fixed_code": "throw new AbortException(\"Unable to install JDK unless a valid Oracle account username/password is provided in the system configuration.\");",
        "patch": "@@ -380,7 +380,7 @@ public URL locate(TaskListener log, Platform platform, CPU cpu) throws IOExcepti\n             Secret p = getDescriptor().getPassword();\n             if (u==null || p==null) {\n                 log.hyperlink(getCredentialPageUrl(),\"Oracle now requires Oracle account to download previous versions of JDK. Please specify your Oracle account username/password.\\n\");\n-                throw new AbortException(\"Unable to install JDK unless a valid username/password is provided.\");\n+                throw new AbortException(\"Unable to install JDK unless a valid Oracle account username/password is provided in the system configuration.\");\n             }\n \n             if (totalPageCount++>16) // looping too much"
    },
    {
        "commit_id": "d9ffc44a2fdeae76e6b53b8a140878615408b6c7",
        "commit_message": "[FIXED JENKINS-7288]\n\nUsed ReallySuppress as suggested in the ticket to hopefully fix the\nreboot problem.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d9ffc44a2fdeae76e6b53b8a140878615408b6c7",
        "buggy_code": "args.add(\"/v/qn REBOOT=Suppress INSTALLDIR=\\\\\\\"\"+ expectedLocation +\"\\\\\\\" /L \\\\\\\"\"+logFile+\"\\\\\\\"\");",
        "fixed_code": "args.add(\"/v/qn REBOOT=ReallySuppress INSTALLDIR=\\\\\\\"\"+ expectedLocation +\"\\\\\\\" /L \\\\\\\"\"+logFile+\"\\\\\\\"\");",
        "patch": "@@ -224,7 +224,7 @@ I tried to locate exactly how InstallShield parses the arguments (and why it use\n             args.add(\"/s\");\n             // according to http://community.acresso.com/showthread.php?t=83301, \\\" is the trick to quote values with whitespaces.\n             // Oh Windows, oh windows, why do you have to be so difficult?\n-            args.add(\"/v/qn REBOOT=Suppress INSTALLDIR=\\\\\\\"\"+ expectedLocation +\"\\\\\\\" /L \\\\\\\"\"+logFile+\"\\\\\\\"\");\n+            args.add(\"/v/qn REBOOT=ReallySuppress INSTALLDIR=\\\\\\\"\"+ expectedLocation +\"\\\\\\\" /L \\\\\\\"\"+logFile+\"\\\\\\\"\");\n \n             int r = launcher.launch().cmds(args).stdout(out)\n                     .pwd(new FilePath(launcher.getChannel(), expectedLocation)).join();"
    },
    {
        "commit_id": "97b934206977421ec0d045dfb472da0198264f26",
        "commit_message": "Merge pull request #244 from lacostej/master\n\nFix build",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/97b934206977421ec0d045dfb472da0198264f26",
        "buggy_code": "list.add(r.new Artifact(p,p,p,\"n\"+list.size()));  // Assuming all test inputs don't need urlencoding",
        "fixed_code": "list.add(r.new Artifact(p,p,p,String.valueOf(p.length()),\"n\"+list.size()));  // Assuming all test inputs don't need urlencoding",
        "patch": "@@ -36,7 +36,7 @@ private List<? extends Run<?,?>.Artifact> createArtifactList(String... paths) {\n         Run<FreeStyleProject,FreeStyleBuild> r = new Run<FreeStyleProject,FreeStyleBuild>(null,new GregorianCalendar()) {};\n         Run<FreeStyleProject,FreeStyleBuild>.ArtifactList list = r.new ArtifactList();\n         for (String p : paths) {\n-            list.add(r.new Artifact(p,p,p,\"n\"+list.size()));  // Assuming all test inputs don't need urlencoding\n+            list.add(r.new Artifact(p,p,p,String.valueOf(p.length()),\"n\"+list.size()));  // Assuming all test inputs don't need urlencoding\n         }\n         list.computeDisplayName();\n         return list;"
    },
    {
        "commit_id": "4add1da582193a2fe1a22bd93df175eb37738b5b",
        "commit_message": "JENKINS-7798 broken build fix. Update RunTest to match new Artifact constructor",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4add1da582193a2fe1a22bd93df175eb37738b5b",
        "buggy_code": "list.add(r.new Artifact(p,p,p,\"n\"+list.size()));  // Assuming all test inputs don't need urlencoding",
        "fixed_code": "list.add(r.new Artifact(p,p,p,String.valueOf(p.length()),\"n\"+list.size()));  // Assuming all test inputs don't need urlencoding",
        "patch": "@@ -36,7 +36,7 @@ private List<? extends Run<?,?>.Artifact> createArtifactList(String... paths) {\n         Run<FreeStyleProject,FreeStyleBuild> r = new Run<FreeStyleProject,FreeStyleBuild>(null,new GregorianCalendar()) {};\n         Run<FreeStyleProject,FreeStyleBuild>.ArtifactList list = r.new ArtifactList();\n         for (String p : paths) {\n-            list.add(r.new Artifact(p,p,p,\"n\"+list.size()));  // Assuming all test inputs don't need urlencoding\n+            list.add(r.new Artifact(p,p,p,String.valueOf(p.length()),\"n\"+list.size()));  // Assuming all test inputs don't need urlencoding\n         }\n         list.computeDisplayName();\n         return list;"
    },
    {
        "commit_id": "9522cecfe3f6fb95a2bf8196eaf476ea4d9b6df4",
        "commit_message": "FindBugs bug cleanup",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9522cecfe3f6fb95a2bf8196eaf476ea4d9b6df4",
        "buggy_code": "private final Channel channel;",
        "fixed_code": "private transient final Channel channel;",
        "patch": "@@ -59,7 +59,7 @@\n  * @author Kohsuke Kawaguchi\n  */\n public class CliManagerImpl implements CliEntryPoint, Serializable {\n-    private final Channel channel;\n+    private transient final Channel channel;\n \n     public CliManagerImpl(Channel channel) {\n         this.channel = channel;"
    },
    {
        "commit_id": "9522cecfe3f6fb95a2bf8196eaf476ea4d9b6df4",
        "commit_message": "FindBugs bug cleanup",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9522cecfe3f6fb95a2bf8196eaf476ea4d9b6df4",
        "buggy_code": "private Object readResolve() {",
        "fixed_code": "protected Object readResolve() {",
        "patch": "@@ -336,7 +336,7 @@ public int hashCode() {\n     /**\n      * Invoked by XStream when this object is read into memory.\n      */\n-    private Object readResolve() {\n+    protected Object readResolve() {\n         // convert the old format to the new one\n         if (launcher == null) {\n             launcher = (agentCommand == null || agentCommand.trim().length() == 0)"
    },
    {
        "commit_id": "9522cecfe3f6fb95a2bf8196eaf476ea4d9b6df4",
        "commit_message": "FindBugs bug cleanup",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9522cecfe3f6fb95a2bf8196eaf476ea4d9b6df4",
        "buggy_code": "private Object readResolve() {",
        "fixed_code": "protected Object readResolve() {",
        "patch": "@@ -153,7 +153,7 @@ protected String translateFor(Node node, TaskListener log) throws IOException, I\n     /**\n      * Invoked by XStream when this object is read into memory.\n      */\n-    private Object readResolve() {\n+    protected Object readResolve() {\n         if(properties==null)\n             properties = new DescribableList<ToolProperty<?>,ToolPropertyDescriptor>(Saveable.NOOP);\n         for (ToolProperty<?> p : properties)"
    },
    {
        "commit_id": "9522cecfe3f6fb95a2bf8196eaf476ea4d9b6df4",
        "commit_message": "FindBugs bug cleanup",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9522cecfe3f6fb95a2bf8196eaf476ea4d9b6df4",
        "buggy_code": "public class ArgumentListBuilder implements Serializable {",
        "fixed_code": "public class ArgumentListBuilder implements Serializable, Cloneable {",
        "patch": "@@ -43,7 +43,7 @@\n  *\n  * @author Kohsuke Kawaguchi\n  */\n-public class ArgumentListBuilder implements Serializable {\n+public class ArgumentListBuilder implements Serializable, Cloneable {\n     private final List<String> args = new ArrayList<String>();\n     /**\n      * Bit mask indicating arguments that shouldn't be echoed-back (e.g., password)"
    },
    {
        "commit_id": "3aed3df5d91d018d79475fd9cdd6e9a5b5e3d6ad",
        "commit_message": "fix log message",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3aed3df5d91d018d79475fd9cdd6e9a5b5e3d6ad",
        "buggy_code": "logger.println(\"using settings config with name \" + config.name);",
        "fixed_code": "logger.println(\"using global settings config with name \" + config.name);",
        "patch": "@@ -656,7 +656,7 @@ protected Result doRun(final BuildListener listener) throws Exception {\n                                 logger.println(\" your Apache Maven build is setup to use a global settings config with id \" + globalSettingsConfigId\n                                                    + \" but cannot find the config\");\n                             } else {\n-                                logger.println(\"using settings config with name \" + config.name);\n+                                logger.println(\"using global settings config with name \" + config.name);\n                                 String globalSettingsContent = config.content;\n                                 if (globalSettingsContent != null ) {\n                                     tmpGlobalSettingsFile = File.createTempFile( \"global-maven-settings\", \"xml\" );"
    },
    {
        "commit_id": "ad6ee4754f55fa6e46b7123cbdca33ab4d440e61",
        "commit_message": "fix adding argument -gs for maven global settings",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ad6ee4754f55fa6e46b7123cbdca33ab4d440e61",
        "buggy_code": "margs.add(\"-gs \" + project.globalSettingConfigPath);",
        "fixed_code": "margs.add(\"-gs\" , project.globalSettingConfigPath);",
        "patch": "@@ -737,7 +737,7 @@ protected Result doRun(final BuildListener listener) throws Exception {\n                             margs.add(\"-Dmaven.repo.local=\"+getWorkspace().child(\".repository\"));\n \n                         if (project.globalSettingConfigPath != null)\n-                            margs.add(\"-gs \" + project.globalSettingConfigPath);\n+                            margs.add(\"-gs\" , project.globalSettingConfigPath);\n \n \n                         "
    },
    {
        "commit_id": "72f6f684297b68be19289149d0eed3d76a88f6f5",
        "commit_message": "[FIXED JENKINS-10300] Empty emailAddress causes Mailer error.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/72f6f684297b68be19289149d0eed3d76a88f6f5",
        "buggy_code": "if(emailAddress!=null)",
        "fixed_code": "if(Util.fixEmptyAndTrim(emailAddress)!=null)",
        "patch": "@@ -478,7 +478,7 @@ public UserProperty(String emailAddress) {\n \n         @Exported\n         public String getAddress() {\n-            if(emailAddress!=null)\n+            if(Util.fixEmptyAndTrim(emailAddress)!=null)\n                 return emailAddress;\n \n             // try the inference logic"
    },
    {
        "commit_id": "a3354b12cfc5f554487b59f35e5a0bdbce8861a6",
        "commit_message": "[FIXED JENKINS-9203] in light of 9c965617b3b385ef65eaf50860865c05a114a01d, I think the proper fix is to define a mechanism to abort with status.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a3354b12cfc5f554487b59f35e5a0bdbce8861a6",
        "buggy_code": "return Result.ABORTED;",
        "fixed_code": "return Executor.currentExecutor().abortResult();",
        "patch": "@@ -306,7 +306,7 @@ protected Result doRun(BuildListener listener) throws Exception {\n                 return r;\n             } catch( InterruptedException e ) {\n                 logger.println(\"Aborted\");\n-                return Result.ABORTED;\n+                return Executor.currentExecutor().abortResult();\n             } catch (AggregatorFailureException e) {\n                 return Result.FAILURE;\n             }"
    },
    {
        "commit_id": "a3354b12cfc5f554487b59f35e5a0bdbce8861a6",
        "commit_message": "[FIXED JENKINS-9203] in light of 9c965617b3b385ef65eaf50860865c05a114a01d, I think the proper fix is to define a mechanism to abort with status.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a3354b12cfc5f554487b59f35e5a0bdbce8861a6",
        "buggy_code": "r = ABORTED;",
        "fixed_code": "r = Executor.currentExecutor().abortResult();",
        "patch": "@@ -139,7 +139,7 @@ protected Result doRun(BuildListener listener) throws Exception {\n                 if(!build(listener,project.getBuilders()))\n                     r = FAILURE;\n             } catch (InterruptedException e) {\n-                r = ABORTED;\n+                r = Executor.currentExecutor().abortResult();\n                 throw e;\n             } finally {\n                 if (r != null) setResult(r);"
    },
    {
        "commit_id": "a3354b12cfc5f554487b59f35e5a0bdbce8861a6",
        "commit_message": "[FIXED JENKINS-9203] in light of 9c965617b3b385ef65eaf50860865c05a114a01d, I think the proper fix is to define a mechanism to abort with status.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a3354b12cfc5f554487b59f35e5a0bdbce8861a6",
        "buggy_code": "result = Result.ABORTED;",
        "fixed_code": "result = Executor.currentExecutor().abortResult();",
        "patch": "@@ -1388,7 +1388,7 @@ protected final void run(Runner job) {\n                     LOGGER.log(FINE, \"Build \"+this+\" aborted\",e);\n                 } catch( InterruptedException e) {\n                     // aborted\n-                    result = Result.ABORTED;\n+                    result = Executor.currentExecutor().abortResult();\n                     listener.getLogger().println(Messages.Run_BuildAborted());\n                     LOGGER.log(Level.INFO,toString()+\" aborted\",e);\n                 } catch( Throwable e ) {"
    },
    {
        "commit_id": "4f103ee6a88109649dd4cfc9df8797de6c3ab616",
        "commit_message": "Merge pull request #154 from magnayn/master\n\nFix non-appearance of the version number",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4f103ee6a88109649dd4cfc9df8797de6c3ab616",
        "buggy_code": "InputStream is = Jenkins.class.getResourceAsStream(\"hudson-version.properties\");",
        "fixed_code": "InputStream is = Jenkins.class.getResourceAsStream(\"jenkins-version.properties\");",
        "patch": "@@ -3433,7 +3433,7 @@ private static void computeVersion(ServletContext context) {\n         // set the version\n         Properties props = new Properties();\n         try {\n-            InputStream is = Jenkins.class.getResourceAsStream(\"hudson-version.properties\");\n+            InputStream is = Jenkins.class.getResourceAsStream(\"jenkins-version.properties\");\n             if(is!=null)\n                 props.load(is);\n         } catch (IOException e) {"
    },
    {
        "commit_id": "2adef6719ab50a2b54c3fda8a5cadfd37174b22e",
        "commit_message": "Merge remote branch 'origin/master' into momo\n\n* origin/master: (91 commits)\n  Parsing can happen in the forked Maven process. Support remoting.\n  Fixed the test failures.\n  Strip whitespace on maven installation.\n  updated ja.\n  Use relative path to validate new view name (in order to allow ViewGroups like NestedView to override)\n  Added i18n.\n  moved to the model package to colocate with the Result class, since I don't think this class is tied by itself to the notification.\n  doc improvements\n  enum to describe a result trend - i.e. change from the previous to the current result\n  Recording the previous change.\n  Do not include trailing periods in console links.\n  doc improvements\n  Added a hook to customize the XML parser behaviour.\n  - Renamed from 'linked' to 'base' - Fixed the bug where multi-level base setting wasn't working properly - Improved docs\n  Updated style\n  Added convenience method for getting configuration run\n  Initial commit\n  the trunk is toward 1.416-SNAPSHOT\n  creating an RC branch\n  updated changelog as a part of the release\n  ...\n\nConflicts:\n\tcore/src/main/java/hudson/slaves/NodeProvisioner.java\n\tmaven-plugin/src/main/java/hudson/maven/MavenModule.java\n\tmaven-plugin/src/main/java/hudson/maven/RedeployPublisher.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2adef6719ab50a2b54c3fda8a5cadfd37174b22e",
        "buggy_code": "private static final Pattern URL = Pattern.compile(\"\\\\b(http|https|ftp)://[^\\\\s<>]+[^\\\\s<>,:\\\"'()\\\\[\\\\]=]\");",
        "fixed_code": "private static final Pattern URL = Pattern.compile(\"\\\\b(http|https|ftp)://[^\\\\s<>]+[^\\\\s<>,\\\\.:\\\"'()\\\\[\\\\]=]\");",
        "patch": "@@ -40,7 +40,7 @@ public ConsoleAnnotator annotate(Object context, MarkupText text) {\n          * In addition, the last character shouldn't be ',' ':', '\"', etc, as often those things show up right next\n          * to URL in plain text (e.g., test=\"http://www.example.com/\")\n          */\n-        private static final Pattern URL = Pattern.compile(\"\\\\b(http|https|ftp)://[^\\\\s<>]+[^\\\\s<>,:\\\"'()\\\\[\\\\]=]\");\n+        private static final Pattern URL = Pattern.compile(\"\\\\b(http|https|ftp)://[^\\\\s<>]+[^\\\\s<>,\\\\.:\\\"'()\\\\[\\\\]=]\");\n \n         private static final String OPEN = \"'\\\"()[]<>\";\n         private static final String CLOSE= \"'\\\")(][><\";"
    },
    {
        "commit_id": "2adef6719ab50a2b54c3fda8a5cadfd37174b22e",
        "commit_message": "Merge remote branch 'origin/master' into momo\n\n* origin/master: (91 commits)\n  Parsing can happen in the forked Maven process. Support remoting.\n  Fixed the test failures.\n  Strip whitespace on maven installation.\n  updated ja.\n  Use relative path to validate new view name (in order to allow ViewGroups like NestedView to override)\n  Added i18n.\n  moved to the model package to colocate with the Result class, since I don't think this class is tied by itself to the notification.\n  doc improvements\n  enum to describe a result trend - i.e. change from the previous to the current result\n  Recording the previous change.\n  Do not include trailing periods in console links.\n  doc improvements\n  Added a hook to customize the XML parser behaviour.\n  - Renamed from 'linked' to 'base' - Fixed the bug where multi-level base setting wasn't working properly - Improved docs\n  Updated style\n  Added convenience method for getting configuration run\n  Initial commit\n  the trunk is toward 1.416-SNAPSHOT\n  creating an RC branch\n  updated changelog as a part of the release\n  ...\n\nConflicts:\n\tcore/src/main/java/hudson/slaves/NodeProvisioner.java\n\tmaven-plugin/src/main/java/hudson/maven/MavenModule.java\n\tmaven-plugin/src/main/java/hudson/maven/RedeployPublisher.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2adef6719ab50a2b54c3fda8a5cadfd37174b22e",
        "buggy_code": "super(name, home, properties);",
        "fixed_code": "super(Util.fixEmptyAndTrim(name), Util.fixEmptyAndTrim(home), properties);",
        "patch": "@@ -381,7 +381,7 @@ public MavenInstallation(String name, String home) {\n \n         @DataBoundConstructor\n         public MavenInstallation(String name, String home, List<? extends ToolProperty<?>> properties) {\n-            super(name, home, properties);\n+            super(Util.fixEmptyAndTrim(name), Util.fixEmptyAndTrim(home), properties);\n         }\n \n         /**"
    },
    {
        "commit_id": "2adef6719ab50a2b54c3fda8a5cadfd37174b22e",
        "commit_message": "Merge remote branch 'origin/master' into momo\n\n* origin/master: (91 commits)\n  Parsing can happen in the forked Maven process. Support remoting.\n  Fixed the test failures.\n  Strip whitespace on maven installation.\n  updated ja.\n  Use relative path to validate new view name (in order to allow ViewGroups like NestedView to override)\n  Added i18n.\n  moved to the model package to colocate with the Result class, since I don't think this class is tied by itself to the notification.\n  doc improvements\n  enum to describe a result trend - i.e. change from the previous to the current result\n  Recording the previous change.\n  Do not include trailing periods in console links.\n  doc improvements\n  Added a hook to customize the XML parser behaviour.\n  - Renamed from 'linked' to 'base' - Fixed the bug where multi-level base setting wasn't working properly - Improved docs\n  Updated style\n  Added convenience method for getting configuration run\n  Initial commit\n  the trunk is toward 1.416-SNAPSHOT\n  creating an RC branch\n  updated changelog as a part of the release\n  ...\n\nConflicts:\n\tcore/src/main/java/hudson/slaves/NodeProvisioner.java\n\tmaven-plugin/src/main/java/hudson/maven/MavenModule.java\n\tmaven-plugin/src/main/java/hudson/maven/RedeployPublisher.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2adef6719ab50a2b54c3fda8a5cadfd37174b22e",
        "buggy_code": "r = RemoteClassLoader.create(getClass().getClassLoader(),classLoaderProxy);",
        "fixed_code": "r = RemoteClassLoader.create(channel.baseClassLoader,classLoaderProxy);",
        "patch": "@@ -54,7 +54,7 @@ public synchronized ClassLoader get(IClassLoader classLoaderProxy) {\n         if(r==null) {\n             // we need to be able to use the same hudson.remoting classes, hence delegate\n             // to this class loader.\n-            r = RemoteClassLoader.create(getClass().getClassLoader(),classLoaderProxy);\n+            r = RemoteClassLoader.create(channel.baseClassLoader,classLoaderProxy);\n             classLoaders.put(classLoaderProxy,r);\n         }\n         return r;"
    },
    {
        "commit_id": "d9e6602194916fc3328a9533ff03d18b6026c489",
        "commit_message": "Merge pull request #150 from happygiraffe/master\n\nFix whitespace in maven installation",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d9e6602194916fc3328a9533ff03d18b6026c489",
        "buggy_code": "super(name, home, properties);",
        "fixed_code": "super(Util.fixEmptyAndTrim(name), Util.fixEmptyAndTrim(home), properties);",
        "patch": "@@ -381,7 +381,7 @@ public MavenInstallation(String name, String home) {\n \n         @DataBoundConstructor\n         public MavenInstallation(String name, String home, List<? extends ToolProperty<?>> properties) {\n-            super(name, home, properties);\n+            super(Util.fixEmptyAndTrim(name), Util.fixEmptyAndTrim(home), properties);\n         }\n \n         /**"
    },
    {
        "commit_id": "017e445686156b12587d79920c61d1e0e06b3985",
        "commit_message": "Move hudson.model.Jenkins to be jenkins.model.Jenkins - part III\n\nFix code that accesses functionality though package protected interfaces;\n- access through AbstractCIBase\n- make FullDuplexHttpChannel and OverallLoadStatistics public\n\nTest case utility function for adjusting the quiet period variable\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/017e445686156b12587d79920c61d1e0e06b3985",
        "buggy_code": "abstract class FullDuplexHttpChannel {",
        "fixed_code": "abstract public class FullDuplexHttpChannel {",
        "patch": "@@ -43,7 +43,7 @@\n  *\n  * @author Kohsuke Kawaguchi\n  */\n-abstract class FullDuplexHttpChannel {\n+abstract public class FullDuplexHttpChannel {\n     private Channel channel;\n \n     private InputStream upload;"
    },
    {
        "commit_id": "017e445686156b12587d79920c61d1e0e06b3985",
        "commit_message": "Move hudson.model.Jenkins to be jenkins.model.Jenkins - part III\n\nFix code that accesses functionality though package protected interfaces;\n- access through AbstractCIBase\n- make FullDuplexHttpChannel and OverallLoadStatistics public\n\nTest case utility function for adjusting the quiet period variable\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/017e445686156b12587d79920c61d1e0e06b3985",
        "buggy_code": "hudson.quietPeriod = 3;",
        "fixed_code": "setQuietPeriod(3);",
        "patch": "@@ -44,7 +44,7 @@ public class DependencyGraphTest extends HudsonTestCase {\n      * Tests triggering downstream projects with DependencyGraph.Dependency\n      */\n     public void testTriggerJob() throws Exception {\n-        hudson.quietPeriod = 3;\n+        setQuietPeriod(3);\n         Project p = createFreeStyleProject(),\n             down1 = createFreeStyleProject(), down2 = createFreeStyleProject();\n         // Add one standard downstream job:"
    },
    {
        "commit_id": "017e445686156b12587d79920c61d1e0e06b3985",
        "commit_message": "Move hudson.model.Jenkins to be jenkins.model.Jenkins - part III\n\nFix code that accesses functionality though package protected interfaces;\n- access through AbstractCIBase\n- make FullDuplexHttpChannel and OverallLoadStatistics public\n\nTest case utility function for adjusting the quiet period variable\n\nSigned-off-by: Nigel Magnay <nigel.magnay@gmail.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/017e445686156b12587d79920c61d1e0e06b3985",
        "buggy_code": "hudson.quietPeriod = 0;",
        "fixed_code": "setQuietPeriod(0);",
        "patch": "@@ -178,7 +178,7 @@ public void testFoldableCauseAction() throws Exception {\n         final OneShotEvent buildStarted = new OneShotEvent();\n         final OneShotEvent buildShouldComplete = new OneShotEvent();\n \n-        hudson.quietPeriod = 0;\n+        setQuietPeriod(0);\n         FreeStyleProject project = createFreeStyleProject();\n         // Make build sleep a while so it blocks new builds\n         project.getBuildersList().add(new TestBuilder() {"
    },
    {
        "commit_id": "6243cf554140f48b43dae5b7fc97285c7ca9d69b",
        "commit_message": "fixed a bug. Some descriptors return null from their display name",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6243cf554140f48b43dae5b7fc97285c7ca9d69b",
        "buggy_code": "return ((Descriptor)this.instance).getDisplayName().compareTo(((Descriptor)that.instance).getDisplayName());",
        "fixed_code": "return Util.fixNull(((Descriptor)this.instance).getDisplayName()).compareTo(Util.fixNull((((Descriptor)that.instance).getDisplayName())));",
        "patch": "@@ -77,7 +77,7 @@ public int compareTo(ExtensionComponent<T> that) {\n \n         // make the order bit more deterministic among extensions of the same ordinal\n         if (this.instance instanceof Descriptor) {\n-            return ((Descriptor)this.instance).getDisplayName().compareTo(((Descriptor)that.instance).getDisplayName());\n+            return Util.fixNull(((Descriptor)this.instance).getDisplayName()).compareTo(Util.fixNull((((Descriptor)that.instance).getDisplayName())));\n         } else {\n             return this.instance.getClass().getName().compareTo(that.instance.getClass().getName());\n         }"
    },
    {
        "commit_id": "e761d80f4d53a0f368fa8e9fbb06f01db247f8cc",
        "commit_message": "[FIXED JENKINS-4617]\nthis and the previous commit constitutes the fix.\nAlso added a test case.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e761d80f4d53a0f368fa8e9fbb06f01db247f8cc",
        "buggy_code": "if (pr!=null && pr.isWorseThan(Result.UNSTABLE)) {",
        "fixed_code": "if (pr!=null && pr.isWorseThan(Result.SUCCESS)) {",
        "patch": "@@ -269,7 +269,7 @@ public Set<User> getCulprits() {\n             R p = getPreviousCompletedBuild();\n             if (p !=null && isBuilding()) {\n                 Result pr = p.getResult();\n-                if (pr!=null && pr.isWorseThan(Result.UNSTABLE)) {\n+                if (pr!=null && pr.isWorseThan(Result.SUCCESS)) {\n                     // we are still building, so this is just the current latest information,\n                     // but we seems to be failing so far, so inherit culprits from the previous build.\n                     // isBuilding() check is to avoid recursion when loading data from old Hudson, which doesn't record"
    },
    {
        "commit_id": "2b7ebb54375c73b35e091769aa916a5627842396",
        "commit_message": "fix compilation error.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2b7ebb54375c73b35e091769aa916a5627842396",
        "buggy_code": "public Node reconfigure(StaplerRequest req, JSONObject form) throws FormException {",
        "fixed_code": "public Node reconfigure(final StaplerRequest req, JSONObject form) throws FormException {",
        "patch": "@@ -367,7 +367,7 @@ public final boolean hasPermission(Permission permission) {\n         return getACL().hasPermission(permission);\n     }\n \n-    public Node reconfigure(StaplerRequest req, JSONObject form) throws FormException {\n+    public Node reconfigure(final StaplerRequest req, JSONObject form) throws FormException {\n         if (form==null)     return null;\n \n         final JSONObject jsonForProperties = form.optJSONObject(\"nodeProperties\");"
    },
    {
        "commit_id": "2ae9e56b8d93b508c704a3eea2390e0a0c173377",
        "commit_message": "crap, merge error",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2ae9e56b8d93b508c704a3eea2390e0a0c173377",
        "buggy_code": "public Node reconfigure(final StaplerRequest req, JSONObject form) throws FormException {",
        "fixed_code": "public Node reconfigure(StaplerRequest req, JSONObject form) throws FormException {",
        "patch": "@@ -367,7 +367,7 @@ public final boolean hasPermission(Permission permission) {\n         return getACL().hasPermission(permission);\n     }\n \n-    public Node reconfigure(final StaplerRequest req, JSONObject form) throws FormException {\n+    public Node reconfigure(StaplerRequest req, JSONObject form) throws FormException {\n         if (form==null)     return null;\n \n         final JSONObject jsonForProperties = form.optJSONObject(\"nodeProperties\");"
    },
    {
        "commit_id": "f79ee543de199a7f3d5393cabf7380d2ef38b3d2",
        "commit_message": "fix compilation error.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f79ee543de199a7f3d5393cabf7380d2ef38b3d2",
        "buggy_code": "public Node reconfigure(StaplerRequest req, JSONObject form) throws FormException {",
        "fixed_code": "public Node reconfigure(final StaplerRequest req, JSONObject form) throws FormException {",
        "patch": "@@ -367,7 +367,7 @@ public final boolean hasPermission(Permission permission) {\n         return getACL().hasPermission(permission);\n     }\n \n-    public Node reconfigure(StaplerRequest req, JSONObject form) throws FormException {\n+    public Node reconfigure(final StaplerRequest req, JSONObject form) throws FormException {\n         if (form==null)     return null;\n \n         final JSONObject jsonForProperties = form.optJSONObject(\"nodeProperties\");"
    },
    {
        "commit_id": "7c2a626bc3d6da34807d19ab193c89f47697bcaa",
        "commit_message": "improved error diagnostics",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7c2a626bc3d6da34807d19ab193c89f47697bcaa",
        "buggy_code": "throw new IOException2(e);",
        "fixed_code": "throw new IOException2(\"Failed to do XPath/wrapper handling. XML is as follows:\"+sw,e);",
        "patch": "@@ -139,7 +139,7 @@ public void doXml(StaplerRequest req, StaplerResponse rsp,\n             }\n \n         } catch (DocumentException e) {\n-            throw new IOException2(e);\n+            throw new IOException2(\"Failed to do XPath/wrapper handling. XML is as follows:\"+sw,e);\n         }\n \n         OutputStream o = rsp.getCompressedOutputStream(req);"
    },
    {
        "commit_id": "9f09e8ac59e97ee1f79f83e505488ebd98d8d6b6",
        "commit_message": "[FIXED JENKINS-8892] set the classloader for GroovyShell\n\nOtherwise plugin classes won't resolve.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9f09e8ac59e97ee1f79f83e505488ebd98d8d6b6",
        "buggy_code": "GroovyShell groovy = new GroovyShell(binding);",
        "fixed_code": "GroovyShell groovy = new GroovyShell(Hudson.getInstance().getPluginManager().uberClassLoader, binding);",
        "patch": "@@ -89,7 +89,7 @@ protected int run() throws Exception {\n             }\n         }\n \n-        GroovyShell groovy = new GroovyShell(binding);\n+        GroovyShell groovy = new GroovyShell(Hudson.getInstance().getPluginManager().uberClassLoader, binding);\n         groovy.run(loadScript(),\"RemoteClass\",remaining.toArray(new String[remaining.size()]));\n         return 0;\n     }"
    },
    {
        "commit_id": "4802e09535cb8db7d002b638c5d63dfe8c522930",
        "commit_message": "replaced hard coded error message and added German translations",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4802e09535cb8db7d002b638c5d63dfe8c522930",
        "buggy_code": "return FormValidation.error(\"Alternate settings file must be a relative path.\");",
        "fixed_code": "return FormValidation.error(Messages.MavenModuleSet_AlternateSettingsRelativePath());",
        "patch": "@@ -852,7 +852,7 @@ public FormValidation doCheckFileRelative(@QueryParameter String value) throws I\n             return FormValidation.ok();\n         }\n         if ((v.startsWith(\"/\")) || (v.startsWith(\"\\\\\")) || (v.matches(\"^\\\\w\\\\:\\\\\\\\.*\"))) {\n-            return FormValidation.error(\"Alternate settings file must be a relative path.\");\n+            return FormValidation.error(Messages.MavenModuleSet_AlternateSettingsRelativePath());\n         }\n         \n         MavenModuleSetBuild lb = getLastBuild();"
    },
    {
        "commit_id": "24eb579d0c7710d0360c13d032386475938135ec",
        "commit_message": "Merge branch 'master' of https://github.com/mpeltonen/jenkins\n\nAnd fix my previous bad push.\nI apologize folks !! my bad :-(\n\nConflicts:\n\tchangelog.html\n\ttest/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/24eb579d0c7710d0360c13d032386475938135ec",
        "buggy_code": "if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();",
        "fixed_code": "if(value==null) return FormValidation.ok();",
        "patch": "@@ -1819,7 +1819,7 @@ public FormValidation validateRelativePath(String value, boolean errorIfNotExist\n         value = fixEmpty(value);\n \n         // none entered yet, or something is seriously wrong\n-        if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();\n+        if(value==null) return FormValidation.ok();\n \n         // a common mistake is to use wildcard\n         if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());"
    },
    {
        "commit_id": "24eb579d0c7710d0360c13d032386475938135ec",
        "commit_message": "Merge branch 'master' of https://github.com/mpeltonen/jenkins\n\nAnd fix my previous bad push.\nI apologize folks !! my bad :-(\n\nConflicts:\n\tchangelog.html\n\ttest/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/24eb579d0c7710d0360c13d032386475938135ec",
        "buggy_code": "StringBuffer buf = new StringBuffer();",
        "fixed_code": "StringBuilder buf = new StringBuilder(s.length() + 10);",
        "patch": "@@ -193,7 +193,7 @@ public int groupCount() {\n          * Replaces the group tokens like \"$0\", \"$1\", and etc with their actual matches.\n          */\n         public String replace(String s) {\n-            StringBuffer buf = new StringBuffer();\n+            StringBuilder buf = new StringBuilder(s.length() + 10);\n \n             for( int i=0; i<s.length(); i++) {\n                 char ch = s.charAt(i);"
    },
    {
        "commit_id": "24eb579d0c7710d0360c13d032386475938135ec",
        "commit_message": "Merge branch 'master' of https://github.com/mpeltonen/jenkins\n\nAnd fix my previous bad push.\nI apologize folks !! my bad :-(\n\nConflicts:\n\tchangelog.html\n\ttest/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/24eb579d0c7710d0360c13d032386475938135ec",
        "buggy_code": "log.printf(\"ln %s %s failed\\n\",targetPath, new File(baseDir, symlinkPath));",
        "fixed_code": "log.printf(\"ln %s %s failed%n\",targetPath, new File(baseDir, symlinkPath));",
        "patch": "@@ -1033,7 +1033,7 @@ public static void createSymlink(File baseDir, String targetPath, String symlink\n                 listener.getLogger().println(String.format(\"ln -s %s %s failed: %d %s\",targetPath, symlinkFile, r, errmsg));\n         } catch (IOException e) {\n             PrintStream log = listener.getLogger();\n-            log.printf(\"ln %s %s failed\\n\",targetPath, new File(baseDir, symlinkPath));\n+            log.printf(\"ln %s %s failed%n\",targetPath, new File(baseDir, symlinkPath));\n             Util.displayIOException(e,listener);\n             e.printStackTrace( log );\n         }"
    },
    {
        "commit_id": "24eb579d0c7710d0360c13d032386475938135ec",
        "commit_message": "Merge branch 'master' of https://github.com/mpeltonen/jenkins\n\nAnd fix my previous bad push.\nI apologize folks !! my bad :-(\n\nConflicts:\n\tchangelog.html\n\ttest/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/24eb579d0c7710d0360c13d032386475938135ec",
        "buggy_code": "logger.printf(\"Touchstone configurations resulted in %s, so aborting...\\n\", r);",
        "fixed_code": "logger.printf(\"Touchstone configurations resulted in %s, so aborting...%n\", r);",
        "patch": "@@ -220,7 +220,7 @@ protected Result doRun(BuildListener listener) throws Exception {\n                 }\n                 \n                 if (p.getTouchStoneResultCondition() != null && r.isWorseThan(p.getTouchStoneResultCondition())) {\n-                    logger.printf(\"Touchstone configurations resulted in %s, so aborting...\\n\", r);\n+                    logger.printf(\"Touchstone configurations resulted in %s, so aborting...%n\", r);\n                     return r;\n                 }\n                 "
    },
    {
        "commit_id": "24eb579d0c7710d0360c13d032386475938135ec",
        "commit_message": "Merge branch 'master' of https://github.com/mpeltonen/jenkins\n\nAnd fix my previous bad push.\nI apologize folks !! my bad :-(\n\nConflicts:\n\tchangelog.html\n\ttest/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/24eb579d0c7710d0360c13d032386475938135ec",
        "buggy_code": "if (c!=null && c.getProperty(\"slave\")==Boolean.TRUE)",
        "fixed_code": "if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))",
        "patch": "@@ -580,7 +580,7 @@ public static VirtualChannel getChannelToMaster() {\n \n         // if this method is called from within the slave computation thread, this should work\n         Channel c = Channel.current();\n-        if (c!=null && c.getProperty(\"slave\")==Boolean.TRUE)\n+        if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))\n             return c;\n \n         return null;"
    },
    {
        "commit_id": "24eb579d0c7710d0360c13d032386475938135ec",
        "commit_message": "Merge branch 'master' of https://github.com/mpeltonen/jenkins\n\nAnd fix my previous bad push.\nI apologize folks !! my bad :-(\n\nConflicts:\n\tchangelog.html\n\ttest/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/24eb579d0c7710d0360c13d032386475938135ec",
        "buggy_code": "StringBuffer buf = new StringBuffer();",
        "fixed_code": "StringBuilder buf = new StringBuilder();",
        "patch": "@@ -105,7 +105,7 @@ public int digit(int idx) {\n \n     @Override\n     public String toString() {\n-        StringBuffer buf = new StringBuffer();\n+        StringBuilder buf = new StringBuilder();\n         for( int i=0; i<digits.length; i++ ) {\n             if(i!=0)    buf.append('.');\n             buf.append( Integer.toString(digits[i]) );"
    },
    {
        "commit_id": "24eb579d0c7710d0360c13d032386475938135ec",
        "commit_message": "Merge branch 'master' of https://github.com/mpeltonen/jenkins\n\nAnd fix my previous bad push.\nI apologize folks !! my bad :-(\n\nConflicts:\n\tchangelog.html\n\ttest/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/24eb579d0c7710d0360c13d032386475938135ec",
        "buggy_code": "assertTrue(data.core.url.startsWith(\"http://updates.hudson-labs.org/\"));",
        "fixed_code": "assertTrue(data.core.url.startsWith(\"http://updates.jenkins-ci.org/\"));",
        "patch": "@@ -51,7 +51,7 @@ public void testData() throws IOException {\n \n         UpdateSite us = new UpdateSite(\"default\", url.toExternalForm());\n         UpdateSite.Data data = us.new Data(JSONObject.fromObject(json));\n-        assertTrue(data.core.url.startsWith(\"http://updates.hudson-labs.org/\"));\n+        assertTrue(data.core.url.startsWith(\"http://updates.jenkins-ci.org/\"));\n         assertTrue(data.plugins.containsKey(\"rake\"));\n         System.out.println(data.core.url);\n     }"
    },
    {
        "commit_id": "24eb579d0c7710d0360c13d032386475938135ec",
        "commit_message": "Merge branch 'master' of https://github.com/mpeltonen/jenkins\n\nAnd fix my previous bad push.\nI apologize folks !! my bad :-(\n\nConflicts:\n\tchangelog.html\n\ttest/src/main/java/org/jvnet/hudson/test/HudsonTestCase.java",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/24eb579d0c7710d0360c13d032386475938135ec",
        "buggy_code": "super(\"Hudson slave agent\");",
        "fixed_code": "super(\"Jenkins slave agent\");",
        "patch": "@@ -39,7 +39,7 @@ public class MainDialog extends JFrame {\n     private final JLabel statusLabel;\n \n     public MainDialog() throws HeadlessException {\n-        super(\"Hudson slave agent\");\n+        super(\"Jenkins slave agent\");\n \n         ImageIcon background = new ImageIcon(getClass().getResource(\"title.png\"));\n "
    },
    {
        "commit_id": "b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "commit_message": "fix changelog",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "buggy_code": "if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();",
        "fixed_code": "if(value==null) return FormValidation.ok();",
        "patch": "@@ -1819,7 +1819,7 @@ public FormValidation validateRelativePath(String value, boolean errorIfNotExist\n         value = fixEmpty(value);\n \n         // none entered yet, or something is seriously wrong\n-        if(value==null || (AbstractProject<?,?>)subject ==null) return FormValidation.ok();\n+        if(value==null) return FormValidation.ok();\n \n         // a common mistake is to use wildcard\n         if(value.contains(\"*\")) return FormValidation.error(Messages.FilePath_validateRelativePath_wildcardNotAllowed());"
    },
    {
        "commit_id": "b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "commit_message": "fix changelog",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "buggy_code": "StringBuffer buf = new StringBuffer();",
        "fixed_code": "StringBuilder buf = new StringBuilder(s.length() + 10);",
        "patch": "@@ -193,7 +193,7 @@ public int groupCount() {\n          * Replaces the group tokens like \"$0\", \"$1\", and etc with their actual matches.\n          */\n         public String replace(String s) {\n-            StringBuffer buf = new StringBuffer();\n+            StringBuilder buf = new StringBuilder(s.length() + 10);\n \n             for( int i=0; i<s.length(); i++) {\n                 char ch = s.charAt(i);"
    },
    {
        "commit_id": "b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "commit_message": "fix changelog",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "buggy_code": "log.printf(\"ln %s %s failed\\n\",targetPath, new File(baseDir, symlinkPath));",
        "fixed_code": "log.printf(\"ln %s %s failed%n\",targetPath, new File(baseDir, symlinkPath));",
        "patch": "@@ -1033,7 +1033,7 @@ public static void createSymlink(File baseDir, String targetPath, String symlink\n                 listener.getLogger().println(String.format(\"ln -s %s %s failed: %d %s\",targetPath, symlinkFile, r, errmsg));\n         } catch (IOException e) {\n             PrintStream log = listener.getLogger();\n-            log.printf(\"ln %s %s failed\\n\",targetPath, new File(baseDir, symlinkPath));\n+            log.printf(\"ln %s %s failed%n\",targetPath, new File(baseDir, symlinkPath));\n             Util.displayIOException(e,listener);\n             e.printStackTrace( log );\n         }"
    },
    {
        "commit_id": "b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "commit_message": "fix changelog",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "buggy_code": "logger.printf(\"Touchstone configurations resulted in %s, so aborting...\\n\", r);",
        "fixed_code": "logger.printf(\"Touchstone configurations resulted in %s, so aborting...%n\", r);",
        "patch": "@@ -220,7 +220,7 @@ protected Result doRun(BuildListener listener) throws Exception {\n                 }\n                 \n                 if (p.getTouchStoneResultCondition() != null && r.isWorseThan(p.getTouchStoneResultCondition())) {\n-                    logger.printf(\"Touchstone configurations resulted in %s, so aborting...\\n\", r);\n+                    logger.printf(\"Touchstone configurations resulted in %s, so aborting...%n\", r);\n                     return r;\n                 }\n                 "
    },
    {
        "commit_id": "b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "commit_message": "fix changelog",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "buggy_code": "if (c!=null && c.getProperty(\"slave\")==Boolean.TRUE)",
        "fixed_code": "if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))",
        "patch": "@@ -580,7 +580,7 @@ public static VirtualChannel getChannelToMaster() {\n \n         // if this method is called from within the slave computation thread, this should work\n         Channel c = Channel.current();\n-        if (c!=null && c.getProperty(\"slave\")==Boolean.TRUE)\n+        if (c!=null && Boolean.TRUE.equals(c.getProperty(\"slave\")))\n             return c;\n \n         return null;"
    },
    {
        "commit_id": "b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "commit_message": "fix changelog",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "buggy_code": "StringBuffer buf = new StringBuffer();",
        "fixed_code": "StringBuilder buf = new StringBuilder();",
        "patch": "@@ -105,7 +105,7 @@ public int digit(int idx) {\n \n     @Override\n     public String toString() {\n-        StringBuffer buf = new StringBuffer();\n+        StringBuilder buf = new StringBuilder();\n         for( int i=0; i<digits.length; i++ ) {\n             if(i!=0)    buf.append('.');\n             buf.append( Integer.toString(digits[i]) );"
    },
    {
        "commit_id": "b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "commit_message": "fix changelog",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "buggy_code": "assertTrue(data.core.url.startsWith(\"http://updates.hudson-labs.org/\"));",
        "fixed_code": "assertTrue(data.core.url.startsWith(\"http://updates.jenkins-ci.org/\"));",
        "patch": "@@ -51,7 +51,7 @@ public void testData() throws IOException {\n \n         UpdateSite us = new UpdateSite(\"default\", url.toExternalForm());\n         UpdateSite.Data data = us.new Data(JSONObject.fromObject(json));\n-        assertTrue(data.core.url.startsWith(\"http://updates.hudson-labs.org/\"));\n+        assertTrue(data.core.url.startsWith(\"http://updates.jenkins-ci.org/\"));\n         assertTrue(data.plugins.containsKey(\"rake\"));\n         System.out.println(data.core.url);\n     }"
    },
    {
        "commit_id": "b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "commit_message": "fix changelog",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b7a6c5d5d18ac4a00781919788e5c57360f05529",
        "buggy_code": "super(\"Hudson slave agent\");",
        "fixed_code": "super(\"Jenkins slave agent\");",
        "patch": "@@ -39,7 +39,7 @@ public class MainDialog extends JFrame {\n     private final JLabel statusLabel;\n \n     public MainDialog() throws HeadlessException {\n-        super(\"Hudson slave agent\");\n+        super(\"Jenkins slave agent\");\n \n         ImageIcon background = new ImageIcon(getClass().getResource(\"title.png\"));\n "
    },
    {
        "commit_id": "1d1c18890f9a4ead541efb8482e2a160a0a91237",
        "commit_message": "Fix a conditional bug: if the remote end supports pipe throttling, make\nsure to use the right type of pipe window.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1d1c18890f9a4ead541efb8482e2a160a0a91237",
        "buggy_code": "if (!remoteCapability.supportsPipeThrottling())",
        "fixed_code": "if (remoteCapability.supportsPipeThrottling())",
        "patch": "@@ -609,7 +609,7 @@ public boolean preloadJar(ClassLoader local, URL... jars) throws IOException, In\n             }\n \n             PipeWindow w;\n-            if (!remoteCapability.supportsPipeThrottling())\n+            if (remoteCapability.supportsPipeThrottling())\n                 w = new Real(k, PIPE_WINDOW_SIZE);\n             else\n                 w = new PipeWindow.Fake();"
    },
    {
        "commit_id": "f88e491ac85c58d96c26ba4c19c823c185bcdbc5",
        "commit_message": "Merge branch 'rc'\n\nDiverging from the normal RC process since the additional commits have\nalrady been made in the master.\n\n* rc:\n  preparing for RC\n  bug fix in the test\n  Fixed a bug in the test harness.",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f88e491ac85c58d96c26ba4c19c823c185bcdbc5",
        "buggy_code": "URL url = new URL(\"http://jenkins-ci.org/\" + path);",
        "fixed_code": "URL url = new URL(\"http://updates.jenkins-ci.org/\" + path);",
        "patch": "@@ -80,7 +80,7 @@ protected void service(HttpServletRequest req, HttpServletResponse resp) throws\n \n         File cache = new File(cacheFolder, d);\n         if(!cache.exists()) {\n-            URL url = new URL(\"http://jenkins-ci.org/\" + path);\n+            URL url = new URL(\"http://updates.jenkins-ci.org/\" + path);\n             FileUtils.copyURLToFile(url,cache);\n         }\n "
    },
    {
        "commit_id": "da1dc0142d084204045de43854f01d754d14b776",
        "commit_message": "bug fix in the test",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/da1dc0142d084204045de43854f01d754d14b776",
        "buggy_code": "URL url = new URL(\"http://jenkins-ci.org/\" + path);",
        "fixed_code": "URL url = new URL(\"http://updates.jenkins-ci.org/\" + path);",
        "patch": "@@ -80,7 +80,7 @@ protected void service(HttpServletRequest req, HttpServletResponse resp) throws\n \n         File cache = new File(cacheFolder, d);\n         if(!cache.exists()) {\n-            URL url = new URL(\"http://jenkins-ci.org/\" + path);\n+            URL url = new URL(\"http://updates.jenkins-ci.org/\" + path);\n             FileUtils.copyURLToFile(url,cache);\n         }\n "
    },
    {
        "commit_id": "b97ad462135fd14f0e35aea22cbfbfe76c61a561",
        "commit_message": "really fix use of env var in pols tru ${env.xxxx}",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b97ad462135fd14f0e35aea22cbfbfe76c61a561",
        "buggy_code": "public void testMavenVersionWithEnvVar() throws Exception {",
        "fixed_code": "public void testMavenWithDependencyVersionInEnvVar() throws Exception {",
        "patch": "@@ -128,7 +128,7 @@ public void testMaven2SeveralModulesInDirectory() throws Exception {\n     }    \n \n     @Email(\"https://groups.google.com/d/msg/hudson-users/Xhw00UopVN0/FA9YqDAIsSYJ\")\n-    public void testMavenVersionWithEnvVar() throws Exception {\n+    public void testMavenWithDependencyVersionInEnvVar() throws Exception {\n         \n         MavenModuleSet m = createMavenProject();\n         MavenInstallation mavenInstallation = configureDefaultMaven();"
    },
    {
        "commit_id": "17b5401a2702c3669a1f92085fdd7a4d6da1a5b1",
        "commit_message": "fix logger name",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/17b5401a2702c3669a1f92085fdd7a4d6da1a5b1",
        "buggy_code": "private static final Logger LOGGER = Logger.getLogger(MavenProcessFactory.class.getName());",
        "fixed_code": "private static final Logger LOGGER = Logger.getLogger(Maven3ProcessFactory.class.getName());",
        "patch": "@@ -391,6 +391,6 @@ public boolean accept(File dir, String name) {\n         }\n     };\n     \n-    private static final Logger LOGGER = Logger.getLogger(MavenProcessFactory.class.getName());\n+    private static final Logger LOGGER = Logger.getLogger(Maven3ProcessFactory.class.getName());\n \n }"
    },
    {
        "commit_id": "afabfbe47fb7a5e8e9b6a8fcaf08bb5f20242e75",
        "commit_message": "fix MavenProcessFactory creation for maven2 build for master builds",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/afabfbe47fb7a5e8e9b6a8fcaf08bb5f20242e75",
        "buggy_code": "Which.jarFile(PluginManagerInterceptor.class).getAbsolutePath():",
        "fixed_code": "Which.jarFile(AbortException.class).getAbsolutePath():",
        "patch": "@@ -312,7 +312,7 @@ private ArgumentListBuilder buildMavenCmdLine(BuildListener listener,int tcpPort\n \n         // interceptor.jar\n         args.add(isMaster?\n-            Which.jarFile(PluginManagerInterceptor.class).getAbsolutePath():\n+            Which.jarFile(AbortException.class).getAbsolutePath():\n             slaveRoot.child(\"maven-interceptor.jar\").getRemote());\n \n         // TCP/IP port to establish the remoting infrastructure"
    },
    {
        "commit_id": "494ac3021df7ad4501f999c2a0a55edab4f07e6e",
        "commit_message": "fix location of mailing lists reported when stack traces are shown in job log",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/494ac3021df7ad4501f999c2a0a55edab4f07e6e",
        "buggy_code": "e.printStackTrace(listener.error(\"Processing failed due to a bug in the code. Please report this to users@hudson.dev.java.net\"));",
        "fixed_code": "e.printStackTrace(listener.error(\"Processing failed due to a bug in the code. Please report this to hudson-users@googlegroups.com\"));",
        "patch": "@@ -571,7 +571,7 @@ protected Result doRun(final BuildListener listener) throws Exception {\n                 return Result.FAILURE;\n             } catch (RuntimeException e) {\n                 // bug in the code.\n-                e.printStackTrace(listener.error(\"Processing failed due to a bug in the code. Please report this to users@hudson.dev.java.net\"));\n+                e.printStackTrace(listener.error(\"Processing failed due to a bug in the code. Please report this to hudson-users@googlegroups.com\"));\n                 logger.println(\"project=\"+project);\n                 logger.println(\"project.getModules()=\"+project.getModules());\n                 logger.println(\"project.getRootModule()=\"+project.getRootModule());"
    },
    {
        "commit_id": "683f1fcb8f369ace4913b1332ce8cd224e51cc33",
        "commit_message": "[FIXED HUDSON-8006] fix serialization of array containing null elements,\nbased on patch from alexlehm\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@36992 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/683f1fcb8f369ace4913b1332ce8cd224e51cc33",
        "buggy_code": "if (ImmutableMap.class.isAssignableFrom(type))",
        "fixed_code": "if (type != null && ImmutableMap.class.isAssignableFrom(type))",
        "patch": "@@ -113,7 +113,7 @@ protected MapperWrapper wrapMapper(MapperWrapper next) {\n         Mapper m = new CompatibilityMapper(new MapperWrapper(next) {\n             @Override\n             public String serializedClass(Class type) {\n-                if (ImmutableMap.class.isAssignableFrom(type))\n+                if (type != null && ImmutableMap.class.isAssignableFrom(type))\n                     return super.serializedClass(ImmutableMap.class);\n                 else\n                     return super.serializedClass(type);"
    },
    {
        "commit_id": "55de228e1f62cba149ae7cce1f6137fdd7559e70",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@36623 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/55de228e1f62cba149ae7cce1f6137fdd7559e70",
        "buggy_code": "assert capacity() > wc.size();",
        "fixed_code": "assert capacity() >= wc.size();",
        "patch": "@@ -143,7 +143,7 @@ public int capacity() {\n         }\n \n         private void execute(WorkChunk wc, WorkUnitContext wuc) {\n-            assert capacity() > wc.size();\n+            assert capacity() >= wc.size();\n             int e = 0;\n             for (SubTask s : wc) {\n                 while (!get(e).isAvailable())"
    },
    {
        "commit_id": "17ee8d29cca57369ccf6b8371d78bdf1350d1e20",
        "commit_message": "bug fix.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@34779 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/17ee8d29cca57369ccf6b8371d78bdf1350d1e20",
        "buggy_code": "return Collections.emptyList();",
        "fixed_code": "return Collections.singleton(this);",
        "patch": "@@ -39,7 +39,7 @@\n  */\n public abstract class AbstractQueueTask implements Queue.Task {\n     public Collection<? extends SubTask> getSubTasks() {\n-        return Collections.emptyList();\n+        return Collections.singleton(this);\n     }\n \n     public final Task getOwnerTask() {"
    },
    {
        "commit_id": "a9f3b6f59c3bf2b3404f9046141d07fbf5c58a9b",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@34618 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a9f3b6f59c3bf2b3404f9046141d07fbf5c58a9b",
        "buggy_code": "return this.size() > c.size()",
        "fixed_code": "return this.size() >= c.size()",
        "patch": "@@ -75,7 +75,7 @@ private ExecutorChunk(List<JobOffer> base, int index) {\n         }\n \n         public boolean canAccept(WorkChunk c) {\n-            return this.size() > c.size()\n+            return this.size() >= c.size()\n                 && (c.assignedLabel==null || c.assignedLabel.contains(node));\n         }\n "
    },
    {
        "commit_id": "67547f41701afe61f8cac4bcc4cfd2364076d4d8",
        "commit_message": "have some initial default value to avoid NPE in onModified().\n\nThis is a stop-gap fix to a bigger problem of XStream not persisting the owner of a persisted list.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@34079 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/67547f41701afe61f8cac4bcc4cfd2364076d4d8",
        "buggy_code": "protected Saveable owner;",
        "fixed_code": "protected Saveable owner = Saveable.NOOP;",
        "patch": "@@ -47,7 +47,7 @@\n  */\n public class PersistedList<T> implements Iterable<T> {\n     protected final CopyOnWriteList<T> data = new CopyOnWriteList<T>();\n-    protected Saveable owner;\n+    protected Saveable owner = Saveable.NOOP;\n \n     protected PersistedList() {\n     }"
    },
    {
        "commit_id": "b17951d4cf2541b529116bf6e7ae005eb647d9cc",
        "commit_message": "[FIXED HUDSON-7026] applied the patch to fix the regular expression.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33897 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b17951d4cf2541b529116bf6e7ae005eb647d9cc",
        "buggy_code": "MarkupText.SubText t = text.findToken(Pattern.compile(\"^[^:]+(?=:)\"));",
        "fixed_code": "MarkupText.SubText t = text.findToken(Pattern.compile(\".*(?=:)\"));",
        "patch": "@@ -44,7 +44,7 @@ public ConsoleAnnotator annotate(Object context, MarkupText text, int charPos) {\n         // still under development. too early to put into production\n         if (!ENABLED)   return null;\n \n-        MarkupText.SubText t = text.findToken(Pattern.compile(\"^[^:]+(?=:)\"));\n+        MarkupText.SubText t = text.findToken(Pattern.compile(\".*(?=:)\"));\n         if (t!=null)\n             t.addMarkup(0,t.length(),\"<b class=ant-target>\",\"</b>\");\n         return null;"
    },
    {
        "commit_id": "189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "commit_message": "[FIXED HUDSON-7211] fix Hudson build on case-insensitive filesystems.\nhudson/model/label/*.class conflicted with hudson/model/Label/*.jelly,\nso renamed new package to hudson.model.labels\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33875 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "buggy_code": "import hudson.model.label.LabelAtom;",
        "fixed_code": "import hudson.model.labels.LabelAtom;",
        "patch": "@@ -67,7 +67,7 @@\n import hudson.logging.LogRecorderManager;\n import hudson.lifecycle.RestartNotSupportedException;\n import hudson.model.Descriptor.FormException;\n-import hudson.model.label.LabelAtom;\n+import hudson.model.labels.LabelAtom;\n import hudson.model.listeners.ItemListener;\n import hudson.model.listeners.SCMListener;\n import hudson.model.listeners.SaveableListener;"
    },
    {
        "commit_id": "189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "commit_message": "[FIXED HUDSON-7211] fix Hudson build on case-insensitive filesystems.\nhudson/model/label/*.class conflicted with hudson/model/Label/*.jelly,\nso renamed new package to hudson.model.labels\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33875 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "buggy_code": "package hudson.model.label;",
        "fixed_code": "package hudson.model.labels;",
        "patch": "@@ -21,7 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.model.label;\n+package hudson.model.labels;\n \n import hudson.BulkChange;\n import hudson.CopyOnWrite;"
    },
    {
        "commit_id": "189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "commit_message": "[FIXED HUDSON-7211] fix Hudson build on case-insensitive filesystems.\nhudson/model/label/*.class conflicted with hudson/model/Label/*.jelly,\nso renamed new package to hudson.model.labels\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33875 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "buggy_code": "package hudson.model.label;",
        "fixed_code": "package hudson.model.labels;",
        "patch": "@@ -21,7 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.model.label;\n+package hudson.model.labels;\n \n import hudson.DescriptorExtensionList;\n import hudson.ExtensionPoint;"
    },
    {
        "commit_id": "189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "commit_message": "[FIXED HUDSON-7211] fix Hudson build on case-insensitive filesystems.\nhudson/model/label/*.class conflicted with hudson/model/Label/*.jelly,\nso renamed new package to hudson.model.labels\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33875 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "buggy_code": "package hudson.model.label;",
        "fixed_code": "package hudson.model.labels;",
        "patch": "@@ -21,7 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.model.label;\n+package hudson.model.labels;\n \n import hudson.Extension;\n import hudson.model.Descriptor;"
    },
    {
        "commit_id": "189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "commit_message": "[FIXED HUDSON-7211] fix Hudson build on case-insensitive filesystems.\nhudson/model/label/*.class conflicted with hudson/model/Label/*.jelly,\nso renamed new package to hudson.model.labels\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33875 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "buggy_code": "package hudson.model.label;",
        "fixed_code": "package hudson.model.labels;",
        "patch": "@@ -21,7 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.model.label;\n+package hudson.model.labels;\n \n import hudson.model.Label;\n import hudson.util.VariableResolver;"
    },
    {
        "commit_id": "189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "commit_message": "[FIXED HUDSON-7211] fix Hudson build on case-insensitive filesystems.\nhudson/model/label/*.class conflicted with hudson/model/Label/*.jelly,\nso renamed new package to hudson.model.labels\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33875 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "buggy_code": "package hudson.model.label;",
        "fixed_code": "package hudson.model.labels;",
        "patch": "@@ -21,7 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.model.label;\n+package hudson.model.labels;\n \n /**\n  * Precedence of the top most operator."
    },
    {
        "commit_id": "189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "commit_message": "[FIXED HUDSON-7211] fix Hudson build on case-insensitive filesystems.\nhudson/model/label/*.class conflicted with hudson/model/Label/*.jelly,\nso renamed new package to hudson.model.labels\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33875 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "buggy_code": "package hudson.model.label;",
        "fixed_code": "package hudson.model.labels;",
        "patch": "@@ -1,4 +1,4 @@\n /**\n  * Boolean expression over labels.\n  */\n-package hudson.model.label;\n+package hudson.model.labels;"
    },
    {
        "commit_id": "189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "commit_message": "[FIXED HUDSON-7211] fix Hudson build on case-insensitive filesystems.\nhudson/model/label/*.class conflicted with hudson/model/Label/*.jelly,\nso renamed new package to hudson.model.labels\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33875 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "buggy_code": "package hudson.model.label;",
        "fixed_code": "package hudson.model.labels;",
        "patch": "@@ -21,7 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.model.label;\n+package hudson.model.labels;\n \n import org.jvnet.hudson.test.HudsonTestCase;\n import org.jvnet.hudson.test.TestExtension;"
    },
    {
        "commit_id": "189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "commit_message": "[FIXED HUDSON-7211] fix Hudson build on case-insensitive filesystems.\nhudson/model/label/*.class conflicted with hudson/model/Label/*.jelly,\nso renamed new package to hudson.model.labels\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33875 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "buggy_code": "package hudson.model.label;",
        "fixed_code": "package hudson.model.labels;",
        "patch": "@@ -21,7 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n-package hudson.model.label;\n+package hudson.model.labels;\n \n import antlr.ANTLRException;\n import hudson.Launcher;"
    },
    {
        "commit_id": "189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "commit_message": "[FIXED HUDSON-7211] fix Hudson build on case-insensitive filesystems.\nhudson/model/label/*.class conflicted with hudson/model/Label/*.jelly,\nso renamed new package to hudson.model.labels\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33875 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/189a1f31f1bc0358fa10b4a143e6c402aa93405f",
        "buggy_code": "import hudson.model.label.LabelAtom;",
        "fixed_code": "import hudson.model.labels.LabelAtom;",
        "patch": "@@ -1,7 +1,7 @@\n package hudson.tasks;\n \n import hudson.EnvVars;\n-import hudson.model.label.LabelAtom;\n+import hudson.model.labels.LabelAtom;\n import hudson.tools.ToolProperty;\n import hudson.maven.MavenModuleSet;\n import hudson.maven.MavenModuleSetBuild;"
    },
    {
        "commit_id": "b64ecce94b53401e3b212073bcf1ccae765d8385",
        "commit_message": "Merged revisions 33810-33811 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/rc\n\n........\n  r33810 | kohsuke | 2010-08-13 17:43:28 -0700 (Fri, 13 Aug 2010) | 1 line\n  \n  bug in the test harness.\n........\n  r33811 | kohsuke | 2010-08-13 17:44:11 -0700 (Fri, 13 Aug 2010) | 1 line\n  \n  bug in the test harness.\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@33812 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b64ecce94b53401e3b212073bcf1ccae765d8385",
        "buggy_code": "return createSlave(l.getName(), null);",
        "fixed_code": "return createSlave(l==null ? null : l.getName(), env);",
        "patch": "@@ -554,7 +554,7 @@ public DumbSlave createSlave(EnvVars env) throws Exception {\n     }\n \n     public DumbSlave createSlave(Label l, EnvVars env) throws Exception {\n-        return createSlave(l.getName(), null);\n+        return createSlave(l==null ? null : l.getName(), env);\n     }\n \n     /**"
    },
    {
        "commit_id": "9083e5d6e6e005ee163769e3f65170575e16a20d",
        "commit_message": "[HUDSON-6849] revert r32272.. might as well keep URLs a little shorter\nuntil/unless this issue is better understood.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@32325 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9083e5d6e6e005ee163769e3f65170575e16a20d",
        "buggy_code": "String page = \"/descriptorByName/\" + clazz.getName() + \"/help\";",
        "fixed_code": "String page = \"/descriptor/\" + clazz.getName() + \"/help\";",
        "patch": "@@ -504,7 +504,7 @@ public String getHelpFile() {\n      */\n     public String getHelpFile(final String fieldName) {\n         for(Class c=clazz; c!=null; c=c.getSuperclass()) {\n-            String page = \"/descriptorByName/\" + clazz.getName() + \"/help\";\n+            String page = \"/descriptor/\" + clazz.getName() + \"/help\";\n             String suffix;\n             if(fieldName==null) {\n                 suffix=\"\";"
    },
    {
        "commit_id": "b38c53b8eb4306cc4521319e6d22e347d44edcda",
        "commit_message": "improving the error diagnostics.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@32254 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b38c53b8eb4306cc4521319e6d22e347d44edcda",
        "buggy_code": "throw e;",
        "fixed_code": "throw (IOException)new IOException(\"Failed to connect to \"+host+':'+port).initCause(e);",
        "patch": "@@ -273,7 +273,7 @@ private Socket connect(String port) throws IOException, InterruptedException {\n                 return s;\n             } catch (IOException e) {\n                 if(retry++>10)\n-                    throw e;\n+                    throw (IOException)new IOException(\"Failed to connect to \"+host+':'+port).initCause(e);\n                 Thread.sleep(1000*10);\n                 listener.status(msg+\" (retrying:\"+retry+\")\",e);\n             }"
    },
    {
        "commit_id": "b0cdf1eb2e8aac6ac1badc0ed3831baba63e141e",
        "commit_message": "fix link of Apache Ant FileSet URL\nfrom http://ant.apache.org/manual/CoreTypes/fileset.html\nto http://ant.apache.org/manual/Types/fileset.html\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@32164 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b0cdf1eb2e8aac6ac1badc0ed3831baba63e141e",
        "buggy_code": "throw new IOException(\"Expecting Ant GLOB pattern, but saw '\"+includes+\"'. See http://ant.apache.org/manual/CoreTypes/fileset.html for syntax\");",
        "fixed_code": "throw new IOException(\"Expecting Ant GLOB pattern, but saw '\"+includes+\"'. See http://ant.apache.org/manual/Types/fileset.html for syntax\");",
        "patch": "@@ -1185,7 +1185,7 @@ public FilePath[] invoke(File f, VirtualChannel channel) throws IOException {\n      */\n     private static String[] glob(File dir, String includes) throws IOException {\n         if(isAbsolute(includes))\n-            throw new IOException(\"Expecting Ant GLOB pattern, but saw '\"+includes+\"'. See http://ant.apache.org/manual/CoreTypes/fileset.html for syntax\");\n+            throw new IOException(\"Expecting Ant GLOB pattern, but saw '\"+includes+\"'. See http://ant.apache.org/manual/Types/fileset.html for syntax\");\n         FileSet fs = Util.createFileSet(dir,includes);\n         DirectoryScanner ds = fs.getDirectoryScanner(new Project());\n         String[] files = ds.getIncludedFiles();"
    },
    {
        "commit_id": "83551a7dc510b2e37c8f1c4e6cd524fad8bbb789",
        "commit_message": "JDK 7 compilation error, and gratuitous cast.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@32045 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/83551a7dc510b2e37c8f1c4e6cd524fad8bbb789",
        "buggy_code": "return (Collection)Hudson.getInstance().getDescriptorList(MavenReporter.class);",
        "fixed_code": "return Hudson.getInstance().<MavenReporter,MavenReporterDescriptor>getDescriptorList(MavenReporter.class);",
        "patch": "@@ -102,6 +102,6 @@ public final boolean hasConfigScreen() {\n      */\n     public static Collection<MavenReporterDescriptor> all() {\n         // use getDescriptorList and not getExtensionList to pick up legacy instances\n-        return (Collection)Hudson.getInstance().getDescriptorList(MavenReporter.class);\n+        return Hudson.getInstance().<MavenReporter,MavenReporterDescriptor>getDescriptorList(MavenReporter.class);\n     }\n }"
    },
    {
        "commit_id": "270f9a15825c185b0a9d23f568a12924a6bc854e",
        "commit_message": "JDK 7 compilation error.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@32040 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/270f9a15825c185b0a9d23f568a12924a6bc854e",
        "buggy_code": "return Hudson.getInstance().getDescriptorList(Fruit.class);",
        "fixed_code": "return Hudson.getInstance().<Fruit,Descriptor<Fruit>>getDescriptorList(Fruit.class);",
        "patch": "@@ -31,7 +31,7 @@ public Fruit getFruit() {\n     }\n \n     public DescriptorExtensionList<Fruit,Descriptor<Fruit>> getFruitDescriptors() {\n-        return Hudson.getInstance().getDescriptorList(Fruit.class);\n+        return Hudson.getInstance().<Fruit,Descriptor<Fruit>>getDescriptorList(Fruit.class);\n     }\n \n     // Process form data and show it as serialized XML"
    },
    {
        "commit_id": "6698aca4e7d2f240259d4b112f95b76806e26fad",
        "commit_message": "[HUDSON-6587] rolling back rev.31878. I think a better fix, given the current existing code and method signatures, is to expose the transport level authentication in a bit more implicit way.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@31900 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6698aca4e7d2f240259d4b112f95b76806e26fad",
        "buggy_code": "out, out, null);",
        "fixed_code": "out, out);",
        "patch": "@@ -60,7 +60,7 @@ public void testOnCreatedviaCLI() {\n         cmd.main(Collections.singletonList(\"testJob\"), Locale.ENGLISH,\n                  new ByteArrayInputStream((\"<project><actions/><builders/><publishers/>\"\n                     + \"<buildWrappers/></project>\").getBytes()),\n-                 out, out, null);\n+                 out, out);\n         out.flush();\n         assertNotNull(\"job should be created: \" + buf, hudson.getItem(\"testJob\"));\n         assertEquals(\"onCreated event should be triggered: \" + buf, \"C\", events.toString());"
    },
    {
        "commit_id": "a7a7ec8f5e388fdeaadbd2868aaba5326f27f93a",
        "commit_message": "Issue: HUDSON-6587\n\nrestore container based SLI authentication\n\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@31878 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a7a7ec8f5e388fdeaadbd2868aaba5326f27f93a",
        "buggy_code": "out, out);",
        "fixed_code": "out, out, null);",
        "patch": "@@ -60,7 +60,7 @@ public void testOnCreatedviaCLI() {\n         cmd.main(Collections.singletonList(\"testJob\"), Locale.ENGLISH,\n                  new ByteArrayInputStream((\"<project><actions/><builders/><publishers/>\"\n                     + \"<buildWrappers/></project>\").getBytes()),\n-                 out, out);\n+                 out, out, null);\n         out.flush();\n         assertNotNull(\"job should be created: \" + buf, hudson.getItem(\"testJob\"));\n         assertEquals(\"onCreated event should be triggered: \" + buf, \"C\", events.toString());"
    },
    {
        "commit_id": "9cd3b074afdd29c6a4d57af063faac327fbd7a61",
        "commit_message": "Added a proactive error diagnostics to look for a broken reverse proxy setup.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@31829 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9cd3b074afdd29c6a4d57af063faac327fbd7a61",
        "buggy_code": "buf.append(\"http://\");",
        "fixed_code": "buf.append(req.getScheme()+\"://\");",
        "patch": "@@ -1671,7 +1671,7 @@ public String getRootUrl() {\n     public String getRootUrlFromRequest() {\n         StaplerRequest req = Stapler.getCurrentRequest();\n         StringBuilder buf = new StringBuilder();\n-        buf.append(\"http://\");\n+        buf.append(req.getScheme()+\"://\");\n         buf.append(req.getServerName());\n         if(req.getServerPort()!=80)\n             buf.append(':').append(req.getServerPort());"
    },
    {
        "commit_id": "16bc9deb40d70b819e3e6329e27f4492e4483bb8",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@31782 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/16bc9deb40d70b819e3e6329e27f4492e4483bb8",
        "buggy_code": "return launcher.launch().cmds(args).pwd(pwd);",
        "fixed_code": "return launcher.launch().cmds(toFullArguments()).pwd(pwd);",
        "patch": "@@ -131,7 +131,7 @@ public ArgumentListBuilder toFullArguments() {\n      * Fills a {@link ProcStarter} with all the parameters configured by this builder.\n      */\n     public ProcStarter launch(Launcher launcher) {\n-        return launcher.launch().cmds(args).pwd(pwd);\n+        return launcher.launch().cmds(toFullArguments()).pwd(pwd);\n     }\n \n "
    },
    {
        "commit_id": "41bdf310d34bfd6a9523f695615d885b9ce0f6a5",
        "commit_message": "improve error diagnostics.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@31636 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/41bdf310d34bfd6a9523f695615d885b9ce0f6a5",
        "buggy_code": "throw new IllegalArgumentException();",
        "fixed_code": "throw new IllegalArgumentException(\"Project of the name \"+name+\" already exists\");",
        "patch": "@@ -1975,7 +1975,7 @@ public synchronized TopLevelItem createProject( TopLevelItemDescriptor type, Str\n     public synchronized TopLevelItem createProject( TopLevelItemDescriptor type, String name, boolean notify )\n             throws IOException {\n         if(items.containsKey(name))\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\"Project of the name \"+name+\" already exists\");\n \n         TopLevelItem item;\n         try {"
    },
    {
        "commit_id": "c4f6034a11bdea8194bc04c20ceea8c89d77677a",
        "commit_message": "Issue: HUDSON-2494\n\npatch to prevent copied jobs from running until initial save\n\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@31444 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c4f6034a11bdea8194bc04c20ceea8c89d77677a",
        "buggy_code": "return !isDisabled();",
        "fixed_code": "return !isDisabled() && !isHoldOffBuildUntilSave();",
        "patch": "@@ -447,7 +447,7 @@ public boolean hasCustomScmCheckoutRetryCount(){\n     }\n \n     public boolean isBuildable() {\n-        return !isDisabled();\n+        return !isDisabled() && !isHoldOffBuildUntilSave();\n     }\n \n     /**"
    },
    {
        "commit_id": "876e897508612cafca5c791d0875af64dd5f83cb",
        "commit_message": "Fixing compilation error introduced by kohsuke in 31001.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@31015 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/876e897508612cafca5c791d0875af64dd5f83cb",
        "buggy_code": "doQuietDown(true);",
        "fixed_code": "doQuietDown(true, 5000);",
        "patch": "@@ -2933,7 +2933,7 @@ public void safeRestart() throws RestartNotSupportedException {\n             public void run() {\n                 try {\n                     // Wait 'til we have no active executors.\n-                    doQuietDown(true);\n+                    doQuietDown(true, 5000);\n \n                     // Make sure isQuietingDown is still true.\n                     if (isQuietingDown) {"
    },
    {
        "commit_id": "f07374e20ad4ce88312681db4f6ebd53ff9bd355",
        "commit_message": "re-fix test.. r30703 merged in r30662 from branches/rc which changed\nauth password back to null for a null secret.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@30750 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f07374e20ad4ce88312681db4f6ebd53ff9bd355",
        "buggy_code": "assertEquals(\"\", d.getSmtpAuthPassword());",
        "fixed_code": "assertNull(\"expected null, got: \" + d.getSmtpAuthPassword(), d.getSmtpAuthPassword());",
        "patch": "@@ -123,6 +123,6 @@ public void testGlobalConfigRoundtrip() throws Exception {\n         submit(new WebClient().goTo(\"configure\").getFormByName(\"config\"));\n         assertEquals(false,d.getUseSsl());\n         assertNull(\"expected null, got: \" + d.getSmtpAuthUserName(), d.getSmtpAuthUserName());\n-        assertEquals(\"\", d.getSmtpAuthPassword());\n+        assertNull(\"expected null, got: \" + d.getSmtpAuthPassword(), d.getSmtpAuthPassword());\n     }\n }"
    },
    {
        "commit_id": "7cff65380001ac1cca44148dbb77f535905590a6",
        "commit_message": "Do not make DescriptorExtensionList attempt to override a static method from ExtensionList. Should fix CCE caused by last commit.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@30748 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7cff65380001ac1cca44148dbb77f535905590a6",
        "buggy_code": "return (DescriptorExtensionList) DescriptorExtensionList.create(Hudson.this,key);",
        "fixed_code": "return DescriptorExtensionList.createDescriptorList(Hudson.this,key);",
        "patch": "@@ -348,7 +348,7 @@ public ExtensionList compute(Class key) {\n      */\n     private transient final Memoizer<Class,DescriptorExtensionList> descriptorLists = new Memoizer<Class,DescriptorExtensionList>() {\n         public DescriptorExtensionList compute(Class key) {\n-            return (DescriptorExtensionList) DescriptorExtensionList.create(Hudson.this,key);\n+            return DescriptorExtensionList.createDescriptorList(Hudson.this,key);\n         }\n     };\n "
    },
    {
        "commit_id": "f855c5ee220969b09b686e8c80086d90fc7ea953",
        "commit_message": "[HUDSON-5951] yay for tests, fix error in new normalize() before it went in any release\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@30579 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f855c5ee220969b09b686e8c80086d90fc7ea953",
        "buggy_code": "for (int j = 0; j < 2; j++) tokens.remove(i);",
        "fixed_code": "for (int j = 0; j < 3; j++) tokens.remove(i);",
        "patch": "@@ -273,7 +273,7 @@ private static String normalize(String path) {\n                 } else {\n                     // Normalize: remove something/.. plus separator before/after\n                     i -= 2;\n-                    for (int j = 0; j < 2; j++) tokens.remove(i);\n+                    for (int j = 0; j < 3; j++) tokens.remove(i);\n                     if (i > 0) tokens.remove(i-1);\n                     else if (tokens.size() > 0) tokens.remove(0);\n                 }"
    },
    {
        "commit_id": "95c1ba927a747fbb17a83ed1dfb9f29e6d5fa252",
        "commit_message": "[FIXED HUDSON-5180] remove url binding for this property.. it just shows parameters\nform and a Build button that results in error.  index.jelly should only be accessed\nvia /build (shows index.jelly via _doBuild in this class) where the Build button works.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@30453 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/95c1ba927a747fbb17a83ed1dfb9f29e6d5fa252",
        "buggy_code": "return \"parameters\";",
        "fixed_code": "return null;",
        "patch": "@@ -204,6 +204,6 @@ public String getIconFileName() {\n     }\n \n     public String getUrlName() {\n-        return \"parameters\";\n+        return null;\n     }\n }"
    },
    {
        "commit_id": "c2fd8408468368b85071c5bb6d22c79733aee3c2",
        "commit_message": "[FIXED HUDSON-6252] fix bad index calculation in SubText.subText which\ncaused StringIndexOutOfBoundsException in UrlAnnotator.  Added test.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@30102 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c2fd8408468368b85071c5bb6d22c79733aee3c2",
        "buggy_code": "end<0 ? this.end+1+end : this.end+end);",
        "fixed_code": "end<0 ? this.end+1+end : this.start+end);",
        "patch": "@@ -98,7 +98,7 @@ public SubText(int start, int end) {\n         @Override\n         public SubText subText(int start, int end) {\n             return MarkupText.this.subText(this.start+start,\n-                    end<0 ? this.end+1+end : this.end+end);\n+                    end<0 ? this.end+1+end : this.start+end);\n         }\n \n         @Override"
    },
    {
        "commit_id": "e1e0237f650093af9d77ba476a8321ff0d556cd7",
        "commit_message": "work around for bug 6933067.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@30091 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e1e0237f650093af9d77ba476a8321ff0d556cd7",
        "buggy_code": "r.addAll(finder.find(extensionType, hudson));",
        "fixed_code": "r.addAll(finder._find(extensionType, hudson));",
        "patch": "@@ -224,7 +224,7 @@ protected List<ExtensionComponent<T>> load() {\n         List<ExtensionComponent<T>> r = new ArrayList<ExtensionComponent<T>>();\n         for (ExtensionFinder finder : finders()) {\n             try {\n-                r.addAll(finder.find(extensionType, hudson));\n+                r.addAll(finder._find(extensionType, hudson));\n             } catch (AbstractMethodError e) {\n                 // backward compatibility\n                 for (T t : finder.findExtensions(extensionType, hudson))"
    },
    {
        "commit_id": "a168fc472af52fcf4f3f4f3dbdccb1cf807a4c56",
        "commit_message": "- Improved the error reporting mechanism in LDAP setting.\n- improved FormValidation.error(...) so that one can easily send the full stack trace.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@29612 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a168fc472af52fcf4f3f4f3dbdccb1cf807a4c56",
        "buggy_code": "return FormValidation.error(Messages.ZipExtractionInstaller_could_not_connect());",
        "fixed_code": "return FormValidation.error(x,Messages.ZipExtractionInstaller_could_not_connect());",
        "patch": "@@ -109,7 +109,7 @@ public FormValidation doCheckUrl(@QueryParameter String value) {\n             } catch (MalformedURLException x) {\n                 return FormValidation.error(Messages.ZipExtractionInstaller_malformed_url());\n             } catch (IOException x) {\n-                return FormValidation.error(Messages.ZipExtractionInstaller_could_not_connect());\n+                return FormValidation.error(x,Messages.ZipExtractionInstaller_could_not_connect());\n             }\n         }\n "
    },
    {
        "commit_id": "f4d4639b00bf8fdcbeb6ef0c6a944f04bcd7c7e4",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@28211 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f4d4639b00bf8fdcbeb6ef0c6a944f04bcd7c7e4",
        "buggy_code": "return error(\"FATAL: \",msg);",
        "fixed_code": "return _error(\"FATAL: \",msg);",
        "patch": "@@ -134,7 +134,7 @@ public PrintWriter error(String format, Object... args) {\n     }\n \n     public PrintWriter fatalError(String msg) {\n-        return error(\"FATAL: \",msg);\n+        return _error(\"FATAL: \",msg);\n     }\n \n     public PrintWriter fatalError(String format, Object... args) {"
    },
    {
        "commit_id": "c6acb5b8d55a1402ecf95c21aa9c359c4b80db8c",
        "commit_message": "[FIXED HUDSON-2137]\n\nMerged revisions 27137,27564,27566-27567,27578,27586,27599,27603,27606-27609,27611,27616,27626-27632,27640,27654-27656,27687,27701,27801,27816,27819,27843-27845,28087,28158-28161 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/HUDSON-2137\n\n........\n  r27137 | kohsuke | 2010-02-08 08:46:16 -0800 (Mon, 08 Feb 2010) | 1 line\n  \n  experimenting with abstractions\n........\n  r27564 | kohsuke | 2010-02-16 07:58:26 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  bundling makes it easier for caller to handle ConsoleAnnotator\n........\n  r27566 | kohsuke | 2010-02-16 08:49:48 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  this should work with Runs, not AbstractBuilds\n........\n  r27567 | kohsuke | 2010-02-16 08:54:06 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  simplified\n........\n  r27578 | kohsuke | 2010-02-16 12:26:11 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  still a work in progress, but committing once to pull in trunk changes\n........\n  r27586 | kohsuke | 2010-02-16 14:35:37 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  making more progress\n........\n  r27599 | kohsuke | 2010-02-16 19:22:01 -0800 (Tue, 16 Feb 2010) | 2 lines\n  \n  hooking up the side that writes annotations.\n  still a work in progress.\n........\n  r27603 | kohsuke | 2010-02-16 23:43:35 -0800 (Tue, 16 Feb 2010) | 3 lines\n  \n  what appears to me as the first cut of hooking up the reader side of the annotations.\n  \n  I haven't even run it yet --- this just passed the compilation, and I'm calling it a day.\n........\n  r27606 | kohsuke | 2010-02-17 09:15:16 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  demo instance hook up\n........\n  r27607 | kohsuke | 2010-02-17 11:27:02 -0800 (Wed, 17 Feb 2010) | 3 lines\n  \n  one more utility method.\n  \n  I never understood what the point of letting the skip method skip less.\n........\n  r27608 | kohsuke | 2010-02-17 11:56:23 -0800 (Wed, 17 Feb 2010) | 3 lines\n  \n  - moved LargeText subtype to its own class\n  - skipping log output was done incorrectly --- it had to skip N bytes where it was skipping N chars.\n  - hooked up console annotations for completed builds.\n........\n  r27609 | kohsuke | 2010-02-17 12:01:46 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  copyright header\n........\n  r27611 | kohsuke | 2010-02-17 13:18:10 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  introduced a mechanism to register extension during an unit test.\n........\n  r27616 | kohsuke | 2010-02-17 13:38:12 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  test case for console annotations\n........\n  r27626 | kohsuke | 2010-02-17 15:23:06 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  removing test ConsoleAnnotator as I write tests as tests\n........\n  r27627 | kohsuke | 2010-02-17 16:06:13 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  added a multi-phase cooperative locking mechanism useful during the debugging\n........\n  r27628 | kohsuke | 2010-02-17 16:06:41 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  testing progressive log annotation\n........\n  r27629 | kohsuke | 2010-02-17 16:20:32 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  adding a test for ConsoleAnnotation that's explicitly placed.\n........\n  r27630 | kohsuke | 2010-02-17 16:23:02 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  removing test ConsoleAnnotation as I write tests as tests\n........\n  r27631 | kohsuke | 2010-02-17 16:28:50 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  tweaking the abstraction a bit.\n........\n  r27632 | kohsuke | 2010-02-17 16:44:21 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  parameterized the context type so that this can be used in places other than the build console output, such as polling logs, slave logs, and so on.\n........\n  r27640 | kohsuke | 2010-02-17 17:27:52 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  bug fix\n........\n  r27654 | kohsuke | 2010-02-17 22:53:04 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  doc improvement\n........\n  r27655 | kohsuke | 2010-02-17 22:53:59 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  doc improvement\n........\n  r27656 | kohsuke | 2010-02-17 23:10:42 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  test case for adjacent tags\n........\n  r27687 | kohsuke | 2010-02-19 14:39:21 -0800 (Fri, 19 Feb 2010) | 1 line\n  \n  introduced a facotry and descriptor. This allows them to define configuration pages, allow users to disable/enable them, plus define custom behaviors.\n........\n  r27701 | kohsuke | 2010-02-19 18:23:52 -0800 (Fri, 19 Feb 2010) | 1 line\n  \n  defining a mechanism for ConsoleAnnotatorFactory and ConsoleAnnotationDescriptor to define script.js and have them imported into the console output page\n........\n  r27801 | kohsuke | 2010-02-22 11:59:16 -0800 (Mon, 22 Feb 2010) | 1 line\n  \n  now embedding annotations inside the console output log file.\n........\n  r27816 | kohsuke | 2010-02-22 15:45:04 -0800 (Mon, 22 Feb 2010) | 1 line\n  \n  introduced a convenience method for unit tests\n........\n  r27819 | kohsuke | 2010-02-22 17:37:05 -0800 (Mon, 22 Feb 2010) | 5 lines\n  \n  As an example of using embedded console annotations, implementing Ant target invocation outlines.\n  \n  It might be better to make the concept of outline more generally reusable, so that different kinds of outlines can be placed into the same container element for a single hierarchical representation.\n  \n  Still a work in progress.\n........\n  r27843 | kohsuke | 2010-02-23 16:12:13 -0800 (Tue, 23 Feb 2010) | 1 line\n  \n  for now, disable this for production usage, until I work out a better UI.\n........\n  r27844 | kohsuke | 2010-02-23 19:08:00 -0800 (Tue, 23 Feb 2010) | 1 line\n  \n  started working on annotating exception.\n........\n  r27845 | kohsuke | 2010-02-23 19:08:33 -0800 (Tue, 23 Feb 2010) | 1 line\n  \n  more TODOs for myself\n........\n  r28087 | kohsuke | 2010-03-01 10:03:55 -0800 (Mon, 01 Mar 2010) | 1 line\n  \n  formatting changes\n........\n  r28158 | kohsuke | 2010-03-02 17:00:00 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  ConsoleAnnotation and ConsoleAnnotator are too confusing.\n........\n  r28159 | kohsuke | 2010-03-02 17:02:02 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  doc improvement\n........\n  r28160 | kohsuke | 2010-03-02 17:05:14 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  more doc improvements.\n........\n  r28161 | kohsuke | 2010-03-02 17:11:59 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  more doc improvement\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@28173 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c6acb5b8d55a1402ecf95c21aa9c359c4b80db8c",
        "buggy_code": "class ObjectInputStreamEx extends ObjectInputStream {",
        "fixed_code": "public class ObjectInputStreamEx extends ObjectInputStream {",
        "patch": "@@ -33,7 +33,7 @@\n /**\n  * {@link ObjectInputStream} that uses a specific class loader.\n  */\n-class ObjectInputStreamEx extends ObjectInputStream {\n+public class ObjectInputStreamEx extends ObjectInputStream {\n     private final ClassLoader cl;\n \n     public ObjectInputStreamEx(InputStream in, ClassLoader cl) throws IOException {"
    },
    {
        "commit_id": "c6acb5b8d55a1402ecf95c21aa9c359c4b80db8c",
        "commit_message": "[FIXED HUDSON-2137]\n\nMerged revisions 27137,27564,27566-27567,27578,27586,27599,27603,27606-27609,27611,27616,27626-27632,27640,27654-27656,27687,27701,27801,27816,27819,27843-27845,28087,28158-28161 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/HUDSON-2137\n\n........\n  r27137 | kohsuke | 2010-02-08 08:46:16 -0800 (Mon, 08 Feb 2010) | 1 line\n  \n  experimenting with abstractions\n........\n  r27564 | kohsuke | 2010-02-16 07:58:26 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  bundling makes it easier for caller to handle ConsoleAnnotator\n........\n  r27566 | kohsuke | 2010-02-16 08:49:48 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  this should work with Runs, not AbstractBuilds\n........\n  r27567 | kohsuke | 2010-02-16 08:54:06 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  simplified\n........\n  r27578 | kohsuke | 2010-02-16 12:26:11 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  still a work in progress, but committing once to pull in trunk changes\n........\n  r27586 | kohsuke | 2010-02-16 14:35:37 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  making more progress\n........\n  r27599 | kohsuke | 2010-02-16 19:22:01 -0800 (Tue, 16 Feb 2010) | 2 lines\n  \n  hooking up the side that writes annotations.\n  still a work in progress.\n........\n  r27603 | kohsuke | 2010-02-16 23:43:35 -0800 (Tue, 16 Feb 2010) | 3 lines\n  \n  what appears to me as the first cut of hooking up the reader side of the annotations.\n  \n  I haven't even run it yet --- this just passed the compilation, and I'm calling it a day.\n........\n  r27606 | kohsuke | 2010-02-17 09:15:16 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  demo instance hook up\n........\n  r27607 | kohsuke | 2010-02-17 11:27:02 -0800 (Wed, 17 Feb 2010) | 3 lines\n  \n  one more utility method.\n  \n  I never understood what the point of letting the skip method skip less.\n........\n  r27608 | kohsuke | 2010-02-17 11:56:23 -0800 (Wed, 17 Feb 2010) | 3 lines\n  \n  - moved LargeText subtype to its own class\n  - skipping log output was done incorrectly --- it had to skip N bytes where it was skipping N chars.\n  - hooked up console annotations for completed builds.\n........\n  r27609 | kohsuke | 2010-02-17 12:01:46 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  copyright header\n........\n  r27611 | kohsuke | 2010-02-17 13:18:10 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  introduced a mechanism to register extension during an unit test.\n........\n  r27616 | kohsuke | 2010-02-17 13:38:12 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  test case for console annotations\n........\n  r27626 | kohsuke | 2010-02-17 15:23:06 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  removing test ConsoleAnnotator as I write tests as tests\n........\n  r27627 | kohsuke | 2010-02-17 16:06:13 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  added a multi-phase cooperative locking mechanism useful during the debugging\n........\n  r27628 | kohsuke | 2010-02-17 16:06:41 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  testing progressive log annotation\n........\n  r27629 | kohsuke | 2010-02-17 16:20:32 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  adding a test for ConsoleAnnotation that's explicitly placed.\n........\n  r27630 | kohsuke | 2010-02-17 16:23:02 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  removing test ConsoleAnnotation as I write tests as tests\n........\n  r27631 | kohsuke | 2010-02-17 16:28:50 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  tweaking the abstraction a bit.\n........\n  r27632 | kohsuke | 2010-02-17 16:44:21 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  parameterized the context type so that this can be used in places other than the build console output, such as polling logs, slave logs, and so on.\n........\n  r27640 | kohsuke | 2010-02-17 17:27:52 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  bug fix\n........\n  r27654 | kohsuke | 2010-02-17 22:53:04 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  doc improvement\n........\n  r27655 | kohsuke | 2010-02-17 22:53:59 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  doc improvement\n........\n  r27656 | kohsuke | 2010-02-17 23:10:42 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  test case for adjacent tags\n........\n  r27687 | kohsuke | 2010-02-19 14:39:21 -0800 (Fri, 19 Feb 2010) | 1 line\n  \n  introduced a facotry and descriptor. This allows them to define configuration pages, allow users to disable/enable them, plus define custom behaviors.\n........\n  r27701 | kohsuke | 2010-02-19 18:23:52 -0800 (Fri, 19 Feb 2010) | 1 line\n  \n  defining a mechanism for ConsoleAnnotatorFactory and ConsoleAnnotationDescriptor to define script.js and have them imported into the console output page\n........\n  r27801 | kohsuke | 2010-02-22 11:59:16 -0800 (Mon, 22 Feb 2010) | 1 line\n  \n  now embedding annotations inside the console output log file.\n........\n  r27816 | kohsuke | 2010-02-22 15:45:04 -0800 (Mon, 22 Feb 2010) | 1 line\n  \n  introduced a convenience method for unit tests\n........\n  r27819 | kohsuke | 2010-02-22 17:37:05 -0800 (Mon, 22 Feb 2010) | 5 lines\n  \n  As an example of using embedded console annotations, implementing Ant target invocation outlines.\n  \n  It might be better to make the concept of outline more generally reusable, so that different kinds of outlines can be placed into the same container element for a single hierarchical representation.\n  \n  Still a work in progress.\n........\n  r27843 | kohsuke | 2010-02-23 16:12:13 -0800 (Tue, 23 Feb 2010) | 1 line\n  \n  for now, disable this for production usage, until I work out a better UI.\n........\n  r27844 | kohsuke | 2010-02-23 19:08:00 -0800 (Tue, 23 Feb 2010) | 1 line\n  \n  started working on annotating exception.\n........\n  r27845 | kohsuke | 2010-02-23 19:08:33 -0800 (Tue, 23 Feb 2010) | 1 line\n  \n  more TODOs for myself\n........\n  r28087 | kohsuke | 2010-03-01 10:03:55 -0800 (Mon, 01 Mar 2010) | 1 line\n  \n  formatting changes\n........\n  r28158 | kohsuke | 2010-03-02 17:00:00 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  ConsoleAnnotation and ConsoleAnnotator are too confusing.\n........\n  r28159 | kohsuke | 2010-03-02 17:02:02 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  doc improvement\n........\n  r28160 | kohsuke | 2010-03-02 17:05:14 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  more doc improvements.\n........\n  r28161 | kohsuke | 2010-03-02 17:11:59 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  more doc improvement\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@28173 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c6acb5b8d55a1402ecf95c21aa9c359c4b80db8c",
        "buggy_code": "assertBuildStatusSuccess(m.scheduleBuild2(0).get());",
        "fixed_code": "buildAndAssertSuccess(m);",
        "patch": "@@ -26,7 +26,7 @@ public void testEmptyModuleParsesAndBuilds() throws Exception {\n         MavenModuleSet m = createMavenProject();\n         m.getReporters().add(new TestReporter());\n         m.setScm(new ExtractResourceSCM(getClass().getResource(\"maven-empty-mod.zip\")));\n-        assertBuildStatusSuccess(m.scheduleBuild2(0).get());\n+        buildAndAssertSuccess(m);\n     }\n     \n     private static class TestReporter extends MavenReporter {"
    },
    {
        "commit_id": "c6acb5b8d55a1402ecf95c21aa9c359c4b80db8c",
        "commit_message": "[FIXED HUDSON-2137]\n\nMerged revisions 27137,27564,27566-27567,27578,27586,27599,27603,27606-27609,27611,27616,27626-27632,27640,27654-27656,27687,27701,27801,27816,27819,27843-27845,28087,28158-28161 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/HUDSON-2137\n\n........\n  r27137 | kohsuke | 2010-02-08 08:46:16 -0800 (Mon, 08 Feb 2010) | 1 line\n  \n  experimenting with abstractions\n........\n  r27564 | kohsuke | 2010-02-16 07:58:26 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  bundling makes it easier for caller to handle ConsoleAnnotator\n........\n  r27566 | kohsuke | 2010-02-16 08:49:48 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  this should work with Runs, not AbstractBuilds\n........\n  r27567 | kohsuke | 2010-02-16 08:54:06 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  simplified\n........\n  r27578 | kohsuke | 2010-02-16 12:26:11 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  still a work in progress, but committing once to pull in trunk changes\n........\n  r27586 | kohsuke | 2010-02-16 14:35:37 -0800 (Tue, 16 Feb 2010) | 1 line\n  \n  making more progress\n........\n  r27599 | kohsuke | 2010-02-16 19:22:01 -0800 (Tue, 16 Feb 2010) | 2 lines\n  \n  hooking up the side that writes annotations.\n  still a work in progress.\n........\n  r27603 | kohsuke | 2010-02-16 23:43:35 -0800 (Tue, 16 Feb 2010) | 3 lines\n  \n  what appears to me as the first cut of hooking up the reader side of the annotations.\n  \n  I haven't even run it yet --- this just passed the compilation, and I'm calling it a day.\n........\n  r27606 | kohsuke | 2010-02-17 09:15:16 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  demo instance hook up\n........\n  r27607 | kohsuke | 2010-02-17 11:27:02 -0800 (Wed, 17 Feb 2010) | 3 lines\n  \n  one more utility method.\n  \n  I never understood what the point of letting the skip method skip less.\n........\n  r27608 | kohsuke | 2010-02-17 11:56:23 -0800 (Wed, 17 Feb 2010) | 3 lines\n  \n  - moved LargeText subtype to its own class\n  - skipping log output was done incorrectly --- it had to skip N bytes where it was skipping N chars.\n  - hooked up console annotations for completed builds.\n........\n  r27609 | kohsuke | 2010-02-17 12:01:46 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  copyright header\n........\n  r27611 | kohsuke | 2010-02-17 13:18:10 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  introduced a mechanism to register extension during an unit test.\n........\n  r27616 | kohsuke | 2010-02-17 13:38:12 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  test case for console annotations\n........\n  r27626 | kohsuke | 2010-02-17 15:23:06 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  removing test ConsoleAnnotator as I write tests as tests\n........\n  r27627 | kohsuke | 2010-02-17 16:06:13 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  added a multi-phase cooperative locking mechanism useful during the debugging\n........\n  r27628 | kohsuke | 2010-02-17 16:06:41 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  testing progressive log annotation\n........\n  r27629 | kohsuke | 2010-02-17 16:20:32 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  adding a test for ConsoleAnnotation that's explicitly placed.\n........\n  r27630 | kohsuke | 2010-02-17 16:23:02 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  removing test ConsoleAnnotation as I write tests as tests\n........\n  r27631 | kohsuke | 2010-02-17 16:28:50 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  tweaking the abstraction a bit.\n........\n  r27632 | kohsuke | 2010-02-17 16:44:21 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  parameterized the context type so that this can be used in places other than the build console output, such as polling logs, slave logs, and so on.\n........\n  r27640 | kohsuke | 2010-02-17 17:27:52 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  bug fix\n........\n  r27654 | kohsuke | 2010-02-17 22:53:04 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  doc improvement\n........\n  r27655 | kohsuke | 2010-02-17 22:53:59 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  doc improvement\n........\n  r27656 | kohsuke | 2010-02-17 23:10:42 -0800 (Wed, 17 Feb 2010) | 1 line\n  \n  test case for adjacent tags\n........\n  r27687 | kohsuke | 2010-02-19 14:39:21 -0800 (Fri, 19 Feb 2010) | 1 line\n  \n  introduced a facotry and descriptor. This allows them to define configuration pages, allow users to disable/enable them, plus define custom behaviors.\n........\n  r27701 | kohsuke | 2010-02-19 18:23:52 -0800 (Fri, 19 Feb 2010) | 1 line\n  \n  defining a mechanism for ConsoleAnnotatorFactory and ConsoleAnnotationDescriptor to define script.js and have them imported into the console output page\n........\n  r27801 | kohsuke | 2010-02-22 11:59:16 -0800 (Mon, 22 Feb 2010) | 1 line\n  \n  now embedding annotations inside the console output log file.\n........\n  r27816 | kohsuke | 2010-02-22 15:45:04 -0800 (Mon, 22 Feb 2010) | 1 line\n  \n  introduced a convenience method for unit tests\n........\n  r27819 | kohsuke | 2010-02-22 17:37:05 -0800 (Mon, 22 Feb 2010) | 5 lines\n  \n  As an example of using embedded console annotations, implementing Ant target invocation outlines.\n  \n  It might be better to make the concept of outline more generally reusable, so that different kinds of outlines can be placed into the same container element for a single hierarchical representation.\n  \n  Still a work in progress.\n........\n  r27843 | kohsuke | 2010-02-23 16:12:13 -0800 (Tue, 23 Feb 2010) | 1 line\n  \n  for now, disable this for production usage, until I work out a better UI.\n........\n  r27844 | kohsuke | 2010-02-23 19:08:00 -0800 (Tue, 23 Feb 2010) | 1 line\n  \n  started working on annotating exception.\n........\n  r27845 | kohsuke | 2010-02-23 19:08:33 -0800 (Tue, 23 Feb 2010) | 1 line\n  \n  more TODOs for myself\n........\n  r28087 | kohsuke | 2010-03-01 10:03:55 -0800 (Mon, 01 Mar 2010) | 1 line\n  \n  formatting changes\n........\n  r28158 | kohsuke | 2010-03-02 17:00:00 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  ConsoleAnnotation and ConsoleAnnotator are too confusing.\n........\n  r28159 | kohsuke | 2010-03-02 17:02:02 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  doc improvement\n........\n  r28160 | kohsuke | 2010-03-02 17:05:14 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  more doc improvements.\n........\n  r28161 | kohsuke | 2010-03-02 17:11:59 -0800 (Tue, 02 Mar 2010) | 1 line\n  \n  more doc improvement\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@28173 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c6acb5b8d55a1402ecf95c21aa9c359c4b80db8c",
        "buggy_code": "FreeStyleBuild b = assertBuildStatusSuccess(p.scheduleBuild2(0).get());",
        "fixed_code": "FreeStyleBuild b = buildAndAssertSuccess(p);",
        "patch": "@@ -80,7 +80,7 @@ private void doTestAutoInstallation(String id, String fullversion) throws Except\n         FreeStyleProject p = createFreeStyleProject();\n         p.setJDK(jdk);\n         p.getBuildersList().add(new Shell(\"java -fullversion\\necho $JAVA_HOME\"));\n-        FreeStyleBuild b = assertBuildStatusSuccess(p.scheduleBuild2(0).get());\n+        FreeStyleBuild b = buildAndAssertSuccess(p);\n         @SuppressWarnings(\"deprecation\") String log = b.getLog();\n         System.out.println(log);\n         // make sure it runs with the JDK that just got installed"
    },
    {
        "commit_id": "8f4bec7089544bfbe9a0d0a4fd539dab00656a04",
        "commit_message": "fix test for change in r26344\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@26384 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8f4bec7089544bfbe9a0d0a4fd539dab00656a04",
        "buggy_code": "HtmlPage page = new WebClient().goTo(\"log/all\");",
        "fixed_code": "HtmlPage page = new WebClient().goTo(\"log/levels\");",
        "patch": "@@ -42,7 +42,7 @@ public class LogRecorderManagerTest extends HudsonTestCase {\n     public void testLoggerConfig() throws Exception {\n         Logger logger = Logger.getLogger(\"foo.bar.zot\");\n \n-        HtmlPage page = new WebClient().goTo(\"log/all\");\n+        HtmlPage page = new WebClient().goTo(\"log/levels\");\n         HtmlForm form = page.getFormByName(\"configLogger\");\n         form.getInputByName(\"name\").setValueAttribute(\"foo.bar.zot\");\n         form.getSelectByName(\"level\").getOptionByValue(\"finest\").setSelected(true);"
    },
    {
        "commit_id": "ed2c75eb76307461e8694bdd342ced4e1154920d",
        "commit_message": "oops, need \\\\ in java regexp (fix r25539)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@25551 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ed2c75eb76307461e8694bdd342ced4e1154920d",
        "buggy_code": "new VersionNumber(Hudson.VERSION.replaceFirst(\"SHOT *\\(private.*\\)\", \"SHOT\")));",
        "fixed_code": "new VersionNumber(Hudson.VERSION.replaceFirst(\"SHOT *\\\\(private.*\\\\)\", \"SHOT\")));",
        "patch": "@@ -560,7 +560,7 @@ else if (current.isOlderThan(requiredVersion)) {\n         public boolean isForNewerHudson() {\n             try {\n                 return requiredCore!=null && new VersionNumber(requiredCore).isNewerThan(\n-                    new VersionNumber(Hudson.VERSION.replaceFirst(\"SHOT *\\(private.*\\)\", \"SHOT\")));\n+                  new VersionNumber(Hudson.VERSION.replaceFirst(\"SHOT *\\\\(private.*\\\\)\", \"SHOT\")));\n             } catch (NumberFormatException nfe) {\n                 return true;  // If unable to parse version\n             }"
    },
    {
        "commit_id": "47e06ffccbb0ad1fdad354347e82dcb4b312951d",
        "commit_message": "improved error message\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@24899 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/47e06ffccbb0ad1fdad354347e82dcb4b312951d",
        "buggy_code": "throw new IOException2(\"remote file operation failed\",e);",
        "fixed_code": "throw new IOException2(\"remote file operation failed: \"+remote+\" at \"+channel,e);",
        "patch": "@@ -669,7 +669,7 @@ private <T> T act(final FileCallable<T> callable, ClassLoader cl) throws IOExcep\n                 throw e;    // pass through so that the caller can catch it as AbortException\n             } catch (IOException e) {\n                 // wrap it into a new IOException so that we get the caller's stack trace as well.\n-                throw new IOException2(\"remote file operation failed\",e);\n+                throw new IOException2(\"remote file operation failed: \"+remote+\" at \"+channel,e);\n             }\n         } else {\n             // the file is on the local machine."
    },
    {
        "commit_id": "53b8f8a518ef670ea6a1c2f29e4950741919c55d",
        "commit_message": "[HUDSON-936] Applied the patch from pcc.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@24149 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/53b8f8a518ef670ea6a1c2f29e4950741919c55d",
        "buggy_code": "if (c==null)    continue;",
        "fixed_code": "if (c==null || c.isOffline())    continue;",
        "patch": "@@ -904,7 +904,7 @@ public String hash(Node node) {\n             \n             for (Node n : hash.list(p.task.getFullDisplayName())) {\n                 Computer c = n.toComputer();\n-                if (c==null)    continue;\n+                if (c==null || c.isOffline())    continue;\n                 c.startFlyWeightTask(p);\n                 return;\n             }"
    },
    {
        "commit_id": "5b7c857cfd65b177dda02c799e937fc9fd552bd4",
        "commit_message": "[HUDSON-4941] Log which file had an XML parse error to assist in diagnosis & fix.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@24022 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5b7c857cfd65b177dda02c799e937fc9fd552bd4",
        "buggy_code": "throw new IOException2(e);",
        "fixed_code": "throw new IOException2(\"Unable to read \"+file,e);",
        "patch": "@@ -147,7 +147,7 @@ public Object unmarshal( Object o ) throws IOException {\n         try {\n             return xs.unmarshal(new XppReader(r),o);\n         } catch (StreamException e) {\n-            throw new IOException2(e);\n+            throw new IOException2(\"Unable to read \"+file,e);\n         } catch(ConversionException e) {\n             throw new IOException2(\"Unable to read \"+file,e);\n         } catch(Error e) {// mostly reflection errors"
    },
    {
        "commit_id": "f8e2a28eb0c03f58f6d14ab970058940de93670c",
        "commit_message": "Seeing dead lock after the message:\n\nNov 9, 2009 1:46:11 PM hudson.remoting.Channel$ReaderThread run\nSEVERE: I/O error in channel This side of the channel\njava.io.IOException: Write end dead\n\tat java.io.PipedInputStream.read(PipedInputStream.java:294)\n\tat java.io.ObjectInputStream$PeekInputStream.peek(ObjectInputStream.java:2249)\n\tat java.io.ObjectInputStream$BlockDataInputStream.peek(ObjectInputStream.java:2542)\n\tat java.io.ObjectInputStream$BlockDataInputStream.peekByte(ObjectInputStream.java:2552)\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1297)\n\tat java.io.ObjectInputStream.readObject(ObjectInputStream.java:351)\n\tat hudson.remoting.Channel$ReaderThread.run(Channel.java:849)\nNov 9, 2009 1:46:11 PM hudson.remoting.Request$2 run\nSEVERE: Failed to send back a reply\njava.io.IOException: Read end dead\n\tat java.io.PipedInputStream.checkStateForReceive(PipedInputStream.java:246)\n\tat java.io.PipedInputStream.receive(PipedInputStream.java:210)\n\tat java.io.PipedOutputStream.write(PipedOutputStream.java:132)\n\tat java.io.ObjectOutputStream$BlockDataOutputStream.drain(ObjectOutputStream.java:1838)\n\tat java.io.ObjectOutputStream$BlockDataOutputStream.setBlockDataMode(ObjectOutputStream.java:1747)\n\tat java.io.ObjectOutputStream.writeNonProxyDesc(ObjectOutputStream.java:1249)\n\tat java.io.ObjectOutputStream.writeClassDesc(ObjectOutputStream.java:1203)\n\tat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1387)\n\tat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1150)\n\tat java.io.ObjectOutputStream.writeFatalException(ObjectOutputStream.java:1538)\n\tat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:329)\n\tat hudson.remoting.Channel.send(Channel.java:413)\n\tat hudson.remoting.Request$2.run(Request.java:282)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:619)\n\n\n\nThe thread dump indicates that the test thread is stuck at british.join(), because British channel reader thread is still alive. I remember PipedInput|OutputStream being not truly multi-thread aware, so changing it to our own version to see if that fixes the problem without my digging further.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@23625 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f8e2a28eb0c03f58f6d14ab970058940de93670c",
        "buggy_code": "FastPipedInputStream() {",
        "fixed_code": "public FastPipedInputStream() {",
        "patch": "@@ -47,7 +47,7 @@ public class FastPipedInputStream extends InputStream {\n     /**\n      * Creates an unconnected PipedInputStream with a default buffer size.\n      */\n-    FastPipedInputStream() {\n+    public FastPipedInputStream() {\n         this.buffer = new byte[0x10000];\n     }\n "
    },
    {
        "commit_id": "72e0942fc9bd0945ddc88c292c813e37be900b06",
        "commit_message": "oops, fix typo in r23393\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@23399 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/72e0942fc9bd0945ddc88c292c813e37be900b06",
        "buggy_code": "return url.endsWith(href));",
        "fixed_code": "return url.endsWith(href);",
        "patch": "@@ -1080,7 +1080,7 @@ public boolean hyperlinkMatchesCurrentPage(String href) throws UnsupportedEncodi\n         if (url.endsWith(\"/\")) url = url.substring(0, url.length() - 1);\n         if (href.endsWith(\"/\")) href = href.substring(0, href.length() - 1);\n \n-        return url.endsWith(href));\n+        return url.endsWith(href);\n     }\n \n     public <T> List<T> singletonList(T t) {"
    },
    {
        "commit_id": "720be7d7a12facd3543c0ffa2d2757ef76b9c06a",
        "commit_message": "Merged revisions 23183,23185,23245,23256,23266,23279-23284,23286 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/multiple-update-sources\n\n........\n  r23183 | abayer | 2009-10-25 11:53:17 -0700 (Sun, 25 Oct 2009) | 1 line\n  \n  First chunk of work towards supporting multiple update centers - infrastructure in place for it, and default update center treated as only one of multiple - have to use slightly modified update-center.json though\n........\n  r23185 | abayer | 2009-10-25 12:25:49 -0700 (Sun, 25 Oct 2009) | 1 line\n  \n  a number of tweaks - among other things, now works properly with additional update centers defined in hudson.model.UpdateCenter.xml - try using http://andrewbayer.com/images/hello-world/helloWorld-update-center.json as second update center\n........\n  r23245 | abayer | 2009-10-27 13:45:25 -0700 (Tue, 27 Oct 2009) | 1 line\n  \n  Modified to support existing default update-center.json\n........\n  r23256 | kohsuke | 2009-10-27 18:30:15 -0700 (Tue, 27 Oct 2009) | 7 lines\n  \n  - moved data binding of update-center.json to UpdateSource.\n  - moved some of the UpdateSource property into JSON, to improve the user experience when adding an update source.\n    the user should just type in one URL, and everything else should happen automatically.\n  - it doesn't make sense for UpdateSource to rely on UpdateCenterConfiguration, since behaviors cannot be\n    modified per UpdateSource basis. Instead, leaving it in UpdateCenter allows us to maintain backward compatible\n    behaviors with the existing custom UpdateCenterConfiguration implementation.\n........\n  r23266 | kohsuke | 2009-10-27 19:29:24 -0700 (Tue, 27 Oct 2009) | 1 line\n  \n  serve id inside JSON.\n........\n  r23279 | kohsuke | 2009-10-28 10:44:00 -0700 (Wed, 28 Oct 2009) | 1 line\n  \n  Do not special-case \"default\" ID. Receive hudson.war updates from wherever that provides one.\n........\n  r23280 | kohsuke | 2009-10-28 10:50:57 -0700 (Wed, 28 Oct 2009) | 1 line\n  \n  formatting change.\n........\n  r23281 | kohsuke | 2009-10-28 11:30:40 -0700 (Wed, 28 Oct 2009) | 1 line\n  \n  typo\n........\n  r23282 | kohsuke | 2009-10-28 11:45:06 -0700 (Wed, 28 Oct 2009) | 2 lines\n  \n  - added the UI to remove sites.\n  - persistence of UpdateSource happens more automatically now.\n........\n  r23283 | kohsuke | 2009-10-28 11:50:04 -0700 (Wed, 28 Oct 2009) | 1 line\n  \n  UpdateSource -> UpdateSite to align terminology with Eclipse.\n........\n  r23284 | kohsuke | 2009-10-28 11:55:03 -0700 (Wed, 28 Oct 2009) | 5 lines\n  \n  Actually, for now, just having a programmatic modification to UpdateSite would satisfy the primary use case.\n  \n  And I'd like to upgrade YUI to a more recent version so that we can use its DataTable for UI. Plus the single update center model encourages the community to bring the code into the Hudson project, which is something we'd like to keep.\n  \n  So all in all, I'm postponing the UI work.\n........\n  r23286 | kohsuke | 2009-10-28 13:07:19 -0700 (Wed, 28 Oct 2009) | 1 line\n  \n  Renaming and bug fixes.\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@23326 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/720be7d7a12facd3543c0ffa2d2757ef76b9c06a",
        "buggy_code": "return Hudson.getInstance().getUpdateCenter().getUrl()+\"updates/\"+url;",
        "fixed_code": "return Hudson.getInstance().getUpdateCenter().getDefaultBaseUrl()+\"updates/\"+url;",
        "patch": "@@ -152,7 +152,7 @@ public String getId() {\n          * URL to download.\n          */\n         public String getUrl() {\n-            return Hudson.getInstance().getUpdateCenter().getUrl()+\"updates/\"+url;\n+            return Hudson.getInstance().getUpdateCenter().getDefaultBaseUrl()+\"updates/\"+url;\n         }\n \n         /**"
    },
    {
        "commit_id": "c59e4c5896c192e6a0810c9162ad483599fa8dc6",
        "commit_message": "[FIXED HUDSON-4654] Properly return \"true\" when calling isDarwin on a Mac.\n\nPatch submitted by Benjamin Shine <bshine@yahoo-inc.com>",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c59e4c5896c192e6a0810c9162ad483599fa8dc6",
        "buggy_code": "return System.getProperty(\"os.name\").startsWith(\"mac\");",
        "fixed_code": "return System.getProperty(\"os.name\").toLowerCase().startsWith(\"mac\");",
        "patch": "@@ -3113,7 +3113,7 @@ public static boolean isWindows() {\n     \n     public static boolean isDarwin() {\n         // according to http://developer.apple.com/technotes/tn2002/tn2110.html\n-        return System.getProperty(\"os.name\").startsWith(\"mac\");\n+        return System.getProperty(\"os.name\").toLowerCase().startsWith(\"mac\");\n     }\n \n     /**"
    },
    {
        "commit_id": "d69c7f678edad36ca685cbe6f23e765b32b38379",
        "commit_message": "Merged revisions 22140,22200,22202,22205,22237,22240,22242,22245 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/rc\n\n........\n  r22140 | kohsuke | 2009-09-24 16:41:50 -0700 (Thu, 24 Sep 2009) | 1 line\n  \n  updating to a new version\n........\n  r22200 | kohsuke | 2009-09-25 16:33:50 -0700 (Fri, 25 Sep 2009) | 1 line\n  \n  [maven-release-plugin] prepare release hudson-1_325\n........\n  r22202 | kohsuke | 2009-09-25 16:34:05 -0700 (Fri, 25 Sep 2009) | 1 line\n  \n  [maven-release-plugin] prepare for next development iteration\n........\n  r22205 | kohsuke | 2009-09-25 17:09:38 -0700 (Fri, 25 Sep 2009) | 1 line\n  \n  updated changelog as a part of the release\n........\n  r22237 | kohsuke | 2009-09-28 09:51:38 -0700 (Mon, 28 Sep 2009) | 1 line\n  \n  [HUDSON-4353] My fix had a crucial bug that prevents plugin updates from failing.\n........\n  r22240 | kohsuke | 2009-09-28 10:37:51 -0700 (Mon, 28 Sep 2009) | 1 line\n  \n  [maven-release-plugin] prepare release hudson-1_326\n........\n  r22242 | kohsuke | 2009-09-28 10:39:05 -0700 (Mon, 28 Sep 2009) | 1 line\n  \n  [maven-release-plugin] prepare for next development iteration\n........\n  r22245 | kohsuke | 2009-09-28 11:24:40 -0700 (Mon, 28 Sep 2009) | 1 line\n  \n  updated changelog as a part of the release\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@22250 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d69c7f678edad36ca685cbe6f23e765b32b38379",
        "buggy_code": "if(explodeTime.exists() && explodeTime.lastModified()!=archive.lastModified())",
        "fixed_code": "if(explodeTime.exists() && explodeTime.lastModified()==archive.lastModified())",
        "patch": "@@ -324,7 +324,7 @@ private static void explode(File archive, File destDir) throws IOException {\n \n         // timestamp check\n         File explodeTime = new File(destDir,\".timestamp\");\n-        if(explodeTime.exists() && explodeTime.lastModified()!=archive.lastModified())\n+        if(explodeTime.exists() && explodeTime.lastModified()==archive.lastModified())\n             return; // no need to expand\n \n         LOGGER.info(\"Extracting \"+archive);"
    },
    {
        "commit_id": "b3e1c8a45e9ead1235a997ca3bcc677f0371216c",
        "commit_message": "[FIXED HUDSON-4226] Applied the patch and added a test case. This fix will be in 1.325.\nI also added subversion.hpi in the dependency of the test-harness so that we can use Subversion check out for tests. I was afraid of a circular dependency problem when building the subversion plugin, but apparently Maven handles it gracefully.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@21999 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b3e1c8a45e9ead1235a997ca3bcc677f0371216c",
        "buggy_code": "return wsl.allocate(getParentBuild().getModuleRoot().child(getProject().getRelativePath()));",
        "fixed_code": "return wsl.allocate(getModuleSetBuild().getModuleRoot().child(getProject().getRelativePath()));",
        "patch": "@@ -478,7 +478,7 @@ private class RunnerImpl extends AbstractRunner {\n \n         @Override\n         protected Lease decideWorkspace(Node n, WorkspaceList wsl) throws InterruptedException, IOException {\n-            return wsl.allocate(getParentBuild().getModuleRoot().child(getProject().getRelativePath()));\n+            return wsl.allocate(getModuleSetBuild().getModuleRoot().child(getProject().getRelativePath()));\n         }\n \n         protected Result doRun(BuildListener listener) throws Exception {"
    },
    {
        "commit_id": "66bf21ba97df5c99605fe2e8c404fa6e47f1f571",
        "commit_message": "Merged revisions 21385-21386 via svnmerge from \nhttps://svn.dev.java.net/svn/hudson/branches/rc\n\n........\n  r21385 | kohsuke | 2009-09-02 15:41:39 -0700 (Wed, 02 Sep 2009) | 1 line\n  \n  Fixed a random test failure, which was caused by PingThread detecting communication problem while it's being orderly shut down.\n........\n  r21386 | kohsuke | 2009-09-02 15:41:57 -0700 (Wed, 02 Sep 2009) | 1 line\n  \n  indentation fix.\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@21387 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/66bf21ba97df5c99605fe2e8c404fa6e47f1f571",
        "buggy_code": "throw new IOException(\"already closed\");",
        "fixed_code": "throw new ChannelClosedException();",
        "patch": "@@ -394,7 +394,7 @@ public void onClosed(Channel channel, IOException cause) {}\n      */\n     /*package*/ synchronized void send(Command cmd) throws IOException {\n         if(outClosed)\n-            throw new IOException(\"already closed\");\n+            throw new ChannelClosedException();\n         if(logger.isLoggable(Level.FINE))\n             logger.fine(\"Send \"+cmd);\n         Channel old = Channel.setCurrent(this);"
    },
    {
        "commit_id": "b0c76f7b515c89ba567f91a1adc91fa64a26cfe6",
        "commit_message": "Newline in the header was a bad idea because it can be eaten away by BufferedReader.readLine(), plus it can be affected by transports between CR/LF conversions.\n\nThis should fix the test problem.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@21327 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b0c76f7b515c89ba567f91a1adc91fa64a26cfe6",
        "buggy_code": "PREAMBLE = \"\\n<===[HUDSON REMOTING CAPACITY]===>\".getBytes(\"UTF-8\");",
        "fixed_code": "PREAMBLE = \"<===[HUDSON REMOTING CAPACITY]===>\".getBytes(\"UTF-8\");",
        "patch": "@@ -74,7 +74,7 @@ public static Capability read(InputStream is) throws IOException {\n \n     static {\n         try {\n-            PREAMBLE = \"\\n<===[HUDSON REMOTING CAPACITY]===>\".getBytes(\"UTF-8\");\n+            PREAMBLE = \"<===[HUDSON REMOTING CAPACITY]===>\".getBytes(\"UTF-8\");\n         } catch (UnsupportedEncodingException e) {\n             throw new AssertionError(e);\n         }"
    },
    {
        "commit_id": "acc727d62689526301f3c3e525b1f56a4692ec12",
        "commit_message": "[FIXED HUDSON-2670] Matrix project includes axis values in URLs..\nadd encoding when needed for characters in these values, particularly /\n\n- Use Util.rawEncode in AbstractItem.getShortUrl() so that axis values\n  needing encoding will be encoded\n- STAPLER-8 fix makes Stapler properly parse a URL with %2F (don't \n  split on %2F, only a real /)\n- Stapler fix also makes urls generated via Ancestor class maintain proper encoding\n- Add MatrixBuild.RunPtr.getShortUrl() and use this in MatrixBuild/ajaxMatrix.jelly\n  so links to combinations are properly encoded\n- Use Util.rawEncode in MatrixProject.getRootDirFor() so directories created on\n  the filesystem won't use illegal characters; matching decode() in\n  MatrixProject.loadConfigurations()\n\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@21321 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/acc727d62689526301f3c3e525b1f56a4692ec12",
        "buggy_code": "return getParent().getUrlChildPrefix()+'/'+getName()+'/';",
        "fixed_code": "return getParent().getUrlChildPrefix()+'/'+Util.rawEncode(getName())+'/';",
        "patch": "@@ -166,7 +166,7 @@ public final String getUrl() {\n     }\n \n     public String getShortUrl() {\n-        return getParent().getUrlChildPrefix()+'/'+getName()+'/';\n+        return getParent().getUrlChildPrefix()+'/'+Util.rawEncode(getName())+'/';\n     }\n \n     public String getSearchUrl() {"
    },
    {
        "commit_id": "ef84348861868fc023b74780e2dcb2671549ad94",
        "commit_message": "follow up fix to rev.21175.\n\n- toString -> getShortDescription so that ParameterValue.getShortDescription() can explain what this method is expected to return.\n- added proper HTML escape to avoid XSS vulnerability.\n- modified to use StringBuilder for string concatanation.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@21252 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ef84348861868fc023b74780e2dcb2671549ad94",
        "buggy_code": "public String toString() {",
        "fixed_code": "public String getShortDescription() {",
        "patch": "@@ -107,7 +107,7 @@ public boolean equals(Object obj) {\n \t}\n \t\n \t@Override\n-    public String toString() {\n+    public String getShortDescription() {\n     \treturn \"(FileParameterValue) \" + getName() + \"='\" + file.getName() + \"'\";\n     }\n     "
    },
    {
        "commit_id": "dab996e26ae4b853e935ec8702f65fa5ea98178f",
        "commit_message": "improve the error diagnostics when Maven terminates abruptly.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@21109 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/dab996e26ae4b853e935ec8702f65fa5ea98178f",
        "buggy_code": "Result r = process.channel.call(new Builder(",
        "fixed_code": "Result r = process.call(new Builder(",
        "patch": "@@ -516,7 +516,7 @@ protected Result doRun(BuildListener listener) throws Exception {\n \n             boolean normalExit = false;\n             try {\n-                Result r = process.channel.call(new Builder(\n+                Result r = process.call(new Builder(\n                     listener,new ProxyImpl(),\n                     reporters.toArray(new MavenReporter[reporters.size()]), margs.toList(), systemProps));\n                 normalExit = true;"
    },
    {
        "commit_id": "cbb3e313ad90c63d62b1ccfaeabb004edcee1496",
        "commit_message": "Merged revisions 20928-20929,20939,20974-20975,20988,21009,21011,21015 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/rc\n\n........\n  r20928 | kohsuke | 2009-08-19 14:47:13 -0700 (Wed, 19 Aug 2009) | 1 line\n  \n  test bug fix.\n........\n  r20929 | kohsuke | 2009-08-19 14:48:23 -0700 (Wed, 19 Aug 2009) | 1 line\n  \n  bumped up to a new version that has a trouble-shooting hook for resetting cached views\n........\n  r20939 | kohsuke | 2009-08-19 15:20:57 -0700 (Wed, 19 Aug 2009) | 1 line\n  \n  picking up subversion 1.5\n........\n  r20974 | kohsuke | 2009-08-20 11:50:04 -0700 (Thu, 20 Aug 2009) | 3 lines\n  \n      Hudson can make mistakes in binding plugins to their right /plugin/NAME/ URLs.\n      (<a href=\"http://www.nabble.com/Custom-Plugin---No-external-resources-available-td25064554.html\">report</a>)\n........\n  r20975 | kohsuke | 2009-08-20 12:05:11 -0700 (Thu, 20 Aug 2009) | 1 line\n  \n  Build history AJX update was buggy.\n........\n  r20988 | kohsuke | 2009-08-20 17:01:57 -0700 (Thu, 20 Aug 2009) | 3 lines\n  \n      Hudson wasn't working on WebLogic on Windows.\n      (<a href=\"http://www.nabble.com/Re%3A-Hudson-on-Weblogic-10.3-td25038378.html#a25043415\">report</a>)\n........\n  r21009 | kohsuke | 2009-08-21 14:21:35 -0700 (Fri, 21 Aug 2009) | 1 line\n  \n  [maven-release-plugin] prepare release hudson-\n........\n  r21011 | kohsuke | 2009-08-21 14:22:00 -0700 (Fri, 21 Aug 2009) | 1 line\n  \n  [maven-release-plugin] prepare for next development iteration\n........\n  r21015 | kohsuke | 2009-08-21 16:00:17 -0700 (Fri, 21 Aug 2009) | 1 line\n  \n  updated changelog as a part of the release\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@21095 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cbb3e313ad90c63d62b1ccfaeabb004edcee1496",
        "buggy_code": "return lst.subList(0,THRESHOLD);",
        "fixed_code": "return updateFirstTransientBuildKey(lst.subList(0,THRESHOLD));",
        "patch": "@@ -117,7 +117,7 @@ public Iterable<T> getRenderList() {\n             if (baseList instanceof List) {\n                 lst = (List<T>) baseList;\n                 if(lst.size()>THRESHOLD)\n-                    return lst.subList(0,THRESHOLD);\n+                    return updateFirstTransientBuildKey(lst.subList(0,THRESHOLD));\n                 trimmed=false;\n                 return updateFirstTransientBuildKey(lst);\n             } else {"
    },
    {
        "commit_id": "5b70aeb427f745bae481e0324693274289340581",
        "commit_message": "fixed an NPE regression I introduced while modifying the patch.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20900 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5b70aeb427f745bae481e0324693274289340581",
        "buggy_code": "if (dynamicLabels.isChanged(toComputer()))",
        "fixed_code": "if (dynamicLabels==null || dynamicLabels.isChanged(toComputer()))",
        "patch": "@@ -1958,7 +1958,7 @@ public Set<Label> getAssignedLabels() {\n      * @see hudson.tasks.LabelFinder\n      */\n     public Set<Label> getDynamicLabels() {\n-        if (dynamicLabels.isChanged(toComputer()))\n+        if (dynamicLabels==null || dynamicLabels.isChanged(toComputer()))\n             // in the worst cast, two threads end up doing the same computation\n             // twice, but that won't break the semantics.\n             // OTOH, not locking prevents dead-lock. See #1390"
    },
    {
        "commit_id": "5b70aeb427f745bae481e0324693274289340581",
        "commit_message": "fixed an NPE regression I introduced while modifying the patch.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20900 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5b70aeb427f745bae481e0324693274289340581",
        "buggy_code": "if (dynamicLabels.isChanged(toComputer()))",
        "fixed_code": "if (dynamicLabels==null || dynamicLabels.isChanged(toComputer()))",
        "patch": "@@ -244,7 +244,7 @@ public Set<Label> getDynamicLabels() {\n         // so a care needs to be taken to avoid race conditions under all \n         // circumstances.\n         synchronized (this) {\n-            if (dynamicLabels.isChanged(toComputer()))\n+            if (dynamicLabels==null || dynamicLabels.isChanged(toComputer()))\n                 dynamicLabels = new DynamicLabels(toComputer());\n         }\n         return dynamicLabels.labels;"
    },
    {
        "commit_id": "c504112afbe7c9d345f66d1432f47fc6a52ac3ea",
        "commit_message": "fix compile error by adding FormException to throws clause\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20712 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c504112afbe7c9d345f66d1432f47fc6a52ac3ea",
        "buggy_code": "public void doConfigSubmit( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {",
        "fixed_code": "public void doConfigSubmit( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException, FormException {",
        "patch": "@@ -475,7 +475,7 @@ public List<ProminentProjectAction> getProminentActions() {\n     }\n \n     @Override\n-    public void doConfigSubmit( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n+    public void doConfigSubmit( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException, FormException {\n         super.doConfigSubmit(req,rsp);\n \n         Set<AbstractProject> upstream = Collections.emptySet();"
    },
    {
        "commit_id": "9dcf5cd1901df3f56ebe32e5c9f8ca6dbdf32d3b",
        "commit_message": "[FIXED HUDSON-1816] In 1.321. Applied a patch from Yury Bubnov.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20679 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9dcf5cd1901df3f56ebe32e5c9f8ca6dbdf32d3b",
        "buggy_code": "task.setBranch(branch);",
        "fixed_code": "task.setTag(isTag() ? \":\" + branch : branch);",
        "patch": "@@ -864,7 +864,7 @@ public void log(String msg, int msgLevel) {\n                     task.setFailOnError(true);\n                     BufferedOutputStream bufferedOutput = new BufferedOutputStream(out);\n                     task.setDeststream(bufferedOutput);\n-                    task.setBranch(branch);\n+                    task.setTag(isTag() ? \":\" + branch : branch);\n                     task.setStart(startTime);\n                     task.setEnd(endTime);\n                     if(changedFiles!=null) {"
    },
    {
        "commit_id": "82951818b70a2b03e21c98dd5b6fc22d7fd73f9d",
        "commit_message": "fix Eclipse compile error\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20378 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/82951818b70a2b03e21c98dd5b6fc22d7fd73f9d",
        "buggy_code": "protected class RunnerImpl extends Build.RunnerImpl {",
        "fixed_code": "protected class RunnerImpl extends Build<MatrixConfiguration,MatrixRun>.RunnerImpl {",
        "patch": "@@ -127,7 +127,7 @@ public void run() {\n         run(new RunnerImpl());\n     }\n \n-    protected class RunnerImpl extends Build.RunnerImpl {\n+    protected class RunnerImpl extends Build<MatrixConfiguration,MatrixRun>.RunnerImpl {\n         @Override\n         protected FilePath decideWorkspace(Node n, WorkspaceList wsl) {\n             Node node = getBuiltOn();"
    },
    {
        "commit_id": "82951818b70a2b03e21c98dd5b6fc22d7fd73f9d",
        "commit_message": "fix Eclipse compile error\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20378 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/82951818b70a2b03e21c98dd5b6fc22d7fd73f9d",
        "buggy_code": "protected class RunnerImpl extends Build.RunnerImpl {",
        "fixed_code": "protected class RunnerImpl extends Build<FreeStyleProject,FreeStyleBuild>.RunnerImpl {",
        "patch": "@@ -46,7 +46,7 @@ public void run() {\n         run(new RunnerImpl());\n     }\n \n-    protected class RunnerImpl extends Build.RunnerImpl {\n+    protected class RunnerImpl extends Build<FreeStyleProject,FreeStyleBuild>.RunnerImpl {\n         @Override\n         protected FilePath decideWorkspace(Node n, WorkspaceList wsl) {\n             String customWorkspace = getProject().getCustomWorkspace();"
    },
    {
        "commit_id": "c04e63d9f0c0b1a3b0683e64838c685cdddcd265",
        "commit_message": "Merged revisions 19592-19593,19651,19669,19671-19672,19709,19712-19715,19728-19729,19825-19828,19859-19861,19863-19865,19869,19874-19875,19889,19896,19908-19909,19979,19982,20106,20115,20141-20144,20184,20196,20207-20208,20215-20216,20222,20286,20293 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/concurrent-build\n\n........\n  r19592 | kohsuke | 2009-07-10 14:02:22 -0700 (Fri, 10 Jul 2009) | 1 line\n  \n  introduced getWorkspace() and getModuleRoot() on AbstractBuild.\n........\n  r19593 | kohsuke | 2009-07-10 15:06:08 -0700 (Fri, 10 Jul 2009) | 1 line\n  \n  introduced a flag to control the behavior, so that we can expose the feature much later after we merge the branch into the trunk.\n........\n  r19651 | kohsuke | 2009-07-13 08:48:31 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  modified to work with multiple concurrent builds\n........\n  r19669 | kohsuke | 2009-07-13 14:25:58 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  updating TODOs\n........\n  r19671 | kohsuke | 2009-07-13 16:50:42 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  committing my changes before I push this up to the Run class.\n........\n  r19672 | kohsuke | 2009-07-13 17:14:41 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  pushed the change up to the Run class, which simplifies things a bit, and avoids a race condition in the final \"notifyAll\" when the build is completed.\n........\n  r19709 | kohsuke | 2009-07-14 17:56:24 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  added checkpoint methods to the base type of where it's commonly used, to simplify invocations.\n........\n  r19712 | kohsuke | 2009-07-14 18:16:50 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  revisited the CheckPoint abstraction. I think this is more OO now\n........\n  r19713 | kohsuke | 2009-07-14 18:17:18 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  doc fix\n........\n  r19714 | kohsuke | 2009-07-14 18:23:32 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  replaced AbstractProject.getWorkspace() by AbstractBuild.getWorkspace(). The easy ones are done, but the harder ones remain.\n........\n  r19715 | kohsuke | 2009-07-14 18:32:56 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  more getWorkspace() changes\n........\n  r19728 | kohsuke | 2009-07-15 11:17:25 -0700 (Wed, 15 Jul 2009) | 1 line\n  \n  removed more getWorkspace() usage by getSomeWorkspace()\n........\n  r19729 | kohsuke | 2009-07-15 11:17:43 -0700 (Wed, 15 Jul 2009) | 1 line\n  \n  this is done\n........\n  r19825 | kohsuke | 2009-07-17 15:35:21 -0700 (Fri, 17 Jul 2009) | 4 lines\n  \n  - refactored SCM triggering code to avoid queueing up too many threads.\n  - workspace locking only happens if the SCM declares that the polling requires a workspace.\n  \n  TODO: given the face of concurrent builds, a single workspace lock won't work.\n........\n  r19826 | kohsuke | 2009-07-17 16:21:15 -0700 (Fri, 17 Jul 2009) | 5 lines\n  \n  implemented the handling of polling/build mutual exclusion when polling requires a workspace.\n  \n  The SCMs that require a workspace for polling, such as CVS, do so by comparing the state of the workspace\n  vs that of the remote. So it needs to use the workspace of the last build. Polling needs to wait for this workspace\n  if it's currently in use by a build, so a wait/notify scheme was needed, and hence WorkspaceList.\n........\n  r19827 | kohsuke | 2009-07-17 16:32:54 -0700 (Fri, 17 Jul 2009) | 1 line\n  \n  removed the workspace resource lock.\n........\n  r19828 | kohsuke | 2009-07-17 16:40:09 -0700 (Fri, 17 Jul 2009) | 1 line\n  \n  got rid of the lock. A build will always allocate an available workspace, so this is no longer necessary.\n........\n  r19859 | kohsuke | 2009-07-18 12:45:03 -0700 (Sat, 18 Jul 2009) | 2 lines\n  \n  Fixing a test failure. This might be signaling a depper abstraction problem, but let's see...\n........\n  r19860 | kohsuke | 2009-07-18 13:10:32 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  bug fix\n........\n  r19861 | kohsuke | 2009-07-18 13:12:18 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  typo\n........\n  r19863 | kohsuke | 2009-07-18 13:25:20 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  pass in common parameters for convenience.\n........\n  r19864 | kohsuke | 2009-07-18 13:36:34 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  doc fix\n........\n  r19865 | kohsuke | 2009-07-18 13:57:55 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  bug fix.\n........\n  r19869 | kohsuke | 2009-07-18 14:07:18 -0700 (Sat, 18 Jul 2009) | 2 lines\n  \n  This fixes the elusive NPE in com.gargoylesoftware.htmlunit.javascript.host.Event.<init>(Event.java:164)\n........\n  r19874 | kohsuke | 2009-07-18 14:44:39 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  forgot to update this.\n........\n  r19875 | kohsuke | 2009-07-18 14:44:48 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  forgot to update this.\n........\n  r19889 | kohsuke | 2009-07-18 16:12:04 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  fixed the license header.\n........\n  r19896 | kohsuke | 2009-07-18 16:16:44 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  adding a note.\n........\n  r19908 | kohsuke | 2009-07-18 17:13:03 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  fixed a bug. The parent build will likely run on a different node, so we can't just inherit its workspace.\n........\n  r19909 | kohsuke | 2009-07-18 17:16:54 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  reorgznied imports.\n........\n  r19979 | kohsuke | 2009-07-20 14:22:50 -0700 (Mon, 20 Jul 2009) | 1 line\n  \n  [HUDSON-4060] fixed a reported ClassCastException, but I don't think that's related to the hang problem.\n........\n  r19982 | kohsuke | 2009-07-20 14:51:11 -0700 (Mon, 20 Jul 2009) | 31 lines\n  \n  increasing the error margin in response to the flaky test that causes this error:\n  \n  unexpected build status; build log was: ------ Legacy code started this job.  No cause information is available Recording test results Test reports were found but none of them are new. Did tests run?  For example, /tmp/hudson3604989730528561398test/jobs/test0/workspace/junit.xml is 1 sec old  Finished: FAILURE  ------  expected:<UNSTABLE> but was:<FAILURE>\n  \n  Stacktrace\n  \n  junit.framework.AssertionFailedError: unexpected build status; build log was:\n  ------\n  Legacy code started this job.  No cause information is available\n  Recording test results\n  Test reports were found but none of them are new. Did tests run? \n  For example, /tmp/hudson3604989730528561398test/jobs/test0/workspace/junit.xml is 1 sec old\n  Finished: FAILURE\n  ------\n   expected:<UNSTABLE> but was:<FAILURE>\n  \tat junit.framework.Assert.fail(Assert.java:47)\n  \tat junit.framework.Assert.failNotEquals(Assert.java:282)\n  \tat junit.framework.Assert.assertEquals(Assert.java:64)\n  \tat org.jvnet.hudson.test.HudsonTestCase.assertBuildStatus(HudsonTestCase.java:520)\n  \tat hudson.tasks.junit.CaseResultTest.testIssue20090516(CaseResultTest.java:74)\n  \n  Standard Output\n  \n  === Starting testIssue20090516\n  \n  Standard Error\n  \n  2009-07-20 07:20:23.430::INFO:  jetty-6.1.11\n  2009-07-20 07:20:23.434::INFO:  NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet\n  2009-07-20 07:20:23.436::INFO:  Started SocketConnector@0.0.0.0:45218\n........\n  r20106 | kohsuke | 2009-07-24 10:27:30 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  adding a few well-known check points to expose them to plugins.\n........\n  r20115 | kohsuke | 2009-07-24 14:42:58 -0700 (Fri, 24 Jul 2009) | 3 lines\n  \n  Added a mechanism to handle the compatibility with earlier plugins. Have plugins declare the synchronization service it expects Hudson to provide.\n  \n  This being binary compatible change allows Hudson to use existing plugins correctly, but it's source incompatibility allows us to advertize the new semantics to plugin developers, new or old.\n........\n  r20141 | kohsuke | 2009-07-24 19:03:07 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  better type safety\n........\n  r20142 | kohsuke | 2009-07-24 19:13:43 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  update the thread name to make the thread dump more understandable.\n........\n  r20143 | kohsuke | 2009-07-24 19:22:12 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  fixed a compilation problem.\n........\n  r20144 | kohsuke | 2009-07-24 19:30:22 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  fixed a test failure. Runner needs to be a stack.\n........\n  r20184 | kohsuke | 2009-07-27 10:51:20 -0700 (Mon, 27 Jul 2009) | 3 lines\n  \n  When remote JVM (in this case Maven) calls back to the proxy object, the executing thread needs to be able to behave as if it's the executor thread. So added the necessary abstractions for doing that.\n  \n  It might have been better to do this in the remoting, by using the blocking caller thread to serve requests. That would be harder, but it gets rid of this ugly ThreadLocal book keeping.\n........\n  r20196 | kohsuke | 2009-07-27 13:22:33 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  Fixed a test failure. The proxy interface needs to be public for the interceptor to be able to invoke it.\n........\n  r20207 | kohsuke | 2009-07-27 17:27:35 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  [HUDSON-4060] this class-level synchronization has a devastating effect as it effectively creates a single giant lock for the entire Hudson and can cause a dead lock.\n........\n  r20208 | kohsuke | 2009-07-27 17:28:58 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  improved the thread name.\n........\n  r20215 | kohsuke | 2009-07-28 10:58:15 -0700 (Tue, 28 Jul 2009) | 1 line\n  \n  added form databinding support for <f:optionalBlock>\n........\n  r20216 | kohsuke | 2009-07-28 11:00:35 -0700 (Tue, 28 Jul 2009) | 1 line\n  \n  concurrent build is now a switch activated for each project separately.\n........\n  r20222 | kohsuke | 2009-07-28 15:30:18 -0700 (Tue, 28 Jul 2009) | 3 lines\n  \n  bug fix in the rendering of the build history when you have some builds finished earlier than their earlier builds that are still in progress.\n  \n  This also fixes a race condition in a non concurrent build case, which can result in some build #s showing up more than once after AJAX update if the status of the build changes between the computation of 'nn' and that of the rendering.\n........\n  r20286 | kohsuke | 2009-07-29 11:05:00 -0700 (Wed, 29 Jul 2009) | 1 line\n  \n  still fixing more build list update issues. The original fix only kicked in for the list produced by AJAX, and didn't work for the initial list.\n........\n  r20293 | kohsuke | 2009-07-29 17:03:20 -0700 (Wed, 29 Jul 2009) | 1 line\n  \n  simplified a bit\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20296 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c04e63d9f0c0b1a3b0683e64838c685cdddcd265",
        "buggy_code": "build.getProject().getWorkspace().child(location).copyFrom(file);",
        "fixed_code": "build.getWorkspace().child(location).copyFrom(file);",
        "patch": "@@ -66,7 +66,7 @@ public BuildWrapper createBuildWrapper(AbstractBuild<?,?> build) {\n         return new BuildWrapper() {\n             public Environment setUp(AbstractBuild build, Launcher launcher, BuildListener listener) throws IOException, InterruptedException {\n                 listener.getLogger().println(\"Copying file to \"+location);\n-                build.getProject().getWorkspace().child(location).copyFrom(file);\n+                build.getWorkspace().child(location).copyFrom(file);\n                 file = null;\n                 return new Environment() {};\n             }"
    },
    {
        "commit_id": "c04e63d9f0c0b1a3b0683e64838c685cdddcd265",
        "commit_message": "Merged revisions 19592-19593,19651,19669,19671-19672,19709,19712-19715,19728-19729,19825-19828,19859-19861,19863-19865,19869,19874-19875,19889,19896,19908-19909,19979,19982,20106,20115,20141-20144,20184,20196,20207-20208,20215-20216,20222,20286,20293 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/concurrent-build\n\n........\n  r19592 | kohsuke | 2009-07-10 14:02:22 -0700 (Fri, 10 Jul 2009) | 1 line\n  \n  introduced getWorkspace() and getModuleRoot() on AbstractBuild.\n........\n  r19593 | kohsuke | 2009-07-10 15:06:08 -0700 (Fri, 10 Jul 2009) | 1 line\n  \n  introduced a flag to control the behavior, so that we can expose the feature much later after we merge the branch into the trunk.\n........\n  r19651 | kohsuke | 2009-07-13 08:48:31 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  modified to work with multiple concurrent builds\n........\n  r19669 | kohsuke | 2009-07-13 14:25:58 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  updating TODOs\n........\n  r19671 | kohsuke | 2009-07-13 16:50:42 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  committing my changes before I push this up to the Run class.\n........\n  r19672 | kohsuke | 2009-07-13 17:14:41 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  pushed the change up to the Run class, which simplifies things a bit, and avoids a race condition in the final \"notifyAll\" when the build is completed.\n........\n  r19709 | kohsuke | 2009-07-14 17:56:24 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  added checkpoint methods to the base type of where it's commonly used, to simplify invocations.\n........\n  r19712 | kohsuke | 2009-07-14 18:16:50 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  revisited the CheckPoint abstraction. I think this is more OO now\n........\n  r19713 | kohsuke | 2009-07-14 18:17:18 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  doc fix\n........\n  r19714 | kohsuke | 2009-07-14 18:23:32 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  replaced AbstractProject.getWorkspace() by AbstractBuild.getWorkspace(). The easy ones are done, but the harder ones remain.\n........\n  r19715 | kohsuke | 2009-07-14 18:32:56 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  more getWorkspace() changes\n........\n  r19728 | kohsuke | 2009-07-15 11:17:25 -0700 (Wed, 15 Jul 2009) | 1 line\n  \n  removed more getWorkspace() usage by getSomeWorkspace()\n........\n  r19729 | kohsuke | 2009-07-15 11:17:43 -0700 (Wed, 15 Jul 2009) | 1 line\n  \n  this is done\n........\n  r19825 | kohsuke | 2009-07-17 15:35:21 -0700 (Fri, 17 Jul 2009) | 4 lines\n  \n  - refactored SCM triggering code to avoid queueing up too many threads.\n  - workspace locking only happens if the SCM declares that the polling requires a workspace.\n  \n  TODO: given the face of concurrent builds, a single workspace lock won't work.\n........\n  r19826 | kohsuke | 2009-07-17 16:21:15 -0700 (Fri, 17 Jul 2009) | 5 lines\n  \n  implemented the handling of polling/build mutual exclusion when polling requires a workspace.\n  \n  The SCMs that require a workspace for polling, such as CVS, do so by comparing the state of the workspace\n  vs that of the remote. So it needs to use the workspace of the last build. Polling needs to wait for this workspace\n  if it's currently in use by a build, so a wait/notify scheme was needed, and hence WorkspaceList.\n........\n  r19827 | kohsuke | 2009-07-17 16:32:54 -0700 (Fri, 17 Jul 2009) | 1 line\n  \n  removed the workspace resource lock.\n........\n  r19828 | kohsuke | 2009-07-17 16:40:09 -0700 (Fri, 17 Jul 2009) | 1 line\n  \n  got rid of the lock. A build will always allocate an available workspace, so this is no longer necessary.\n........\n  r19859 | kohsuke | 2009-07-18 12:45:03 -0700 (Sat, 18 Jul 2009) | 2 lines\n  \n  Fixing a test failure. This might be signaling a depper abstraction problem, but let's see...\n........\n  r19860 | kohsuke | 2009-07-18 13:10:32 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  bug fix\n........\n  r19861 | kohsuke | 2009-07-18 13:12:18 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  typo\n........\n  r19863 | kohsuke | 2009-07-18 13:25:20 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  pass in common parameters for convenience.\n........\n  r19864 | kohsuke | 2009-07-18 13:36:34 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  doc fix\n........\n  r19865 | kohsuke | 2009-07-18 13:57:55 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  bug fix.\n........\n  r19869 | kohsuke | 2009-07-18 14:07:18 -0700 (Sat, 18 Jul 2009) | 2 lines\n  \n  This fixes the elusive NPE in com.gargoylesoftware.htmlunit.javascript.host.Event.<init>(Event.java:164)\n........\n  r19874 | kohsuke | 2009-07-18 14:44:39 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  forgot to update this.\n........\n  r19875 | kohsuke | 2009-07-18 14:44:48 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  forgot to update this.\n........\n  r19889 | kohsuke | 2009-07-18 16:12:04 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  fixed the license header.\n........\n  r19896 | kohsuke | 2009-07-18 16:16:44 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  adding a note.\n........\n  r19908 | kohsuke | 2009-07-18 17:13:03 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  fixed a bug. The parent build will likely run on a different node, so we can't just inherit its workspace.\n........\n  r19909 | kohsuke | 2009-07-18 17:16:54 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  reorgznied imports.\n........\n  r19979 | kohsuke | 2009-07-20 14:22:50 -0700 (Mon, 20 Jul 2009) | 1 line\n  \n  [HUDSON-4060] fixed a reported ClassCastException, but I don't think that's related to the hang problem.\n........\n  r19982 | kohsuke | 2009-07-20 14:51:11 -0700 (Mon, 20 Jul 2009) | 31 lines\n  \n  increasing the error margin in response to the flaky test that causes this error:\n  \n  unexpected build status; build log was: ------ Legacy code started this job.  No cause information is available Recording test results Test reports were found but none of them are new. Did tests run?  For example, /tmp/hudson3604989730528561398test/jobs/test0/workspace/junit.xml is 1 sec old  Finished: FAILURE  ------  expected:<UNSTABLE> but was:<FAILURE>\n  \n  Stacktrace\n  \n  junit.framework.AssertionFailedError: unexpected build status; build log was:\n  ------\n  Legacy code started this job.  No cause information is available\n  Recording test results\n  Test reports were found but none of them are new. Did tests run? \n  For example, /tmp/hudson3604989730528561398test/jobs/test0/workspace/junit.xml is 1 sec old\n  Finished: FAILURE\n  ------\n   expected:<UNSTABLE> but was:<FAILURE>\n  \tat junit.framework.Assert.fail(Assert.java:47)\n  \tat junit.framework.Assert.failNotEquals(Assert.java:282)\n  \tat junit.framework.Assert.assertEquals(Assert.java:64)\n  \tat org.jvnet.hudson.test.HudsonTestCase.assertBuildStatus(HudsonTestCase.java:520)\n  \tat hudson.tasks.junit.CaseResultTest.testIssue20090516(CaseResultTest.java:74)\n  \n  Standard Output\n  \n  === Starting testIssue20090516\n  \n  Standard Error\n  \n  2009-07-20 07:20:23.430::INFO:  jetty-6.1.11\n  2009-07-20 07:20:23.434::INFO:  NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet\n  2009-07-20 07:20:23.436::INFO:  Started SocketConnector@0.0.0.0:45218\n........\n  r20106 | kohsuke | 2009-07-24 10:27:30 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  adding a few well-known check points to expose them to plugins.\n........\n  r20115 | kohsuke | 2009-07-24 14:42:58 -0700 (Fri, 24 Jul 2009) | 3 lines\n  \n  Added a mechanism to handle the compatibility with earlier plugins. Have plugins declare the synchronization service it expects Hudson to provide.\n  \n  This being binary compatible change allows Hudson to use existing plugins correctly, but it's source incompatibility allows us to advertize the new semantics to plugin developers, new or old.\n........\n  r20141 | kohsuke | 2009-07-24 19:03:07 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  better type safety\n........\n  r20142 | kohsuke | 2009-07-24 19:13:43 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  update the thread name to make the thread dump more understandable.\n........\n  r20143 | kohsuke | 2009-07-24 19:22:12 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  fixed a compilation problem.\n........\n  r20144 | kohsuke | 2009-07-24 19:30:22 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  fixed a test failure. Runner needs to be a stack.\n........\n  r20184 | kohsuke | 2009-07-27 10:51:20 -0700 (Mon, 27 Jul 2009) | 3 lines\n  \n  When remote JVM (in this case Maven) calls back to the proxy object, the executing thread needs to be able to behave as if it's the executor thread. So added the necessary abstractions for doing that.\n  \n  It might have been better to do this in the remoting, by using the blocking caller thread to serve requests. That would be harder, but it gets rid of this ugly ThreadLocal book keeping.\n........\n  r20196 | kohsuke | 2009-07-27 13:22:33 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  Fixed a test failure. The proxy interface needs to be public for the interceptor to be able to invoke it.\n........\n  r20207 | kohsuke | 2009-07-27 17:27:35 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  [HUDSON-4060] this class-level synchronization has a devastating effect as it effectively creates a single giant lock for the entire Hudson and can cause a dead lock.\n........\n  r20208 | kohsuke | 2009-07-27 17:28:58 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  improved the thread name.\n........\n  r20215 | kohsuke | 2009-07-28 10:58:15 -0700 (Tue, 28 Jul 2009) | 1 line\n  \n  added form databinding support for <f:optionalBlock>\n........\n  r20216 | kohsuke | 2009-07-28 11:00:35 -0700 (Tue, 28 Jul 2009) | 1 line\n  \n  concurrent build is now a switch activated for each project separately.\n........\n  r20222 | kohsuke | 2009-07-28 15:30:18 -0700 (Tue, 28 Jul 2009) | 3 lines\n  \n  bug fix in the rendering of the build history when you have some builds finished earlier than their earlier builds that are still in progress.\n  \n  This also fixes a race condition in a non concurrent build case, which can result in some build #s showing up more than once after AJAX update if the status of the build changes between the computation of 'nn' and that of the rendering.\n........\n  r20286 | kohsuke | 2009-07-29 11:05:00 -0700 (Wed, 29 Jul 2009) | 1 line\n  \n  still fixing more build list update issues. The original fix only kicked in for the list produced by AJAX, and didn't work for the initial list.\n........\n  r20293 | kohsuke | 2009-07-29 17:03:20 -0700 (Wed, 29 Jul 2009) | 1 line\n  \n  simplified a bit\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20296 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c04e63d9f0c0b1a3b0683e64838c685cdddcd265",
        "buggy_code": "if(buildTime-1000/*error margin*/ <= reportFile.lastModified()) {",
        "fixed_code": "if(buildTime-3000/*error margin*/ <= reportFile.lastModified()) {",
        "patch": "@@ -108,7 +108,7 @@ public void parse(long buildTime, DirectoryScanner results) throws IOException {\n         for (String value : includedFiles) {\n             File reportFile = new File(baseDir, value);\n             // only count files that were actually updated during this build\n-            if(buildTime-1000/*error margin*/ <= reportFile.lastModified()) {\n+            if(buildTime-3000/*error margin*/ <= reportFile.lastModified()) {\n                 if(reportFile.length()==0) {\n                     // this is a typical problem when JVM quits abnormally, like OutOfMemoryError during a test.\n                     SuiteResult sr = new SuiteResult(reportFile.getName(), \"\", \"\");"
    },
    {
        "commit_id": "c04e63d9f0c0b1a3b0683e64838c685cdddcd265",
        "commit_message": "Merged revisions 19592-19593,19651,19669,19671-19672,19709,19712-19715,19728-19729,19825-19828,19859-19861,19863-19865,19869,19874-19875,19889,19896,19908-19909,19979,19982,20106,20115,20141-20144,20184,20196,20207-20208,20215-20216,20222,20286,20293 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/concurrent-build\n\n........\n  r19592 | kohsuke | 2009-07-10 14:02:22 -0700 (Fri, 10 Jul 2009) | 1 line\n  \n  introduced getWorkspace() and getModuleRoot() on AbstractBuild.\n........\n  r19593 | kohsuke | 2009-07-10 15:06:08 -0700 (Fri, 10 Jul 2009) | 1 line\n  \n  introduced a flag to control the behavior, so that we can expose the feature much later after we merge the branch into the trunk.\n........\n  r19651 | kohsuke | 2009-07-13 08:48:31 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  modified to work with multiple concurrent builds\n........\n  r19669 | kohsuke | 2009-07-13 14:25:58 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  updating TODOs\n........\n  r19671 | kohsuke | 2009-07-13 16:50:42 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  committing my changes before I push this up to the Run class.\n........\n  r19672 | kohsuke | 2009-07-13 17:14:41 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  pushed the change up to the Run class, which simplifies things a bit, and avoids a race condition in the final \"notifyAll\" when the build is completed.\n........\n  r19709 | kohsuke | 2009-07-14 17:56:24 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  added checkpoint methods to the base type of where it's commonly used, to simplify invocations.\n........\n  r19712 | kohsuke | 2009-07-14 18:16:50 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  revisited the CheckPoint abstraction. I think this is more OO now\n........\n  r19713 | kohsuke | 2009-07-14 18:17:18 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  doc fix\n........\n  r19714 | kohsuke | 2009-07-14 18:23:32 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  replaced AbstractProject.getWorkspace() by AbstractBuild.getWorkspace(). The easy ones are done, but the harder ones remain.\n........\n  r19715 | kohsuke | 2009-07-14 18:32:56 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  more getWorkspace() changes\n........\n  r19728 | kohsuke | 2009-07-15 11:17:25 -0700 (Wed, 15 Jul 2009) | 1 line\n  \n  removed more getWorkspace() usage by getSomeWorkspace()\n........\n  r19729 | kohsuke | 2009-07-15 11:17:43 -0700 (Wed, 15 Jul 2009) | 1 line\n  \n  this is done\n........\n  r19825 | kohsuke | 2009-07-17 15:35:21 -0700 (Fri, 17 Jul 2009) | 4 lines\n  \n  - refactored SCM triggering code to avoid queueing up too many threads.\n  - workspace locking only happens if the SCM declares that the polling requires a workspace.\n  \n  TODO: given the face of concurrent builds, a single workspace lock won't work.\n........\n  r19826 | kohsuke | 2009-07-17 16:21:15 -0700 (Fri, 17 Jul 2009) | 5 lines\n  \n  implemented the handling of polling/build mutual exclusion when polling requires a workspace.\n  \n  The SCMs that require a workspace for polling, such as CVS, do so by comparing the state of the workspace\n  vs that of the remote. So it needs to use the workspace of the last build. Polling needs to wait for this workspace\n  if it's currently in use by a build, so a wait/notify scheme was needed, and hence WorkspaceList.\n........\n  r19827 | kohsuke | 2009-07-17 16:32:54 -0700 (Fri, 17 Jul 2009) | 1 line\n  \n  removed the workspace resource lock.\n........\n  r19828 | kohsuke | 2009-07-17 16:40:09 -0700 (Fri, 17 Jul 2009) | 1 line\n  \n  got rid of the lock. A build will always allocate an available workspace, so this is no longer necessary.\n........\n  r19859 | kohsuke | 2009-07-18 12:45:03 -0700 (Sat, 18 Jul 2009) | 2 lines\n  \n  Fixing a test failure. This might be signaling a depper abstraction problem, but let's see...\n........\n  r19860 | kohsuke | 2009-07-18 13:10:32 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  bug fix\n........\n  r19861 | kohsuke | 2009-07-18 13:12:18 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  typo\n........\n  r19863 | kohsuke | 2009-07-18 13:25:20 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  pass in common parameters for convenience.\n........\n  r19864 | kohsuke | 2009-07-18 13:36:34 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  doc fix\n........\n  r19865 | kohsuke | 2009-07-18 13:57:55 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  bug fix.\n........\n  r19869 | kohsuke | 2009-07-18 14:07:18 -0700 (Sat, 18 Jul 2009) | 2 lines\n  \n  This fixes the elusive NPE in com.gargoylesoftware.htmlunit.javascript.host.Event.<init>(Event.java:164)\n........\n  r19874 | kohsuke | 2009-07-18 14:44:39 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  forgot to update this.\n........\n  r19875 | kohsuke | 2009-07-18 14:44:48 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  forgot to update this.\n........\n  r19889 | kohsuke | 2009-07-18 16:12:04 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  fixed the license header.\n........\n  r19896 | kohsuke | 2009-07-18 16:16:44 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  adding a note.\n........\n  r19908 | kohsuke | 2009-07-18 17:13:03 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  fixed a bug. The parent build will likely run on a different node, so we can't just inherit its workspace.\n........\n  r19909 | kohsuke | 2009-07-18 17:16:54 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  reorgznied imports.\n........\n  r19979 | kohsuke | 2009-07-20 14:22:50 -0700 (Mon, 20 Jul 2009) | 1 line\n  \n  [HUDSON-4060] fixed a reported ClassCastException, but I don't think that's related to the hang problem.\n........\n  r19982 | kohsuke | 2009-07-20 14:51:11 -0700 (Mon, 20 Jul 2009) | 31 lines\n  \n  increasing the error margin in response to the flaky test that causes this error:\n  \n  unexpected build status; build log was: ------ Legacy code started this job.  No cause information is available Recording test results Test reports were found but none of them are new. Did tests run?  For example, /tmp/hudson3604989730528561398test/jobs/test0/workspace/junit.xml is 1 sec old  Finished: FAILURE  ------  expected:<UNSTABLE> but was:<FAILURE>\n  \n  Stacktrace\n  \n  junit.framework.AssertionFailedError: unexpected build status; build log was:\n  ------\n  Legacy code started this job.  No cause information is available\n  Recording test results\n  Test reports were found but none of them are new. Did tests run? \n  For example, /tmp/hudson3604989730528561398test/jobs/test0/workspace/junit.xml is 1 sec old\n  Finished: FAILURE\n  ------\n   expected:<UNSTABLE> but was:<FAILURE>\n  \tat junit.framework.Assert.fail(Assert.java:47)\n  \tat junit.framework.Assert.failNotEquals(Assert.java:282)\n  \tat junit.framework.Assert.assertEquals(Assert.java:64)\n  \tat org.jvnet.hudson.test.HudsonTestCase.assertBuildStatus(HudsonTestCase.java:520)\n  \tat hudson.tasks.junit.CaseResultTest.testIssue20090516(CaseResultTest.java:74)\n  \n  Standard Output\n  \n  === Starting testIssue20090516\n  \n  Standard Error\n  \n  2009-07-20 07:20:23.430::INFO:  jetty-6.1.11\n  2009-07-20 07:20:23.434::INFO:  NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet\n  2009-07-20 07:20:23.436::INFO:  Started SocketConnector@0.0.0.0:45218\n........\n  r20106 | kohsuke | 2009-07-24 10:27:30 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  adding a few well-known check points to expose them to plugins.\n........\n  r20115 | kohsuke | 2009-07-24 14:42:58 -0700 (Fri, 24 Jul 2009) | 3 lines\n  \n  Added a mechanism to handle the compatibility with earlier plugins. Have plugins declare the synchronization service it expects Hudson to provide.\n  \n  This being binary compatible change allows Hudson to use existing plugins correctly, but it's source incompatibility allows us to advertize the new semantics to plugin developers, new or old.\n........\n  r20141 | kohsuke | 2009-07-24 19:03:07 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  better type safety\n........\n  r20142 | kohsuke | 2009-07-24 19:13:43 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  update the thread name to make the thread dump more understandable.\n........\n  r20143 | kohsuke | 2009-07-24 19:22:12 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  fixed a compilation problem.\n........\n  r20144 | kohsuke | 2009-07-24 19:30:22 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  fixed a test failure. Runner needs to be a stack.\n........\n  r20184 | kohsuke | 2009-07-27 10:51:20 -0700 (Mon, 27 Jul 2009) | 3 lines\n  \n  When remote JVM (in this case Maven) calls back to the proxy object, the executing thread needs to be able to behave as if it's the executor thread. So added the necessary abstractions for doing that.\n  \n  It might have been better to do this in the remoting, by using the blocking caller thread to serve requests. That would be harder, but it gets rid of this ugly ThreadLocal book keeping.\n........\n  r20196 | kohsuke | 2009-07-27 13:22:33 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  Fixed a test failure. The proxy interface needs to be public for the interceptor to be able to invoke it.\n........\n  r20207 | kohsuke | 2009-07-27 17:27:35 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  [HUDSON-4060] this class-level synchronization has a devastating effect as it effectively creates a single giant lock for the entire Hudson and can cause a dead lock.\n........\n  r20208 | kohsuke | 2009-07-27 17:28:58 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  improved the thread name.\n........\n  r20215 | kohsuke | 2009-07-28 10:58:15 -0700 (Tue, 28 Jul 2009) | 1 line\n  \n  added form databinding support for <f:optionalBlock>\n........\n  r20216 | kohsuke | 2009-07-28 11:00:35 -0700 (Tue, 28 Jul 2009) | 1 line\n  \n  concurrent build is now a switch activated for each project separately.\n........\n  r20222 | kohsuke | 2009-07-28 15:30:18 -0700 (Tue, 28 Jul 2009) | 3 lines\n  \n  bug fix in the rendering of the build history when you have some builds finished earlier than their earlier builds that are still in progress.\n  \n  This also fixes a race condition in a non concurrent build case, which can result in some build #s showing up more than once after AJAX update if the status of the build changes between the computation of 'nn' and that of the rendering.\n........\n  r20286 | kohsuke | 2009-07-29 11:05:00 -0700 (Wed, 29 Jul 2009) | 1 line\n  \n  still fixing more build list update issues. The original fix only kicked in for the list produced by AJAX, and didn't work for the initial list.\n........\n  r20293 | kohsuke | 2009-07-29 17:03:20 -0700 (Wed, 29 Jul 2009) | 1 line\n  \n  simplified a bit\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20296 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c04e63d9f0c0b1a3b0683e64838c685cdddcd265",
        "buggy_code": "interface MavenBuildProxy2 extends MavenBuildProxy {",
        "fixed_code": "public interface MavenBuildProxy2 extends MavenBuildProxy {",
        "patch": "@@ -30,7 +30,7 @@\n  *\n  * @author Kohsuke Kawaguchi\n  */\n-interface MavenBuildProxy2 extends MavenBuildProxy {\n+public interface MavenBuildProxy2 extends MavenBuildProxy {\n     /**\n      * Notifies that the build has entered a module.\n      */"
    },
    {
        "commit_id": "c04e63d9f0c0b1a3b0683e64838c685cdddcd265",
        "commit_message": "Merged revisions 19592-19593,19651,19669,19671-19672,19709,19712-19715,19728-19729,19825-19828,19859-19861,19863-19865,19869,19874-19875,19889,19896,19908-19909,19979,19982,20106,20115,20141-20144,20184,20196,20207-20208,20215-20216,20222,20286,20293 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/concurrent-build\n\n........\n  r19592 | kohsuke | 2009-07-10 14:02:22 -0700 (Fri, 10 Jul 2009) | 1 line\n  \n  introduced getWorkspace() and getModuleRoot() on AbstractBuild.\n........\n  r19593 | kohsuke | 2009-07-10 15:06:08 -0700 (Fri, 10 Jul 2009) | 1 line\n  \n  introduced a flag to control the behavior, so that we can expose the feature much later after we merge the branch into the trunk.\n........\n  r19651 | kohsuke | 2009-07-13 08:48:31 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  modified to work with multiple concurrent builds\n........\n  r19669 | kohsuke | 2009-07-13 14:25:58 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  updating TODOs\n........\n  r19671 | kohsuke | 2009-07-13 16:50:42 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  committing my changes before I push this up to the Run class.\n........\n  r19672 | kohsuke | 2009-07-13 17:14:41 -0700 (Mon, 13 Jul 2009) | 1 line\n  \n  pushed the change up to the Run class, which simplifies things a bit, and avoids a race condition in the final \"notifyAll\" when the build is completed.\n........\n  r19709 | kohsuke | 2009-07-14 17:56:24 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  added checkpoint methods to the base type of where it's commonly used, to simplify invocations.\n........\n  r19712 | kohsuke | 2009-07-14 18:16:50 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  revisited the CheckPoint abstraction. I think this is more OO now\n........\n  r19713 | kohsuke | 2009-07-14 18:17:18 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  doc fix\n........\n  r19714 | kohsuke | 2009-07-14 18:23:32 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  replaced AbstractProject.getWorkspace() by AbstractBuild.getWorkspace(). The easy ones are done, but the harder ones remain.\n........\n  r19715 | kohsuke | 2009-07-14 18:32:56 -0700 (Tue, 14 Jul 2009) | 1 line\n  \n  more getWorkspace() changes\n........\n  r19728 | kohsuke | 2009-07-15 11:17:25 -0700 (Wed, 15 Jul 2009) | 1 line\n  \n  removed more getWorkspace() usage by getSomeWorkspace()\n........\n  r19729 | kohsuke | 2009-07-15 11:17:43 -0700 (Wed, 15 Jul 2009) | 1 line\n  \n  this is done\n........\n  r19825 | kohsuke | 2009-07-17 15:35:21 -0700 (Fri, 17 Jul 2009) | 4 lines\n  \n  - refactored SCM triggering code to avoid queueing up too many threads.\n  - workspace locking only happens if the SCM declares that the polling requires a workspace.\n  \n  TODO: given the face of concurrent builds, a single workspace lock won't work.\n........\n  r19826 | kohsuke | 2009-07-17 16:21:15 -0700 (Fri, 17 Jul 2009) | 5 lines\n  \n  implemented the handling of polling/build mutual exclusion when polling requires a workspace.\n  \n  The SCMs that require a workspace for polling, such as CVS, do so by comparing the state of the workspace\n  vs that of the remote. So it needs to use the workspace of the last build. Polling needs to wait for this workspace\n  if it's currently in use by a build, so a wait/notify scheme was needed, and hence WorkspaceList.\n........\n  r19827 | kohsuke | 2009-07-17 16:32:54 -0700 (Fri, 17 Jul 2009) | 1 line\n  \n  removed the workspace resource lock.\n........\n  r19828 | kohsuke | 2009-07-17 16:40:09 -0700 (Fri, 17 Jul 2009) | 1 line\n  \n  got rid of the lock. A build will always allocate an available workspace, so this is no longer necessary.\n........\n  r19859 | kohsuke | 2009-07-18 12:45:03 -0700 (Sat, 18 Jul 2009) | 2 lines\n  \n  Fixing a test failure. This might be signaling a depper abstraction problem, but let's see...\n........\n  r19860 | kohsuke | 2009-07-18 13:10:32 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  bug fix\n........\n  r19861 | kohsuke | 2009-07-18 13:12:18 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  typo\n........\n  r19863 | kohsuke | 2009-07-18 13:25:20 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  pass in common parameters for convenience.\n........\n  r19864 | kohsuke | 2009-07-18 13:36:34 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  doc fix\n........\n  r19865 | kohsuke | 2009-07-18 13:57:55 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  bug fix.\n........\n  r19869 | kohsuke | 2009-07-18 14:07:18 -0700 (Sat, 18 Jul 2009) | 2 lines\n  \n  This fixes the elusive NPE in com.gargoylesoftware.htmlunit.javascript.host.Event.<init>(Event.java:164)\n........\n  r19874 | kohsuke | 2009-07-18 14:44:39 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  forgot to update this.\n........\n  r19875 | kohsuke | 2009-07-18 14:44:48 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  forgot to update this.\n........\n  r19889 | kohsuke | 2009-07-18 16:12:04 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  fixed the license header.\n........\n  r19896 | kohsuke | 2009-07-18 16:16:44 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  adding a note.\n........\n  r19908 | kohsuke | 2009-07-18 17:13:03 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  fixed a bug. The parent build will likely run on a different node, so we can't just inherit its workspace.\n........\n  r19909 | kohsuke | 2009-07-18 17:16:54 -0700 (Sat, 18 Jul 2009) | 1 line\n  \n  reorgznied imports.\n........\n  r19979 | kohsuke | 2009-07-20 14:22:50 -0700 (Mon, 20 Jul 2009) | 1 line\n  \n  [HUDSON-4060] fixed a reported ClassCastException, but I don't think that's related to the hang problem.\n........\n  r19982 | kohsuke | 2009-07-20 14:51:11 -0700 (Mon, 20 Jul 2009) | 31 lines\n  \n  increasing the error margin in response to the flaky test that causes this error:\n  \n  unexpected build status; build log was: ------ Legacy code started this job.  No cause information is available Recording test results Test reports were found but none of them are new. Did tests run?  For example, /tmp/hudson3604989730528561398test/jobs/test0/workspace/junit.xml is 1 sec old  Finished: FAILURE  ------  expected:<UNSTABLE> but was:<FAILURE>\n  \n  Stacktrace\n  \n  junit.framework.AssertionFailedError: unexpected build status; build log was:\n  ------\n  Legacy code started this job.  No cause information is available\n  Recording test results\n  Test reports were found but none of them are new. Did tests run? \n  For example, /tmp/hudson3604989730528561398test/jobs/test0/workspace/junit.xml is 1 sec old\n  Finished: FAILURE\n  ------\n   expected:<UNSTABLE> but was:<FAILURE>\n  \tat junit.framework.Assert.fail(Assert.java:47)\n  \tat junit.framework.Assert.failNotEquals(Assert.java:282)\n  \tat junit.framework.Assert.assertEquals(Assert.java:64)\n  \tat org.jvnet.hudson.test.HudsonTestCase.assertBuildStatus(HudsonTestCase.java:520)\n  \tat hudson.tasks.junit.CaseResultTest.testIssue20090516(CaseResultTest.java:74)\n  \n  Standard Output\n  \n  === Starting testIssue20090516\n  \n  Standard Error\n  \n  2009-07-20 07:20:23.430::INFO:  jetty-6.1.11\n  2009-07-20 07:20:23.434::INFO:  NO JSP Support for /, did not find org.apache.jasper.servlet.JspServlet\n  2009-07-20 07:20:23.436::INFO:  Started SocketConnector@0.0.0.0:45218\n........\n  r20106 | kohsuke | 2009-07-24 10:27:30 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  adding a few well-known check points to expose them to plugins.\n........\n  r20115 | kohsuke | 2009-07-24 14:42:58 -0700 (Fri, 24 Jul 2009) | 3 lines\n  \n  Added a mechanism to handle the compatibility with earlier plugins. Have plugins declare the synchronization service it expects Hudson to provide.\n  \n  This being binary compatible change allows Hudson to use existing plugins correctly, but it's source incompatibility allows us to advertize the new semantics to plugin developers, new or old.\n........\n  r20141 | kohsuke | 2009-07-24 19:03:07 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  better type safety\n........\n  r20142 | kohsuke | 2009-07-24 19:13:43 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  update the thread name to make the thread dump more understandable.\n........\n  r20143 | kohsuke | 2009-07-24 19:22:12 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  fixed a compilation problem.\n........\n  r20144 | kohsuke | 2009-07-24 19:30:22 -0700 (Fri, 24 Jul 2009) | 1 line\n  \n  fixed a test failure. Runner needs to be a stack.\n........\n  r20184 | kohsuke | 2009-07-27 10:51:20 -0700 (Mon, 27 Jul 2009) | 3 lines\n  \n  When remote JVM (in this case Maven) calls back to the proxy object, the executing thread needs to be able to behave as if it's the executor thread. So added the necessary abstractions for doing that.\n  \n  It might have been better to do this in the remoting, by using the blocking caller thread to serve requests. That would be harder, but it gets rid of this ugly ThreadLocal book keeping.\n........\n  r20196 | kohsuke | 2009-07-27 13:22:33 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  Fixed a test failure. The proxy interface needs to be public for the interceptor to be able to invoke it.\n........\n  r20207 | kohsuke | 2009-07-27 17:27:35 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  [HUDSON-4060] this class-level synchronization has a devastating effect as it effectively creates a single giant lock for the entire Hudson and can cause a dead lock.\n........\n  r20208 | kohsuke | 2009-07-27 17:28:58 -0700 (Mon, 27 Jul 2009) | 1 line\n  \n  improved the thread name.\n........\n  r20215 | kohsuke | 2009-07-28 10:58:15 -0700 (Tue, 28 Jul 2009) | 1 line\n  \n  added form databinding support for <f:optionalBlock>\n........\n  r20216 | kohsuke | 2009-07-28 11:00:35 -0700 (Tue, 28 Jul 2009) | 1 line\n  \n  concurrent build is now a switch activated for each project separately.\n........\n  r20222 | kohsuke | 2009-07-28 15:30:18 -0700 (Tue, 28 Jul 2009) | 3 lines\n  \n  bug fix in the rendering of the build history when you have some builds finished earlier than their earlier builds that are still in progress.\n  \n  This also fixes a race condition in a non concurrent build case, which can result in some build #s showing up more than once after AJAX update if the status of the build changes between the computation of 'nn' and that of the rendering.\n........\n  r20286 | kohsuke | 2009-07-29 11:05:00 -0700 (Wed, 29 Jul 2009) | 1 line\n  \n  still fixing more build list update issues. The original fix only kicked in for the list produced by AJAX, and didn't work for the initial list.\n........\n  r20293 | kohsuke | 2009-07-29 17:03:20 -0700 (Wed, 29 Jul 2009) | 1 line\n  \n  simplified a bit\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@20296 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c04e63d9f0c0b1a3b0683e64838c685cdddcd265",
        "buggy_code": "build.getProject().getWorkspace().child(\"junit.xml\").copyFrom(",
        "fixed_code": "build.getWorkspace().child(\"junit.xml\").copyFrom(",
        "patch": "@@ -65,7 +65,7 @@ public void testIssue20090516() throws Exception {\n         FreeStyleProject p = createFreeStyleProject();\n         p.getBuildersList().add(new TestBuilder() {\n             public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n-                build.getProject().getWorkspace().child(\"junit.xml\").copyFrom(\n+                build.getWorkspace().child(\"junit.xml\").copyFrom(\n                     getClass().getResource(\"junit-report-20090516.xml\"));\n                 return true;\n             }"
    },
    {
        "commit_id": "de71106a037d504f99fc88bfe47860771c24a9d3",
        "commit_message": "  <li class=bug>\n    Fixed a JDK path separator issue between Windows master and Unix slaves.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@19862 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/de71106a037d504f99fc88bfe47860771c24a9d3",
        "buggy_code": "env.put(\"PATH+JDK\",getBinDir().getPath());",
        "fixed_code": "env.put(\"PATH+JDK\",getHome()+\"/bin\");",
        "patch": "@@ -110,7 +110,7 @@ public boolean getExists() {\n      */\n     public void buildEnvVars(Map<String,String> env) {\n         // see EnvVars javadoc for why this adss PATH.\n-        env.put(\"PATH+JDK\",getBinDir().getPath());\n+        env.put(\"PATH+JDK\",getHome()+\"/bin\");\n         env.put(\"JAVA_HOME\",getHome());\n     }\n "
    },
    {
        "commit_id": "28e3adf4d020a7b47ee9cbe1b3b1a1aae6a1168a",
        "commit_message": "[HUDSON-2736] Application of patch submitted by riksmith.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@19614 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/28e3adf4d020a7b47ee9cbe1b3b1a1aae6a1168a",
        "buggy_code": "logger.println(Messages.MavenArtifact_DeployingAttachedArtifact(main.getFile().getName()));",
        "fixed_code": "logger.println(Messages.MavenArtifact_DeployingAttachedArtifact(a.getFile().getName()));",
        "patch": "@@ -119,8 +119,8 @@ public void deploy(MavenEmbedder embedder, ArtifactRepository deploymentReposito\n         deployer.deploy(main.getFile(),main,deploymentRepository,embedder.getLocalRepository());\n \n         for (MavenArtifact aa : attachedArtifacts) {\n-            logger.println(Messages.MavenArtifact_DeployingAttachedArtifact(main.getFile().getName()));\n             Artifact a = aa.toArtifact(handlerManager,factory, parent);\n+            logger.println(Messages.MavenArtifact_DeployingAttachedArtifact(a.getFile().getName()));\n             deployer.deploy(a.getFile(),a,deploymentRepository,embedder.getLocalRepository());\n         }\n     }"
    },
    {
        "commit_id": "5534f633ddaf80056c9958f25e068f4aeb397104",
        "commit_message": "[FIXED HUDSON-2997] NPE fix. This will be in 1.316.\n\nThe fix includes a new getPreviousCompletedBuild(), which only makes sense when we allow multiple concurrent builds per a project, which is currently being developed in a branch. Parameterized build accidentally already incorporates this behavior, so I'm making this fix in the trunk.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@19570 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5534f633ddaf80056c9958f25e068f4aeb397104",
        "buggy_code": "R p = getPreviousBuild();",
        "fixed_code": "R p = getPreviousCompletedBuild();",
        "patch": "@@ -188,7 +188,7 @@ public String getUpUrl() {\n     public Set<User> getCulprits() {\n         if(culprits==null) {\n             Set<User> r = new HashSet<User>();\n-            R p = getPreviousBuild();\n+            R p = getPreviousCompletedBuild();\n             if(p !=null && isBuilding() && p.getResult().isWorseThan(Result.UNSTABLE)) {\n                 // we are still building, so this is just the current latest information,\n                 // but we seems to be failing so far, so inherit culprits from the previous build."
    },
    {
        "commit_id": "7b7574210ef0d1e25b19f50d782d65dd471d22dd",
        "commit_message": "allowed this to be configured via a system property. Interim solution until we really fix the e-mail notification.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@19554 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7b7574210ef0d1e25b19f50d782d65dd471d22dd",
        "buggy_code": "private static final int MAX_LOG_LINES = 250;",
        "fixed_code": "private static final int MAX_LOG_LINES = Integer.getInteger(MailSender.class.getName()+\".maxLogLines\",250);",
        "patch": "@@ -363,5 +363,5 @@ protected boolean artifactMatches(String path, AbstractBuild<?, ?> build) {\n \n     public static boolean debug = false;\n \n-    private static final int MAX_LOG_LINES = 250;\n+    private static final int MAX_LOG_LINES = Integer.getInteger(MailSender.class.getName()+\".maxLogLines\",250);\n }"
    },
    {
        "commit_id": "3fda643f58ac20c0ead7f47cd0cb8a1d8762a6e0",
        "commit_message": "C&P error\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@19474 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3fda643f58ac20c0ead7f47cd0cb8a1d8762a6e0",
        "buggy_code": "String opts = project.getMavenOpts();",
        "fixed_code": "String opts = project.getParent().getMavenOpts();",
        "patch": "@@ -180,7 +180,7 @@ public boolean hasChangeSetComputed() {\n     @Override\n     public EnvVars getEnvironment(TaskListener log) throws IOException, InterruptedException {\n         EnvVars envs = super.getEnvironment(log);\n-        String opts = project.getMavenOpts();\n+        String opts = project.getParent().getMavenOpts();\n         if(opts!=null)\n             envs.put(\"MAVEN_OPTS\", opts);\n         return envs;"
    },
    {
        "commit_id": "3ec951ec1af8dc37758cf72c45b4e0ab48cb6ac8",
        "commit_message": "    Expose MAVEN_OPTS as env. var, in addition to set it to Maven JVM.\n    (<a href=\"https://hudson.dev.java.net/issues/show_bug.cgi?id=3644\">issue 3644</a>)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@19452 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3ec951ec1af8dc37758cf72c45b4e0ab48cb6ac8",
        "buggy_code": "args.add(jdk.getJavaHome()+\"/bin/java\"); // use JDK.getExecutable() here ?",
        "fixed_code": "args.add(jdk.getHome()+\"/bin/java\"); // use JDK.getExecutable() here ?",
        "patch": "@@ -253,7 +253,7 @@ private ArgumentListBuilder buildMavenCmdLine(BuildListener listener,int tcpPort\n         if(jdk==null) {\n             args.add(\"java\");\n         } else {\n-            args.add(jdk.getJavaHome()+\"/bin/java\"); // use JDK.getExecutable() here ?\n+            args.add(jdk.getHome()+\"/bin/java\"); // use JDK.getExecutable() here ?\n         }\n \n         if(debugPort!=0)"
    },
    {
        "commit_id": "1d3896679a9b37d93947c7ce3a53b89c6dbda796",
        "commit_message": "[FIX BUG 3854] Add support for the X-Forwarded-For HTTP header, which proxies\ncommonly filled in to pass along the IP address of the client. If this header\nexists, use the first IP address as the client IP instead of calling\ngetRemoteAddr.\n\nAdded test cases to test various situations.\n\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@19132 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1d3896679a9b37d93947c7ce3a53b89c6dbda796",
        "buggy_code": "hudson.setCrumbIssuer(((CrumbIssuerDescriptor<CrumbIssuer>)Hudson.getInstance().getDescriptor(TestCrumbIssuer.class)).newInstance(null,null));",
        "fixed_code": "hudson.setCrumbIssuer(((CrumbIssuerDescriptor<CrumbIssuer>)hudson.getDescriptor(TestCrumbIssuer.class)).newInstance(null,null));",
        "patch": "@@ -204,7 +204,7 @@ protected void setUp() throws Exception {\n         hudson.setNoUsageStatistics(true); // collecting usage stats from tests are pointless.\n         \n         hudson.setUseCrumbs(true);\n-        hudson.setCrumbIssuer(((CrumbIssuerDescriptor<CrumbIssuer>)Hudson.getInstance().getDescriptor(TestCrumbIssuer.class)).newInstance(null,null));\n+        hudson.setCrumbIssuer(((CrumbIssuerDescriptor<CrumbIssuer>)hudson.getDescriptor(TestCrumbIssuer.class)).newInstance(null,null));\n \n         hudson.servletContext.setAttribute(\"app\",hudson);\n         hudson.servletContext.setAttribute(\"version\",\"?\");"
    },
    {
        "commit_id": "73b503bf67dae2cc20854464ee269b836bafa20a",
        "commit_message": "C&P error\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@18903 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/73b503bf67dae2cc20854464ee269b836bafa20a",
        "buggy_code": "copyToWithPermission(target);",
        "fixed_code": "copyTo(target);",
        "patch": "@@ -1213,7 +1213,7 @@ public void copyTo(FilePath target) throws IOException, InterruptedException {\n      * @since 1.311\n      */\n     public void copyToWithPermission(FilePath target) throws IOException, InterruptedException {\n-        copyToWithPermission(target);\n+        copyTo(target);\n         // copy file permission\n         target.chmod(mode());\n     }"
    },
    {
        "commit_id": "812e1ce632bcb70656465ca8d0ba2fc41052baf5",
        "commit_message": "Merged revisions 18577,18603,18608,18610,18614 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/rc\n\n........\n  r18577 | kohsuke | 2009-05-29 15:13:16 -0700 (Fri, 29 May 2009) | 1 line\n  \n  bug fix as pointed out by Tom.\n........\n  r18603 | kohsuke | 2009-05-30 15:11:36 -0700 (Sat, 30 May 2009) | 3 lines\n  \n  HtmlUnit added a substantial amount of dependencies (5MB or so), plus its dependency to NekoHTML, which in turn depends on Xerces, makes deployment problematic on JBoss.\n  \n  Integrated a reimplementation of JDK auto installer which doesn't use HtmlUnit.\n........\n  r18608 | kohsuke | 2009-05-31 09:04:35 -0700 (Sun, 31 May 2009) | 1 line\n  \n  [maven-release-plugin] prepare release hudson-1_309\n........\n  r18610 | kohsuke | 2009-05-31 09:04:45 -0700 (Sun, 31 May 2009) | 1 line\n  \n  [maven-release-plugin] prepare for next development iteration\n........\n  r18614 | kohsuke | 2009-05-31 09:35:29 -0700 (Sun, 31 May 2009) | 1 line\n  \n  updated changelog as a part of the release\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@18735 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/812e1ce632bcb70656465ca8d0ba2fc41052baf5",
        "buggy_code": "public FormValidation doCheckName(@AncestorInPath AbstractProject project, @QueryParameter String value) throws IOException, ServletException {",
        "fixed_code": "public FormValidation doCheckName(@AncestorInPath Job project, @QueryParameter String value) throws IOException, ServletException {",
        "patch": "@@ -162,7 +162,7 @@ public boolean showPermission(Permission p) {\n             return p!=Item.CREATE;\n         }\n \n-        public FormValidation doCheckName(@AncestorInPath AbstractProject project, @QueryParameter String value) throws IOException, ServletException {\n+        public FormValidation doCheckName(@AncestorInPath Job project, @QueryParameter String value) throws IOException, ServletException {\n             return GlobalMatrixAuthorizationStrategy.DESCRIPTOR.doCheckName(value, project, AbstractProject.CONFIGURE);\n         }\n     }"
    },
    {
        "commit_id": "5386c0bfa8b3249768536eccb7eb156bbec71737",
        "commit_message": "NPE fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@18414 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5386c0bfa8b3249768536eccb7eb156bbec71737",
        "buggy_code": "if (!item.hasPermission(Item.READ))",
        "fixed_code": "if (item==null || !item.hasPermission(Item.READ))",
        "patch": "@@ -1725,7 +1725,7 @@ public TopLevelItem getJobCaseInsensitive(String name) {\n      */\n     public TopLevelItem getItem(String name) {\n     \tTopLevelItem item = items.get(name);\n-        if (!item.hasPermission(Item.READ))\n+        if (item==null || !item.hasPermission(Item.READ))\n             return null;\n         return item;\n     }"
    },
    {
        "commit_id": "2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "commit_message": "Merged revisions 17324-17325,17428,17430,17473-17475,17481-17482,17555-17563,17571,17593-17595,17619-17620,17637-17644,17656-17657,17663-17665,17667-17670,17730,17753,17755-17758,17763-17768,17770-17771,17901,17906,17911-17912,17958,17961-17962,17970-17977 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tool-autoinstallation\n\n........\n  r17324 | jglick | 2009-04-20 18:24:32 -0700 (Mon, 20 Apr 2009) | 2 lines\n  \n  Defensive cloning and Javadoc corrections.\n  (Though it seems no one is using the default impls of these methods yet anyway.)\n........\n  r17325 | jglick | 2009-04-20 18:29:06 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  Deprecation of delegate method is intentional.\n........\n  r17428 | jglick | 2009-04-23 08:07:14 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Noting ToolLocationTranslator more prominently.\n........\n  r17430 | jglick | 2009-04-23 09:16:40 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unused imports.\n........\n  r17473 | jglick | 2009-04-23 19:21:11 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Allow Plugin.configure to see the StaplerRequest, needed for some kinds of calls.\n........\n  r17474 | jglick | 2009-04-23 19:25:54 -0700 (Thu, 23 Apr 2009) | 3 lines\n  \n  Initial sketch of plugin to manage tool installations across slaves.\n  (Should really be under ../plugins/ but that was not branched, so putting here for the moment.)\n........\n  r17475 | jglick | 2009-04-23 20:29:36 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Typo in Javadoc.\n........\n  r17481 | jglick | 2009-04-23 22:46:26 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unzip of an unbuffered stream is painfully slow.\n........\n  r17482 | jglick | 2009-04-23 22:48:01 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  ZIP-based tool installer now functional.\n........\n  r17555 | jglick | 2009-04-27 17:50:38 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Build against newest trunk.\n........\n  r17556 | jglick | 2009-04-27 18:38:28 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Adding help.\n........\n  r17557 | jglick | 2009-04-27 18:57:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Moving toolName & label config GUI into generic files.\n........\n  r17558 | jglick | 2009-04-27 19:37:30 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Typo.\n........\n  r17559 | jglick | 2009-04-27 20:07:47 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Second tool installer type based on a freeform command.\n........\n  r17560 | jglick | 2009-04-27 20:24:36 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  installIfNecessaryFrom will now just return false in case the target dir exists but the URL cannot be opened.\n........\n  r17561 | jglick | 2009-04-27 20:25:22 -0700 (Mon, 27 Apr 2009) | 2 lines\n  \n  chmod only if something was actually installed.\n  Use a+x, not o+x.\n........\n  r17562 | jglick | 2009-04-27 20:26:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Comment only.\n........\n  r17563 | jglick | 2009-04-27 20:41:12 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  I18N.\n........\n  r17571 | jglick | 2009-04-28 08:15:31 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Wiki link.\n........\n  r17593 | jglick | 2009-04-28 15:38:33 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Turn off echo mode, it's just noise.\n........\n  r17594 | jglick | 2009-04-28 15:39:29 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Synchronizing access to installers for a given node/tool combo.\n  Sending log messages to Hudson log in real time.\n........\n  r17595 | jglick | 2009-04-28 15:46:29 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Copyrights.\n........\n  r17619 | jglick | 2009-04-29 06:25:23 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Improved Javadoc.\n........\n  r17620 | jglick | 2009-04-29 06:51:11 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Demonstraing how to use DLJ to mechanically install official JDK releases on supported operating systems.\n........\n  r17637 | kohsuke | 2009-04-30 16:15:24 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  fixed what appears to be a C&P mistake\n........\n  r17638 | kohsuke | 2009-04-30 16:16:21 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  show YUI logger if YUI debugging mode is set.\n........\n  r17639 | kohsuke | 2009-04-30 16:52:28 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Fixed a UI script problem when <hetero-list> nests inside <repeatable>.\n  \n  The cause of the problem was that the behavior for inner <hetero-list> kicks in first, altering HTML (by removing \"prototypes\"), before behavior for outer <repetable> kicks in and removes the master copy from DOM tree.\n  \n  So <repeatable> ends up computing a master copy after some elements are removed, and hence when we try to reinsert them later by clicking \"Add\", it'll get incorrect copy, and re-execution of the <hetero-list> behavior bombs out.\n  \n  I fixed this by skipping those HTML-altering behaviors if they show up in the part of DOM tree that's supposed to be snapshotted and removed.\n........\n  r17640 | kohsuke | 2009-04-30 16:57:58 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Added ToolProperty to ToolInstallation (which acts like NodeProperty to Node --- basically decorates the base object with additional properties.)\n  \n  The original motivation is to implement ToolInstaller this way, if Jesse is OK. But decorating tools seem to have some other interesting use, such as a plugin for configuring $M2_HOME/conf/settings.xml, or a plugin to insert unlimited cryptography extension to JDK, or a plugin to add a few more jars into $ANT_HOME/lib.\n  \n  For this to work, ToolInstallations that want properties needs to be modified to use a new constructor. For a starter, I modified the JDK class to do this.\n  \n  I also took the opportunity to modernize JDK/config.jelly.\n........\n  r17641 | kohsuke | 2009-04-30 17:02:04 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  this appears to be a left-over from early days when we didn't have a means to do form validation\n........\n  r17642 | kohsuke | 2009-04-30 17:02:35 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  we don't need no.such.JDK but we need name. rebranching\n........\n  r17643 | kohsuke | 2009-04-30 17:03:22 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  rebranched from Hudson's configure.properties\n........\n  r17644 | kohsuke | 2009-04-30 17:05:31 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  removed unnecessary translations\n........\n  r17656 | kohsuke | 2009-05-01 11:27:36 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Less hack for improved type safety. Asking people to write more code is not necessarily bad as long as what they need to do is obvious to them.\n........\n  r17657 | kohsuke | 2009-05-01 12:07:20 -0700 (Fri, 01 May 2009) | 5 lines\n  \n  The toolautoinst part of the change that corresponds to rev.17640.\n  \n  ToolInstallers are now hooked under ToolInstallation through InstallSourceProperty as a ToolProperty.\n  \n  This allows the relevant UIs to be shown in one place. Still pending Jesse's feedback. Making it a single commit to simplify a revert if necessary\n........\n  r17663 | kohsuke | 2009-05-01 13:23:51 -0700 (Fri, 01 May 2009) | 1 line\n  \n  doc improvement\n........\n  r17664 | kohsuke | 2009-05-01 13:24:10 -0700 (Fri, 01 May 2009) | 1 line\n  \n  needs this to allow Stapler to databind hetero-list automatically\n........\n  r17665 | jglick | 2009-05-01 13:31:27 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Warnings.\n........\n  r17667 | kohsuke | 2009-05-01 14:20:53 -0700 (Fri, 01 May 2009) | 1 line\n  \n  added a method to do chmod\n........\n  r17668 | kohsuke | 2009-05-01 14:30:35 -0700 (Fri, 01 May 2009) | 1 line\n  \n  prefer JDK6 version to avoid unnecessary JNA loading\n........\n  r17669 | kohsuke | 2009-05-01 14:33:09 -0700 (Fri, 01 May 2009) | 1 line\n  \n  no, I must have confused this.\n........\n  r17670 | kohsuke | 2009-05-01 15:57:11 -0700 (Fri, 01 May 2009) | 2 lines\n  \n  - Automated JDK installer and its test.\n  - Minor update to the signature of ToolInstaller for supplying the expected default location.\n........\n  r17730 | kohsuke | 2009-05-04 11:27:34 -0700 (Mon, 04 May 2009) | 1 line\n  \n  avoid NPE as reported in HUDSON-3608\n........\n  r17753 | jglick | 2009-05-04 19:34:08 -0700 (Mon, 04 May 2009) | 2 lines\n  \n  Moved toolautoinst functionality into core.\n........\n  r17755 | jglick | 2009-05-04 20:28:34 -0700 (Mon, 04 May 2009) | 8 lines\n  \n  Added TaskListener parameter and IOException and InterruptedException to several methods:\n  Run.getEnvironment\n  NodeSpecific.forNode\n  ToolLocationTranslator.getToolHome\n  ToolLocationNodeProperty.getToolHome\n  ToolInstallation.translateFor\n  ProcessCache.Factory.getMavenInstallation\n  ProcessCache.Factory.getJava\n........\n  r17756 | jglick | 2009-05-04 20:36:56 -0700 (Mon, 04 May 2009) | 1 line\n  \n  expectedLocation was never strictly necessary, and will soon no longer be used even by JDKInstaller.\n........\n  r17757 | jglick | 2009-05-04 20:40:41 -0700 (Mon, 04 May 2009) | 1 line\n  \n  Not sure yet what @since should be.\n........\n  r17758 | jglick | 2009-05-04 20:41:51 -0700 (Mon, 04 May 2009) | 1 line\n  \n  getDefaultInstallers method added. Not yet in use.\n........\n  r17763 | kohsuke | 2009-05-05 10:50:36 -0700 (Tue, 05 May 2009) | 1 line\n  \n  deprecated redundant getJavaHome method\n........\n  r17764 | kohsuke | 2009-05-05 12:10:45 -0700 (Tue, 05 May 2009) | 1 line\n  \n  added general-purpose property defaulting mechanism, and added default tool installer for JDK\n........\n  r17765 | jglick | 2009-05-05 12:35:56 -0700 (Tue, 05 May 2009) | 1 line\n  \n  capitalize(\"\") -> \"\"\n........\n  r17766 | jglick | 2009-05-05 12:49:52 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Missing @since.\n........\n  r17767 | jglick | 2009-05-05 13:01:41 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Unchecked warning.\n........\n  r17768 | jglick | 2009-05-05 13:19:49 -0700 (Tue, 05 May 2009) | 2 lines\n  \n  Two unsuccessful attempts at form validation.\n........\n  r17770 | jglick | 2009-05-05 13:48:37 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Better class names.\n........\n  r17771 | kohsuke | 2009-05-05 14:12:21 -0700 (Tue, 05 May 2009) | 5 lines\n  \n  brought the form validation check back. The trick is to use the 'value' parameter.\n  \n  In the end we'd expect this check to go away anyway, as we change input field to drop-down list, but in the mean time, this is why it didn't work.\n  \n  Maybe we probably need more static code checkers? Like FindBugs rules?\n........\n  r17901 | kohsuke | 2009-05-09 19:15:40 -0700 (Sat, 09 May 2009) | 1 line\n  \n  having two toolHome is odd.\n........\n  r17906 | kohsuke | 2009-05-10 11:09:13 -0700 (Sun, 10 May 2009) | 1 line\n  \n  adding the generalization of UpdateCenter, but for compatibility reasons, we are leaving UpdateCenter as-is.\n........\n  r17911 | kohsuke | 2009-05-10 17:02:53 -0700 (Sun, 10 May 2009) | 1 line\n  \n  integrated json-lib with a bit of bug fix\n........\n  r17912 | kohsuke | 2009-05-10 17:13:05 -0700 (Sun, 10 May 2009) | 1 line\n  \n  JDK list is now fetched from hudson.dev.java.net\n........\n  r17958 | kohsuke | 2009-05-11 13:44:25 -0700 (Mon, 11 May 2009) | 48 lines\n  \n  Handle AbortException better to avoid error like this:\n  \n  [INFO] ------------------------------------------------------------------------\n  [ERROR] BUILD ERROR\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Failed to delete directory: C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target. Reason: Unable to delete file C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target\\remoting-1.304-SNAPSHOT.jar\n  \n  [INFO] ------------------------------------------------------------------------\n  [INFO] For more information, run Maven with the -e switch\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time: 31 seconds\n  [INFO] Finished at: Sun May 10 18:15:33 PDT 2009\n  [INFO] Final Memory: 25M/48M\n  [INFO] ------------------------------------------------------------------------\n  Recording fingerprints\n  Archiving artifacts\n  Recording test results\n  ERROR: Failed to archive JUnit reports\n  hudson.util.IOException2: remote file operation failed\n  \tat hudson.FilePath.act(FilePath.java:596)\n  \tat hudson.tasks.junit.JUnitResultArchiver.perform(JUnitResultArchiver.java:82)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:372)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:360)\n  \tat hudson.model.Build$RunnerImpl.post2(Build.java:183)\n  \tat hudson.model.AbstractBuild$AbstractRunner.post(AbstractBuild.java:345)\n  \tat hudson.model.Run.run(Run.java:943)\n  \tat hudson.model.Build.run(Build.java:112)\n  \tat hudson.model.ResourceController.execute(ResourceController.java:93)\n  \tat hudson.model.Executor.run(Executor.java:119)\n  Caused by: hudson.AbortException: Test reports were found but none of them are new. Did tests run? \n  For example, \\files\\hudson\\workspace\\hudson\\hudson\\main\\core\\target\\surefire-reports\\TEST-hudson.BulkChangeTest.xml is 2 days 23 hr old\n  \n  \tat hudson.tasks.junit.TestResult.parse(TestResult.java:134)\n  \tat hudson.tasks.junit.TestResult.<init>(TestResult.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:82)\n  \tat hudson.FilePath$FileCallableWrapper.call(FilePath.java:1583)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:92)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:46)\n  \tat hudson.remoting.Request$2.run(Request.java:236)\n  \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n  \tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n  \tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n  \tat java.lang.Thread.run(Thread.java:619)\n........\n  r17961 | kohsuke | 2009-05-11 15:16:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adding Windows JDK silent installation\n........\n  r17962 | kohsuke | 2009-05-11 16:08:13 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing JDK offline installatino for Windows\n........\n  r17970 | kohsuke | 2009-05-11 19:37:59 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing a problem that prevents the usage of this tag in <repeatable> block, which reinserts the same fragment over and over. So statically assigning IDs won't work\n........\n  r17971 | kohsuke | 2009-05-11 22:17:09 -0700 (Mon, 11 May 2009) | 1 line\n  \n  continuing to remove static ID generation, which breaks the tag when used inside <repetable> tag.\n........\n  r17972 | kohsuke | 2009-05-11 22:19:11 -0700 (Mon, 11 May 2009) | 1 line\n  \n  I don't know when this started, but even in the hudson-dev:run mode, the versionis no longer '?', so we need a different way to force reload\n........\n  r17973 | kohsuke | 2009-05-11 22:26:34 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adjusted the text a bit since multiple \"add\" and \"delete\"s were rather confusing\n........\n  r17974 | kohsuke | 2009-05-11 22:31:58 -0700 (Mon, 11 May 2009) | 1 line\n  \n  added help screen\n........\n  r17975 | kohsuke | 2009-05-11 22:41:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  form validation now works against the checkbox, too\n........\n  r17976 | kohsuke | 2009-05-11 22:43:00 -0700 (Mon, 11 May 2009) | 1 line\n  \n  with auto installation, we expect users to specify a directory that doesn't exist yet, so don't report it as an error\n........\n  r17977 | kohsuke | 2009-05-11 22:43:24 -0700 (Mon, 11 May 2009) | 1 line\n  \n  improving the text\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17985 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "buggy_code": "return singleQuote(a.getUrl()+\"/descriptorByName/\"+clazz.getName()+\"/check\"+capitalizedFieldName+\"?value=\")+\"+encode(this.value)\";",
        "fixed_code": "return singleQuote(a.getUrl()+\"/descriptorByName/\"+clazz.getName()+\"/check\"+capitalizedFieldName+\"?value=\")+\"+toValue(this)\";",
        "patch": "@@ -260,7 +260,7 @@ public String getCheckUrl(String fieldName) {\n         StaplerRequest req = Stapler.getCurrentRequest();\n         Ancestor a = req.findAncestor(DescriptorByNameOwner.class);\n         // a is always non-null because we already have Hudson as the sentinel\n-        return singleQuote(a.getUrl()+\"/descriptorByName/\"+clazz.getName()+\"/check\"+capitalizedFieldName+\"?value=\")+\"+encode(this.value)\";\n+        return singleQuote(a.getUrl()+\"/descriptorByName/\"+clazz.getName()+\"/check\"+capitalizedFieldName+\"?value=\")+\"+toValue(this)\";\n     }\n \n     /**"
    },
    {
        "commit_id": "2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "commit_message": "Merged revisions 17324-17325,17428,17430,17473-17475,17481-17482,17555-17563,17571,17593-17595,17619-17620,17637-17644,17656-17657,17663-17665,17667-17670,17730,17753,17755-17758,17763-17768,17770-17771,17901,17906,17911-17912,17958,17961-17962,17970-17977 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tool-autoinstallation\n\n........\n  r17324 | jglick | 2009-04-20 18:24:32 -0700 (Mon, 20 Apr 2009) | 2 lines\n  \n  Defensive cloning and Javadoc corrections.\n  (Though it seems no one is using the default impls of these methods yet anyway.)\n........\n  r17325 | jglick | 2009-04-20 18:29:06 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  Deprecation of delegate method is intentional.\n........\n  r17428 | jglick | 2009-04-23 08:07:14 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Noting ToolLocationTranslator more prominently.\n........\n  r17430 | jglick | 2009-04-23 09:16:40 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unused imports.\n........\n  r17473 | jglick | 2009-04-23 19:21:11 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Allow Plugin.configure to see the StaplerRequest, needed for some kinds of calls.\n........\n  r17474 | jglick | 2009-04-23 19:25:54 -0700 (Thu, 23 Apr 2009) | 3 lines\n  \n  Initial sketch of plugin to manage tool installations across slaves.\n  (Should really be under ../plugins/ but that was not branched, so putting here for the moment.)\n........\n  r17475 | jglick | 2009-04-23 20:29:36 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Typo in Javadoc.\n........\n  r17481 | jglick | 2009-04-23 22:46:26 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unzip of an unbuffered stream is painfully slow.\n........\n  r17482 | jglick | 2009-04-23 22:48:01 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  ZIP-based tool installer now functional.\n........\n  r17555 | jglick | 2009-04-27 17:50:38 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Build against newest trunk.\n........\n  r17556 | jglick | 2009-04-27 18:38:28 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Adding help.\n........\n  r17557 | jglick | 2009-04-27 18:57:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Moving toolName & label config GUI into generic files.\n........\n  r17558 | jglick | 2009-04-27 19:37:30 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Typo.\n........\n  r17559 | jglick | 2009-04-27 20:07:47 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Second tool installer type based on a freeform command.\n........\n  r17560 | jglick | 2009-04-27 20:24:36 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  installIfNecessaryFrom will now just return false in case the target dir exists but the URL cannot be opened.\n........\n  r17561 | jglick | 2009-04-27 20:25:22 -0700 (Mon, 27 Apr 2009) | 2 lines\n  \n  chmod only if something was actually installed.\n  Use a+x, not o+x.\n........\n  r17562 | jglick | 2009-04-27 20:26:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Comment only.\n........\n  r17563 | jglick | 2009-04-27 20:41:12 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  I18N.\n........\n  r17571 | jglick | 2009-04-28 08:15:31 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Wiki link.\n........\n  r17593 | jglick | 2009-04-28 15:38:33 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Turn off echo mode, it's just noise.\n........\n  r17594 | jglick | 2009-04-28 15:39:29 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Synchronizing access to installers for a given node/tool combo.\n  Sending log messages to Hudson log in real time.\n........\n  r17595 | jglick | 2009-04-28 15:46:29 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Copyrights.\n........\n  r17619 | jglick | 2009-04-29 06:25:23 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Improved Javadoc.\n........\n  r17620 | jglick | 2009-04-29 06:51:11 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Demonstraing how to use DLJ to mechanically install official JDK releases on supported operating systems.\n........\n  r17637 | kohsuke | 2009-04-30 16:15:24 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  fixed what appears to be a C&P mistake\n........\n  r17638 | kohsuke | 2009-04-30 16:16:21 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  show YUI logger if YUI debugging mode is set.\n........\n  r17639 | kohsuke | 2009-04-30 16:52:28 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Fixed a UI script problem when <hetero-list> nests inside <repeatable>.\n  \n  The cause of the problem was that the behavior for inner <hetero-list> kicks in first, altering HTML (by removing \"prototypes\"), before behavior for outer <repetable> kicks in and removes the master copy from DOM tree.\n  \n  So <repeatable> ends up computing a master copy after some elements are removed, and hence when we try to reinsert them later by clicking \"Add\", it'll get incorrect copy, and re-execution of the <hetero-list> behavior bombs out.\n  \n  I fixed this by skipping those HTML-altering behaviors if they show up in the part of DOM tree that's supposed to be snapshotted and removed.\n........\n  r17640 | kohsuke | 2009-04-30 16:57:58 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Added ToolProperty to ToolInstallation (which acts like NodeProperty to Node --- basically decorates the base object with additional properties.)\n  \n  The original motivation is to implement ToolInstaller this way, if Jesse is OK. But decorating tools seem to have some other interesting use, such as a plugin for configuring $M2_HOME/conf/settings.xml, or a plugin to insert unlimited cryptography extension to JDK, or a plugin to add a few more jars into $ANT_HOME/lib.\n  \n  For this to work, ToolInstallations that want properties needs to be modified to use a new constructor. For a starter, I modified the JDK class to do this.\n  \n  I also took the opportunity to modernize JDK/config.jelly.\n........\n  r17641 | kohsuke | 2009-04-30 17:02:04 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  this appears to be a left-over from early days when we didn't have a means to do form validation\n........\n  r17642 | kohsuke | 2009-04-30 17:02:35 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  we don't need no.such.JDK but we need name. rebranching\n........\n  r17643 | kohsuke | 2009-04-30 17:03:22 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  rebranched from Hudson's configure.properties\n........\n  r17644 | kohsuke | 2009-04-30 17:05:31 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  removed unnecessary translations\n........\n  r17656 | kohsuke | 2009-05-01 11:27:36 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Less hack for improved type safety. Asking people to write more code is not necessarily bad as long as what they need to do is obvious to them.\n........\n  r17657 | kohsuke | 2009-05-01 12:07:20 -0700 (Fri, 01 May 2009) | 5 lines\n  \n  The toolautoinst part of the change that corresponds to rev.17640.\n  \n  ToolInstallers are now hooked under ToolInstallation through InstallSourceProperty as a ToolProperty.\n  \n  This allows the relevant UIs to be shown in one place. Still pending Jesse's feedback. Making it a single commit to simplify a revert if necessary\n........\n  r17663 | kohsuke | 2009-05-01 13:23:51 -0700 (Fri, 01 May 2009) | 1 line\n  \n  doc improvement\n........\n  r17664 | kohsuke | 2009-05-01 13:24:10 -0700 (Fri, 01 May 2009) | 1 line\n  \n  needs this to allow Stapler to databind hetero-list automatically\n........\n  r17665 | jglick | 2009-05-01 13:31:27 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Warnings.\n........\n  r17667 | kohsuke | 2009-05-01 14:20:53 -0700 (Fri, 01 May 2009) | 1 line\n  \n  added a method to do chmod\n........\n  r17668 | kohsuke | 2009-05-01 14:30:35 -0700 (Fri, 01 May 2009) | 1 line\n  \n  prefer JDK6 version to avoid unnecessary JNA loading\n........\n  r17669 | kohsuke | 2009-05-01 14:33:09 -0700 (Fri, 01 May 2009) | 1 line\n  \n  no, I must have confused this.\n........\n  r17670 | kohsuke | 2009-05-01 15:57:11 -0700 (Fri, 01 May 2009) | 2 lines\n  \n  - Automated JDK installer and its test.\n  - Minor update to the signature of ToolInstaller for supplying the expected default location.\n........\n  r17730 | kohsuke | 2009-05-04 11:27:34 -0700 (Mon, 04 May 2009) | 1 line\n  \n  avoid NPE as reported in HUDSON-3608\n........\n  r17753 | jglick | 2009-05-04 19:34:08 -0700 (Mon, 04 May 2009) | 2 lines\n  \n  Moved toolautoinst functionality into core.\n........\n  r17755 | jglick | 2009-05-04 20:28:34 -0700 (Mon, 04 May 2009) | 8 lines\n  \n  Added TaskListener parameter and IOException and InterruptedException to several methods:\n  Run.getEnvironment\n  NodeSpecific.forNode\n  ToolLocationTranslator.getToolHome\n  ToolLocationNodeProperty.getToolHome\n  ToolInstallation.translateFor\n  ProcessCache.Factory.getMavenInstallation\n  ProcessCache.Factory.getJava\n........\n  r17756 | jglick | 2009-05-04 20:36:56 -0700 (Mon, 04 May 2009) | 1 line\n  \n  expectedLocation was never strictly necessary, and will soon no longer be used even by JDKInstaller.\n........\n  r17757 | jglick | 2009-05-04 20:40:41 -0700 (Mon, 04 May 2009) | 1 line\n  \n  Not sure yet what @since should be.\n........\n  r17758 | jglick | 2009-05-04 20:41:51 -0700 (Mon, 04 May 2009) | 1 line\n  \n  getDefaultInstallers method added. Not yet in use.\n........\n  r17763 | kohsuke | 2009-05-05 10:50:36 -0700 (Tue, 05 May 2009) | 1 line\n  \n  deprecated redundant getJavaHome method\n........\n  r17764 | kohsuke | 2009-05-05 12:10:45 -0700 (Tue, 05 May 2009) | 1 line\n  \n  added general-purpose property defaulting mechanism, and added default tool installer for JDK\n........\n  r17765 | jglick | 2009-05-05 12:35:56 -0700 (Tue, 05 May 2009) | 1 line\n  \n  capitalize(\"\") -> \"\"\n........\n  r17766 | jglick | 2009-05-05 12:49:52 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Missing @since.\n........\n  r17767 | jglick | 2009-05-05 13:01:41 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Unchecked warning.\n........\n  r17768 | jglick | 2009-05-05 13:19:49 -0700 (Tue, 05 May 2009) | 2 lines\n  \n  Two unsuccessful attempts at form validation.\n........\n  r17770 | jglick | 2009-05-05 13:48:37 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Better class names.\n........\n  r17771 | kohsuke | 2009-05-05 14:12:21 -0700 (Tue, 05 May 2009) | 5 lines\n  \n  brought the form validation check back. The trick is to use the 'value' parameter.\n  \n  In the end we'd expect this check to go away anyway, as we change input field to drop-down list, but in the mean time, this is why it didn't work.\n  \n  Maybe we probably need more static code checkers? Like FindBugs rules?\n........\n  r17901 | kohsuke | 2009-05-09 19:15:40 -0700 (Sat, 09 May 2009) | 1 line\n  \n  having two toolHome is odd.\n........\n  r17906 | kohsuke | 2009-05-10 11:09:13 -0700 (Sun, 10 May 2009) | 1 line\n  \n  adding the generalization of UpdateCenter, but for compatibility reasons, we are leaving UpdateCenter as-is.\n........\n  r17911 | kohsuke | 2009-05-10 17:02:53 -0700 (Sun, 10 May 2009) | 1 line\n  \n  integrated json-lib with a bit of bug fix\n........\n  r17912 | kohsuke | 2009-05-10 17:13:05 -0700 (Sun, 10 May 2009) | 1 line\n  \n  JDK list is now fetched from hudson.dev.java.net\n........\n  r17958 | kohsuke | 2009-05-11 13:44:25 -0700 (Mon, 11 May 2009) | 48 lines\n  \n  Handle AbortException better to avoid error like this:\n  \n  [INFO] ------------------------------------------------------------------------\n  [ERROR] BUILD ERROR\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Failed to delete directory: C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target. Reason: Unable to delete file C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target\\remoting-1.304-SNAPSHOT.jar\n  \n  [INFO] ------------------------------------------------------------------------\n  [INFO] For more information, run Maven with the -e switch\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time: 31 seconds\n  [INFO] Finished at: Sun May 10 18:15:33 PDT 2009\n  [INFO] Final Memory: 25M/48M\n  [INFO] ------------------------------------------------------------------------\n  Recording fingerprints\n  Archiving artifacts\n  Recording test results\n  ERROR: Failed to archive JUnit reports\n  hudson.util.IOException2: remote file operation failed\n  \tat hudson.FilePath.act(FilePath.java:596)\n  \tat hudson.tasks.junit.JUnitResultArchiver.perform(JUnitResultArchiver.java:82)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:372)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:360)\n  \tat hudson.model.Build$RunnerImpl.post2(Build.java:183)\n  \tat hudson.model.AbstractBuild$AbstractRunner.post(AbstractBuild.java:345)\n  \tat hudson.model.Run.run(Run.java:943)\n  \tat hudson.model.Build.run(Build.java:112)\n  \tat hudson.model.ResourceController.execute(ResourceController.java:93)\n  \tat hudson.model.Executor.run(Executor.java:119)\n  Caused by: hudson.AbortException: Test reports were found but none of them are new. Did tests run? \n  For example, \\files\\hudson\\workspace\\hudson\\hudson\\main\\core\\target\\surefire-reports\\TEST-hudson.BulkChangeTest.xml is 2 days 23 hr old\n  \n  \tat hudson.tasks.junit.TestResult.parse(TestResult.java:134)\n  \tat hudson.tasks.junit.TestResult.<init>(TestResult.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:82)\n  \tat hudson.FilePath$FileCallableWrapper.call(FilePath.java:1583)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:92)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:46)\n  \tat hudson.remoting.Request$2.run(Request.java:236)\n  \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n  \tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n  \tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n  \tat java.lang.Thread.run(Thread.java:619)\n........\n  r17961 | kohsuke | 2009-05-11 15:16:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adding Windows JDK silent installation\n........\n  r17962 | kohsuke | 2009-05-11 16:08:13 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing JDK offline installatino for Windows\n........\n  r17970 | kohsuke | 2009-05-11 19:37:59 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing a problem that prevents the usage of this tag in <repeatable> block, which reinserts the same fragment over and over. So statically assigning IDs won't work\n........\n  r17971 | kohsuke | 2009-05-11 22:17:09 -0700 (Mon, 11 May 2009) | 1 line\n  \n  continuing to remove static ID generation, which breaks the tag when used inside <repetable> tag.\n........\n  r17972 | kohsuke | 2009-05-11 22:19:11 -0700 (Mon, 11 May 2009) | 1 line\n  \n  I don't know when this started, but even in the hudson-dev:run mode, the versionis no longer '?', so we need a different way to force reload\n........\n  r17973 | kohsuke | 2009-05-11 22:26:34 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adjusted the text a bit since multiple \"add\" and \"delete\"s were rather confusing\n........\n  r17974 | kohsuke | 2009-05-11 22:31:58 -0700 (Mon, 11 May 2009) | 1 line\n  \n  added help screen\n........\n  r17975 | kohsuke | 2009-05-11 22:41:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  form validation now works against the checkbox, too\n........\n  r17976 | kohsuke | 2009-05-11 22:43:00 -0700 (Mon, 11 May 2009) | 1 line\n  \n  with auto installation, we expect users to specify a directory that doesn't exist yet, so don't report it as an error\n........\n  r17977 | kohsuke | 2009-05-11 22:43:24 -0700 (Mon, 11 May 2009) | 1 line\n  \n  improving the text\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17985 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "buggy_code": "Proc proc = new Proc.LocalProc(cmd,getEnvironment(),System.in,new DualOutputStream(System.out,listener.getLogger()));",
        "fixed_code": "Proc proc = new Proc.LocalProc(cmd,getEnvironment(listener),System.in,new DualOutputStream(System.out,listener.getLogger()));",
        "patch": "@@ -61,7 +61,7 @@ public class ExternalRun extends Run<ExternalJob,ExternalRun> {\n     public void run(final String[] cmd) {\n         run(new Runner() {\n             public Result run(BuildListener listener) throws Exception {\n-                Proc proc = new Proc.LocalProc(cmd,getEnvironment(),System.in,new DualOutputStream(System.out,listener.getLogger()));\n+                Proc proc = new Proc.LocalProc(cmd,getEnvironment(listener),System.in,new DualOutputStream(System.out,listener.getLogger()));\n                 return proc.join()==0?Result.SUCCESS:Result.FAILURE;\n             }\n "
    },
    {
        "commit_id": "2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "commit_message": "Merged revisions 17324-17325,17428,17430,17473-17475,17481-17482,17555-17563,17571,17593-17595,17619-17620,17637-17644,17656-17657,17663-17665,17667-17670,17730,17753,17755-17758,17763-17768,17770-17771,17901,17906,17911-17912,17958,17961-17962,17970-17977 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tool-autoinstallation\n\n........\n  r17324 | jglick | 2009-04-20 18:24:32 -0700 (Mon, 20 Apr 2009) | 2 lines\n  \n  Defensive cloning and Javadoc corrections.\n  (Though it seems no one is using the default impls of these methods yet anyway.)\n........\n  r17325 | jglick | 2009-04-20 18:29:06 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  Deprecation of delegate method is intentional.\n........\n  r17428 | jglick | 2009-04-23 08:07:14 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Noting ToolLocationTranslator more prominently.\n........\n  r17430 | jglick | 2009-04-23 09:16:40 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unused imports.\n........\n  r17473 | jglick | 2009-04-23 19:21:11 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Allow Plugin.configure to see the StaplerRequest, needed for some kinds of calls.\n........\n  r17474 | jglick | 2009-04-23 19:25:54 -0700 (Thu, 23 Apr 2009) | 3 lines\n  \n  Initial sketch of plugin to manage tool installations across slaves.\n  (Should really be under ../plugins/ but that was not branched, so putting here for the moment.)\n........\n  r17475 | jglick | 2009-04-23 20:29:36 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Typo in Javadoc.\n........\n  r17481 | jglick | 2009-04-23 22:46:26 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unzip of an unbuffered stream is painfully slow.\n........\n  r17482 | jglick | 2009-04-23 22:48:01 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  ZIP-based tool installer now functional.\n........\n  r17555 | jglick | 2009-04-27 17:50:38 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Build against newest trunk.\n........\n  r17556 | jglick | 2009-04-27 18:38:28 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Adding help.\n........\n  r17557 | jglick | 2009-04-27 18:57:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Moving toolName & label config GUI into generic files.\n........\n  r17558 | jglick | 2009-04-27 19:37:30 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Typo.\n........\n  r17559 | jglick | 2009-04-27 20:07:47 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Second tool installer type based on a freeform command.\n........\n  r17560 | jglick | 2009-04-27 20:24:36 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  installIfNecessaryFrom will now just return false in case the target dir exists but the URL cannot be opened.\n........\n  r17561 | jglick | 2009-04-27 20:25:22 -0700 (Mon, 27 Apr 2009) | 2 lines\n  \n  chmod only if something was actually installed.\n  Use a+x, not o+x.\n........\n  r17562 | jglick | 2009-04-27 20:26:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Comment only.\n........\n  r17563 | jglick | 2009-04-27 20:41:12 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  I18N.\n........\n  r17571 | jglick | 2009-04-28 08:15:31 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Wiki link.\n........\n  r17593 | jglick | 2009-04-28 15:38:33 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Turn off echo mode, it's just noise.\n........\n  r17594 | jglick | 2009-04-28 15:39:29 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Synchronizing access to installers for a given node/tool combo.\n  Sending log messages to Hudson log in real time.\n........\n  r17595 | jglick | 2009-04-28 15:46:29 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Copyrights.\n........\n  r17619 | jglick | 2009-04-29 06:25:23 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Improved Javadoc.\n........\n  r17620 | jglick | 2009-04-29 06:51:11 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Demonstraing how to use DLJ to mechanically install official JDK releases on supported operating systems.\n........\n  r17637 | kohsuke | 2009-04-30 16:15:24 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  fixed what appears to be a C&P mistake\n........\n  r17638 | kohsuke | 2009-04-30 16:16:21 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  show YUI logger if YUI debugging mode is set.\n........\n  r17639 | kohsuke | 2009-04-30 16:52:28 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Fixed a UI script problem when <hetero-list> nests inside <repeatable>.\n  \n  The cause of the problem was that the behavior for inner <hetero-list> kicks in first, altering HTML (by removing \"prototypes\"), before behavior for outer <repetable> kicks in and removes the master copy from DOM tree.\n  \n  So <repeatable> ends up computing a master copy after some elements are removed, and hence when we try to reinsert them later by clicking \"Add\", it'll get incorrect copy, and re-execution of the <hetero-list> behavior bombs out.\n  \n  I fixed this by skipping those HTML-altering behaviors if they show up in the part of DOM tree that's supposed to be snapshotted and removed.\n........\n  r17640 | kohsuke | 2009-04-30 16:57:58 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Added ToolProperty to ToolInstallation (which acts like NodeProperty to Node --- basically decorates the base object with additional properties.)\n  \n  The original motivation is to implement ToolInstaller this way, if Jesse is OK. But decorating tools seem to have some other interesting use, such as a plugin for configuring $M2_HOME/conf/settings.xml, or a plugin to insert unlimited cryptography extension to JDK, or a plugin to add a few more jars into $ANT_HOME/lib.\n  \n  For this to work, ToolInstallations that want properties needs to be modified to use a new constructor. For a starter, I modified the JDK class to do this.\n  \n  I also took the opportunity to modernize JDK/config.jelly.\n........\n  r17641 | kohsuke | 2009-04-30 17:02:04 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  this appears to be a left-over from early days when we didn't have a means to do form validation\n........\n  r17642 | kohsuke | 2009-04-30 17:02:35 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  we don't need no.such.JDK but we need name. rebranching\n........\n  r17643 | kohsuke | 2009-04-30 17:03:22 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  rebranched from Hudson's configure.properties\n........\n  r17644 | kohsuke | 2009-04-30 17:05:31 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  removed unnecessary translations\n........\n  r17656 | kohsuke | 2009-05-01 11:27:36 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Less hack for improved type safety. Asking people to write more code is not necessarily bad as long as what they need to do is obvious to them.\n........\n  r17657 | kohsuke | 2009-05-01 12:07:20 -0700 (Fri, 01 May 2009) | 5 lines\n  \n  The toolautoinst part of the change that corresponds to rev.17640.\n  \n  ToolInstallers are now hooked under ToolInstallation through InstallSourceProperty as a ToolProperty.\n  \n  This allows the relevant UIs to be shown in one place. Still pending Jesse's feedback. Making it a single commit to simplify a revert if necessary\n........\n  r17663 | kohsuke | 2009-05-01 13:23:51 -0700 (Fri, 01 May 2009) | 1 line\n  \n  doc improvement\n........\n  r17664 | kohsuke | 2009-05-01 13:24:10 -0700 (Fri, 01 May 2009) | 1 line\n  \n  needs this to allow Stapler to databind hetero-list automatically\n........\n  r17665 | jglick | 2009-05-01 13:31:27 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Warnings.\n........\n  r17667 | kohsuke | 2009-05-01 14:20:53 -0700 (Fri, 01 May 2009) | 1 line\n  \n  added a method to do chmod\n........\n  r17668 | kohsuke | 2009-05-01 14:30:35 -0700 (Fri, 01 May 2009) | 1 line\n  \n  prefer JDK6 version to avoid unnecessary JNA loading\n........\n  r17669 | kohsuke | 2009-05-01 14:33:09 -0700 (Fri, 01 May 2009) | 1 line\n  \n  no, I must have confused this.\n........\n  r17670 | kohsuke | 2009-05-01 15:57:11 -0700 (Fri, 01 May 2009) | 2 lines\n  \n  - Automated JDK installer and its test.\n  - Minor update to the signature of ToolInstaller for supplying the expected default location.\n........\n  r17730 | kohsuke | 2009-05-04 11:27:34 -0700 (Mon, 04 May 2009) | 1 line\n  \n  avoid NPE as reported in HUDSON-3608\n........\n  r17753 | jglick | 2009-05-04 19:34:08 -0700 (Mon, 04 May 2009) | 2 lines\n  \n  Moved toolautoinst functionality into core.\n........\n  r17755 | jglick | 2009-05-04 20:28:34 -0700 (Mon, 04 May 2009) | 8 lines\n  \n  Added TaskListener parameter and IOException and InterruptedException to several methods:\n  Run.getEnvironment\n  NodeSpecific.forNode\n  ToolLocationTranslator.getToolHome\n  ToolLocationNodeProperty.getToolHome\n  ToolInstallation.translateFor\n  ProcessCache.Factory.getMavenInstallation\n  ProcessCache.Factory.getJava\n........\n  r17756 | jglick | 2009-05-04 20:36:56 -0700 (Mon, 04 May 2009) | 1 line\n  \n  expectedLocation was never strictly necessary, and will soon no longer be used even by JDKInstaller.\n........\n  r17757 | jglick | 2009-05-04 20:40:41 -0700 (Mon, 04 May 2009) | 1 line\n  \n  Not sure yet what @since should be.\n........\n  r17758 | jglick | 2009-05-04 20:41:51 -0700 (Mon, 04 May 2009) | 1 line\n  \n  getDefaultInstallers method added. Not yet in use.\n........\n  r17763 | kohsuke | 2009-05-05 10:50:36 -0700 (Tue, 05 May 2009) | 1 line\n  \n  deprecated redundant getJavaHome method\n........\n  r17764 | kohsuke | 2009-05-05 12:10:45 -0700 (Tue, 05 May 2009) | 1 line\n  \n  added general-purpose property defaulting mechanism, and added default tool installer for JDK\n........\n  r17765 | jglick | 2009-05-05 12:35:56 -0700 (Tue, 05 May 2009) | 1 line\n  \n  capitalize(\"\") -> \"\"\n........\n  r17766 | jglick | 2009-05-05 12:49:52 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Missing @since.\n........\n  r17767 | jglick | 2009-05-05 13:01:41 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Unchecked warning.\n........\n  r17768 | jglick | 2009-05-05 13:19:49 -0700 (Tue, 05 May 2009) | 2 lines\n  \n  Two unsuccessful attempts at form validation.\n........\n  r17770 | jglick | 2009-05-05 13:48:37 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Better class names.\n........\n  r17771 | kohsuke | 2009-05-05 14:12:21 -0700 (Tue, 05 May 2009) | 5 lines\n  \n  brought the form validation check back. The trick is to use the 'value' parameter.\n  \n  In the end we'd expect this check to go away anyway, as we change input field to drop-down list, but in the mean time, this is why it didn't work.\n  \n  Maybe we probably need more static code checkers? Like FindBugs rules?\n........\n  r17901 | kohsuke | 2009-05-09 19:15:40 -0700 (Sat, 09 May 2009) | 1 line\n  \n  having two toolHome is odd.\n........\n  r17906 | kohsuke | 2009-05-10 11:09:13 -0700 (Sun, 10 May 2009) | 1 line\n  \n  adding the generalization of UpdateCenter, but for compatibility reasons, we are leaving UpdateCenter as-is.\n........\n  r17911 | kohsuke | 2009-05-10 17:02:53 -0700 (Sun, 10 May 2009) | 1 line\n  \n  integrated json-lib with a bit of bug fix\n........\n  r17912 | kohsuke | 2009-05-10 17:13:05 -0700 (Sun, 10 May 2009) | 1 line\n  \n  JDK list is now fetched from hudson.dev.java.net\n........\n  r17958 | kohsuke | 2009-05-11 13:44:25 -0700 (Mon, 11 May 2009) | 48 lines\n  \n  Handle AbortException better to avoid error like this:\n  \n  [INFO] ------------------------------------------------------------------------\n  [ERROR] BUILD ERROR\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Failed to delete directory: C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target. Reason: Unable to delete file C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target\\remoting-1.304-SNAPSHOT.jar\n  \n  [INFO] ------------------------------------------------------------------------\n  [INFO] For more information, run Maven with the -e switch\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time: 31 seconds\n  [INFO] Finished at: Sun May 10 18:15:33 PDT 2009\n  [INFO] Final Memory: 25M/48M\n  [INFO] ------------------------------------------------------------------------\n  Recording fingerprints\n  Archiving artifacts\n  Recording test results\n  ERROR: Failed to archive JUnit reports\n  hudson.util.IOException2: remote file operation failed\n  \tat hudson.FilePath.act(FilePath.java:596)\n  \tat hudson.tasks.junit.JUnitResultArchiver.perform(JUnitResultArchiver.java:82)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:372)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:360)\n  \tat hudson.model.Build$RunnerImpl.post2(Build.java:183)\n  \tat hudson.model.AbstractBuild$AbstractRunner.post(AbstractBuild.java:345)\n  \tat hudson.model.Run.run(Run.java:943)\n  \tat hudson.model.Build.run(Build.java:112)\n  \tat hudson.model.ResourceController.execute(ResourceController.java:93)\n  \tat hudson.model.Executor.run(Executor.java:119)\n  Caused by: hudson.AbortException: Test reports were found but none of them are new. Did tests run? \n  For example, \\files\\hudson\\workspace\\hudson\\hudson\\main\\core\\target\\surefire-reports\\TEST-hudson.BulkChangeTest.xml is 2 days 23 hr old\n  \n  \tat hudson.tasks.junit.TestResult.parse(TestResult.java:134)\n  \tat hudson.tasks.junit.TestResult.<init>(TestResult.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:82)\n  \tat hudson.FilePath$FileCallableWrapper.call(FilePath.java:1583)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:92)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:46)\n  \tat hudson.remoting.Request$2.run(Request.java:236)\n  \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n  \tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n  \tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n  \tat java.lang.Thread.run(Thread.java:619)\n........\n  r17961 | kohsuke | 2009-05-11 15:16:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adding Windows JDK silent installation\n........\n  r17962 | kohsuke | 2009-05-11 16:08:13 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing JDK offline installatino for Windows\n........\n  r17970 | kohsuke | 2009-05-11 19:37:59 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing a problem that prevents the usage of this tag in <repeatable> block, which reinserts the same fragment over and over. So statically assigning IDs won't work\n........\n  r17971 | kohsuke | 2009-05-11 22:17:09 -0700 (Mon, 11 May 2009) | 1 line\n  \n  continuing to remove static ID generation, which breaks the tag when used inside <repetable> tag.\n........\n  r17972 | kohsuke | 2009-05-11 22:19:11 -0700 (Mon, 11 May 2009) | 1 line\n  \n  I don't know when this started, but even in the hudson-dev:run mode, the versionis no longer '?', so we need a different way to force reload\n........\n  r17973 | kohsuke | 2009-05-11 22:26:34 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adjusted the text a bit since multiple \"add\" and \"delete\"s were rather confusing\n........\n  r17974 | kohsuke | 2009-05-11 22:31:58 -0700 (Mon, 11 May 2009) | 1 line\n  \n  added help screen\n........\n  r17975 | kohsuke | 2009-05-11 22:41:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  form validation now works against the checkbox, too\n........\n  r17976 | kohsuke | 2009-05-11 22:43:00 -0700 (Mon, 11 May 2009) | 1 line\n  \n  with auto installation, we expect users to specify a directory that doesn't exist yet, so don't report it as an error\n........\n  r17977 | kohsuke | 2009-05-11 22:43:24 -0700 (Mon, 11 May 2009) | 1 line\n  \n  improving the text\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17985 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "buggy_code": "EnvVars envVars = build.getEnvironment();",
        "fixed_code": "EnvVars envVars = build.getEnvironment(listener);",
        "patch": "@@ -75,7 +75,7 @@ public boolean perform(AbstractBuild<?,?> build, Launcher launcher, TaskListener\n \n             int r;\n             try {\n-                EnvVars envVars = build.getEnvironment();\n+                EnvVars envVars = build.getEnvironment(listener);\n                 // on Windows environment variables are converted to all upper case,\n                 // but no such conversions are done on Unix, so to make this cross-platform,\n                 // convert variables to all upper cases."
    },
    {
        "commit_id": "2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "commit_message": "Merged revisions 17324-17325,17428,17430,17473-17475,17481-17482,17555-17563,17571,17593-17595,17619-17620,17637-17644,17656-17657,17663-17665,17667-17670,17730,17753,17755-17758,17763-17768,17770-17771,17901,17906,17911-17912,17958,17961-17962,17970-17977 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tool-autoinstallation\n\n........\n  r17324 | jglick | 2009-04-20 18:24:32 -0700 (Mon, 20 Apr 2009) | 2 lines\n  \n  Defensive cloning and Javadoc corrections.\n  (Though it seems no one is using the default impls of these methods yet anyway.)\n........\n  r17325 | jglick | 2009-04-20 18:29:06 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  Deprecation of delegate method is intentional.\n........\n  r17428 | jglick | 2009-04-23 08:07:14 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Noting ToolLocationTranslator more prominently.\n........\n  r17430 | jglick | 2009-04-23 09:16:40 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unused imports.\n........\n  r17473 | jglick | 2009-04-23 19:21:11 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Allow Plugin.configure to see the StaplerRequest, needed for some kinds of calls.\n........\n  r17474 | jglick | 2009-04-23 19:25:54 -0700 (Thu, 23 Apr 2009) | 3 lines\n  \n  Initial sketch of plugin to manage tool installations across slaves.\n  (Should really be under ../plugins/ but that was not branched, so putting here for the moment.)\n........\n  r17475 | jglick | 2009-04-23 20:29:36 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Typo in Javadoc.\n........\n  r17481 | jglick | 2009-04-23 22:46:26 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unzip of an unbuffered stream is painfully slow.\n........\n  r17482 | jglick | 2009-04-23 22:48:01 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  ZIP-based tool installer now functional.\n........\n  r17555 | jglick | 2009-04-27 17:50:38 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Build against newest trunk.\n........\n  r17556 | jglick | 2009-04-27 18:38:28 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Adding help.\n........\n  r17557 | jglick | 2009-04-27 18:57:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Moving toolName & label config GUI into generic files.\n........\n  r17558 | jglick | 2009-04-27 19:37:30 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Typo.\n........\n  r17559 | jglick | 2009-04-27 20:07:47 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Second tool installer type based on a freeform command.\n........\n  r17560 | jglick | 2009-04-27 20:24:36 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  installIfNecessaryFrom will now just return false in case the target dir exists but the URL cannot be opened.\n........\n  r17561 | jglick | 2009-04-27 20:25:22 -0700 (Mon, 27 Apr 2009) | 2 lines\n  \n  chmod only if something was actually installed.\n  Use a+x, not o+x.\n........\n  r17562 | jglick | 2009-04-27 20:26:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Comment only.\n........\n  r17563 | jglick | 2009-04-27 20:41:12 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  I18N.\n........\n  r17571 | jglick | 2009-04-28 08:15:31 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Wiki link.\n........\n  r17593 | jglick | 2009-04-28 15:38:33 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Turn off echo mode, it's just noise.\n........\n  r17594 | jglick | 2009-04-28 15:39:29 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Synchronizing access to installers for a given node/tool combo.\n  Sending log messages to Hudson log in real time.\n........\n  r17595 | jglick | 2009-04-28 15:46:29 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Copyrights.\n........\n  r17619 | jglick | 2009-04-29 06:25:23 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Improved Javadoc.\n........\n  r17620 | jglick | 2009-04-29 06:51:11 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Demonstraing how to use DLJ to mechanically install official JDK releases on supported operating systems.\n........\n  r17637 | kohsuke | 2009-04-30 16:15:24 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  fixed what appears to be a C&P mistake\n........\n  r17638 | kohsuke | 2009-04-30 16:16:21 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  show YUI logger if YUI debugging mode is set.\n........\n  r17639 | kohsuke | 2009-04-30 16:52:28 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Fixed a UI script problem when <hetero-list> nests inside <repeatable>.\n  \n  The cause of the problem was that the behavior for inner <hetero-list> kicks in first, altering HTML (by removing \"prototypes\"), before behavior for outer <repetable> kicks in and removes the master copy from DOM tree.\n  \n  So <repeatable> ends up computing a master copy after some elements are removed, and hence when we try to reinsert them later by clicking \"Add\", it'll get incorrect copy, and re-execution of the <hetero-list> behavior bombs out.\n  \n  I fixed this by skipping those HTML-altering behaviors if they show up in the part of DOM tree that's supposed to be snapshotted and removed.\n........\n  r17640 | kohsuke | 2009-04-30 16:57:58 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Added ToolProperty to ToolInstallation (which acts like NodeProperty to Node --- basically decorates the base object with additional properties.)\n  \n  The original motivation is to implement ToolInstaller this way, if Jesse is OK. But decorating tools seem to have some other interesting use, such as a plugin for configuring $M2_HOME/conf/settings.xml, or a plugin to insert unlimited cryptography extension to JDK, or a plugin to add a few more jars into $ANT_HOME/lib.\n  \n  For this to work, ToolInstallations that want properties needs to be modified to use a new constructor. For a starter, I modified the JDK class to do this.\n  \n  I also took the opportunity to modernize JDK/config.jelly.\n........\n  r17641 | kohsuke | 2009-04-30 17:02:04 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  this appears to be a left-over from early days when we didn't have a means to do form validation\n........\n  r17642 | kohsuke | 2009-04-30 17:02:35 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  we don't need no.such.JDK but we need name. rebranching\n........\n  r17643 | kohsuke | 2009-04-30 17:03:22 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  rebranched from Hudson's configure.properties\n........\n  r17644 | kohsuke | 2009-04-30 17:05:31 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  removed unnecessary translations\n........\n  r17656 | kohsuke | 2009-05-01 11:27:36 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Less hack for improved type safety. Asking people to write more code is not necessarily bad as long as what they need to do is obvious to them.\n........\n  r17657 | kohsuke | 2009-05-01 12:07:20 -0700 (Fri, 01 May 2009) | 5 lines\n  \n  The toolautoinst part of the change that corresponds to rev.17640.\n  \n  ToolInstallers are now hooked under ToolInstallation through InstallSourceProperty as a ToolProperty.\n  \n  This allows the relevant UIs to be shown in one place. Still pending Jesse's feedback. Making it a single commit to simplify a revert if necessary\n........\n  r17663 | kohsuke | 2009-05-01 13:23:51 -0700 (Fri, 01 May 2009) | 1 line\n  \n  doc improvement\n........\n  r17664 | kohsuke | 2009-05-01 13:24:10 -0700 (Fri, 01 May 2009) | 1 line\n  \n  needs this to allow Stapler to databind hetero-list automatically\n........\n  r17665 | jglick | 2009-05-01 13:31:27 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Warnings.\n........\n  r17667 | kohsuke | 2009-05-01 14:20:53 -0700 (Fri, 01 May 2009) | 1 line\n  \n  added a method to do chmod\n........\n  r17668 | kohsuke | 2009-05-01 14:30:35 -0700 (Fri, 01 May 2009) | 1 line\n  \n  prefer JDK6 version to avoid unnecessary JNA loading\n........\n  r17669 | kohsuke | 2009-05-01 14:33:09 -0700 (Fri, 01 May 2009) | 1 line\n  \n  no, I must have confused this.\n........\n  r17670 | kohsuke | 2009-05-01 15:57:11 -0700 (Fri, 01 May 2009) | 2 lines\n  \n  - Automated JDK installer and its test.\n  - Minor update to the signature of ToolInstaller for supplying the expected default location.\n........\n  r17730 | kohsuke | 2009-05-04 11:27:34 -0700 (Mon, 04 May 2009) | 1 line\n  \n  avoid NPE as reported in HUDSON-3608\n........\n  r17753 | jglick | 2009-05-04 19:34:08 -0700 (Mon, 04 May 2009) | 2 lines\n  \n  Moved toolautoinst functionality into core.\n........\n  r17755 | jglick | 2009-05-04 20:28:34 -0700 (Mon, 04 May 2009) | 8 lines\n  \n  Added TaskListener parameter and IOException and InterruptedException to several methods:\n  Run.getEnvironment\n  NodeSpecific.forNode\n  ToolLocationTranslator.getToolHome\n  ToolLocationNodeProperty.getToolHome\n  ToolInstallation.translateFor\n  ProcessCache.Factory.getMavenInstallation\n  ProcessCache.Factory.getJava\n........\n  r17756 | jglick | 2009-05-04 20:36:56 -0700 (Mon, 04 May 2009) | 1 line\n  \n  expectedLocation was never strictly necessary, and will soon no longer be used even by JDKInstaller.\n........\n  r17757 | jglick | 2009-05-04 20:40:41 -0700 (Mon, 04 May 2009) | 1 line\n  \n  Not sure yet what @since should be.\n........\n  r17758 | jglick | 2009-05-04 20:41:51 -0700 (Mon, 04 May 2009) | 1 line\n  \n  getDefaultInstallers method added. Not yet in use.\n........\n  r17763 | kohsuke | 2009-05-05 10:50:36 -0700 (Tue, 05 May 2009) | 1 line\n  \n  deprecated redundant getJavaHome method\n........\n  r17764 | kohsuke | 2009-05-05 12:10:45 -0700 (Tue, 05 May 2009) | 1 line\n  \n  added general-purpose property defaulting mechanism, and added default tool installer for JDK\n........\n  r17765 | jglick | 2009-05-05 12:35:56 -0700 (Tue, 05 May 2009) | 1 line\n  \n  capitalize(\"\") -> \"\"\n........\n  r17766 | jglick | 2009-05-05 12:49:52 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Missing @since.\n........\n  r17767 | jglick | 2009-05-05 13:01:41 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Unchecked warning.\n........\n  r17768 | jglick | 2009-05-05 13:19:49 -0700 (Tue, 05 May 2009) | 2 lines\n  \n  Two unsuccessful attempts at form validation.\n........\n  r17770 | jglick | 2009-05-05 13:48:37 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Better class names.\n........\n  r17771 | kohsuke | 2009-05-05 14:12:21 -0700 (Tue, 05 May 2009) | 5 lines\n  \n  brought the form validation check back. The trick is to use the 'value' parameter.\n  \n  In the end we'd expect this check to go away anyway, as we change input field to drop-down list, but in the mean time, this is why it didn't work.\n  \n  Maybe we probably need more static code checkers? Like FindBugs rules?\n........\n  r17901 | kohsuke | 2009-05-09 19:15:40 -0700 (Sat, 09 May 2009) | 1 line\n  \n  having two toolHome is odd.\n........\n  r17906 | kohsuke | 2009-05-10 11:09:13 -0700 (Sun, 10 May 2009) | 1 line\n  \n  adding the generalization of UpdateCenter, but for compatibility reasons, we are leaving UpdateCenter as-is.\n........\n  r17911 | kohsuke | 2009-05-10 17:02:53 -0700 (Sun, 10 May 2009) | 1 line\n  \n  integrated json-lib with a bit of bug fix\n........\n  r17912 | kohsuke | 2009-05-10 17:13:05 -0700 (Sun, 10 May 2009) | 1 line\n  \n  JDK list is now fetched from hudson.dev.java.net\n........\n  r17958 | kohsuke | 2009-05-11 13:44:25 -0700 (Mon, 11 May 2009) | 48 lines\n  \n  Handle AbortException better to avoid error like this:\n  \n  [INFO] ------------------------------------------------------------------------\n  [ERROR] BUILD ERROR\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Failed to delete directory: C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target. Reason: Unable to delete file C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target\\remoting-1.304-SNAPSHOT.jar\n  \n  [INFO] ------------------------------------------------------------------------\n  [INFO] For more information, run Maven with the -e switch\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time: 31 seconds\n  [INFO] Finished at: Sun May 10 18:15:33 PDT 2009\n  [INFO] Final Memory: 25M/48M\n  [INFO] ------------------------------------------------------------------------\n  Recording fingerprints\n  Archiving artifacts\n  Recording test results\n  ERROR: Failed to archive JUnit reports\n  hudson.util.IOException2: remote file operation failed\n  \tat hudson.FilePath.act(FilePath.java:596)\n  \tat hudson.tasks.junit.JUnitResultArchiver.perform(JUnitResultArchiver.java:82)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:372)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:360)\n  \tat hudson.model.Build$RunnerImpl.post2(Build.java:183)\n  \tat hudson.model.AbstractBuild$AbstractRunner.post(AbstractBuild.java:345)\n  \tat hudson.model.Run.run(Run.java:943)\n  \tat hudson.model.Build.run(Build.java:112)\n  \tat hudson.model.ResourceController.execute(ResourceController.java:93)\n  \tat hudson.model.Executor.run(Executor.java:119)\n  Caused by: hudson.AbortException: Test reports were found but none of them are new. Did tests run? \n  For example, \\files\\hudson\\workspace\\hudson\\hudson\\main\\core\\target\\surefire-reports\\TEST-hudson.BulkChangeTest.xml is 2 days 23 hr old\n  \n  \tat hudson.tasks.junit.TestResult.parse(TestResult.java:134)\n  \tat hudson.tasks.junit.TestResult.<init>(TestResult.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:82)\n  \tat hudson.FilePath$FileCallableWrapper.call(FilePath.java:1583)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:92)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:46)\n  \tat hudson.remoting.Request$2.run(Request.java:236)\n  \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n  \tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n  \tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n  \tat java.lang.Thread.run(Thread.java:619)\n........\n  r17961 | kohsuke | 2009-05-11 15:16:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adding Windows JDK silent installation\n........\n  r17962 | kohsuke | 2009-05-11 16:08:13 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing JDK offline installatino for Windows\n........\n  r17970 | kohsuke | 2009-05-11 19:37:59 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing a problem that prevents the usage of this tag in <repeatable> block, which reinserts the same fragment over and over. So statically assigning IDs won't work\n........\n  r17971 | kohsuke | 2009-05-11 22:17:09 -0700 (Mon, 11 May 2009) | 1 line\n  \n  continuing to remove static ID generation, which breaks the tag when used inside <repetable> tag.\n........\n  r17972 | kohsuke | 2009-05-11 22:19:11 -0700 (Mon, 11 May 2009) | 1 line\n  \n  I don't know when this started, but even in the hudson-dev:run mode, the versionis no longer '?', so we need a different way to force reload\n........\n  r17973 | kohsuke | 2009-05-11 22:26:34 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adjusted the text a bit since multiple \"add\" and \"delete\"s were rather confusing\n........\n  r17974 | kohsuke | 2009-05-11 22:31:58 -0700 (Mon, 11 May 2009) | 1 line\n  \n  added help screen\n........\n  r17975 | kohsuke | 2009-05-11 22:41:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  form validation now works against the checkbox, too\n........\n  r17976 | kohsuke | 2009-05-11 22:43:00 -0700 (Mon, 11 May 2009) | 1 line\n  \n  with auto installation, we expect users to specify a directory that doesn't exist yet, so don't report it as an error\n........\n  r17977 | kohsuke | 2009-05-11 22:43:24 -0700 (Mon, 11 May 2009) | 1 line\n  \n  improving the text\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17985 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "buggy_code": "EnvVars envVars = getEnvironment(); // buildEnvironments should be set up first",
        "fixed_code": "EnvVars envVars = getEnvironment(listener); // buildEnvironments should be set up first",
        "patch": "@@ -473,7 +473,7 @@ protected Result doRun(BuildListener listener) throws Exception {\n                 buildEnvironments.add(e);\n             }\n \n-            EnvVars envVars = getEnvironment(); // buildEnvironments should be set up first\n+            EnvVars envVars = getEnvironment(listener); // buildEnvironments should be set up first\n             \n             ProcessCache.MavenProcess process = mavenProcessCache.get(launcher.getChannel(), listener,\n                 new MavenProcessFactory(getParent().getParent(),launcher,envVars,null));"
    },
    {
        "commit_id": "2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "commit_message": "Merged revisions 17324-17325,17428,17430,17473-17475,17481-17482,17555-17563,17571,17593-17595,17619-17620,17637-17644,17656-17657,17663-17665,17667-17670,17730,17753,17755-17758,17763-17768,17770-17771,17901,17906,17911-17912,17958,17961-17962,17970-17977 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tool-autoinstallation\n\n........\n  r17324 | jglick | 2009-04-20 18:24:32 -0700 (Mon, 20 Apr 2009) | 2 lines\n  \n  Defensive cloning and Javadoc corrections.\n  (Though it seems no one is using the default impls of these methods yet anyway.)\n........\n  r17325 | jglick | 2009-04-20 18:29:06 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  Deprecation of delegate method is intentional.\n........\n  r17428 | jglick | 2009-04-23 08:07:14 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Noting ToolLocationTranslator more prominently.\n........\n  r17430 | jglick | 2009-04-23 09:16:40 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unused imports.\n........\n  r17473 | jglick | 2009-04-23 19:21:11 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Allow Plugin.configure to see the StaplerRequest, needed for some kinds of calls.\n........\n  r17474 | jglick | 2009-04-23 19:25:54 -0700 (Thu, 23 Apr 2009) | 3 lines\n  \n  Initial sketch of plugin to manage tool installations across slaves.\n  (Should really be under ../plugins/ but that was not branched, so putting here for the moment.)\n........\n  r17475 | jglick | 2009-04-23 20:29:36 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Typo in Javadoc.\n........\n  r17481 | jglick | 2009-04-23 22:46:26 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unzip of an unbuffered stream is painfully slow.\n........\n  r17482 | jglick | 2009-04-23 22:48:01 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  ZIP-based tool installer now functional.\n........\n  r17555 | jglick | 2009-04-27 17:50:38 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Build against newest trunk.\n........\n  r17556 | jglick | 2009-04-27 18:38:28 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Adding help.\n........\n  r17557 | jglick | 2009-04-27 18:57:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Moving toolName & label config GUI into generic files.\n........\n  r17558 | jglick | 2009-04-27 19:37:30 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Typo.\n........\n  r17559 | jglick | 2009-04-27 20:07:47 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Second tool installer type based on a freeform command.\n........\n  r17560 | jglick | 2009-04-27 20:24:36 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  installIfNecessaryFrom will now just return false in case the target dir exists but the URL cannot be opened.\n........\n  r17561 | jglick | 2009-04-27 20:25:22 -0700 (Mon, 27 Apr 2009) | 2 lines\n  \n  chmod only if something was actually installed.\n  Use a+x, not o+x.\n........\n  r17562 | jglick | 2009-04-27 20:26:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Comment only.\n........\n  r17563 | jglick | 2009-04-27 20:41:12 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  I18N.\n........\n  r17571 | jglick | 2009-04-28 08:15:31 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Wiki link.\n........\n  r17593 | jglick | 2009-04-28 15:38:33 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Turn off echo mode, it's just noise.\n........\n  r17594 | jglick | 2009-04-28 15:39:29 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Synchronizing access to installers for a given node/tool combo.\n  Sending log messages to Hudson log in real time.\n........\n  r17595 | jglick | 2009-04-28 15:46:29 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Copyrights.\n........\n  r17619 | jglick | 2009-04-29 06:25:23 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Improved Javadoc.\n........\n  r17620 | jglick | 2009-04-29 06:51:11 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Demonstraing how to use DLJ to mechanically install official JDK releases on supported operating systems.\n........\n  r17637 | kohsuke | 2009-04-30 16:15:24 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  fixed what appears to be a C&P mistake\n........\n  r17638 | kohsuke | 2009-04-30 16:16:21 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  show YUI logger if YUI debugging mode is set.\n........\n  r17639 | kohsuke | 2009-04-30 16:52:28 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Fixed a UI script problem when <hetero-list> nests inside <repeatable>.\n  \n  The cause of the problem was that the behavior for inner <hetero-list> kicks in first, altering HTML (by removing \"prototypes\"), before behavior for outer <repetable> kicks in and removes the master copy from DOM tree.\n  \n  So <repeatable> ends up computing a master copy after some elements are removed, and hence when we try to reinsert them later by clicking \"Add\", it'll get incorrect copy, and re-execution of the <hetero-list> behavior bombs out.\n  \n  I fixed this by skipping those HTML-altering behaviors if they show up in the part of DOM tree that's supposed to be snapshotted and removed.\n........\n  r17640 | kohsuke | 2009-04-30 16:57:58 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Added ToolProperty to ToolInstallation (which acts like NodeProperty to Node --- basically decorates the base object with additional properties.)\n  \n  The original motivation is to implement ToolInstaller this way, if Jesse is OK. But decorating tools seem to have some other interesting use, such as a plugin for configuring $M2_HOME/conf/settings.xml, or a plugin to insert unlimited cryptography extension to JDK, or a plugin to add a few more jars into $ANT_HOME/lib.\n  \n  For this to work, ToolInstallations that want properties needs to be modified to use a new constructor. For a starter, I modified the JDK class to do this.\n  \n  I also took the opportunity to modernize JDK/config.jelly.\n........\n  r17641 | kohsuke | 2009-04-30 17:02:04 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  this appears to be a left-over from early days when we didn't have a means to do form validation\n........\n  r17642 | kohsuke | 2009-04-30 17:02:35 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  we don't need no.such.JDK but we need name. rebranching\n........\n  r17643 | kohsuke | 2009-04-30 17:03:22 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  rebranched from Hudson's configure.properties\n........\n  r17644 | kohsuke | 2009-04-30 17:05:31 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  removed unnecessary translations\n........\n  r17656 | kohsuke | 2009-05-01 11:27:36 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Less hack for improved type safety. Asking people to write more code is not necessarily bad as long as what they need to do is obvious to them.\n........\n  r17657 | kohsuke | 2009-05-01 12:07:20 -0700 (Fri, 01 May 2009) | 5 lines\n  \n  The toolautoinst part of the change that corresponds to rev.17640.\n  \n  ToolInstallers are now hooked under ToolInstallation through InstallSourceProperty as a ToolProperty.\n  \n  This allows the relevant UIs to be shown in one place. Still pending Jesse's feedback. Making it a single commit to simplify a revert if necessary\n........\n  r17663 | kohsuke | 2009-05-01 13:23:51 -0700 (Fri, 01 May 2009) | 1 line\n  \n  doc improvement\n........\n  r17664 | kohsuke | 2009-05-01 13:24:10 -0700 (Fri, 01 May 2009) | 1 line\n  \n  needs this to allow Stapler to databind hetero-list automatically\n........\n  r17665 | jglick | 2009-05-01 13:31:27 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Warnings.\n........\n  r17667 | kohsuke | 2009-05-01 14:20:53 -0700 (Fri, 01 May 2009) | 1 line\n  \n  added a method to do chmod\n........\n  r17668 | kohsuke | 2009-05-01 14:30:35 -0700 (Fri, 01 May 2009) | 1 line\n  \n  prefer JDK6 version to avoid unnecessary JNA loading\n........\n  r17669 | kohsuke | 2009-05-01 14:33:09 -0700 (Fri, 01 May 2009) | 1 line\n  \n  no, I must have confused this.\n........\n  r17670 | kohsuke | 2009-05-01 15:57:11 -0700 (Fri, 01 May 2009) | 2 lines\n  \n  - Automated JDK installer and its test.\n  - Minor update to the signature of ToolInstaller for supplying the expected default location.\n........\n  r17730 | kohsuke | 2009-05-04 11:27:34 -0700 (Mon, 04 May 2009) | 1 line\n  \n  avoid NPE as reported in HUDSON-3608\n........\n  r17753 | jglick | 2009-05-04 19:34:08 -0700 (Mon, 04 May 2009) | 2 lines\n  \n  Moved toolautoinst functionality into core.\n........\n  r17755 | jglick | 2009-05-04 20:28:34 -0700 (Mon, 04 May 2009) | 8 lines\n  \n  Added TaskListener parameter and IOException and InterruptedException to several methods:\n  Run.getEnvironment\n  NodeSpecific.forNode\n  ToolLocationTranslator.getToolHome\n  ToolLocationNodeProperty.getToolHome\n  ToolInstallation.translateFor\n  ProcessCache.Factory.getMavenInstallation\n  ProcessCache.Factory.getJava\n........\n  r17756 | jglick | 2009-05-04 20:36:56 -0700 (Mon, 04 May 2009) | 1 line\n  \n  expectedLocation was never strictly necessary, and will soon no longer be used even by JDKInstaller.\n........\n  r17757 | jglick | 2009-05-04 20:40:41 -0700 (Mon, 04 May 2009) | 1 line\n  \n  Not sure yet what @since should be.\n........\n  r17758 | jglick | 2009-05-04 20:41:51 -0700 (Mon, 04 May 2009) | 1 line\n  \n  getDefaultInstallers method added. Not yet in use.\n........\n  r17763 | kohsuke | 2009-05-05 10:50:36 -0700 (Tue, 05 May 2009) | 1 line\n  \n  deprecated redundant getJavaHome method\n........\n  r17764 | kohsuke | 2009-05-05 12:10:45 -0700 (Tue, 05 May 2009) | 1 line\n  \n  added general-purpose property defaulting mechanism, and added default tool installer for JDK\n........\n  r17765 | jglick | 2009-05-05 12:35:56 -0700 (Tue, 05 May 2009) | 1 line\n  \n  capitalize(\"\") -> \"\"\n........\n  r17766 | jglick | 2009-05-05 12:49:52 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Missing @since.\n........\n  r17767 | jglick | 2009-05-05 13:01:41 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Unchecked warning.\n........\n  r17768 | jglick | 2009-05-05 13:19:49 -0700 (Tue, 05 May 2009) | 2 lines\n  \n  Two unsuccessful attempts at form validation.\n........\n  r17770 | jglick | 2009-05-05 13:48:37 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Better class names.\n........\n  r17771 | kohsuke | 2009-05-05 14:12:21 -0700 (Tue, 05 May 2009) | 5 lines\n  \n  brought the form validation check back. The trick is to use the 'value' parameter.\n  \n  In the end we'd expect this check to go away anyway, as we change input field to drop-down list, but in the mean time, this is why it didn't work.\n  \n  Maybe we probably need more static code checkers? Like FindBugs rules?\n........\n  r17901 | kohsuke | 2009-05-09 19:15:40 -0700 (Sat, 09 May 2009) | 1 line\n  \n  having two toolHome is odd.\n........\n  r17906 | kohsuke | 2009-05-10 11:09:13 -0700 (Sun, 10 May 2009) | 1 line\n  \n  adding the generalization of UpdateCenter, but for compatibility reasons, we are leaving UpdateCenter as-is.\n........\n  r17911 | kohsuke | 2009-05-10 17:02:53 -0700 (Sun, 10 May 2009) | 1 line\n  \n  integrated json-lib with a bit of bug fix\n........\n  r17912 | kohsuke | 2009-05-10 17:13:05 -0700 (Sun, 10 May 2009) | 1 line\n  \n  JDK list is now fetched from hudson.dev.java.net\n........\n  r17958 | kohsuke | 2009-05-11 13:44:25 -0700 (Mon, 11 May 2009) | 48 lines\n  \n  Handle AbortException better to avoid error like this:\n  \n  [INFO] ------------------------------------------------------------------------\n  [ERROR] BUILD ERROR\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Failed to delete directory: C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target. Reason: Unable to delete file C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target\\remoting-1.304-SNAPSHOT.jar\n  \n  [INFO] ------------------------------------------------------------------------\n  [INFO] For more information, run Maven with the -e switch\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time: 31 seconds\n  [INFO] Finished at: Sun May 10 18:15:33 PDT 2009\n  [INFO] Final Memory: 25M/48M\n  [INFO] ------------------------------------------------------------------------\n  Recording fingerprints\n  Archiving artifacts\n  Recording test results\n  ERROR: Failed to archive JUnit reports\n  hudson.util.IOException2: remote file operation failed\n  \tat hudson.FilePath.act(FilePath.java:596)\n  \tat hudson.tasks.junit.JUnitResultArchiver.perform(JUnitResultArchiver.java:82)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:372)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:360)\n  \tat hudson.model.Build$RunnerImpl.post2(Build.java:183)\n  \tat hudson.model.AbstractBuild$AbstractRunner.post(AbstractBuild.java:345)\n  \tat hudson.model.Run.run(Run.java:943)\n  \tat hudson.model.Build.run(Build.java:112)\n  \tat hudson.model.ResourceController.execute(ResourceController.java:93)\n  \tat hudson.model.Executor.run(Executor.java:119)\n  Caused by: hudson.AbortException: Test reports were found but none of them are new. Did tests run? \n  For example, \\files\\hudson\\workspace\\hudson\\hudson\\main\\core\\target\\surefire-reports\\TEST-hudson.BulkChangeTest.xml is 2 days 23 hr old\n  \n  \tat hudson.tasks.junit.TestResult.parse(TestResult.java:134)\n  \tat hudson.tasks.junit.TestResult.<init>(TestResult.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:82)\n  \tat hudson.FilePath$FileCallableWrapper.call(FilePath.java:1583)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:92)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:46)\n  \tat hudson.remoting.Request$2.run(Request.java:236)\n  \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n  \tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n  \tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n  \tat java.lang.Thread.run(Thread.java:619)\n........\n  r17961 | kohsuke | 2009-05-11 15:16:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adding Windows JDK silent installation\n........\n  r17962 | kohsuke | 2009-05-11 16:08:13 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing JDK offline installatino for Windows\n........\n  r17970 | kohsuke | 2009-05-11 19:37:59 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing a problem that prevents the usage of this tag in <repeatable> block, which reinserts the same fragment over and over. So statically assigning IDs won't work\n........\n  r17971 | kohsuke | 2009-05-11 22:17:09 -0700 (Mon, 11 May 2009) | 1 line\n  \n  continuing to remove static ID generation, which breaks the tag when used inside <repetable> tag.\n........\n  r17972 | kohsuke | 2009-05-11 22:19:11 -0700 (Mon, 11 May 2009) | 1 line\n  \n  I don't know when this started, but even in the hudson-dev:run mode, the versionis no longer '?', so we need a different way to force reload\n........\n  r17973 | kohsuke | 2009-05-11 22:26:34 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adjusted the text a bit since multiple \"add\" and \"delete\"s were rather confusing\n........\n  r17974 | kohsuke | 2009-05-11 22:31:58 -0700 (Mon, 11 May 2009) | 1 line\n  \n  added help screen\n........\n  r17975 | kohsuke | 2009-05-11 22:41:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  form validation now works against the checkbox, too\n........\n  r17976 | kohsuke | 2009-05-11 22:43:00 -0700 (Mon, 11 May 2009) | 1 line\n  \n  with auto installation, we expect users to specify a directory that doesn't exist yet, so don't report it as an error\n........\n  r17977 | kohsuke | 2009-05-11 22:43:24 -0700 (Mon, 11 May 2009) | 1 line\n  \n  improving the text\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17985 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "buggy_code": "envVars = build.getEnvironment();",
        "fixed_code": "envVars = build.getEnvironment(listener);",
        "patch": "@@ -50,7 +50,7 @@ public EnvVars getEnvVars() {\n \t}\n \n \tpublic boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n-    \tenvVars = build.getEnvironment();\n+    \tenvVars = build.getEnvironment(listener);\n         return true;\n     }\n "
    },
    {
        "commit_id": "2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "commit_message": "Merged revisions 17324-17325,17428,17430,17473-17475,17481-17482,17555-17563,17571,17593-17595,17619-17620,17637-17644,17656-17657,17663-17665,17667-17670,17730,17753,17755-17758,17763-17768,17770-17771,17901,17906,17911-17912,17958,17961-17962,17970-17977 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tool-autoinstallation\n\n........\n  r17324 | jglick | 2009-04-20 18:24:32 -0700 (Mon, 20 Apr 2009) | 2 lines\n  \n  Defensive cloning and Javadoc corrections.\n  (Though it seems no one is using the default impls of these methods yet anyway.)\n........\n  r17325 | jglick | 2009-04-20 18:29:06 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  Deprecation of delegate method is intentional.\n........\n  r17428 | jglick | 2009-04-23 08:07:14 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Noting ToolLocationTranslator more prominently.\n........\n  r17430 | jglick | 2009-04-23 09:16:40 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unused imports.\n........\n  r17473 | jglick | 2009-04-23 19:21:11 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Allow Plugin.configure to see the StaplerRequest, needed for some kinds of calls.\n........\n  r17474 | jglick | 2009-04-23 19:25:54 -0700 (Thu, 23 Apr 2009) | 3 lines\n  \n  Initial sketch of plugin to manage tool installations across slaves.\n  (Should really be under ../plugins/ but that was not branched, so putting here for the moment.)\n........\n  r17475 | jglick | 2009-04-23 20:29:36 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Typo in Javadoc.\n........\n  r17481 | jglick | 2009-04-23 22:46:26 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unzip of an unbuffered stream is painfully slow.\n........\n  r17482 | jglick | 2009-04-23 22:48:01 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  ZIP-based tool installer now functional.\n........\n  r17555 | jglick | 2009-04-27 17:50:38 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Build against newest trunk.\n........\n  r17556 | jglick | 2009-04-27 18:38:28 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Adding help.\n........\n  r17557 | jglick | 2009-04-27 18:57:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Moving toolName & label config GUI into generic files.\n........\n  r17558 | jglick | 2009-04-27 19:37:30 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Typo.\n........\n  r17559 | jglick | 2009-04-27 20:07:47 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Second tool installer type based on a freeform command.\n........\n  r17560 | jglick | 2009-04-27 20:24:36 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  installIfNecessaryFrom will now just return false in case the target dir exists but the URL cannot be opened.\n........\n  r17561 | jglick | 2009-04-27 20:25:22 -0700 (Mon, 27 Apr 2009) | 2 lines\n  \n  chmod only if something was actually installed.\n  Use a+x, not o+x.\n........\n  r17562 | jglick | 2009-04-27 20:26:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Comment only.\n........\n  r17563 | jglick | 2009-04-27 20:41:12 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  I18N.\n........\n  r17571 | jglick | 2009-04-28 08:15:31 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Wiki link.\n........\n  r17593 | jglick | 2009-04-28 15:38:33 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Turn off echo mode, it's just noise.\n........\n  r17594 | jglick | 2009-04-28 15:39:29 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Synchronizing access to installers for a given node/tool combo.\n  Sending log messages to Hudson log in real time.\n........\n  r17595 | jglick | 2009-04-28 15:46:29 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Copyrights.\n........\n  r17619 | jglick | 2009-04-29 06:25:23 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Improved Javadoc.\n........\n  r17620 | jglick | 2009-04-29 06:51:11 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Demonstraing how to use DLJ to mechanically install official JDK releases on supported operating systems.\n........\n  r17637 | kohsuke | 2009-04-30 16:15:24 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  fixed what appears to be a C&P mistake\n........\n  r17638 | kohsuke | 2009-04-30 16:16:21 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  show YUI logger if YUI debugging mode is set.\n........\n  r17639 | kohsuke | 2009-04-30 16:52:28 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Fixed a UI script problem when <hetero-list> nests inside <repeatable>.\n  \n  The cause of the problem was that the behavior for inner <hetero-list> kicks in first, altering HTML (by removing \"prototypes\"), before behavior for outer <repetable> kicks in and removes the master copy from DOM tree.\n  \n  So <repeatable> ends up computing a master copy after some elements are removed, and hence when we try to reinsert them later by clicking \"Add\", it'll get incorrect copy, and re-execution of the <hetero-list> behavior bombs out.\n  \n  I fixed this by skipping those HTML-altering behaviors if they show up in the part of DOM tree that's supposed to be snapshotted and removed.\n........\n  r17640 | kohsuke | 2009-04-30 16:57:58 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Added ToolProperty to ToolInstallation (which acts like NodeProperty to Node --- basically decorates the base object with additional properties.)\n  \n  The original motivation is to implement ToolInstaller this way, if Jesse is OK. But decorating tools seem to have some other interesting use, such as a plugin for configuring $M2_HOME/conf/settings.xml, or a plugin to insert unlimited cryptography extension to JDK, or a plugin to add a few more jars into $ANT_HOME/lib.\n  \n  For this to work, ToolInstallations that want properties needs to be modified to use a new constructor. For a starter, I modified the JDK class to do this.\n  \n  I also took the opportunity to modernize JDK/config.jelly.\n........\n  r17641 | kohsuke | 2009-04-30 17:02:04 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  this appears to be a left-over from early days when we didn't have a means to do form validation\n........\n  r17642 | kohsuke | 2009-04-30 17:02:35 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  we don't need no.such.JDK but we need name. rebranching\n........\n  r17643 | kohsuke | 2009-04-30 17:03:22 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  rebranched from Hudson's configure.properties\n........\n  r17644 | kohsuke | 2009-04-30 17:05:31 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  removed unnecessary translations\n........\n  r17656 | kohsuke | 2009-05-01 11:27:36 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Less hack for improved type safety. Asking people to write more code is not necessarily bad as long as what they need to do is obvious to them.\n........\n  r17657 | kohsuke | 2009-05-01 12:07:20 -0700 (Fri, 01 May 2009) | 5 lines\n  \n  The toolautoinst part of the change that corresponds to rev.17640.\n  \n  ToolInstallers are now hooked under ToolInstallation through InstallSourceProperty as a ToolProperty.\n  \n  This allows the relevant UIs to be shown in one place. Still pending Jesse's feedback. Making it a single commit to simplify a revert if necessary\n........\n  r17663 | kohsuke | 2009-05-01 13:23:51 -0700 (Fri, 01 May 2009) | 1 line\n  \n  doc improvement\n........\n  r17664 | kohsuke | 2009-05-01 13:24:10 -0700 (Fri, 01 May 2009) | 1 line\n  \n  needs this to allow Stapler to databind hetero-list automatically\n........\n  r17665 | jglick | 2009-05-01 13:31:27 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Warnings.\n........\n  r17667 | kohsuke | 2009-05-01 14:20:53 -0700 (Fri, 01 May 2009) | 1 line\n  \n  added a method to do chmod\n........\n  r17668 | kohsuke | 2009-05-01 14:30:35 -0700 (Fri, 01 May 2009) | 1 line\n  \n  prefer JDK6 version to avoid unnecessary JNA loading\n........\n  r17669 | kohsuke | 2009-05-01 14:33:09 -0700 (Fri, 01 May 2009) | 1 line\n  \n  no, I must have confused this.\n........\n  r17670 | kohsuke | 2009-05-01 15:57:11 -0700 (Fri, 01 May 2009) | 2 lines\n  \n  - Automated JDK installer and its test.\n  - Minor update to the signature of ToolInstaller for supplying the expected default location.\n........\n  r17730 | kohsuke | 2009-05-04 11:27:34 -0700 (Mon, 04 May 2009) | 1 line\n  \n  avoid NPE as reported in HUDSON-3608\n........\n  r17753 | jglick | 2009-05-04 19:34:08 -0700 (Mon, 04 May 2009) | 2 lines\n  \n  Moved toolautoinst functionality into core.\n........\n  r17755 | jglick | 2009-05-04 20:28:34 -0700 (Mon, 04 May 2009) | 8 lines\n  \n  Added TaskListener parameter and IOException and InterruptedException to several methods:\n  Run.getEnvironment\n  NodeSpecific.forNode\n  ToolLocationTranslator.getToolHome\n  ToolLocationNodeProperty.getToolHome\n  ToolInstallation.translateFor\n  ProcessCache.Factory.getMavenInstallation\n  ProcessCache.Factory.getJava\n........\n  r17756 | jglick | 2009-05-04 20:36:56 -0700 (Mon, 04 May 2009) | 1 line\n  \n  expectedLocation was never strictly necessary, and will soon no longer be used even by JDKInstaller.\n........\n  r17757 | jglick | 2009-05-04 20:40:41 -0700 (Mon, 04 May 2009) | 1 line\n  \n  Not sure yet what @since should be.\n........\n  r17758 | jglick | 2009-05-04 20:41:51 -0700 (Mon, 04 May 2009) | 1 line\n  \n  getDefaultInstallers method added. Not yet in use.\n........\n  r17763 | kohsuke | 2009-05-05 10:50:36 -0700 (Tue, 05 May 2009) | 1 line\n  \n  deprecated redundant getJavaHome method\n........\n  r17764 | kohsuke | 2009-05-05 12:10:45 -0700 (Tue, 05 May 2009) | 1 line\n  \n  added general-purpose property defaulting mechanism, and added default tool installer for JDK\n........\n  r17765 | jglick | 2009-05-05 12:35:56 -0700 (Tue, 05 May 2009) | 1 line\n  \n  capitalize(\"\") -> \"\"\n........\n  r17766 | jglick | 2009-05-05 12:49:52 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Missing @since.\n........\n  r17767 | jglick | 2009-05-05 13:01:41 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Unchecked warning.\n........\n  r17768 | jglick | 2009-05-05 13:19:49 -0700 (Tue, 05 May 2009) | 2 lines\n  \n  Two unsuccessful attempts at form validation.\n........\n  r17770 | jglick | 2009-05-05 13:48:37 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Better class names.\n........\n  r17771 | kohsuke | 2009-05-05 14:12:21 -0700 (Tue, 05 May 2009) | 5 lines\n  \n  brought the form validation check back. The trick is to use the 'value' parameter.\n  \n  In the end we'd expect this check to go away anyway, as we change input field to drop-down list, but in the mean time, this is why it didn't work.\n  \n  Maybe we probably need more static code checkers? Like FindBugs rules?\n........\n  r17901 | kohsuke | 2009-05-09 19:15:40 -0700 (Sat, 09 May 2009) | 1 line\n  \n  having two toolHome is odd.\n........\n  r17906 | kohsuke | 2009-05-10 11:09:13 -0700 (Sun, 10 May 2009) | 1 line\n  \n  adding the generalization of UpdateCenter, but for compatibility reasons, we are leaving UpdateCenter as-is.\n........\n  r17911 | kohsuke | 2009-05-10 17:02:53 -0700 (Sun, 10 May 2009) | 1 line\n  \n  integrated json-lib with a bit of bug fix\n........\n  r17912 | kohsuke | 2009-05-10 17:13:05 -0700 (Sun, 10 May 2009) | 1 line\n  \n  JDK list is now fetched from hudson.dev.java.net\n........\n  r17958 | kohsuke | 2009-05-11 13:44:25 -0700 (Mon, 11 May 2009) | 48 lines\n  \n  Handle AbortException better to avoid error like this:\n  \n  [INFO] ------------------------------------------------------------------------\n  [ERROR] BUILD ERROR\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Failed to delete directory: C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target. Reason: Unable to delete file C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target\\remoting-1.304-SNAPSHOT.jar\n  \n  [INFO] ------------------------------------------------------------------------\n  [INFO] For more information, run Maven with the -e switch\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time: 31 seconds\n  [INFO] Finished at: Sun May 10 18:15:33 PDT 2009\n  [INFO] Final Memory: 25M/48M\n  [INFO] ------------------------------------------------------------------------\n  Recording fingerprints\n  Archiving artifacts\n  Recording test results\n  ERROR: Failed to archive JUnit reports\n  hudson.util.IOException2: remote file operation failed\n  \tat hudson.FilePath.act(FilePath.java:596)\n  \tat hudson.tasks.junit.JUnitResultArchiver.perform(JUnitResultArchiver.java:82)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:372)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:360)\n  \tat hudson.model.Build$RunnerImpl.post2(Build.java:183)\n  \tat hudson.model.AbstractBuild$AbstractRunner.post(AbstractBuild.java:345)\n  \tat hudson.model.Run.run(Run.java:943)\n  \tat hudson.model.Build.run(Build.java:112)\n  \tat hudson.model.ResourceController.execute(ResourceController.java:93)\n  \tat hudson.model.Executor.run(Executor.java:119)\n  Caused by: hudson.AbortException: Test reports were found but none of them are new. Did tests run? \n  For example, \\files\\hudson\\workspace\\hudson\\hudson\\main\\core\\target\\surefire-reports\\TEST-hudson.BulkChangeTest.xml is 2 days 23 hr old\n  \n  \tat hudson.tasks.junit.TestResult.parse(TestResult.java:134)\n  \tat hudson.tasks.junit.TestResult.<init>(TestResult.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:82)\n  \tat hudson.FilePath$FileCallableWrapper.call(FilePath.java:1583)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:92)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:46)\n  \tat hudson.remoting.Request$2.run(Request.java:236)\n  \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n  \tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n  \tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n  \tat java.lang.Thread.run(Thread.java:619)\n........\n  r17961 | kohsuke | 2009-05-11 15:16:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adding Windows JDK silent installation\n........\n  r17962 | kohsuke | 2009-05-11 16:08:13 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing JDK offline installatino for Windows\n........\n  r17970 | kohsuke | 2009-05-11 19:37:59 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing a problem that prevents the usage of this tag in <repeatable> block, which reinserts the same fragment over and over. So statically assigning IDs won't work\n........\n  r17971 | kohsuke | 2009-05-11 22:17:09 -0700 (Mon, 11 May 2009) | 1 line\n  \n  continuing to remove static ID generation, which breaks the tag when used inside <repetable> tag.\n........\n  r17972 | kohsuke | 2009-05-11 22:19:11 -0700 (Mon, 11 May 2009) | 1 line\n  \n  I don't know when this started, but even in the hudson-dev:run mode, the versionis no longer '?', so we need a different way to force reload\n........\n  r17973 | kohsuke | 2009-05-11 22:26:34 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adjusted the text a bit since multiple \"add\" and \"delete\"s were rather confusing\n........\n  r17974 | kohsuke | 2009-05-11 22:31:58 -0700 (Mon, 11 May 2009) | 1 line\n  \n  added help screen\n........\n  r17975 | kohsuke | 2009-05-11 22:41:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  form validation now works against the checkbox, too\n........\n  r17976 | kohsuke | 2009-05-11 22:43:00 -0700 (Mon, 11 May 2009) | 1 line\n  \n  with auto installation, we expect users to specify a directory that doesn't exist yet, so don't report it as an error\n........\n  r17977 | kohsuke | 2009-05-11 22:43:24 -0700 (Mon, 11 May 2009) | 1 line\n  \n  improving the text\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17985 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "buggy_code": "assertEquals(jdk.getJavaHome(),home);",
        "fixed_code": "assertEquals(jdk.getHome(),home);",
        "patch": "@@ -88,7 +88,7 @@ private void assertAnt(AntInstallation ant, String name, String home) {\n \n     private void assertJDK(JDK jdk, String name, String home) {\n         assertEquals(jdk.getName(),name);\n-        assertEquals(jdk.getJavaHome(),home);\n+        assertEquals(jdk.getHome(),home);\n     }\n \n     /**"
    },
    {
        "commit_id": "2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "commit_message": "Merged revisions 17324-17325,17428,17430,17473-17475,17481-17482,17555-17563,17571,17593-17595,17619-17620,17637-17644,17656-17657,17663-17665,17667-17670,17730,17753,17755-17758,17763-17768,17770-17771,17901,17906,17911-17912,17958,17961-17962,17970-17977 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tool-autoinstallation\n\n........\n  r17324 | jglick | 2009-04-20 18:24:32 -0700 (Mon, 20 Apr 2009) | 2 lines\n  \n  Defensive cloning and Javadoc corrections.\n  (Though it seems no one is using the default impls of these methods yet anyway.)\n........\n  r17325 | jglick | 2009-04-20 18:29:06 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  Deprecation of delegate method is intentional.\n........\n  r17428 | jglick | 2009-04-23 08:07:14 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Noting ToolLocationTranslator more prominently.\n........\n  r17430 | jglick | 2009-04-23 09:16:40 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unused imports.\n........\n  r17473 | jglick | 2009-04-23 19:21:11 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Allow Plugin.configure to see the StaplerRequest, needed for some kinds of calls.\n........\n  r17474 | jglick | 2009-04-23 19:25:54 -0700 (Thu, 23 Apr 2009) | 3 lines\n  \n  Initial sketch of plugin to manage tool installations across slaves.\n  (Should really be under ../plugins/ but that was not branched, so putting here for the moment.)\n........\n  r17475 | jglick | 2009-04-23 20:29:36 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Typo in Javadoc.\n........\n  r17481 | jglick | 2009-04-23 22:46:26 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unzip of an unbuffered stream is painfully slow.\n........\n  r17482 | jglick | 2009-04-23 22:48:01 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  ZIP-based tool installer now functional.\n........\n  r17555 | jglick | 2009-04-27 17:50:38 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Build against newest trunk.\n........\n  r17556 | jglick | 2009-04-27 18:38:28 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Adding help.\n........\n  r17557 | jglick | 2009-04-27 18:57:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Moving toolName & label config GUI into generic files.\n........\n  r17558 | jglick | 2009-04-27 19:37:30 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Typo.\n........\n  r17559 | jglick | 2009-04-27 20:07:47 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Second tool installer type based on a freeform command.\n........\n  r17560 | jglick | 2009-04-27 20:24:36 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  installIfNecessaryFrom will now just return false in case the target dir exists but the URL cannot be opened.\n........\n  r17561 | jglick | 2009-04-27 20:25:22 -0700 (Mon, 27 Apr 2009) | 2 lines\n  \n  chmod only if something was actually installed.\n  Use a+x, not o+x.\n........\n  r17562 | jglick | 2009-04-27 20:26:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Comment only.\n........\n  r17563 | jglick | 2009-04-27 20:41:12 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  I18N.\n........\n  r17571 | jglick | 2009-04-28 08:15:31 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Wiki link.\n........\n  r17593 | jglick | 2009-04-28 15:38:33 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Turn off echo mode, it's just noise.\n........\n  r17594 | jglick | 2009-04-28 15:39:29 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Synchronizing access to installers for a given node/tool combo.\n  Sending log messages to Hudson log in real time.\n........\n  r17595 | jglick | 2009-04-28 15:46:29 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Copyrights.\n........\n  r17619 | jglick | 2009-04-29 06:25:23 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Improved Javadoc.\n........\n  r17620 | jglick | 2009-04-29 06:51:11 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Demonstraing how to use DLJ to mechanically install official JDK releases on supported operating systems.\n........\n  r17637 | kohsuke | 2009-04-30 16:15:24 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  fixed what appears to be a C&P mistake\n........\n  r17638 | kohsuke | 2009-04-30 16:16:21 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  show YUI logger if YUI debugging mode is set.\n........\n  r17639 | kohsuke | 2009-04-30 16:52:28 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Fixed a UI script problem when <hetero-list> nests inside <repeatable>.\n  \n  The cause of the problem was that the behavior for inner <hetero-list> kicks in first, altering HTML (by removing \"prototypes\"), before behavior for outer <repetable> kicks in and removes the master copy from DOM tree.\n  \n  So <repeatable> ends up computing a master copy after some elements are removed, and hence when we try to reinsert them later by clicking \"Add\", it'll get incorrect copy, and re-execution of the <hetero-list> behavior bombs out.\n  \n  I fixed this by skipping those HTML-altering behaviors if they show up in the part of DOM tree that's supposed to be snapshotted and removed.\n........\n  r17640 | kohsuke | 2009-04-30 16:57:58 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Added ToolProperty to ToolInstallation (which acts like NodeProperty to Node --- basically decorates the base object with additional properties.)\n  \n  The original motivation is to implement ToolInstaller this way, if Jesse is OK. But decorating tools seem to have some other interesting use, such as a plugin for configuring $M2_HOME/conf/settings.xml, or a plugin to insert unlimited cryptography extension to JDK, or a plugin to add a few more jars into $ANT_HOME/lib.\n  \n  For this to work, ToolInstallations that want properties needs to be modified to use a new constructor. For a starter, I modified the JDK class to do this.\n  \n  I also took the opportunity to modernize JDK/config.jelly.\n........\n  r17641 | kohsuke | 2009-04-30 17:02:04 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  this appears to be a left-over from early days when we didn't have a means to do form validation\n........\n  r17642 | kohsuke | 2009-04-30 17:02:35 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  we don't need no.such.JDK but we need name. rebranching\n........\n  r17643 | kohsuke | 2009-04-30 17:03:22 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  rebranched from Hudson's configure.properties\n........\n  r17644 | kohsuke | 2009-04-30 17:05:31 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  removed unnecessary translations\n........\n  r17656 | kohsuke | 2009-05-01 11:27:36 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Less hack for improved type safety. Asking people to write more code is not necessarily bad as long as what they need to do is obvious to them.\n........\n  r17657 | kohsuke | 2009-05-01 12:07:20 -0700 (Fri, 01 May 2009) | 5 lines\n  \n  The toolautoinst part of the change that corresponds to rev.17640.\n  \n  ToolInstallers are now hooked under ToolInstallation through InstallSourceProperty as a ToolProperty.\n  \n  This allows the relevant UIs to be shown in one place. Still pending Jesse's feedback. Making it a single commit to simplify a revert if necessary\n........\n  r17663 | kohsuke | 2009-05-01 13:23:51 -0700 (Fri, 01 May 2009) | 1 line\n  \n  doc improvement\n........\n  r17664 | kohsuke | 2009-05-01 13:24:10 -0700 (Fri, 01 May 2009) | 1 line\n  \n  needs this to allow Stapler to databind hetero-list automatically\n........\n  r17665 | jglick | 2009-05-01 13:31:27 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Warnings.\n........\n  r17667 | kohsuke | 2009-05-01 14:20:53 -0700 (Fri, 01 May 2009) | 1 line\n  \n  added a method to do chmod\n........\n  r17668 | kohsuke | 2009-05-01 14:30:35 -0700 (Fri, 01 May 2009) | 1 line\n  \n  prefer JDK6 version to avoid unnecessary JNA loading\n........\n  r17669 | kohsuke | 2009-05-01 14:33:09 -0700 (Fri, 01 May 2009) | 1 line\n  \n  no, I must have confused this.\n........\n  r17670 | kohsuke | 2009-05-01 15:57:11 -0700 (Fri, 01 May 2009) | 2 lines\n  \n  - Automated JDK installer and its test.\n  - Minor update to the signature of ToolInstaller for supplying the expected default location.\n........\n  r17730 | kohsuke | 2009-05-04 11:27:34 -0700 (Mon, 04 May 2009) | 1 line\n  \n  avoid NPE as reported in HUDSON-3608\n........\n  r17753 | jglick | 2009-05-04 19:34:08 -0700 (Mon, 04 May 2009) | 2 lines\n  \n  Moved toolautoinst functionality into core.\n........\n  r17755 | jglick | 2009-05-04 20:28:34 -0700 (Mon, 04 May 2009) | 8 lines\n  \n  Added TaskListener parameter and IOException and InterruptedException to several methods:\n  Run.getEnvironment\n  NodeSpecific.forNode\n  ToolLocationTranslator.getToolHome\n  ToolLocationNodeProperty.getToolHome\n  ToolInstallation.translateFor\n  ProcessCache.Factory.getMavenInstallation\n  ProcessCache.Factory.getJava\n........\n  r17756 | jglick | 2009-05-04 20:36:56 -0700 (Mon, 04 May 2009) | 1 line\n  \n  expectedLocation was never strictly necessary, and will soon no longer be used even by JDKInstaller.\n........\n  r17757 | jglick | 2009-05-04 20:40:41 -0700 (Mon, 04 May 2009) | 1 line\n  \n  Not sure yet what @since should be.\n........\n  r17758 | jglick | 2009-05-04 20:41:51 -0700 (Mon, 04 May 2009) | 1 line\n  \n  getDefaultInstallers method added. Not yet in use.\n........\n  r17763 | kohsuke | 2009-05-05 10:50:36 -0700 (Tue, 05 May 2009) | 1 line\n  \n  deprecated redundant getJavaHome method\n........\n  r17764 | kohsuke | 2009-05-05 12:10:45 -0700 (Tue, 05 May 2009) | 1 line\n  \n  added general-purpose property defaulting mechanism, and added default tool installer for JDK\n........\n  r17765 | jglick | 2009-05-05 12:35:56 -0700 (Tue, 05 May 2009) | 1 line\n  \n  capitalize(\"\") -> \"\"\n........\n  r17766 | jglick | 2009-05-05 12:49:52 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Missing @since.\n........\n  r17767 | jglick | 2009-05-05 13:01:41 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Unchecked warning.\n........\n  r17768 | jglick | 2009-05-05 13:19:49 -0700 (Tue, 05 May 2009) | 2 lines\n  \n  Two unsuccessful attempts at form validation.\n........\n  r17770 | jglick | 2009-05-05 13:48:37 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Better class names.\n........\n  r17771 | kohsuke | 2009-05-05 14:12:21 -0700 (Tue, 05 May 2009) | 5 lines\n  \n  brought the form validation check back. The trick is to use the 'value' parameter.\n  \n  In the end we'd expect this check to go away anyway, as we change input field to drop-down list, but in the mean time, this is why it didn't work.\n  \n  Maybe we probably need more static code checkers? Like FindBugs rules?\n........\n  r17901 | kohsuke | 2009-05-09 19:15:40 -0700 (Sat, 09 May 2009) | 1 line\n  \n  having two toolHome is odd.\n........\n  r17906 | kohsuke | 2009-05-10 11:09:13 -0700 (Sun, 10 May 2009) | 1 line\n  \n  adding the generalization of UpdateCenter, but for compatibility reasons, we are leaving UpdateCenter as-is.\n........\n  r17911 | kohsuke | 2009-05-10 17:02:53 -0700 (Sun, 10 May 2009) | 1 line\n  \n  integrated json-lib with a bit of bug fix\n........\n  r17912 | kohsuke | 2009-05-10 17:13:05 -0700 (Sun, 10 May 2009) | 1 line\n  \n  JDK list is now fetched from hudson.dev.java.net\n........\n  r17958 | kohsuke | 2009-05-11 13:44:25 -0700 (Mon, 11 May 2009) | 48 lines\n  \n  Handle AbortException better to avoid error like this:\n  \n  [INFO] ------------------------------------------------------------------------\n  [ERROR] BUILD ERROR\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Failed to delete directory: C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target. Reason: Unable to delete file C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target\\remoting-1.304-SNAPSHOT.jar\n  \n  [INFO] ------------------------------------------------------------------------\n  [INFO] For more information, run Maven with the -e switch\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time: 31 seconds\n  [INFO] Finished at: Sun May 10 18:15:33 PDT 2009\n  [INFO] Final Memory: 25M/48M\n  [INFO] ------------------------------------------------------------------------\n  Recording fingerprints\n  Archiving artifacts\n  Recording test results\n  ERROR: Failed to archive JUnit reports\n  hudson.util.IOException2: remote file operation failed\n  \tat hudson.FilePath.act(FilePath.java:596)\n  \tat hudson.tasks.junit.JUnitResultArchiver.perform(JUnitResultArchiver.java:82)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:372)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:360)\n  \tat hudson.model.Build$RunnerImpl.post2(Build.java:183)\n  \tat hudson.model.AbstractBuild$AbstractRunner.post(AbstractBuild.java:345)\n  \tat hudson.model.Run.run(Run.java:943)\n  \tat hudson.model.Build.run(Build.java:112)\n  \tat hudson.model.ResourceController.execute(ResourceController.java:93)\n  \tat hudson.model.Executor.run(Executor.java:119)\n  Caused by: hudson.AbortException: Test reports were found but none of them are new. Did tests run? \n  For example, \\files\\hudson\\workspace\\hudson\\hudson\\main\\core\\target\\surefire-reports\\TEST-hudson.BulkChangeTest.xml is 2 days 23 hr old\n  \n  \tat hudson.tasks.junit.TestResult.parse(TestResult.java:134)\n  \tat hudson.tasks.junit.TestResult.<init>(TestResult.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:82)\n  \tat hudson.FilePath$FileCallableWrapper.call(FilePath.java:1583)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:92)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:46)\n  \tat hudson.remoting.Request$2.run(Request.java:236)\n  \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n  \tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n  \tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n  \tat java.lang.Thread.run(Thread.java:619)\n........\n  r17961 | kohsuke | 2009-05-11 15:16:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adding Windows JDK silent installation\n........\n  r17962 | kohsuke | 2009-05-11 16:08:13 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing JDK offline installatino for Windows\n........\n  r17970 | kohsuke | 2009-05-11 19:37:59 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing a problem that prevents the usage of this tag in <repeatable> block, which reinserts the same fragment over and over. So statically assigning IDs won't work\n........\n  r17971 | kohsuke | 2009-05-11 22:17:09 -0700 (Mon, 11 May 2009) | 1 line\n  \n  continuing to remove static ID generation, which breaks the tag when used inside <repetable> tag.\n........\n  r17972 | kohsuke | 2009-05-11 22:19:11 -0700 (Mon, 11 May 2009) | 1 line\n  \n  I don't know when this started, but even in the hudson-dev:run mode, the versionis no longer '?', so we need a different way to force reload\n........\n  r17973 | kohsuke | 2009-05-11 22:26:34 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adjusted the text a bit since multiple \"add\" and \"delete\"s were rather confusing\n........\n  r17974 | kohsuke | 2009-05-11 22:31:58 -0700 (Mon, 11 May 2009) | 1 line\n  \n  added help screen\n........\n  r17975 | kohsuke | 2009-05-11 22:41:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  form validation now works against the checkbox, too\n........\n  r17976 | kohsuke | 2009-05-11 22:43:00 -0700 (Mon, 11 May 2009) | 1 line\n  \n  with auto installation, we expect users to specify a directory that doesn't exist yet, so don't report it as an error\n........\n  r17977 | kohsuke | 2009-05-11 22:43:24 -0700 (Mon, 11 May 2009) | 1 line\n  \n  improving the text\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17985 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "buggy_code": "JDK varJDK = new JDK(\"varJDK\", withVariable(defaultJDK.getJavaHome()));",
        "fixed_code": "JDK varJDK = new JDK(\"varJDK\", withVariable(defaultJDK.getHome()));",
        "patch": "@@ -28,7 +28,7 @@ public void setUp() throws Exception {\n \t\tsuper.setUp();\r\n \r\n \t\tJDK defaultJDK = hudson.getJDK(null);\r\n-\t\tJDK varJDK = new JDK(\"varJDK\", withVariable(defaultJDK.getJavaHome()));\r\n+\t\tJDK varJDK = new JDK(\"varJDK\", withVariable(defaultJDK.getHome()));\r\n \t\thudson.getJDKs().add(varJDK);\r\n \r\n \t\t// Maven with a variable in its path\r"
    },
    {
        "commit_id": "2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "commit_message": "Merged revisions 17324-17325,17428,17430,17473-17475,17481-17482,17555-17563,17571,17593-17595,17619-17620,17637-17644,17656-17657,17663-17665,17667-17670,17730,17753,17755-17758,17763-17768,17770-17771,17901,17906,17911-17912,17958,17961-17962,17970-17977 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tool-autoinstallation\n\n........\n  r17324 | jglick | 2009-04-20 18:24:32 -0700 (Mon, 20 Apr 2009) | 2 lines\n  \n  Defensive cloning and Javadoc corrections.\n  (Though it seems no one is using the default impls of these methods yet anyway.)\n........\n  r17325 | jglick | 2009-04-20 18:29:06 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  Deprecation of delegate method is intentional.\n........\n  r17428 | jglick | 2009-04-23 08:07:14 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Noting ToolLocationTranslator more prominently.\n........\n  r17430 | jglick | 2009-04-23 09:16:40 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unused imports.\n........\n  r17473 | jglick | 2009-04-23 19:21:11 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Allow Plugin.configure to see the StaplerRequest, needed for some kinds of calls.\n........\n  r17474 | jglick | 2009-04-23 19:25:54 -0700 (Thu, 23 Apr 2009) | 3 lines\n  \n  Initial sketch of plugin to manage tool installations across slaves.\n  (Should really be under ../plugins/ but that was not branched, so putting here for the moment.)\n........\n  r17475 | jglick | 2009-04-23 20:29:36 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Typo in Javadoc.\n........\n  r17481 | jglick | 2009-04-23 22:46:26 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  Unzip of an unbuffered stream is painfully slow.\n........\n  r17482 | jglick | 2009-04-23 22:48:01 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  ZIP-based tool installer now functional.\n........\n  r17555 | jglick | 2009-04-27 17:50:38 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Build against newest trunk.\n........\n  r17556 | jglick | 2009-04-27 18:38:28 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Adding help.\n........\n  r17557 | jglick | 2009-04-27 18:57:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Moving toolName & label config GUI into generic files.\n........\n  r17558 | jglick | 2009-04-27 19:37:30 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Typo.\n........\n  r17559 | jglick | 2009-04-27 20:07:47 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Second tool installer type based on a freeform command.\n........\n  r17560 | jglick | 2009-04-27 20:24:36 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  installIfNecessaryFrom will now just return false in case the target dir exists but the URL cannot be opened.\n........\n  r17561 | jglick | 2009-04-27 20:25:22 -0700 (Mon, 27 Apr 2009) | 2 lines\n  \n  chmod only if something was actually installed.\n  Use a+x, not o+x.\n........\n  r17562 | jglick | 2009-04-27 20:26:46 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  Comment only.\n........\n  r17563 | jglick | 2009-04-27 20:41:12 -0700 (Mon, 27 Apr 2009) | 1 line\n  \n  I18N.\n........\n  r17571 | jglick | 2009-04-28 08:15:31 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Wiki link.\n........\n  r17593 | jglick | 2009-04-28 15:38:33 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Turn off echo mode, it's just noise.\n........\n  r17594 | jglick | 2009-04-28 15:39:29 -0700 (Tue, 28 Apr 2009) | 2 lines\n  \n  Synchronizing access to installers for a given node/tool combo.\n  Sending log messages to Hudson log in real time.\n........\n  r17595 | jglick | 2009-04-28 15:46:29 -0700 (Tue, 28 Apr 2009) | 1 line\n  \n  Copyrights.\n........\n  r17619 | jglick | 2009-04-29 06:25:23 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Improved Javadoc.\n........\n  r17620 | jglick | 2009-04-29 06:51:11 -0700 (Wed, 29 Apr 2009) | 1 line\n  \n  Demonstraing how to use DLJ to mechanically install official JDK releases on supported operating systems.\n........\n  r17637 | kohsuke | 2009-04-30 16:15:24 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  fixed what appears to be a C&P mistake\n........\n  r17638 | kohsuke | 2009-04-30 16:16:21 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  show YUI logger if YUI debugging mode is set.\n........\n  r17639 | kohsuke | 2009-04-30 16:52:28 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Fixed a UI script problem when <hetero-list> nests inside <repeatable>.\n  \n  The cause of the problem was that the behavior for inner <hetero-list> kicks in first, altering HTML (by removing \"prototypes\"), before behavior for outer <repetable> kicks in and removes the master copy from DOM tree.\n  \n  So <repeatable> ends up computing a master copy after some elements are removed, and hence when we try to reinsert them later by clicking \"Add\", it'll get incorrect copy, and re-execution of the <hetero-list> behavior bombs out.\n  \n  I fixed this by skipping those HTML-altering behaviors if they show up in the part of DOM tree that's supposed to be snapshotted and removed.\n........\n  r17640 | kohsuke | 2009-04-30 16:57:58 -0700 (Thu, 30 Apr 2009) | 7 lines\n  \n  Added ToolProperty to ToolInstallation (which acts like NodeProperty to Node --- basically decorates the base object with additional properties.)\n  \n  The original motivation is to implement ToolInstaller this way, if Jesse is OK. But decorating tools seem to have some other interesting use, such as a plugin for configuring $M2_HOME/conf/settings.xml, or a plugin to insert unlimited cryptography extension to JDK, or a plugin to add a few more jars into $ANT_HOME/lib.\n  \n  For this to work, ToolInstallations that want properties needs to be modified to use a new constructor. For a starter, I modified the JDK class to do this.\n  \n  I also took the opportunity to modernize JDK/config.jelly.\n........\n  r17641 | kohsuke | 2009-04-30 17:02:04 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  this appears to be a left-over from early days when we didn't have a means to do form validation\n........\n  r17642 | kohsuke | 2009-04-30 17:02:35 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  we don't need no.such.JDK but we need name. rebranching\n........\n  r17643 | kohsuke | 2009-04-30 17:03:22 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  rebranched from Hudson's configure.properties\n........\n  r17644 | kohsuke | 2009-04-30 17:05:31 -0700 (Thu, 30 Apr 2009) | 1 line\n  \n  removed unnecessary translations\n........\n  r17656 | kohsuke | 2009-05-01 11:27:36 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Less hack for improved type safety. Asking people to write more code is not necessarily bad as long as what they need to do is obvious to them.\n........\n  r17657 | kohsuke | 2009-05-01 12:07:20 -0700 (Fri, 01 May 2009) | 5 lines\n  \n  The toolautoinst part of the change that corresponds to rev.17640.\n  \n  ToolInstallers are now hooked under ToolInstallation through InstallSourceProperty as a ToolProperty.\n  \n  This allows the relevant UIs to be shown in one place. Still pending Jesse's feedback. Making it a single commit to simplify a revert if necessary\n........\n  r17663 | kohsuke | 2009-05-01 13:23:51 -0700 (Fri, 01 May 2009) | 1 line\n  \n  doc improvement\n........\n  r17664 | kohsuke | 2009-05-01 13:24:10 -0700 (Fri, 01 May 2009) | 1 line\n  \n  needs this to allow Stapler to databind hetero-list automatically\n........\n  r17665 | jglick | 2009-05-01 13:31:27 -0700 (Fri, 01 May 2009) | 1 line\n  \n  Warnings.\n........\n  r17667 | kohsuke | 2009-05-01 14:20:53 -0700 (Fri, 01 May 2009) | 1 line\n  \n  added a method to do chmod\n........\n  r17668 | kohsuke | 2009-05-01 14:30:35 -0700 (Fri, 01 May 2009) | 1 line\n  \n  prefer JDK6 version to avoid unnecessary JNA loading\n........\n  r17669 | kohsuke | 2009-05-01 14:33:09 -0700 (Fri, 01 May 2009) | 1 line\n  \n  no, I must have confused this.\n........\n  r17670 | kohsuke | 2009-05-01 15:57:11 -0700 (Fri, 01 May 2009) | 2 lines\n  \n  - Automated JDK installer and its test.\n  - Minor update to the signature of ToolInstaller for supplying the expected default location.\n........\n  r17730 | kohsuke | 2009-05-04 11:27:34 -0700 (Mon, 04 May 2009) | 1 line\n  \n  avoid NPE as reported in HUDSON-3608\n........\n  r17753 | jglick | 2009-05-04 19:34:08 -0700 (Mon, 04 May 2009) | 2 lines\n  \n  Moved toolautoinst functionality into core.\n........\n  r17755 | jglick | 2009-05-04 20:28:34 -0700 (Mon, 04 May 2009) | 8 lines\n  \n  Added TaskListener parameter and IOException and InterruptedException to several methods:\n  Run.getEnvironment\n  NodeSpecific.forNode\n  ToolLocationTranslator.getToolHome\n  ToolLocationNodeProperty.getToolHome\n  ToolInstallation.translateFor\n  ProcessCache.Factory.getMavenInstallation\n  ProcessCache.Factory.getJava\n........\n  r17756 | jglick | 2009-05-04 20:36:56 -0700 (Mon, 04 May 2009) | 1 line\n  \n  expectedLocation was never strictly necessary, and will soon no longer be used even by JDKInstaller.\n........\n  r17757 | jglick | 2009-05-04 20:40:41 -0700 (Mon, 04 May 2009) | 1 line\n  \n  Not sure yet what @since should be.\n........\n  r17758 | jglick | 2009-05-04 20:41:51 -0700 (Mon, 04 May 2009) | 1 line\n  \n  getDefaultInstallers method added. Not yet in use.\n........\n  r17763 | kohsuke | 2009-05-05 10:50:36 -0700 (Tue, 05 May 2009) | 1 line\n  \n  deprecated redundant getJavaHome method\n........\n  r17764 | kohsuke | 2009-05-05 12:10:45 -0700 (Tue, 05 May 2009) | 1 line\n  \n  added general-purpose property defaulting mechanism, and added default tool installer for JDK\n........\n  r17765 | jglick | 2009-05-05 12:35:56 -0700 (Tue, 05 May 2009) | 1 line\n  \n  capitalize(\"\") -> \"\"\n........\n  r17766 | jglick | 2009-05-05 12:49:52 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Missing @since.\n........\n  r17767 | jglick | 2009-05-05 13:01:41 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Unchecked warning.\n........\n  r17768 | jglick | 2009-05-05 13:19:49 -0700 (Tue, 05 May 2009) | 2 lines\n  \n  Two unsuccessful attempts at form validation.\n........\n  r17770 | jglick | 2009-05-05 13:48:37 -0700 (Tue, 05 May 2009) | 1 line\n  \n  Better class names.\n........\n  r17771 | kohsuke | 2009-05-05 14:12:21 -0700 (Tue, 05 May 2009) | 5 lines\n  \n  brought the form validation check back. The trick is to use the 'value' parameter.\n  \n  In the end we'd expect this check to go away anyway, as we change input field to drop-down list, but in the mean time, this is why it didn't work.\n  \n  Maybe we probably need more static code checkers? Like FindBugs rules?\n........\n  r17901 | kohsuke | 2009-05-09 19:15:40 -0700 (Sat, 09 May 2009) | 1 line\n  \n  having two toolHome is odd.\n........\n  r17906 | kohsuke | 2009-05-10 11:09:13 -0700 (Sun, 10 May 2009) | 1 line\n  \n  adding the generalization of UpdateCenter, but for compatibility reasons, we are leaving UpdateCenter as-is.\n........\n  r17911 | kohsuke | 2009-05-10 17:02:53 -0700 (Sun, 10 May 2009) | 1 line\n  \n  integrated json-lib with a bit of bug fix\n........\n  r17912 | kohsuke | 2009-05-10 17:13:05 -0700 (Sun, 10 May 2009) | 1 line\n  \n  JDK list is now fetched from hudson.dev.java.net\n........\n  r17958 | kohsuke | 2009-05-11 13:44:25 -0700 (Mon, 11 May 2009) | 48 lines\n  \n  Handle AbortException better to avoid error like this:\n  \n  [INFO] ------------------------------------------------------------------------\n  [ERROR] BUILD ERROR\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Failed to delete directory: C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target. Reason: Unable to delete file C:\\files\\hudson\\workspace\\hudson\\hudson\\main\\remoting\\target\\remoting-1.304-SNAPSHOT.jar\n  \n  [INFO] ------------------------------------------------------------------------\n  [INFO] For more information, run Maven with the -e switch\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time: 31 seconds\n  [INFO] Finished at: Sun May 10 18:15:33 PDT 2009\n  [INFO] Final Memory: 25M/48M\n  [INFO] ------------------------------------------------------------------------\n  Recording fingerprints\n  Archiving artifacts\n  Recording test results\n  ERROR: Failed to archive JUnit reports\n  hudson.util.IOException2: remote file operation failed\n  \tat hudson.FilePath.act(FilePath.java:596)\n  \tat hudson.tasks.junit.JUnitResultArchiver.perform(JUnitResultArchiver.java:82)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:372)\n  \tat hudson.model.AbstractBuild$AbstractRunner.performAllBuildStep(AbstractBuild.java:360)\n  \tat hudson.model.Build$RunnerImpl.post2(Build.java:183)\n  \tat hudson.model.AbstractBuild$AbstractRunner.post(AbstractBuild.java:345)\n  \tat hudson.model.Run.run(Run.java:943)\n  \tat hudson.model.Build.run(Build.java:112)\n  \tat hudson.model.ResourceController.execute(ResourceController.java:93)\n  \tat hudson.model.Executor.run(Executor.java:119)\n  Caused by: hudson.AbortException: Test reports were found but none of them are new. Did tests run? \n  For example, \\files\\hudson\\workspace\\hudson\\hudson\\main\\core\\target\\surefire-reports\\TEST-hudson.BulkChangeTest.xml is 2 days 23 hr old\n  \n  \tat hudson.tasks.junit.TestResult.parse(TestResult.java:134)\n  \tat hudson.tasks.junit.TestResult.<init>(TestResult.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:95)\n  \tat hudson.tasks.junit.JUnitResultArchiver$1.invoke(JUnitResultArchiver.java:82)\n  \tat hudson.FilePath$FileCallableWrapper.call(FilePath.java:1583)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:92)\n  \tat hudson.remoting.UserRequest.perform(UserRequest.java:46)\n  \tat hudson.remoting.Request$2.run(Request.java:236)\n  \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n  \tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n  \tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n  \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n  \tat java.lang.Thread.run(Thread.java:619)\n........\n  r17961 | kohsuke | 2009-05-11 15:16:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adding Windows JDK silent installation\n........\n  r17962 | kohsuke | 2009-05-11 16:08:13 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing JDK offline installatino for Windows\n........\n  r17970 | kohsuke | 2009-05-11 19:37:59 -0700 (Mon, 11 May 2009) | 1 line\n  \n  Fixing a problem that prevents the usage of this tag in <repeatable> block, which reinserts the same fragment over and over. So statically assigning IDs won't work\n........\n  r17971 | kohsuke | 2009-05-11 22:17:09 -0700 (Mon, 11 May 2009) | 1 line\n  \n  continuing to remove static ID generation, which breaks the tag when used inside <repetable> tag.\n........\n  r17972 | kohsuke | 2009-05-11 22:19:11 -0700 (Mon, 11 May 2009) | 1 line\n  \n  I don't know when this started, but even in the hudson-dev:run mode, the versionis no longer '?', so we need a different way to force reload\n........\n  r17973 | kohsuke | 2009-05-11 22:26:34 -0700 (Mon, 11 May 2009) | 1 line\n  \n  adjusted the text a bit since multiple \"add\" and \"delete\"s were rather confusing\n........\n  r17974 | kohsuke | 2009-05-11 22:31:58 -0700 (Mon, 11 May 2009) | 1 line\n  \n  added help screen\n........\n  r17975 | kohsuke | 2009-05-11 22:41:39 -0700 (Mon, 11 May 2009) | 1 line\n  \n  form validation now works against the checkbox, too\n........\n  r17976 | kohsuke | 2009-05-11 22:43:00 -0700 (Mon, 11 May 2009) | 1 line\n  \n  with auto installation, we expect users to specify a directory that doesn't exist yet, so don't report it as an error\n........\n  r17977 | kohsuke | 2009-05-11 22:43:24 -0700 (Mon, 11 May 2009) | 1 line\n  \n  improving the text\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17985 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a8a0bf7fae1aa1bbbe7a7a2a6fd9384d341609c",
        "buggy_code": "String javaHome = jdk.getJavaHome();",
        "fixed_code": "String javaHome = jdk.getHome();",
        "patch": "@@ -95,7 +95,7 @@ public void testWithNodeProperty() throws Exception {\n         hudson.getDescriptorByType(Maven.DescriptorImpl.class).setInstallations(maven, varMaven);\n \n         JDK jdk = hudson.getJDK(\"default\");\n-        String javaHome = jdk.getJavaHome();\n+        String javaHome = jdk.getHome();\n         String javaHomeVar = \"${VAR_JAVA}\" + javaHome.substring(3);\n         String javaVar = javaHome.substring(0, 3);\n         JDK varJDK = new JDK(\"varJDK\", javaHomeVar);"
    },
    {
        "commit_id": "ed708a5e9d2952dcf88815f0f6479929ef64b962",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17603 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ed708a5e9d2952dcf88815f0f6479929ef64b962",
        "buggy_code": "if(head.equals(\"-s\") && args.size()>2) {",
        "fixed_code": "if(head.equals(\"-s\") && args.size()>=2) {",
        "patch": "@@ -47,7 +47,7 @@ public static void main(final String[] _args) throws Exception {\n \n         while(!args.isEmpty()) {\n             String head = args.get(0);\n-            if(head.equals(\"-s\") && args.size()>2) {\n+            if(head.equals(\"-s\") && args.size()>=2) {\n                 url = args.get(1);\n                 args = args.subList(2,args.size());\n                 continue;"
    },
    {
        "commit_id": "1744f6c0b9094b6222f8f461e0c8a3a9695b3119",
        "commit_message": "Merged revisions 17298-17300,17306-17307,17313,17320,17323,17326,17328-17330,17335,17337,17339,17348,17352,17358,17360-17361,17363-17364,17366,17368-17370,17384,17388,17390-17396,17398,17436-17437,17497,17499,17502,17505-17506,17508,17515 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/rc\n\n................\n  r17298 | kohsuke | 2009-04-20 11:06:05 -0700 (Mon, 20 Apr 2009) | 174 lines\n  \n  Merged revisions 17056,17060-17062,17064-17065,17083,17093,17097-17098,17104-17105,17107,17113,17115-17116,17121-17122,17124-17125,17155,17160,17174-17178,17184,17189-17190,17192,17249,17251,17254 via svnmerge from \n  https://www.dev.java.net/svn/hudson/branches/rc\n  \n  ................\n    r17056 | kohsuke | 2009-04-11 11:31:50 -0700 (Sat, 11 Apr 2009) | 29 lines\n    \n    Merged revisions 17033,17035-17037,17039,17041 via svnmerge from \n    https://www.dev.java.net/svn/hudson/branches/rc\n    \n    ........\n      r17033 | kohsuke | 2009-04-10 15:22:13 -0700 (Fri, 10 Apr 2009) | 1 line\n      \n      [maven-release-plugin] prepare release hudson-1_298\n    ........\n      r17035 | kohsuke | 2009-04-10 15:22:42 -0700 (Fri, 10 Apr 2009) | 1 line\n      \n      [maven-release-plugin] prepare for next development iteration\n    ........\n      r17036 | kohsuke | 2009-04-10 17:52:13 -0700 (Fri, 10 Apr 2009) | 1 line\n      \n      remove JDK6 dependency\n    ........\n      r17037 | kohsuke | 2009-04-10 18:21:37 -0700 (Fri, 10 Apr 2009) | 1 line\n      \n      [maven-release-plugin] prepare release hudson-1_299\n    ........\n      r17039 | kohsuke | 2009-04-10 18:27:36 -0700 (Fri, 10 Apr 2009) | 1 line\n      \n      [maven-release-plugin] prepare for next development iteration\n    ........\n      r17041 | kohsuke | 2009-04-10 19:14:19 -0700 (Fri, 10 Apr 2009) | 1 line\n      \n      updated changelog as a part of the release\n    ........\n  ................\n    r17060 | kohsuke | 2009-04-11 12:04:54 -0700 (Sat, 11 Apr 2009) | 1 line\n    \n    doc improvement\n  ................\n    r17061 | kohsuke | 2009-04-11 12:05:29 -0700 (Sat, 11 Apr 2009) | 1 line\n    \n    added a new utility method to build a classpath\n  ................\n    r17062 | kohsuke | 2009-04-11 12:07:05 -0700 (Sat, 11 Apr 2009) | 1 line\n    \n    doc improvement\n  ................\n    r17064 | kohsuke | 2009-04-11 14:17:15 -0700 (Sat, 11 Apr 2009) | 1 line\n    \n    supported the zip file as well\n  ................\n    r17065 | kohsuke | 2009-04-11 14:18:57 -0700 (Sat, 11 Apr 2009) | 1 line\n    \n    added a convenience factory method to fork a connected JVM\n  ................\n    r17083 | kohsuke | 2009-04-11 15:59:51 -0700 (Sat, 11 Apr 2009) | 1 line\n    \n    added a method to compute the host name.\n  ................\n    r17093 | kohsuke | 2009-04-11 22:27:40 -0700 (Sat, 11 Apr 2009) | 1 line\n    \n    bug fix\n  ................\n    r17097 | kohsuke | 2009-04-11 23:52:49 -0700 (Sat, 11 Apr 2009) | 1 line\n    \n    Added more hack to make Which.jarFile work on JDK6u10.\n  ................\n    r17098 | kohsuke | 2009-04-11 23:55:55 -0700 (Sat, 11 Apr 2009) | 1 line\n    \n    ping is default now, so this message is rather pointless\n  ................\n    r17104 | mindless | 2009-04-12 09:22:07 -0700 (Sun, 12 Apr 2009) | 5 lines\n    \n    [FIXED HUDSON-3444] Fix javadoc browsing.\n    Stapler does not seem to call \"<Type> doDynamic()\" (though it does call\n    \"<Type> doSomethingElse()\"), so reverted to \"void doDynamic(req,rsp)\".\n    Could change this back after fix in Stapler..\n  ................\n    r17105 | kohsuke | 2009-04-12 13:59:53 -0700 (Sun, 12 Apr 2009) | 1 line\n    \n    simplified a bit\n  ................\n    r17107 | kohsuke | 2009-04-12 14:27:03 -0700 (Sun, 12 Apr 2009) | 1 line\n    \n    fixed the type parameterization bug. This should be both binary and source compatible.\n  ................\n    r17113 | sogabe | 2009-04-13 07:13:28 -0700 (Mon, 13 Apr 2009) | 1 line\n    \n    added @ExportedBean so that Remote API /computer/api/ works.\n  ................\n    r17115 | kohsuke | 2009-04-13 09:15:03 -0700 (Mon, 13 Apr 2009) | 1 line\n    \n    added asynchronous execution support\n  ................\n    r17116 | kohsuke | 2009-04-13 09:20:08 -0700 (Mon, 13 Apr 2009) | 1 line\n    \n    fixed parameterization\n  ................\n    r17121 | kohsuke | 2009-04-13 11:47:12 -0700 (Mon, 13 Apr 2009) | 1 line\n    \n    improved error diagnostics\n  ................\n    r17122 | kohsuke | 2009-04-13 12:04:49 -0700 (Mon, 13 Apr 2009) | 1 line\n    \n    added one more initialization hook.\n  ................\n    r17124 | kohsuke | 2009-04-13 14:03:01 -0700 (Mon, 13 Apr 2009) | 1 line\n    \n    revised the abstraction. I feel better now.\n  ................\n    r17125 | kohsuke | 2009-04-13 14:03:57 -0700 (Mon, 13 Apr 2009) | 3 lines\n    \n    I want the Plugin.postInitialize() to see all the other plugins, namely PluginManager.uberClassLoader.\n    \n    So this code needs to be in a separate method.\n  ................\n    r17155 | kohsuke | 2009-04-14 14:12:15 -0700 (Tue, 14 Apr 2009) | 1 line\n    \n    Fixed a Jelly bug in CVS after-the-fact tagging\n  ................\n    r17160 | kohsuke | 2009-04-14 14:38:29 -0700 (Tue, 14 Apr 2009) | 1 line\n    \n    added a 48x48 terminal.gif\n  ................\n    r17174 | sogabe | 2009-04-14 19:19:01 -0700 (Tue, 14 Apr 2009) | 1 line\n    \n    added Japanese localization\n  ................\n    r17175 | sogabe | 2009-04-14 19:20:04 -0700 (Tue, 14 Apr 2009) | 1 line\n    \n    fixed encoding...\n  ................\n    r17176 | huybrechts | 2009-04-15 03:05:52 -0700 (Wed, 15 Apr 2009) | 1 line\n    \n    parameters should be serializable\n  ................\n    r17177 | sogabe | 2009-04-15 03:58:56 -0700 (Wed, 15 Apr 2009) | 1 line\n    \n    updated Japanese localzation... orz\n  ................\n    r17178 | jglick | 2009-04-15 06:55:33 -0700 (Wed, 15 Apr 2009) | 2 lines\n    \n    Picking up fix of STAPLER-5, which affected DirectoryBrowserSupport.\n    Cf.: http://www.netbeans.org/nonav/issues/show_bug.cgi?id=162543\n  ................\n    r17184 | kohsuke | 2009-04-15 12:30:30 -0700 (Wed, 15 Apr 2009) | 1 line\n    \n    bumped up to 1.2.2-hudson-4 to improve diagnostics for http://www.nabble.com/Builds-don%27t-work%21%21-td23058973.html\n  ................\n    r17189 | jglick | 2009-04-15 13:33:31 -0700 (Wed, 15 Apr 2009) | 1 line\n    \n    Warnings.\n  ................\n    r17190 | kohsuke | 2009-04-15 14:04:25 -0700 (Wed, 15 Apr 2009) | 1 line\n    \n    further toning down this error message\n  ................\n    r17192 | kohsuke | 2009-04-15 14:06:07 -0700 (Wed, 15 Apr 2009) | 1 line\n    \n    creating a new RC branch\n  ................\n    r17249 | kohsuke | 2009-04-17 16:14:36 -0700 (Fri, 17 Apr 2009) | 1 line\n    \n    [maven-release-plugin] prepare release hudson-1_300\n  ................\n    r17251 | kohsuke | 2009-04-17 16:15:01 -0700 (Fri, 17 Apr 2009) | 1 line\n    \n    [maven-release-plugin] prepare for next development iteration\n  ................\n    r17254 | kohsuke | 2009-04-17 17:48:04 -0700 (Fri, 17 Apr 2009) | 1 line\n    \n    updated changelog as a part of the release\n  ................\n................\n  r17299 | kohsuke | 2009-04-20 11:09:45 -0700 (Mon, 20 Apr 2009) | 8 lines\n  \n  added a defensive check in case plugins fail to compute the changelog. This causes a Jelly error in the following line because the \"set\" variable is null.\n  \n          <j:set var=\"set\" value=\"${it.changeSet}\" />\n          <t:summary icon=\"notepad.gif\">\n            <j:choose>\n              <j:when test=\"${it.hasChangeSetComputed()}\">\n  -->           <st:include it=\"${set}\" page=\"digest.jelly\" />\n................\n  r17300 | kohsuke | 2009-04-20 11:14:12 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  When a SCM plugin is uninstalled, projects using it should fall back to \"No SCM\".\n................\n  r17306 | kohsuke | 2009-04-20 15:05:05 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  control the version of antrun from one place, since Maven has a bug that prevents one reactor from using different versions of the same plugin\n................\n  r17307 | jglick | 2009-04-20 15:07:24 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  Better capitalization.\n................\n  r17313 | jglick | 2009-04-20 15:43:18 -0700 (Mon, 20 Apr 2009) | 2 lines\n  \n  Updating SezPoz to 1.4.\n................\n  r17320 | kohsuke | 2009-04-20 17:13:54 -0700 (Mon, 20 Apr 2009) | 1 line\n  \n  [HUDSON-2154] Adding more error diagnostic report in an attempt to find out a root cause. This change should let us see what's in the stream.\n................\n  r17323 | jglick | 2009-04-20 17:44:04 -0700 (Mon, 20 Apr 2009) | 5 lines\n  \n  [FIXED HUDSON-3502] Maven builds were not correctly using build wrappers.\n  Module set builds were running wrappers but ignoring any environment variables they tried to set.\n  Individual module builds (e.g. \"Run in parallel\" checked, or just click Build Now on a module) were ignoring wrappers altogether.\n  Either way, $DISPLAY was not being set when the XVNC plugin was used.\n  Note: there is a certain amount of code duplication in the various doRun implementations which could perhaps be factored out somewhere.\n................\n  r17326 | redsolo | 2009-04-21 01:10:15 -0700 (Tue, 21 Apr 2009) | 1 line\n  \n  [FIXED HUDSON-3530] Put the argument for HUDSON_ARGS within quotation marks\n................\n  r17328 | sogabe | 2009-04-21 06:16:01 -0700 (Tue, 21 Apr 2009) | 1 line\n  \n  override getDefaultParameterValue so that Boolean Parameter  sets default value when polling SCMs.\n................\n  r17329 | sogabe | 2009-04-21 08:04:40 -0700 (Tue, 21 Apr 2009) | 2 lines\n  \n  Added Japanese localization\n................\n  r17330 | sogabe | 2009-04-21 09:00:16 -0700 (Tue, 21 Apr 2009) | 1 line\n  \n  Updated Japanese localization\n................\n  r17335 | kohsuke | 2009-04-21 11:13:31 -0700 (Tue, 21 Apr 2009) | 1 line\n  \n  no need to propagate \"isUnix\" value.\n................\n  r17337 | kohsuke | 2009-04-21 14:33:31 -0700 (Tue, 21 Apr 2009) | 5 lines\n  \n  with the introduction of Item.READ, I believe this test data now needs to grant that permission to anonymous.\n  \n  This change also implies that existing user will see regressions with this new change. Without the explicit access given to Item.READ, the users who were able to see everything before will suddenly not see any projects at all, until the permission is explicitly granted on Item.READ.\n  \n  OTOH, if I inherit Item.READ from Hudson.READ, the per-project permission won't work, becaues Hudson.READ is necessary to see the top page.\n................\n  r17339 | kohsuke | 2009-04-21 15:11:07 -0700 (Tue, 21 Apr 2009) | 1 line\n  \n  the permission should be reset, or this breaks the test harness, and probably also harmful for other embedded usage.\n................\n  r17348 | kohsuke | 2009-04-21 16:07:03 -0700 (Tue, 21 Apr 2009) | 3 lines\n  \n      Added an extension point to programmatically contribute a Subversion authentication credential.\n      (<a href=\"http://www.nabble.com/Subversion-credentials-extension-point-td23159323.html\">report</a>)\n................\n  r17352 | jglick | 2009-04-21 17:29:43 -0700 (Tue, 21 Apr 2009) | 5 lines\n  \n  [FIXED HUDSON-3465] Permit configurable column lists in views, and add optional Last Stable column.\n  Currently no columns have configurable data, but this can be added if desired (see issue report for demo).\n  API changes: type change in ListView.columns and getColumns; ListViewColumn.shownByDefault added.\n  [merged https://hudson.dev.java.net/svn/hudson/branches/configurable-view-columns-3465]\n................\n  r17358 | kohsuke | 2009-04-21 18:19:38 -0700 (Tue, 21 Apr 2009) | 1 line\n  \n  adding no-op instance that's convenient sometimes\n................\n  r17360 | kohsuke | 2009-04-21 18:32:40 -0700 (Tue, 21 Apr 2009) | 1 line\n  \n  forgot to put the copyright header\n................\n  r17361 | kohsuke | 2009-04-21 18:47:03 -0700 (Tue, 21 Apr 2009) | 1 line\n  \n  [FIXED HUDSON-2596] Preventive node monitoring of slave health metrics can be now configured individually. This will be in Hudson 1.301.\n................\n  r17363 | kohsuke | 2009-04-21 19:07:14 -0700 (Tue, 21 Apr 2009) | 1 line\n  \n  added help\n................\n  r17364 | kohsuke | 2009-04-21 19:08:21 -0700 (Tue, 21 Apr 2009) | 1 line\n  \n  Stapler gets confused which one to invoke for .../script\n................\n  r17366 | abayer | 2009-04-22 07:09:36 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  [FIXED HUDSON-3541] - ending appended to truncated descriptions no longer appended to all descriptions regardless of length.\n................\n  r17368 | sogabe | 2009-04-22 07:37:57 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  added japanese help file and fix typo\n................\n  r17369 | jglick | 2009-04-22 08:06:05 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  Removing redundant modifiers.\n................\n  r17370 | jglick | 2009-04-22 08:07:03 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  Using new Saveable.NOOP.\n................\n  r17384 | kaxelson | 2009-04-22 11:29:24 -0700 (Wed, 22 Apr 2009) | 2 lines\n  \n  HUDSON-3532: [FIXED HUDSON-3532]\n  Changed getAbsolutePath to getCanonicalPath so it would handle symlinks.  Also added necessary exception handling since getCanonicalPath throws IOException.\n................\n  r17388 | kohsuke | 2009-04-22 11:45:03 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  added a workaround for SCM-406\n................\n  r17390 | kohsuke | 2009-04-22 13:21:12 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  [HUDSON-2324] Added an automatic migration of the data\n................\n  r17391 | kohsuke | 2009-04-22 13:35:26 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  compilation problem. sorry.\n................\n  r17392 | kohsuke | 2009-04-22 13:36:01 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  bumped up to 1.103\n................\n  r17393 | jglick | 2009-04-22 13:51:22 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  More helpful diagnostic.\n................\n  r17394 | jglick | 2009-04-22 13:53:14 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  Possibly clearer presentation of options, and showing how to run a headless slave.\n................\n  r17395 | kohsuke | 2009-04-22 14:09:46 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  [HUDSON-2324] Added an automatic migration of the data\n................\n  r17396 | jglick | 2009-04-22 14:11:42 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  Strategy of trying multiple URLs was broken - gave up after the first.\n................\n  r17398 | kohsuke | 2009-04-22 14:11:47 -0700 (Wed, 22 Apr 2009) | 1 line\n  \n  creating a new RC branch\n................\n  r17436 | kohsuke | 2009-04-23 11:16:10 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  bug fix for the auto upgrade handling for HUDSON-2324.\n................\n  r17437 | kohsuke | 2009-04-23 11:31:35 -0700 (Thu, 23 Apr 2009) | 1 line\n  \n  bug fix for the auto upgrade handling for HUDSON-2324.\n................\n  r17497 | kohsuke | 2009-04-24 19:31:56 -0700 (Fri, 24 Apr 2009) | 1 line\n  \n  [maven-release-plugin] prepare release hudson-1_301\n................\n  r17499 | kohsuke | 2009-04-24 19:32:05 -0700 (Fri, 24 Apr 2009) | 1 line\n  \n  [maven-release-plugin] prepare for next development iteration\n................\n  r17502 | kohsuke | 2009-04-24 23:55:10 -0700 (Fri, 24 Apr 2009) | 1 line\n  \n  adding an error check for releasing SNAPSHOT\n................\n  r17505 | kohsuke | 2009-04-25 00:00:02 -0700 (Sat, 25 Apr 2009) | 1 line\n  \n  rolling back botched 1.301 release\n................\n  r17506 | kohsuke | 2009-04-25 00:23:28 -0700 (Sat, 25 Apr 2009) | 1 line\n  \n  [maven-release-plugin] prepare release hudson-1_301\n................\n  r17508 | kohsuke | 2009-04-25 00:23:42 -0700 (Sat, 25 Apr 2009) | 1 line\n  \n  [maven-release-plugin] prepare for next development iteration\n................\n  r17515 | kohsuke | 2009-04-25 02:24:08 -0700 (Sat, 25 Apr 2009) | 1 line\n  \n  updated changelog as a part of the release\n................\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17520 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1744f6c0b9094b6222f8f461e0c8a3a9695b3119",
        "buggy_code": "if(Hudson.getInstance().isUpgradedFromBefore(new VersionNumber(\"1.301\"))) {",
        "fixed_code": "if(Hudson.getInstance().isUpgradedFromBefore(new VersionNumber(\"1.300.*\"))) {",
        "patch": "@@ -122,7 +122,7 @@ private Object readResolve() {\n      * @param grantedPermissions\n      */\n     /*package*/ static void migrateHudson2324(Map<Permission,Set<String>> grantedPermissions) {\n-        if(Hudson.getInstance().isUpgradedFromBefore(new VersionNumber(\"1.301\"))) {\n+        if(Hudson.getInstance().isUpgradedFromBefore(new VersionNumber(\"1.300.*\"))) {\n             Set<String> f = grantedPermissions.get(Hudson.READ);\n             if(f!=null) {\n                 Set<String> t = grantedPermissions.get(Item.READ);"
    },
    {
        "commit_id": "5da7122693f960ecfa536a261847edbe6fd66bb1",
        "commit_message": "bug fix for the auto upgrade handling for HUDSON-2324.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/branches/rc@17436 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5da7122693f960ecfa536a261847edbe6fd66bb1",
        "buggy_code": "if(Hudson.getInstance().isUpgradedFromBefore(new VersionNumber(\"1.301\"))) {",
        "fixed_code": "if(Hudson.getInstance().isUpgradedFromBefore(new VersionNumber(\"1.300.*\"))) {",
        "patch": "@@ -122,7 +122,7 @@ private Object readResolve() {\n      * @param grantedPermissions\n      */\n     /*package*/ static void migrateHudson2324(Map<Permission,Set<String>> grantedPermissions) {\n-        if(Hudson.getInstance().isUpgradedFromBefore(new VersionNumber(\"1.301\"))) {\n+        if(Hudson.getInstance().isUpgradedFromBefore(new VersionNumber(\"1.300.*\"))) {\n             Set<String> f = grantedPermissions.get(Hudson.READ);\n             if(f!=null) {\n                 Set<String> t = grantedPermissions.get(Item.READ);"
    },
    {
        "commit_id": "e29cb4b2e448fa1e2f6db0286fcf3a9d7d0234c1",
        "commit_message": "fixed the type parameterization bug. This should be both binary and source compatible.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@17107 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e29cb4b2e448fa1e2f6db0286fcf3a9d7d0234c1",
        "buggy_code": "public void rebuildHetero(StaplerRequest req, JSONObject formData, Collection<Descriptor<T>> descriptors, String key) throws FormException {",
        "fixed_code": "public void rebuildHetero(StaplerRequest req, JSONObject formData, Collection<? extends Descriptor<T>> descriptors, String key) throws FormException {",
        "patch": "@@ -225,7 +225,7 @@ public void rebuild(StaplerRequest req, JSONObject json, List<? extends Descript\n      * is allowed to create multiple instances of the same descriptor. Order is also\n      * significant.\n      */\n-    public void rebuildHetero(StaplerRequest req, JSONObject formData, Collection<Descriptor<T>> descriptors, String key) throws FormException {\n+    public void rebuildHetero(StaplerRequest req, JSONObject formData, Collection<? extends Descriptor<T>> descriptors, String key) throws FormException {\n         data.replaceBy(Descriptor.newInstancesFromHeteroList(req,formData,key,descriptors));\n     }\n "
    },
    {
        "commit_id": "bbe57a095ea542c957c764e346036c9c74bb1c19",
        "commit_message": "tone down the error message\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16634 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bbe57a095ea542c957c764e346036c9c74bb1c19",
        "buggy_code": "LOGGER.log(Level.WARNING, \"No ZFS available\",e);",
        "fixed_code": "LOGGER.log(Level.INFO, \"No ZFS available\",e);",
        "patch": "@@ -118,7 +118,7 @@ private boolean shouldBeActive() {\n             LOGGER.log(Level.WARNING, \"Failed to detect whether Hudson is on ZFS\",e);\n             return false;\n         } catch (LinkageError e) {\n-            LOGGER.log(Level.WARNING, \"No ZFS available\",e);\n+            LOGGER.log(Level.INFO, \"No ZFS available\",e);\n             return false;\n         }\n     }"
    },
    {
        "commit_id": "4a664c1ad0c953c38208c13555ae1139f8f8450b",
        "commit_message": "fixed compile error\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16338 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4a664c1ad0c953c38208c13555ae1139f8f8450b",
        "buggy_code": "listener.error(Messages.JavadocArchiver_NoMatchFound(javadoc,javadoc.validateAntFileMask(\"**/*\"));",
        "fixed_code": "listener.error(Messages.JavadocArchiver_NoMatchFound(javadoc,javadoc.validateAntFileMask(\"**/*\")));",
        "patch": "@@ -93,7 +93,7 @@ public boolean perform(AbstractBuild<?,?> build, Launcher launcher, BuildListene\n                 if(build.getResult().isBetterOrEqualTo(Result.UNSTABLE)) {\n                     // If the build failed, don't complain that there was no javadoc.\n                     // The build probably didn't even get to the point where it produces javadoc.\n-                    listener.error(Messages.JavadocArchiver_NoMatchFound(javadoc,javadoc.validateAntFileMask(\"**/*\"));\n+                    listener.error(Messages.JavadocArchiver_NoMatchFound(javadoc,javadoc.validateAntFileMask(\"**/*\")));\n                 }\n                 build.setResult(Result.FAILURE);\n                 return true;"
    },
    {
        "commit_id": "d185470f4edced1aa6fb54db9c816e9886c4a660",
        "commit_message": "improved error diagnostics\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16281 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d185470f4edced1aa6fb54db9c816e9886c4a660",
        "buggy_code": "throw new IOException(slaveJnlpURL+\" doesn't look like a JNLP file\");",
        "fixed_code": "throw new IOException(slaveJnlpURL+\" doesn't look like a JNLP file; content type was \"+contentType);",
        "patch": "@@ -200,7 +200,7 @@ private static List<String> parseJnlpArguments(URL slaveJnlpURL) throws ParserCo\n                 // check if this URL points to a .jnlp file\n                 String contentType = con.getHeaderField(\"Content-Type\");\n                 if(contentType==null || !contentType.startsWith(\"application/x-java-jnlp-file\"))\n-                        throw new IOException(slaveJnlpURL+\" doesn't look like a JNLP file\");\n+                        throw new IOException(slaveJnlpURL+\" doesn't look like a JNLP file; content type was \"+contentType);\n \n                 // exec into the JNLP launcher, to fetch the connection parameter through JNLP.\n                 DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();"
    },
    {
        "commit_id": "3e5222bec0a2132d190f4f1c759a20f6fb760de2",
        "commit_message": "    Improved the access denied error message to be more human readable.\n    (<a href=\"http://www.nabble.com/Trouble-in-logging-in-with-Subversion-td22473876.html\">report</a>)\n\nIn 1.292\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16231 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3e5222bec0a2132d190f4f1c759a20f6fb760de2",
        "buggy_code": "throw new AccessDeniedException(a.toString()+\" is missing \"+p.name);",
        "fixed_code": "throw new AccessDeniedException2(a,p);",
        "patch": "@@ -50,7 +50,7 @@ public abstract class ACL {\n     public final void checkPermission(Permission p) {\n         Authentication a = Hudson.getAuthentication();\n         if(!hasPermission(a,p))\n-            throw new AccessDeniedException(a.toString()+\" is missing \"+p.name);\n+            throw new AccessDeniedException2(a,p);\n     }\n \n     /**"
    },
    {
        "commit_id": "a9c25671270d1fce51c746031a29347c88b4f43f",
        "commit_message": "We might be handling environment variables for a slave that can have different path separator than the master, so this is an attempt to get it right. It's still more error prone that I'd like, but this should mostly work for our usage pattern.\n\nThe real problem is that AbstractBuild.getEnvVars() is designed to return overrides, not the whole thing. This was OK until recently, when we started using environment variables to eagerly perform variable expansions inside Builder/Publisher, which requires them to see the entire variables.\n \n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16226 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a9c25671270d1fce51c746031a29347c88b4f43f",
        "buggy_code": "EnvVars envVars = EnvVars.getRemote(launcher.getChannel()).overrideAll(getEnvVars());",
        "fixed_code": "EnvVars envVars = getEnvironment();",
        "patch": "@@ -455,7 +455,7 @@ protected Result doRun(BuildListener listener) throws Exception {\n             if(debug)\n                 listener.getLogger().println(\"Reporters=\"+reporters);\n \n-            EnvVars envVars = EnvVars.getRemote(launcher.getChannel()).overrideAll(getEnvVars());\n+            EnvVars envVars = getEnvironment();\n             \n             ProcessCache.MavenProcess process = mavenProcessCache.get(launcher.getChannel(), listener,\n                 new MavenProcessFactory(getParent().getParent(),launcher,envVars,null));"
    },
    {
        "commit_id": "a9c25671270d1fce51c746031a29347c88b4f43f",
        "commit_message": "We might be handling environment variables for a slave that can have different path separator than the master, so this is an attempt to get it right. It's still more error prone that I'd like, but this should mostly work for our usage pattern.\n\nThe real problem is that AbstractBuild.getEnvVars() is designed to return overrides, not the whole thing. This was OK until recently, when we started using environment variables to eagerly perform variable expansions inside Builder/Publisher, which requires them to see the entire variables.\n \n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16226 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a9c25671270d1fce51c746031a29347c88b4f43f",
        "buggy_code": "Proc proc = new Proc.LocalProc(cmd,getEnvVars(),System.in,new DualOutputStream(System.out,listener.getLogger()));",
        "fixed_code": "Proc proc = new Proc.LocalProc(cmd,getEnvironment(),System.in,new DualOutputStream(System.out,listener.getLogger()));",
        "patch": "@@ -61,7 +61,7 @@ public class ExternalRun extends Run<ExternalJob,ExternalRun> {\n     public void run(final String[] cmd) {\n         run(new Runner() {\n             public Result run(BuildListener listener) throws Exception {\n-                Proc proc = new Proc.LocalProc(cmd,getEnvVars(),System.in,new DualOutputStream(System.out,listener.getLogger()));\n+                Proc proc = new Proc.LocalProc(cmd,getEnvironment(),System.in,new DualOutputStream(System.out,listener.getLogger()));\n                 return proc.join()==0?Result.SUCCESS:Result.FAILURE;\n             }\n "
    },
    {
        "commit_id": "81ba9354522a18f5c3d55fdf5cba89415abb538b",
        "commit_message": "[FIXED HUDSON-3069]\nFixed the initialization order issue.\n\nI tweaked the patch a little to avoid using a flag. It seems to me that HudsonFilter can just check if it already has a corresponding Hudson instance, and if so, it can configure itself.\nThis fix will be in 1.291.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16150 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/81ba9354522a18f5c3d55fdf5cba89415abb538b",
        "buggy_code": "import hudson.util.CopyOnWriteList;",
        "fixed_code": "import org.kohsuke.stapler.MetaClassLoader;",
        "patch": "@@ -26,13 +26,13 @@\n import hudson.XmlFile;\n import hudson.BulkChange;\n import static hudson.Util.singleQuote;\n-import hudson.util.CopyOnWriteList;\n import hudson.scm.CVSSCM;\n import net.sf.json.JSONArray;\n import net.sf.json.JSONObject;\n import org.kohsuke.stapler.StaplerRequest;\n import org.kohsuke.stapler.Stapler;\n import org.kohsuke.stapler.StaplerResponse;\n+import org.kohsuke.stapler.MetaClassLoader;\n import org.springframework.util.StringUtils;\n import org.jvnet.tiger_types.Types;\n import org.apache.commons.io.IOUtils;"
    },
    {
        "commit_id": "e7abed5acc5826792c4408825aa81f62275ccfc8",
        "commit_message": "fixed a bug in the test case\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16076 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e7abed5acc5826792c4408825aa81f62275ccfc8",
        "buggy_code": "p.getPublishersList().add(new Fingerprinter(null,true));",
        "fixed_code": "p.getPublishersList().add(new Fingerprinter(\"\",true));",
        "patch": "@@ -106,7 +106,7 @@ public void testFingerprinting() throws Exception {\n         MatrixProject p = createMatrixProject();\n         p.getBuildersList().add(new Shell(\"touch p\"));\n         p.getPublishersList().add(new ArtifactArchiver(\"p\",null,false));\n-        p.getPublishersList().add(new Fingerprinter(null,true));\n+        p.getPublishersList().add(new Fingerprinter(\"\",true));\n         assertBuildStatusSuccess(p.scheduleBuild2(0).get());\n     }\n }"
    },
    {
        "commit_id": "792730ffcf66ac47d5da6364d9d838737f9f1150",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@16019 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/792730ffcf66ac47d5da6364d9d838737f9f1150",
        "buggy_code": "out.println(\"Failed to delete \"+home+\" to \"+tmpDir);",
        "fixed_code": "out.println(\"Failed to delete \"+backup.getAbsolutePath());",
        "patch": "@@ -414,7 +414,7 @@ private static boolean migrate(TaskListener listener, String target) throws IOEx\n         // delete back up\n         out.println(\"Deleting \"+backup);\n         if(system(new File(\"/\"),listener,\"/usr/bin/rm\",\"-rf\",backup.getAbsolutePath())!=0) {\n-            out.println(\"Failed to delete \"+home+\" to \"+tmpDir);\n+            out.println(\"Failed to delete \"+backup.getAbsolutePath());\n             return false;\n         }\n "
    },
    {
        "commit_id": "e3d1a7c5ff2d4081d826d9432af6f597c5f58409",
        "commit_message": "    LDAP authentication realm didn't support the built-in \"authenticated\" role.\n    (<a href=\"http://www.nabble.com/Hudson-security-issue%3A-authenticated-user-does-not-work-td22176902.html\">report</a>)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15774 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e3d1a7c5ff2d4081d826d9432af6f597c5f58409",
        "buggy_code": "private static final GrantedAuthority[] TEST_AUTHORITY = {new GrantedAuthorityImpl(\"authenticated\")};",
        "fixed_code": "private static final GrantedAuthority[] TEST_AUTHORITY = {AUTHENTICATED_AUTHORITY};",
        "patch": "@@ -245,7 +245,7 @@ public User getUser(String id) {\n     }\n \n     // TODO\n-    private static final GrantedAuthority[] TEST_AUTHORITY = {new GrantedAuthorityImpl(\"authenticated\")};\n+    private static final GrantedAuthority[] TEST_AUTHORITY = {AUTHENTICATED_AUTHORITY};\n \n     public static final class SignupInfo {\n         public String username,password1,password2,fullname,email,captcha;"
    },
    {
        "commit_id": "e3d1a7c5ff2d4081d826d9432af6f597c5f58409",
        "commit_message": "    LDAP authentication realm didn't support the built-in \"authenticated\" role.\n    (<a href=\"http://www.nabble.com/Hudson-security-issue%3A-authenticated-user-does-not-work-td22176902.html\">report</a>)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15774 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e3d1a7c5ff2d4081d826d9432af6f597c5f58409",
        "buggy_code": "new GrantedAuthority[]{new GrantedAuthorityImpl(\"authenticated\")});",
        "fixed_code": "new GrantedAuthority[]{AUTHENTICATED_AUTHORITY});",
        "patch": "@@ -91,7 +91,7 @@ public UserDetails loadUserByUsername(String username) throws UsernameNotFoundEx\n                         throw new UsernameNotFoundException(\"No such Unix user: \"+username);\n                     // return some dummy instance\n                     return new User(username,\"\",true,true,true,true,\n-                            new GrantedAuthority[]{new GrantedAuthorityImpl(\"authenticated\")});\n+                            new GrantedAuthority[]{AUTHENTICATED_AUTHORITY});\n                 }\n             }\n         );"
    },
    {
        "commit_id": "6cd565fdf50e618e81326445a1cf2683fec4d03b",
        "commit_message": "concurrency fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15748 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6cd565fdf50e618e81326445a1cf2683fec4d03b",
        "buggy_code": "private transient ToolDescriptor descriptor;",
        "fixed_code": "private transient volatile ToolDescriptor descriptor;",
        "patch": "@@ -102,7 +102,7 @@ public static final class ToolLocation {\n         private final String type;\r\n         private final String name;\r\n         private final String home;\r\n-        private transient ToolDescriptor descriptor;\r\n+        private transient volatile ToolDescriptor descriptor;\r\n \r\n         public ToolLocation(ToolDescriptor type, String name, String home) {\r\n             this.descriptor = type;\r"
    },
    {
        "commit_id": "79f5d0850f6ddb05a00eca1e9f73b17097b0bd56",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15731 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/79f5d0850f6ddb05a00eca1e9f73b17097b0bd56",
        "buggy_code": "if(Types.getTypeArgument(subTyping,0)==describableType)",
        "fixed_code": "if(Types.erasure(Types.getTypeArgument(subTyping,0))==(Class)describableType)",
        "patch": "@@ -131,7 +131,7 @@ protected List<D> load() {\n                 LOGGER.severe(d.getClass()+\" doesn't extend Descriptor with a type parameter\");\n                 continue;   // skip this one\n             }\n-            if(Types.getTypeArgument(subTyping,0)==describableType)\n+            if(Types.erasure(Types.getTypeArgument(subTyping,0))==(Class)describableType)\n                 r.add(d);\n         }\n         return r;"
    },
    {
        "commit_id": "2a7bdd51e64b11e517f8ad8c9bb3b12e014d19e3",
        "commit_message": "fixed a compile error\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15676 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a7bdd51e64b11e517f8ad8c9bb3b12e014d19e3",
        "buggy_code": "SubversionSCM.DescriptorImpl.DESCRIPTOR.getDisplayName();",
        "fixed_code": "SubversionSCM.init();",
        "patch": "@@ -495,7 +495,7 @@ public Hudson(File root, ServletContext context) throws IOException {\n         }\n \n         // run the init code of SubversionSCM before we load plugins so that plugins can change SubversionWorkspaceSelector.\n-        SubversionSCM.DescriptorImpl.DESCRIPTOR.getDisplayName();\n+        SubversionSCM.init();\n \n         // load plugins.\n         pluginManager = new PluginManager(context);"
    },
    {
        "commit_id": "e73dd67934328572e0b82cf917f3ebebb3d6fd18",
        "commit_message": "fixed a compilation error\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15622 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e73dd67934328572e0b82cf917f3ebebb3d6fd18",
        "buggy_code": "return Maven.DESCRIPTOR;",
        "fixed_code": "return (Maven.DescriptorImpl)Hudson.getInstance().getDescriptor(Maven.class);",
        "patch": "@@ -650,7 +650,7 @@ public MavenModuleSet newInstance(String name) {\n         }\n \n         public Maven.DescriptorImpl getMavenDescriptor() {\n-            return Maven.DESCRIPTOR;\n+            return (Maven.DescriptorImpl)Hudson.getInstance().getDescriptor(Maven.class);\n         }\n     }\n }"
    },
    {
        "commit_id": "abd2950e10638d59121e27753a1283835aa1d1aa",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15612 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/abd2950e10638d59121e27753a1283835aa1d1aa",
        "buggy_code": "for (MavenReporterDescriptor d : Hudson.getInstance().getExtensionList(MavenReporterDescriptor.class)) {",
        "fixed_code": "for (MavenReporterDescriptor d : MavenReporterDescriptor.all()) {",
        "patch": "@@ -435,7 +435,7 @@ protected final List<MavenReporter> createReporters() {\n         getReporters().addAllTo(reporters);\n         getParent().getReporters().addAllTo(reporters);\n \n-        for (MavenReporterDescriptor d : Hudson.getInstance().getExtensionList(MavenReporterDescriptor.class)) {\n+        for (MavenReporterDescriptor d : MavenReporterDescriptor.all()) {\n             if(getReporters().contains(d))\n                 continue;   // already configured\n             MavenReporter auto = d.newAutoInstance(this);"
    },
    {
        "commit_id": "9407efe8bc2526d7a3956636b123152c8f1cbf0c",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15249 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9407efe8bc2526d7a3956636b123152c8f1cbf0c",
        "buggy_code": "rsp.sendRedirect2(req.getContextPath());",
        "fixed_code": "rsp.sendRedirect2(req.getContextPath()+\"/manage\");",
        "patch": "@@ -118,7 +118,7 @@ public void doAct(StaplerRequest req, StaplerResponse rsp) throws ServletExcepti\n         if(req.hasParameter(\"n\")) {\n             // we'll shut up\n             disable(true);\n-            rsp.sendRedirect2(req.getContextPath());\n+            rsp.sendRedirect2(req.getContextPath()+\"/manage\");\n             return;\n         }\n "
    },
    {
        "commit_id": "d5f743c4ffe5d0a97224ce6d8d7900b901c97205",
        "commit_message": "applied a patch from Aleksandar Kostandinov. See http://www.nabble.com/-PATCH--environment-expansion-in-job-configuration-td21872605.html\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15082 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d5f743c4ffe5d0a97224ce6d8d7900b901c97205",
        "buggy_code": "System.getProperty(\"java.home\") + \"/bin/java -jar \" + hudson.getJnlpJars(\"slave.jar\").getURL().getPath());",
        "fixed_code": "System.getProperty(\"java.home\") + \"/bin/java -jar \" + new File(hudson.getJnlpJars(\"slave.jar\").getURL().getPath()).getPath());",
        "patch": "@@ -382,7 +382,7 @@ public DumbSlave createSlave() throws Exception {\n      */\n     public DumbSlave createSlave(Label l) throws Exception {\n         CommandLauncher launcher = new CommandLauncher(\n-                System.getProperty(\"java.home\") + \"/bin/java -jar \" + hudson.getJnlpJars(\"slave.jar\").getURL().getPath());\n+                System.getProperty(\"java.home\") + \"/bin/java -jar \" + new File(hudson.getJnlpJars(\"slave.jar\").getURL().getPath()).getPath());\n \n         // this synchronization block is so that we don't end up adding the same slave name more than once.\n         synchronized (hudson) {"
    },
    {
        "commit_id": "f6e780339fe674a71cbf8e693b6a8fba01e90b52",
        "commit_message": "[FIXED HUDSON-2959] Fix broken images by adding rootUrl in image links returned by\ncheckName; avoid NullPointerException in LDAP groupname lookup when groupSearchBase\nis not set.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@15006 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f6e780339fe674a71cbf8e693b6a8fba01e90b52",
        "buggy_code": "return String.format(\"<img src='%s/images/16x16/%s' style='margin-right:0.2em'>\", Hudson.RESOURCE_PATH, gif);",
        "fixed_code": "return String.format(\"<img src='%s%s/images/16x16/%s' style='margin-right:0.2em'>\", Hudson.getInstance().getRootUrlFromRequest(), Hudson.RESOURCE_PATH, gif);",
        "patch": "@@ -270,7 +270,7 @@ protected void check() throws IOException, ServletException {\n         }\n \n         private String makeImg(String gif) {\n-            return String.format(\"<img src='%s/images/16x16/%s' style='margin-right:0.2em'>\", Hudson.RESOURCE_PATH, gif);\n+            return String.format(\"<img src='%s%s/images/16x16/%s' style='margin-right:0.2em'>\", Hudson.getInstance().getRootUrlFromRequest(), Hudson.RESOURCE_PATH, gif);\n         }\n     }\n }"
    },
    {
        "commit_id": "23bafefcf3b254c76f7d2744523bf117f37b9d88",
        "commit_message": "made it possible to distinguish \"no such user\" from \"I don't know if there's such an user\", so that the UI can use this to improve error diagnostics.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14871 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/23bafefcf3b254c76f7d2744523bf117f37b9d88",
        "buggy_code": "throw new UsernameNotFoundException(e.getMessage(),e);",
        "fixed_code": "throw new UserMayOrMayNotExistException(e.getMessage(),e);",
        "patch": "@@ -187,7 +187,7 @@ public UserDetails loadUserByUsername(String username) throws UsernameNotFoundEx\n                         return ldapSerach.searchForUser(username);\n                     } catch (LdapDataAccessException e) {\n                         LOGGER.log(Level.WARNING, \"Failed to search LDAP for username=\"+username,e);\n-                        throw new UsernameNotFoundException(e.getMessage(),e);\n+                        throw new UserMayOrMayNotExistException(e.getMessage(),e);\n                     }\n                 }\n             });"
    },
    {
        "commit_id": "23bafefcf3b254c76f7d2744523bf117f37b9d88",
        "commit_message": "made it possible to distinguish \"no such user\" from \"I don't know if there's such an user\", so that the UI can use this to improve error diagnostics.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14871 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/23bafefcf3b254c76f7d2744523bf117f37b9d88",
        "buggy_code": "throw new UsernameNotFoundException(Messages.UserDetailsServiceProxy_UnableToQuery(username));",
        "fixed_code": "throw new UserMayOrMayNotExistException(Messages.UserDetailsServiceProxy_UnableToQuery(username));",
        "patch": "@@ -17,7 +17,7 @@ public UserDetails loadUserByUsername(String username) throws UsernameNotFoundEx\n         UserDetailsService uds = delegate;  // fix the reference for concurrency support\n \n         if(uds ==null)\n-            throw new UsernameNotFoundException(Messages.UserDetailsServiceProxy_UnableToQuery(username));\n+            throw new UserMayOrMayNotExistException(Messages.UserDetailsServiceProxy_UnableToQuery(username));\n         return uds.loadUserByUsername(username);\n     }\n "
    },
    {
        "commit_id": "99a09d96724e3a39e815f0aa75aa988594420b7a",
        "commit_message": "An user reported that this can be null, too. Since this is just meant to be an helpful error diagnosis, if it's null, just don't bother and let go.\n\nhttp://www.nabble.com/NullPointerException-in-SVN-Checkout-Update-td21609781.html\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14727 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/99a09d96724e3a39e815f0aa75aa988594420b7a",
        "buggy_code": "if(dir.getDate().after(new Date()))",
        "fixed_code": "if(dir.getDate()!=null && dir.getDate().after(new Date())) // see http://www.nabble.com/NullPointerException-in-SVN-Checkout-Update-td21609781.html that reported this being null.",
        "patch": "@@ -497,7 +497,7 @@ public List<External> invoke(File ws, VirtualChannel channel) throws IOException\n                     for (final ModuleLocation l : locations) {\n                         SVNDirEntry dir = manager.createRepository(l.getSVNURL(),true).info(\"/\",-1);\n                         if(dir!=null) {// I don't think this can ever be null, but be defensive\n-                            if(dir.getDate().after(new Date()))\n+                            if(dir.getDate()!=null && dir.getDate().after(new Date())) // see http://www.nabble.com/NullPointerException-in-SVN-Checkout-Update-td21609781.html that reported this being null.\n                                 listener.getLogger().println(Messages.SubversionSCM_ClockOutOfSync());\n                         }\n                     }"
    },
    {
        "commit_id": "3b5333a9ed2373bc8bc790d59cb65f5854c65f6e",
        "commit_message": "bug fix in case channel==null\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14571 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3b5333a9ed2373bc8bc790d59cb65f5854c65f6e",
        "buggy_code": "channel.call(new Callable<Void,IOException>() {",
        "fixed_code": "act(new Callable<Void,IOException>() {",
        "patch": "@@ -757,7 +757,7 @@ public OutputStream call() throws IOException {\n      * @since 1.105\n      */\n     public void write(final String content, final String encoding) throws IOException, InterruptedException {\n-        channel.call(new Callable<Void,IOException>() {\n+        act(new Callable<Void,IOException>() {\n             public Void call() throws IOException {\n                 File f = new File(remote);\n                 f.getParentFile().mkdirs();"
    },
    {
        "commit_id": "a1e4f83c8140b9a365ddad9b1ffe20cc1f52b245",
        "commit_message": "[HUDSON-2855] improved the error diagnostics\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14522 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a1e4f83c8140b9a365ddad9b1ffe20cc1f52b245",
        "buggy_code": "throw new CmdLineException(\"two arguments required\");",
        "fixed_code": "throw new CmdLineException(\"two arguments required, but got \"+m.args);",
        "patch": "@@ -64,7 +64,7 @@ public static void main(String[] args) throws IOException {\n         try {\n             p.parseArgument(args);\n             if(m.args.size()!=2)\n-                throw new CmdLineException(\"two arguments required\");\n+                throw new CmdLineException(\"two arguments required, but got \"+m.args);\n             if(m.urls.isEmpty())\n                 throw new CmdLineException(\"At least one -url option is required.\");\n         } catch (CmdLineException e) {"
    },
    {
        "commit_id": "35621c081a0710e00a6065448ccf1d4659bf1053",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14454 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/35621c081a0710e00a6065448ccf1d4659bf1053",
        "buggy_code": "pkg.addfile(\"/usr/local/bin/hudson.war\",{\"file\":\"./target/hudson.war\",\"restart_fmri\",\"svc:/system/manifest-import:default\"})",
        "fixed_code": "pkg.addfile(\"/usr/local/bin/hudson.war\",{\"file\":\"./target/hudson.war\",\"restart_fmri\":\"svc:/system/manifest-import:default\"})",
        "patch": "@@ -18,7 +18,7 @@\n \n \n # restart_fmri instructs IPS to reload the manifest\n-pkg.addfile(\"/usr/local/bin/hudson.war\",{\"file\":\"./target/hudson.war\",\"restart_fmri\",\"svc:/system/manifest-import:default\"})\n+pkg.addfile(\"/usr/local/bin/hudson.war\",{\"file\":\"./target/hudson.war\",\"restart_fmri\":\"svc:/system/manifest-import:default\"})\n pkg.addfile(\"/var/svc/manifest/application/hudson.xml\",{\"file\":\"../ips/hudson.xml\"})\n # this is the Hudson home directory\n pkg.mkdirs(\"/var/lib/hudson\")"
    },
    {
        "commit_id": "16709852a918fe0f3f53d3c6c4963ddfdff44024",
        "commit_message": "[FIX HUDSON-2580] \"Email Notification\" action does not work as a Promotion plugin action\n\nCause: Mailer extends Publisher extends BuildStepCompatibilityLayer without\noverriding BuildStepCompatibilityLayer's version of perform(AbstractBuild...)\ntherefore perform() does nothing except return true.\n\nFix: Override the new perform signature in Mailer.\n\nGetting this to work involved removing a whole swag of pointless generics in\nMailSender which doesn't actually care about the specific type of AbstractBuild\nor AbstractProject so wildcards can be used, simplifying things quite a lot.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14253 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/16709852a918fe0f3f53d3c6c4963ddfdff44024",
        "buggy_code": "new MailSender<MavenModule,MavenBuild>(recipients,dontNotifyEveryUnstableBuild,sendToIndividuals).execute(build,listener);",
        "fixed_code": "new MailSender(recipients,dontNotifyEveryUnstableBuild,sendToIndividuals).execute(build,listener);",
        "patch": "@@ -27,7 +27,7 @@ public class MavenMailer extends MavenReporter {\n     public boolean sendToIndividuals;\n \n     public boolean end(MavenBuild build, Launcher launcher, BuildListener listener) throws InterruptedException, IOException {\n-        new MailSender<MavenModule,MavenBuild>(recipients,dontNotifyEveryUnstableBuild,sendToIndividuals).execute(build,listener);\n+        new MailSender(recipients,dontNotifyEveryUnstableBuild,sendToIndividuals).execute(build,listener);\n         return true;\n     }\n "
    },
    {
        "commit_id": "8d771bc2e335fea5369ba06066c87866494fa5e3",
        "commit_message": "Merged revisions 11754-11755,11763-11766,11770,11773-11777,11791-11797,11828-11829,11831-11839,11841-11843,11850,11854,11994,12774,12778-12793,12820-12822,12831-12841,12854-12855,12860-12882,12896-12905,12914-12920,12938-12941,12950,13045-13046,13048,13063-13064,13066,13072-13076,13111,13122-13147,13150,13153-13158,13487-13488,13851-13852,13854-13856,13859,13866-13867,13869,13872-13876,13878-13879,13883-13885,13887-13890,13896-13919 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/multiple-computer-per-node\n\n................\n  r11754 | kohsuke | 2008-08-25 17:59:14 -0700 (Mon, 25 Aug 2008) | 3 lines\n  \n  Adding EphemeralNode for non-persisted dynamically-allocated expandable/shrinkable slave pool.\n  \n  Tweaked the serialization of Hudson.slaves accordingly.\n................\n  r11755 | kohsuke | 2008-08-25 18:10:42 -0700 (Mon, 25 Aug 2008) | 1 line\n  \n  making a small improvements\n................\n  r11763 | kohsuke | 2008-08-26 13:57:25 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  adding more convenience methods\n................\n  r11764 | kohsuke | 2008-08-26 14:24:20 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  ported mask capability from the TFS plugin to the core.\n................\n  r11765 | kohsuke | 2008-08-26 14:26:25 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  making it non-final to allow for subclassing\n................\n  r11766 | kohsuke | 2008-08-26 14:35:20 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  test case for NodeList\n................\n  r11770 | kohsuke | 2008-08-26 15:15:21 -0700 (Tue, 26 Aug 2008) | 3 lines\n  \n  Wrote a simple tool that monitors a file system change (in a poor way) and triggers a build.\n................\n  r11773 | kohsuke | 2008-08-26 17:20:30 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  made more structured\n................\n  r11774 | kohsuke | 2008-08-26 17:47:41 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  indentation fix\n................\n  r11775 | kohsuke | 2008-08-26 17:48:22 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  remove the use of a deprecated feature.\n................\n  r11776 | kohsuke | 2008-08-26 17:51:54 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  renamed to 'ALL' to be consistent with recent use of DescriptorList\n................\n  r11777 | kohsuke | 2008-08-26 18:04:17 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  adding NodeFactory list and its configuration mechanism\n................\n  r11791 | kohsuke | 2008-08-27 09:43:38 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  picked up the latest jelly with Iterable support in <j:forEach>\n................\n  r11792 | kohsuke | 2008-08-27 09:44:08 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  Iterable support added in  commons-jelly 1.1-hudson-20080826\n................\n  r11793 | kohsuke | 2008-08-27 10:15:14 -0700 (Wed, 27 Aug 2008) | 2 lines\n  \n  - added name to NodeFactory for binding NodeFactory to URL tree.\n  - NodeFactory should be access controlled\n................\n  r11794 | kohsuke | 2008-08-27 10:41:11 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  added a method to add one Node at a time\n................\n  r11795 | kohsuke | 2008-08-27 10:41:37 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  added permission constatnt\n................\n  r11796 | kohsuke | 2008-08-27 10:42:13 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  allowing the launch method to throw an exception.\n................\n  r11797 | kohsuke | 2008-08-27 10:44:13 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  improving the handling\n................\n  r11828 | kohsuke | 2008-08-29 11:07:16 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  added executor config to the sidebar.\n................\n  r11829 | kohsuke | 2008-08-29 11:16:11 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  \"it\" should be assigned to NodeFactory\n................\n  r11831 | kohsuke | 2008-08-29 11:44:41 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  formatting changes\n................\n  r11832 | kohsuke | 2008-08-29 11:59:21 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  added a script to create a flashing image from any picture\n................\n  r11833 | kohsuke | 2008-08-29 12:07:56 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  doc improvement.\n................\n  r11834 | kohsuke | 2008-08-29 13:37:59 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  added new images to indicate that a slave is launching\n................\n  r11835 | kohsuke | 2008-08-29 13:43:41 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  indicate a launching slave accordingly.\n................\n  r11836 | kohsuke | 2008-08-29 14:02:28 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  added a method to remove a Node.\n................\n  r11837 | kohsuke | 2008-08-29 14:02:38 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  disconnect\n................\n  r11838 | kohsuke | 2008-08-29 14:03:22 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  formatting changes\n................\n  r11839 | kohsuke | 2008-08-29 14:14:04 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  allowing subclasses.\n................\n  r11841 | kohsuke | 2008-08-29 14:28:29 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  constructor should be the first in the definition.\n................\n  r11842 | kohsuke | 2008-08-29 14:31:01 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  doc improvement.\n................\n  r11843 | kohsuke | 2008-08-29 14:32:48 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  fixed a problem of using partially constructed object during launch(), because the setNode() method is called from the Computer constructor.\n................\n  r11850 | kohsuke | 2008-08-29 14:50:36 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  serialize NodeFactory first so that references to them from NodeList will become references in XML.\n................\n  r11854 | kohsuke | 2008-08-29 14:56:56 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  cleaning up a bit.\n................\n  r11994 | kohsuke | 2008-09-03 14:42:11 -0700 (Wed, 03 Sep 2008) | 21 lines\n  \n  Fixed ArrayIndexOutOfBoundsException during replace(), when the title contains a '$' literal.\n  \n  The typical stack trace looks like:\n  \n  Caused by: java.lang.ArrayIndexOutOfBoundsException: 32\n          at hudson.MarkupText$SubText.start(MarkupText.java:95)\n          at hudson.MarkupText$SubText.group(MarkupText.java:131)\n          at hudson.MarkupText$SubText.replace(MarkupText.java:154)\n          at hudson.MarkupText$SubText.surroundWith(MarkupText.java:83)\n          at \n  hudson.plugins.jira.JiraChangeLogAnnotator.annotate(JiraChangeLogAnnotator.java:37)\n          at \n  hudson.scm.ChangeLogSet$Entry.getMsgAnnotated(ChangeLogSet.java:117)\n          ... 148 more\n  \n  Vijayan Jayaraman and I found this problem while we were looking at the server log of Hudson for OpenJFX.\n  \n  Adding a unit test to verify this behavior, too.  \n................\n  r12774 | kohsuke | 2008-10-27 15:03:36 -0700 (Mon, 27 Oct 2008) | 3 lines\n  \n  preparing for heterogenousness in Node, so that different Node can be configured with different UIs, much like how different Jobs can be configured.\n  \n  Creating a slave works also like creating a new job.\n................\n  r12778 | kohsuke | 2008-10-27 15:06:51 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  We need to be able to create an emtpy Slave initially, so we have to do with the check in the form field validation.\n................\n  r12779 | kohsuke | 2008-10-27 15:48:04 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  making the new slave page a two-step process\n................\n  r12780 | kohsuke | 2008-10-27 15:48:24 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  fixed a compilation problem\n................\n  r12781 | kohsuke | 2008-10-27 15:53:30 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  bug fixes\n................\n  r12782 | kohsuke | 2008-10-27 15:58:20 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  bug fixes\n................\n  r12783 | kohsuke | 2008-10-27 16:08:56 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  making the configuration page work for slaves\n................\n  r12784 | kohsuke | 2008-10-27 16:35:17 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  added new-computer.svg\n................\n  r12785 | kohsuke | 2008-10-27 16:37:26 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  hooking up the config/create pages to the UI\n................\n  r12786 | kohsuke | 2008-10-27 16:44:40 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  fixed a copy method.\n................\n  r12787 | kohsuke | 2008-10-27 16:47:33 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  code was broken when a slave was renamed\n................\n  r12788 | kohsuke | 2008-10-27 16:58:04 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  moving out the commonality into a new tag\n................\n  r12789 | kohsuke | 2008-10-27 17:01:21 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  consistent term usage\n................\n  r12790 | kohsuke | 2008-10-27 17:03:19 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  retiring the configureExecutors. Slave configuration is now moved to individual slave page\n................\n  r12791 | kohsuke | 2008-10-27 17:10:32 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  retired configureExecutors.jelly and completed moved its contents to somewhere else\n................\n  r12792 | kohsuke | 2008-10-27 17:21:53 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  bug fix. request handling of \"/descriptor/FQCN/...\" was broken.\n................\n  r12793 | kohsuke | 2008-10-27 17:27:08 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  NodeFactory -> Cloud to encourage consistent term usage between the code and the UI.\n................\n  r12820 | kohsuke | 2008-10-29 10:58:20 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  formatting fix\n................\n  r12821 | kohsuke | 2008-10-29 11:17:49 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  added classes for handling a secret and prevent accidental exposure of a secret in the persisted form\n................\n  r12822 | kohsuke | 2008-10-29 11:32:39 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  added a base64 validator\n................\n  r12831 | kohsuke | 2008-10-29 15:58:45 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  secret key needs to be persisted outside config.xml (and it is, already!)\n................\n  r12832 | kohsuke | 2008-10-29 16:06:28 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  started working on Amazon EC2 plugin\n................\n  r12833 | kohsuke | 2008-10-29 16:09:20 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  brought the same enhancement as in <textbox />\n................\n  r12834 | kohsuke | 2008-10-29 16:15:05 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  copy over the onclick handler from the original button element\n................\n  r12835 | kohsuke | 2008-10-29 17:01:04 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  allow OK messages to be sent with some mark up.\n................\n  r12836 | kohsuke | 2008-10-29 17:06:52 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  added connection testing. This pattern needs to be generalized since it happens often\n................\n  r12837 | kohsuke | 2008-10-29 17:13:11 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  this is little better\n................\n  r12838 | kohsuke | 2008-10-29 17:17:44 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  added spinner\n................\n  r12839 | kohsuke | 2008-10-29 17:31:54 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  restructuring the validation button support in a form that can be readily moved to the core.\n................\n  r12840 | kohsuke | 2008-10-29 18:01:41 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  added <f:validateButton/> for multi-field server-side validation\n................\n  r12841 | kohsuke | 2008-10-29 18:03:12 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  logic moved to <f:validateButton/> in the core.\n................\n  r12854 | kohsuke | 2008-10-30 13:32:58 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  @QueryParameter.value won't be necessary any more\n................\n  r12855 | kohsuke | 2008-10-30 13:42:58 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  need a strongly-typed constructor.\n................\n  r12860 | kohsuke | 2008-10-30 15:24:18 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  adding more reflection support, which in turn we use in taglibs to raise the level of abstraction.\n................\n  r12861 | kohsuke | 2008-10-30 15:33:22 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  added a tag to create databinding to a<select> element from an enum property\n................\n  r12862 | kohsuke | 2008-10-30 15:37:44 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  adding a smarter bi-directional binding through <f:repeatable field=\"...\"/>\n................\n  r12863 | kohsuke | 2008-10-30 15:47:48 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  making progress with the EC2 support\n................\n  r12864 | kohsuke | 2008-10-30 16:12:34 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  added form field validation for AMI ID\n................\n  r12865 | kohsuke | 2008-10-30 16:15:44 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  added simpler version\n................\n  r12866 | kohsuke | 2008-10-30 16:17:15 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  doc improvement\n................\n  r12867 | kohsuke | 2008-10-30 16:17:19 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  simplified a bit\n................\n  r12868 | kohsuke | 2008-10-30 16:40:25 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  doc improvement\n................\n  r12869 | kohsuke | 2008-10-30 17:00:57 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  adding the provisioning of the new slave\n................\n  r12870 | kohsuke | 2008-10-30 17:07:27 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  /** {@inheritDoc} */ is the default behavior for javadoc, so there's no point in making that explicit.\n................\n  r12871 | kohsuke | 2008-10-30 17:11:04 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  doc bug fix\n................\n  r12872 | kohsuke | 2008-10-30 17:17:20 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  simplified a bit\n................\n  r12873 | kohsuke | 2008-10-30 17:19:06 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  added RetentionStrategy for EC2 instances\n................\n  r12874 | kohsuke | 2008-10-30 17:21:17 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  allowing subclasses to override the disconnect behavior.\n................\n  r12875 | kohsuke | 2008-10-30 18:02:35 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  added termination\n................\n  r12876 | kohsuke | 2008-10-30 18:05:30 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  forgot to rename when NodeFactory was renamed to Cloud\n................\n  r12877 | kohsuke | 2008-10-30 18:06:08 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  using the console icon\n................\n  r12878 | kohsuke | 2008-10-30 18:17:20 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  adding UI to remove a slave.\n................\n  r12879 | kohsuke | 2008-10-30 18:48:57 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  commons-discovery now needed in stapler\n................\n  r12880 | kohsuke | 2008-10-30 18:50:27 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  needs to use a newer version of stapler\n................\n  r12881 | kohsuke | 2008-10-30 18:51:02 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  Bye bye CVS\n................\n  r12882 | kohsuke | 2008-10-30 18:51:43 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  Bye bye CVS\n................\n  r12896 | kohsuke | 2008-10-31 14:52:07 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  fixed the ordering between field and the mighty get(String) method.\n................\n  r12897 | kohsuke | 2008-10-31 15:08:41 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  fixed test compilation problems\n................\n  r12898 | kohsuke | 2008-10-31 15:11:25 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  marking this as a model object since it's always bound to URL.\n................\n  r12899 | kohsuke | 2008-10-31 15:13:42 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  adding UI hook up to manually provision a new node\n................\n  r12900 | kohsuke | 2008-10-31 15:14:00 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  after merging the trunk the version number is different\n................\n  r12901 | kohsuke | 2008-10-31 15:21:54 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  adding UI hook up for provisioning a new slave\n................\n  r12902 | kohsuke | 2008-10-31 15:45:10 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  adding a hook to decorate ComputerLauncher.\n................\n  r12903 | kohsuke | 2008-10-31 15:48:21 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  added filtering support\n................\n  r12904 | kohsuke | 2008-10-31 15:52:45 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  added view\n................\n  r12905 | kohsuke | 2008-10-31 15:53:49 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  doc improvement\n................\n  r12914 | kohsuke | 2008-11-01 17:45:57 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  adding code for connecting with SSH\n................\n  r12915 | kohsuke | 2008-11-01 17:49:28 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  working on launchers\n................\n  r12916 | kohsuke | 2008-11-01 18:33:12 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  added a method to fully read a stream\n................\n  r12917 | kohsuke | 2008-11-01 18:33:45 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  bumped up stapler\n................\n  r12918 | kohsuke | 2008-11-01 18:39:41 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  doc improvement.\n................\n  r12919 | kohsuke | 2008-11-01 18:45:24 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  added a launcher\n................\n  r12920 | kohsuke | 2008-11-01 18:55:02 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  implementing the actual ComputerLauncher\n................\n  r12938 | kohsuke | 2008-11-02 08:56:05 -0800 (Sun, 02 Nov 2008) | 1 line\n  \n  support the field notation\n................\n  r12939 | kohsuke | 2008-11-02 09:20:21 -0800 (Sun, 02 Nov 2008) | 1 line\n  \n  added the mechanism to execute the init script\n................\n  r12940 | kohsuke | 2008-11-02 09:21:38 -0800 (Sun, 02 Nov 2008) | 1 line\n  \n  simplification\n................\n  r12941 | kohsuke | 2008-11-02 09:36:21 -0800 (Sun, 02 Nov 2008) | 1 line\n  \n  adding key handling\n................\n  r12950 | kohsuke | 2008-11-03 11:00:58 -0800 (Mon, 03 Nov 2008) | 1 line\n  \n  formatting changes\n................\n  r13045 | kohsuke | 2008-11-06 15:24:32 -0800 (Thu, 06 Nov 2008) | 1 line\n  \n  adding time series datatype for retaining load average statistics in memory\n................\n  r13046 | kohsuke | 2008-11-06 15:59:02 -0800 (Thu, 06 Nov 2008) | 1 line\n  \n  added a convenience method.\n................\n  r13048 | kohsuke | 2008-11-06 16:21:54 -0800 (Thu, 06 Nov 2008) | 2 lines\n  \n  - started monitoring # of executor statistics.\n  - exposed label to the remote API\n................\n  r13063 | kohsuke | 2008-11-07 13:05:15 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  added a convenience method.\n................\n  r13064 | kohsuke | 2008-11-07 13:11:08 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  monitor the length of the queue too\n................\n  r13066 | kohsuke | 2008-11-07 14:15:56 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  moved the stats to its own class.\n................\n  r13072 | kohsuke | 2008-11-07 15:40:29 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  adding provisioning logic based on load statistics\n................\n  r13073 | kohsuke | 2008-11-07 15:46:00 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  for effective testing, we need sub-sec precision\n................\n  r13074 | kohsuke | 2008-11-07 16:24:44 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  fixed a lie.\n................\n  r13075 | kohsuke | 2008-11-07 16:25:12 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  bug fix\n................\n  r13076 | kohsuke | 2008-11-07 16:30:55 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  avoid using deprecated methods\n................\n  r13111 | kohsuke | 2008-11-09 11:54:23 -0800 (Sun, 09 Nov 2008) | 1 line\n  \n  added the Future<?> return parameter to Computer.launch(). To do this w/o breaking compatibility, renamed launch to connect.\n................\n  r13122 | kohsuke | 2008-11-10 14:38:03 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  allow programmatic update of the assigned label\n................\n  r13123 | kohsuke | 2008-11-10 14:38:40 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  Iterator not needed because CopyOnWriteArrayList doesn't support removal via iterator.\n................\n  r13124 | kohsuke | 2008-11-10 14:39:24 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  added another Builder for tests\n................\n  r13125 | kohsuke | 2008-11-10 14:39:48 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  simplified a bit. This TestEnvironment stuff needs some clearer story.\n................\n  r13126 | kohsuke | 2008-11-10 14:46:40 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  IDEA complains about this.\n................\n  r13127 | kohsuke | 2008-11-10 14:51:53 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  improved the error diagnostics by displaying why a provisioned node failed to launch\n................\n  r13128 | kohsuke | 2008-11-10 14:52:12 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  Started a test case for NodeProvisioner\n................\n  r13129 | kohsuke | 2008-11-10 14:52:27 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  formatting changes\n................\n  r13130 | kohsuke | 2008-11-10 15:16:02 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  report the failure as a failure.\n................\n  r13131 | kohsuke | 2008-11-10 16:34:23 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  adding a parameter to the connect method to support joining to the pending launch activity.\n................\n  r13132 | kohsuke | 2008-11-10 16:38:31 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  making members public so that it can be accessed from other classes (DummyCloudImpl was the first to do this)\n................\n  r13133 | kohsuke | 2008-11-10 16:38:58 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  split the cloud implementation to a separate class to allow reuse.\n................\n  r13134 | kohsuke | 2008-11-10 16:56:27 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  assign unique names to support multiple jobs\n................\n  r13135 | kohsuke | 2008-11-10 17:11:31 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  avoid unnecessary interruption\n................\n  r13136 | kohsuke | 2008-11-10 17:11:41 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  adding another test case\n................\n  r13137 | kohsuke | 2008-11-10 17:16:28 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  cleaned up a test case\n................\n  r13138 | kohsuke | 2008-11-10 17:36:52 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  since the setNode method is called on every Computer just by adding a new node, don't force a new launch attempt.\n................\n  r13139 | kohsuke | 2008-11-10 17:37:38 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  perform orderly shutdown by giving computers enough time to disconnect.\n................\n  r13140 | kohsuke | 2008-11-10 17:38:08 -0800 (Mon, 10 Nov 2008) | 3 lines\n  \n  return Future for synchronization.\n  \n  This breaks binary compatibility, but I checked none of the plugins in Hudson SVN uses this, so I hope this is OK.\n................\n  r13141 | kohsuke | 2008-11-10 17:38:46 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  improved diagnostics\n................\n  r13142 | kohsuke | 2008-11-10 17:39:55 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  removed compiler warning\n................\n  r13143 | kohsuke | 2008-11-10 18:02:56 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  hide the rounding related problem from Cloud by passing int instead of float.\n................\n  r13144 | kohsuke | 2008-11-10 18:10:10 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  bug fix\n................\n  r13145 | kohsuke | 2008-11-10 18:11:51 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  formatting changes\n................\n  r13146 | kohsuke | 2008-11-10 18:15:08 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  moved the slave launch code to HudsonTestCase for reuse\n................\n  r13147 | kohsuke | 2008-11-10 18:20:19 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  adding another test case\n................\n  r13150 | kohsuke | 2008-11-11 07:28:53 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  bug fix\n................\n  r13153 | kohsuke | 2008-11-11 14:04:21 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  cutting down the test size to 5 to increase the test speed\n................\n  r13154 | kohsuke | 2008-11-11 14:04:37 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  improved debuggability\n................\n  r13155 | kohsuke | 2008-11-11 14:10:04 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  added another convenience method\n................\n  r13156 | kohsuke | 2008-11-11 14:10:21 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  further reduce the test turn around time\n................\n  r13157 | kohsuke | 2008-11-11 14:22:03 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  doc improvement and clean up\n................\n  r13158 | kohsuke | 2008-11-11 14:22:28 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  added a new metho\n................\n  r13487 | kohsuke | 2008-12-09 17:17:30 -0800 (Tue, 09 Dec 2008) | 1 line\n  \n  SlaveTemplate needs to be able to computer # of executors.\n................\n  r13488 | kohsuke | 2008-12-09 17:18:05 -0800 (Tue, 09 Dec 2008) | 1 line\n  \n  fixed a compilation problem with the latest head of the branch\n................\n  r13851 | kohsuke | 2008-12-24 13:40:43 -0800 (Wed, 24 Dec 2008) | 82 lines\n  \n  fixed a dead lock reported by Jesse.\n  \n  Found one Java-level deadlock:\n  =============================\n  \"Executor #0 for master\":\n     waiting to lock monitor 0x09409bac (object 0x87474ca0, a hudson.util.CopyOnWriteMap$Hash),\n     which is held by \"main\"\n  \"main\":\n     waiting to lock monitor 0x09409b48 (object 0x87474d48, a hudson.model.Hudson$MasterComputer),\n     which is held by \"Executor #0 for master\"\n  \n  Java stack information for the threads listed above:\n  ===================================================\n  \"Executor #0 for master\":\n  \tat hudson.util.CopyOnWriteMap.remove(CopyOnWriteMap.java:78)\n  \t- waiting to lock <0x87474ca0> (a hudson.util.CopyOnWriteMap$Hash)\n  \tat hudson.model.Hudson.removeComputer(Hudson.java:717)\n  \tat hudson.model.Computer.removeExecutor(Computer.java:433)\n  \t- locked <0x87474d48> (a hudson.model.Hudson$MasterComputer)\n  \tat hudson.model.Executor.run(Executor.java:65)\n  \t- locked <0x87474d48> (a hudson.model.Hudson$MasterComputer)\n  \"main\":\n  \tat hudson.model.Computer.setNumExecutors(Computer.java:338)\n  \t- waiting to lock <0x87474d48> (a hudson.model.Hudson$MasterComputer)\n  \tat hudson.model.Computer.setNode(Computer.java:327)\n  \tat hudson.model.Hudson.updateComputer(Hudson.java:704)\n  \tat hudson.model.Hudson.updateComputerList(Hudson.java:685)\n  \t- locked <0x87474ca0> (a hudson.util.CopyOnWriteMap$Hash)\n  \tat hudson.model.Hudson.setNodes(Hudson.java:1076)\n  \tat hudson.model.Hudson.addNode(Hudson.java:1060)\n  \t- locked <0x87474cb0> (a hudson.model.Hudson)\n  \tat org.jvnet.hudson.test.HudsonTestCase.createSlave(HudsonTestCase.java:247)\n  \tat hudson.slaves.NodeProvisionerTest.testBaselineSlaveUsage(NodeProvisionerTest.java:86)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  \tat java.lang.reflect.Method.invoke(Method.java:597)\n  \tat junit.framework.TestCase.runTest(TestCase.java:154)\n  \tat org.jvnet.hudson.test.HudsonTestCase.runTest(HudsonTestCase.java:151)\n  \tat junit.framework.TestCase.runBare(TestCase.java:127)\n  \tat junit.framework.TestResult$1.protect(TestResult.java:106)\n  \tat junit.framework.TestResult.runProtected(TestResult.java:124)\n  \tat junit.framework.TestResult.run(TestResult.java:109)\n  \tat junit.framework.TestCase.run(TestCase.java:118)\n  \tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n  \tat junit.framework.TestSuite.run(TestSuite.java:203)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  \tat java.lang.reflect.Method.invoke(Method.java:597)\n  \tat org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)\n  \tat org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)\n  \tat org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)\n  \tat org.apache.maven.surefire.Surefire.run(Surefire.java:177)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  \tat java.lang.reflect.Method.invoke(Method.java:597)\n  \tat org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)\n  \tat org.apache.maven.surefire.booter.SurefireBooter.run(SurefireBooter.java:241)\n  \tat org.apache.maven.plugin.surefire.SurefirePlugin.execute(SurefirePlugin.java:537)\n  \tat org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:447)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)\n  \tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:333)\n  \tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:126)\n  \tat org.apache.maven.cli.MavenCli.main(MavenCli.java:282)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  \tat java.lang.reflect.Method.invoke(Method.java:597)\n  \tat org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)\n  \tat org.codehaus.classworlds.Launcher.launch(Launcher.java:255)\n  \tat org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)\n  \tat org.codehaus.classworlds.Launcher.main(Launcher.java:375)\n  \n  Found 1 deadlock.\n................\n  r13852 | kohsuke | 2008-12-24 14:32:29 -0800 (Wed, 24 Dec 2008) | 1 line\n  \n  bug fix in the test case.\n................\n  r13854 | kohsuke | 2008-12-24 15:20:22 -0800 (Wed, 24 Dec 2008) | 2 lines\n  \n  Using a new version of Rhino to get a proper exception chaining.\n................\n  r13855 | kohsuke | 2008-12-24 15:22:13 -0800 (Wed, 24 Dec 2008) | 1 line\n  \n  typo\n................\n  r13856 | kohsuke | 2008-12-24 15:37:56 -0800 (Wed, 24 Dec 2008) | 1 line\n  \n  CR shouldn't be in the repository\n................\n  r13859 | kohsuke | 2008-12-24 15:50:32 -0800 (Wed, 24 Dec 2008) | 3 lines\n  \n  Fixed svn:eol-style.\n................\n  r13866 | kohsuke | 2008-12-24 21:26:43 -0800 (Wed, 24 Dec 2008) | 3 lines\n  \n  Copying rev.13860 to retry a merge that now looks suspicious.\n................\n  r13869 | kohsuke | 2008-12-24 22:03:46 -0800 (Wed, 24 Dec 2008) | 2 lines\n  \n  The 2nd merge was successful, so adopting the successful merge as the multiple-computer-per-node branch.\n................\n  r13872 | kohsuke | 2008-12-25 07:28:37 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  fixed a test failure\n................\n  r13873 | kohsuke | 2008-12-25 08:16:49 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  expanded NodeProvisioner to work on per-label basis\n................\n  r13874 | kohsuke | 2008-12-25 08:27:32 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  bug fix\n................\n  r13875 | kohsuke | 2008-12-25 08:33:17 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  bug fix\n................\n  r13876 | kohsuke | 2008-12-25 08:45:03 -0800 (Thu, 25 Dec 2008) | 3 lines\n  \n  [HUDSON-2605] Strangely, I discovered that on some File, which is new File(\"./target/hudson-for-test\"), file.exists()==false but file.getAbsoluteFile().exists()==true.\n  \n  It looks like this happens when $PWD of the process at the OS level is different from System.getProperty(\"user.dir\")\n................\n  r13878 | kohsuke | 2008-12-25 15:52:45 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  added a marker file\n................\n  r13879 | kohsuke | 2008-12-25 15:53:13 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  use marker file to find the hudson main workspace.\n................\n  r13883 | kohsuke | 2008-12-26 07:50:44 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  avoid using a deprecated method.\n................\n  r13884 | kohsuke | 2008-12-26 07:50:59 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  adding more probes\n................\n  r13885 | kohsuke | 2008-12-26 08:15:42 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  for analyzing test failures, capturing the output is crucial.\n................\n  r13887 | kohsuke | 2008-12-26 11:25:12 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  allow sub-types to intercept mutation\n................\n  r13888 | kohsuke | 2008-12-26 11:26:01 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  clouds need to be taken into account before marking a label as pointless.\n................\n  r13889 | kohsuke | 2008-12-26 11:26:40 -0800 (Fri, 26 Dec 2008) | 3 lines\n  \n  fixing bugs in NodeProvisioner.\n  \n  Conservative estimate on idle executors have to be max, not min.\n................\n  r13890 | kohsuke | 2008-12-26 11:42:53 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  turns out the problem was that we were adding multiple slaves under the same name, which confused Hudson to no end.\n................\n  r13896 | kohsuke | 2008-12-27 07:44:20 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  formatting changes\n................\n  r13897 | kohsuke | 2008-12-27 07:45:00 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  reprot the test name to stdout so that one can easily distinguish different tests in target/surefire-reports/xyz-output.txt\n................\n  r13898 | kohsuke | 2008-12-27 07:54:53 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  doc improvement\n................\n  r13899 | kohsuke | 2008-12-27 09:59:07 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  split the functionality into two classes\n................\n  r13900 | kohsuke | 2008-12-27 10:00:29 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  doc improvement\n................\n  r13901 | kohsuke | 2008-12-27 10:06:24 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added 'tick'\n................\n  r13902 | kohsuke | 2008-12-27 10:08:04 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  adding graph rendering of the load statistics\n................\n  r13903 | kohsuke | 2008-12-27 10:19:41 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  improved graph layout\n................\n  r13904 | kohsuke | 2008-12-27 10:21:05 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  Picker -> TimeScale to better reflect what it is.\n................\n  r13905 | kohsuke | 2008-12-27 10:40:27 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  duplicate\n................\n  r13906 | kohsuke | 2008-12-27 14:39:36 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  renamed to a shorter name\n................\n  r13907 | kohsuke | 2008-12-27 15:03:25 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added icons\n................\n  r13908 | kohsuke | 2008-12-27 16:20:37 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  renamed to make 'loadStatistics' the URL binding.\n................\n  r13909 | kohsuke | 2008-12-27 16:21:01 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  exposing loadStatistics for Computer for better URL binding\n................\n  r13910 | kohsuke | 2008-12-27 16:21:16 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  adding UI support\n................\n  r13911 | kohsuke | 2008-12-27 19:31:43 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added some basic visualization\n................\n  r13912 | kohsuke | 2008-12-27 19:35:10 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  if there's no description, don't even show it.\n................\n  r13913 | kohsuke | 2008-12-27 19:39:26 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added load statistics page for the label as well.\n................\n  r13914 | kohsuke | 2008-12-27 19:48:55 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added one more convenience method.\n................\n  r13915 | kohsuke | 2008-12-27 19:54:29 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  refactored so that a different Dataset can be fed.\n................\n  r13916 | kohsuke | 2008-12-27 19:59:20 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added global load statistics lnk to the management screen.\n................\n  r13917 | kohsuke | 2008-12-27 20:31:01 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  <dt>s should use the bold font to distinguish them from <dd>s\n................\n  r13918 | kohsuke | 2008-12-27 20:35:10 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added description of what the graph means.\n................\n  r13919 | kohsuke | 2008-12-27 20:35:39 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added description of what the graph means.\n................\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14215 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8d771bc2e335fea5369ba06066c87866494fa5e3",
        "buggy_code": "public final String getNewJobDetailPage() {",
        "fixed_code": "public final String newInstanceDetailPage() {",
        "patch": "@@ -26,7 +26,7 @@ protected TopLevelItemDescriptor(Class<? extends TopLevelItem> clazz) {\n      */\n     public abstract String getDisplayName();\n \n-    public final String getNewJobDetailPage() {\n+    public final String newInstanceDetailPage() {\n         return '/'+clazz.getName().replace('.','/').replace('$','/')+\"/newJobDetail.jelly\";\n     }\n "
    },
    {
        "commit_id": "8d771bc2e335fea5369ba06066c87866494fa5e3",
        "commit_message": "Merged revisions 11754-11755,11763-11766,11770,11773-11777,11791-11797,11828-11829,11831-11839,11841-11843,11850,11854,11994,12774,12778-12793,12820-12822,12831-12841,12854-12855,12860-12882,12896-12905,12914-12920,12938-12941,12950,13045-13046,13048,13063-13064,13066,13072-13076,13111,13122-13147,13150,13153-13158,13487-13488,13851-13852,13854-13856,13859,13866-13867,13869,13872-13876,13878-13879,13883-13885,13887-13890,13896-13919 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/multiple-computer-per-node\n\n................\n  r11754 | kohsuke | 2008-08-25 17:59:14 -0700 (Mon, 25 Aug 2008) | 3 lines\n  \n  Adding EphemeralNode for non-persisted dynamically-allocated expandable/shrinkable slave pool.\n  \n  Tweaked the serialization of Hudson.slaves accordingly.\n................\n  r11755 | kohsuke | 2008-08-25 18:10:42 -0700 (Mon, 25 Aug 2008) | 1 line\n  \n  making a small improvements\n................\n  r11763 | kohsuke | 2008-08-26 13:57:25 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  adding more convenience methods\n................\n  r11764 | kohsuke | 2008-08-26 14:24:20 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  ported mask capability from the TFS plugin to the core.\n................\n  r11765 | kohsuke | 2008-08-26 14:26:25 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  making it non-final to allow for subclassing\n................\n  r11766 | kohsuke | 2008-08-26 14:35:20 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  test case for NodeList\n................\n  r11770 | kohsuke | 2008-08-26 15:15:21 -0700 (Tue, 26 Aug 2008) | 3 lines\n  \n  Wrote a simple tool that monitors a file system change (in a poor way) and triggers a build.\n................\n  r11773 | kohsuke | 2008-08-26 17:20:30 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  made more structured\n................\n  r11774 | kohsuke | 2008-08-26 17:47:41 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  indentation fix\n................\n  r11775 | kohsuke | 2008-08-26 17:48:22 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  remove the use of a deprecated feature.\n................\n  r11776 | kohsuke | 2008-08-26 17:51:54 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  renamed to 'ALL' to be consistent with recent use of DescriptorList\n................\n  r11777 | kohsuke | 2008-08-26 18:04:17 -0700 (Tue, 26 Aug 2008) | 1 line\n  \n  adding NodeFactory list and its configuration mechanism\n................\n  r11791 | kohsuke | 2008-08-27 09:43:38 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  picked up the latest jelly with Iterable support in <j:forEach>\n................\n  r11792 | kohsuke | 2008-08-27 09:44:08 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  Iterable support added in  commons-jelly 1.1-hudson-20080826\n................\n  r11793 | kohsuke | 2008-08-27 10:15:14 -0700 (Wed, 27 Aug 2008) | 2 lines\n  \n  - added name to NodeFactory for binding NodeFactory to URL tree.\n  - NodeFactory should be access controlled\n................\n  r11794 | kohsuke | 2008-08-27 10:41:11 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  added a method to add one Node at a time\n................\n  r11795 | kohsuke | 2008-08-27 10:41:37 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  added permission constatnt\n................\n  r11796 | kohsuke | 2008-08-27 10:42:13 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  allowing the launch method to throw an exception.\n................\n  r11797 | kohsuke | 2008-08-27 10:44:13 -0700 (Wed, 27 Aug 2008) | 1 line\n  \n  improving the handling\n................\n  r11828 | kohsuke | 2008-08-29 11:07:16 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  added executor config to the sidebar.\n................\n  r11829 | kohsuke | 2008-08-29 11:16:11 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  \"it\" should be assigned to NodeFactory\n................\n  r11831 | kohsuke | 2008-08-29 11:44:41 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  formatting changes\n................\n  r11832 | kohsuke | 2008-08-29 11:59:21 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  added a script to create a flashing image from any picture\n................\n  r11833 | kohsuke | 2008-08-29 12:07:56 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  doc improvement.\n................\n  r11834 | kohsuke | 2008-08-29 13:37:59 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  added new images to indicate that a slave is launching\n................\n  r11835 | kohsuke | 2008-08-29 13:43:41 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  indicate a launching slave accordingly.\n................\n  r11836 | kohsuke | 2008-08-29 14:02:28 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  added a method to remove a Node.\n................\n  r11837 | kohsuke | 2008-08-29 14:02:38 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  disconnect\n................\n  r11838 | kohsuke | 2008-08-29 14:03:22 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  formatting changes\n................\n  r11839 | kohsuke | 2008-08-29 14:14:04 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  allowing subclasses.\n................\n  r11841 | kohsuke | 2008-08-29 14:28:29 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  constructor should be the first in the definition.\n................\n  r11842 | kohsuke | 2008-08-29 14:31:01 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  doc improvement.\n................\n  r11843 | kohsuke | 2008-08-29 14:32:48 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  fixed a problem of using partially constructed object during launch(), because the setNode() method is called from the Computer constructor.\n................\n  r11850 | kohsuke | 2008-08-29 14:50:36 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  serialize NodeFactory first so that references to them from NodeList will become references in XML.\n................\n  r11854 | kohsuke | 2008-08-29 14:56:56 -0700 (Fri, 29 Aug 2008) | 1 line\n  \n  cleaning up a bit.\n................\n  r11994 | kohsuke | 2008-09-03 14:42:11 -0700 (Wed, 03 Sep 2008) | 21 lines\n  \n  Fixed ArrayIndexOutOfBoundsException during replace(), when the title contains a '$' literal.\n  \n  The typical stack trace looks like:\n  \n  Caused by: java.lang.ArrayIndexOutOfBoundsException: 32\n          at hudson.MarkupText$SubText.start(MarkupText.java:95)\n          at hudson.MarkupText$SubText.group(MarkupText.java:131)\n          at hudson.MarkupText$SubText.replace(MarkupText.java:154)\n          at hudson.MarkupText$SubText.surroundWith(MarkupText.java:83)\n          at \n  hudson.plugins.jira.JiraChangeLogAnnotator.annotate(JiraChangeLogAnnotator.java:37)\n          at \n  hudson.scm.ChangeLogSet$Entry.getMsgAnnotated(ChangeLogSet.java:117)\n          ... 148 more\n  \n  Vijayan Jayaraman and I found this problem while we were looking at the server log of Hudson for OpenJFX.\n  \n  Adding a unit test to verify this behavior, too.  \n................\n  r12774 | kohsuke | 2008-10-27 15:03:36 -0700 (Mon, 27 Oct 2008) | 3 lines\n  \n  preparing for heterogenousness in Node, so that different Node can be configured with different UIs, much like how different Jobs can be configured.\n  \n  Creating a slave works also like creating a new job.\n................\n  r12778 | kohsuke | 2008-10-27 15:06:51 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  We need to be able to create an emtpy Slave initially, so we have to do with the check in the form field validation.\n................\n  r12779 | kohsuke | 2008-10-27 15:48:04 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  making the new slave page a two-step process\n................\n  r12780 | kohsuke | 2008-10-27 15:48:24 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  fixed a compilation problem\n................\n  r12781 | kohsuke | 2008-10-27 15:53:30 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  bug fixes\n................\n  r12782 | kohsuke | 2008-10-27 15:58:20 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  bug fixes\n................\n  r12783 | kohsuke | 2008-10-27 16:08:56 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  making the configuration page work for slaves\n................\n  r12784 | kohsuke | 2008-10-27 16:35:17 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  added new-computer.svg\n................\n  r12785 | kohsuke | 2008-10-27 16:37:26 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  hooking up the config/create pages to the UI\n................\n  r12786 | kohsuke | 2008-10-27 16:44:40 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  fixed a copy method.\n................\n  r12787 | kohsuke | 2008-10-27 16:47:33 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  code was broken when a slave was renamed\n................\n  r12788 | kohsuke | 2008-10-27 16:58:04 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  moving out the commonality into a new tag\n................\n  r12789 | kohsuke | 2008-10-27 17:01:21 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  consistent term usage\n................\n  r12790 | kohsuke | 2008-10-27 17:03:19 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  retiring the configureExecutors. Slave configuration is now moved to individual slave page\n................\n  r12791 | kohsuke | 2008-10-27 17:10:32 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  retired configureExecutors.jelly and completed moved its contents to somewhere else\n................\n  r12792 | kohsuke | 2008-10-27 17:21:53 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  bug fix. request handling of \"/descriptor/FQCN/...\" was broken.\n................\n  r12793 | kohsuke | 2008-10-27 17:27:08 -0700 (Mon, 27 Oct 2008) | 1 line\n  \n  NodeFactory -> Cloud to encourage consistent term usage between the code and the UI.\n................\n  r12820 | kohsuke | 2008-10-29 10:58:20 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  formatting fix\n................\n  r12821 | kohsuke | 2008-10-29 11:17:49 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  added classes for handling a secret and prevent accidental exposure of a secret in the persisted form\n................\n  r12822 | kohsuke | 2008-10-29 11:32:39 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  added a base64 validator\n................\n  r12831 | kohsuke | 2008-10-29 15:58:45 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  secret key needs to be persisted outside config.xml (and it is, already!)\n................\n  r12832 | kohsuke | 2008-10-29 16:06:28 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  started working on Amazon EC2 plugin\n................\n  r12833 | kohsuke | 2008-10-29 16:09:20 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  brought the same enhancement as in <textbox />\n................\n  r12834 | kohsuke | 2008-10-29 16:15:05 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  copy over the onclick handler from the original button element\n................\n  r12835 | kohsuke | 2008-10-29 17:01:04 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  allow OK messages to be sent with some mark up.\n................\n  r12836 | kohsuke | 2008-10-29 17:06:52 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  added connection testing. This pattern needs to be generalized since it happens often\n................\n  r12837 | kohsuke | 2008-10-29 17:13:11 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  this is little better\n................\n  r12838 | kohsuke | 2008-10-29 17:17:44 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  added spinner\n................\n  r12839 | kohsuke | 2008-10-29 17:31:54 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  restructuring the validation button support in a form that can be readily moved to the core.\n................\n  r12840 | kohsuke | 2008-10-29 18:01:41 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  added <f:validateButton/> for multi-field server-side validation\n................\n  r12841 | kohsuke | 2008-10-29 18:03:12 -0700 (Wed, 29 Oct 2008) | 1 line\n  \n  logic moved to <f:validateButton/> in the core.\n................\n  r12854 | kohsuke | 2008-10-30 13:32:58 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  @QueryParameter.value won't be necessary any more\n................\n  r12855 | kohsuke | 2008-10-30 13:42:58 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  need a strongly-typed constructor.\n................\n  r12860 | kohsuke | 2008-10-30 15:24:18 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  adding more reflection support, which in turn we use in taglibs to raise the level of abstraction.\n................\n  r12861 | kohsuke | 2008-10-30 15:33:22 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  added a tag to create databinding to a<select> element from an enum property\n................\n  r12862 | kohsuke | 2008-10-30 15:37:44 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  adding a smarter bi-directional binding through <f:repeatable field=\"...\"/>\n................\n  r12863 | kohsuke | 2008-10-30 15:47:48 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  making progress with the EC2 support\n................\n  r12864 | kohsuke | 2008-10-30 16:12:34 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  added form field validation for AMI ID\n................\n  r12865 | kohsuke | 2008-10-30 16:15:44 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  added simpler version\n................\n  r12866 | kohsuke | 2008-10-30 16:17:15 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  doc improvement\n................\n  r12867 | kohsuke | 2008-10-30 16:17:19 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  simplified a bit\n................\n  r12868 | kohsuke | 2008-10-30 16:40:25 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  doc improvement\n................\n  r12869 | kohsuke | 2008-10-30 17:00:57 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  adding the provisioning of the new slave\n................\n  r12870 | kohsuke | 2008-10-30 17:07:27 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  /** {@inheritDoc} */ is the default behavior for javadoc, so there's no point in making that explicit.\n................\n  r12871 | kohsuke | 2008-10-30 17:11:04 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  doc bug fix\n................\n  r12872 | kohsuke | 2008-10-30 17:17:20 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  simplified a bit\n................\n  r12873 | kohsuke | 2008-10-30 17:19:06 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  added RetentionStrategy for EC2 instances\n................\n  r12874 | kohsuke | 2008-10-30 17:21:17 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  allowing subclasses to override the disconnect behavior.\n................\n  r12875 | kohsuke | 2008-10-30 18:02:35 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  added termination\n................\n  r12876 | kohsuke | 2008-10-30 18:05:30 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  forgot to rename when NodeFactory was renamed to Cloud\n................\n  r12877 | kohsuke | 2008-10-30 18:06:08 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  using the console icon\n................\n  r12878 | kohsuke | 2008-10-30 18:17:20 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  adding UI to remove a slave.\n................\n  r12879 | kohsuke | 2008-10-30 18:48:57 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  commons-discovery now needed in stapler\n................\n  r12880 | kohsuke | 2008-10-30 18:50:27 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  needs to use a newer version of stapler\n................\n  r12881 | kohsuke | 2008-10-30 18:51:02 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  Bye bye CVS\n................\n  r12882 | kohsuke | 2008-10-30 18:51:43 -0700 (Thu, 30 Oct 2008) | 1 line\n  \n  Bye bye CVS\n................\n  r12896 | kohsuke | 2008-10-31 14:52:07 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  fixed the ordering between field and the mighty get(String) method.\n................\n  r12897 | kohsuke | 2008-10-31 15:08:41 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  fixed test compilation problems\n................\n  r12898 | kohsuke | 2008-10-31 15:11:25 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  marking this as a model object since it's always bound to URL.\n................\n  r12899 | kohsuke | 2008-10-31 15:13:42 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  adding UI hook up to manually provision a new node\n................\n  r12900 | kohsuke | 2008-10-31 15:14:00 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  after merging the trunk the version number is different\n................\n  r12901 | kohsuke | 2008-10-31 15:21:54 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  adding UI hook up for provisioning a new slave\n................\n  r12902 | kohsuke | 2008-10-31 15:45:10 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  adding a hook to decorate ComputerLauncher.\n................\n  r12903 | kohsuke | 2008-10-31 15:48:21 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  added filtering support\n................\n  r12904 | kohsuke | 2008-10-31 15:52:45 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  added view\n................\n  r12905 | kohsuke | 2008-10-31 15:53:49 -0700 (Fri, 31 Oct 2008) | 1 line\n  \n  doc improvement\n................\n  r12914 | kohsuke | 2008-11-01 17:45:57 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  adding code for connecting with SSH\n................\n  r12915 | kohsuke | 2008-11-01 17:49:28 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  working on launchers\n................\n  r12916 | kohsuke | 2008-11-01 18:33:12 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  added a method to fully read a stream\n................\n  r12917 | kohsuke | 2008-11-01 18:33:45 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  bumped up stapler\n................\n  r12918 | kohsuke | 2008-11-01 18:39:41 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  doc improvement.\n................\n  r12919 | kohsuke | 2008-11-01 18:45:24 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  added a launcher\n................\n  r12920 | kohsuke | 2008-11-01 18:55:02 -0700 (Sat, 01 Nov 2008) | 1 line\n  \n  implementing the actual ComputerLauncher\n................\n  r12938 | kohsuke | 2008-11-02 08:56:05 -0800 (Sun, 02 Nov 2008) | 1 line\n  \n  support the field notation\n................\n  r12939 | kohsuke | 2008-11-02 09:20:21 -0800 (Sun, 02 Nov 2008) | 1 line\n  \n  added the mechanism to execute the init script\n................\n  r12940 | kohsuke | 2008-11-02 09:21:38 -0800 (Sun, 02 Nov 2008) | 1 line\n  \n  simplification\n................\n  r12941 | kohsuke | 2008-11-02 09:36:21 -0800 (Sun, 02 Nov 2008) | 1 line\n  \n  adding key handling\n................\n  r12950 | kohsuke | 2008-11-03 11:00:58 -0800 (Mon, 03 Nov 2008) | 1 line\n  \n  formatting changes\n................\n  r13045 | kohsuke | 2008-11-06 15:24:32 -0800 (Thu, 06 Nov 2008) | 1 line\n  \n  adding time series datatype for retaining load average statistics in memory\n................\n  r13046 | kohsuke | 2008-11-06 15:59:02 -0800 (Thu, 06 Nov 2008) | 1 line\n  \n  added a convenience method.\n................\n  r13048 | kohsuke | 2008-11-06 16:21:54 -0800 (Thu, 06 Nov 2008) | 2 lines\n  \n  - started monitoring # of executor statistics.\n  - exposed label to the remote API\n................\n  r13063 | kohsuke | 2008-11-07 13:05:15 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  added a convenience method.\n................\n  r13064 | kohsuke | 2008-11-07 13:11:08 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  monitor the length of the queue too\n................\n  r13066 | kohsuke | 2008-11-07 14:15:56 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  moved the stats to its own class.\n................\n  r13072 | kohsuke | 2008-11-07 15:40:29 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  adding provisioning logic based on load statistics\n................\n  r13073 | kohsuke | 2008-11-07 15:46:00 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  for effective testing, we need sub-sec precision\n................\n  r13074 | kohsuke | 2008-11-07 16:24:44 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  fixed a lie.\n................\n  r13075 | kohsuke | 2008-11-07 16:25:12 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  bug fix\n................\n  r13076 | kohsuke | 2008-11-07 16:30:55 -0800 (Fri, 07 Nov 2008) | 1 line\n  \n  avoid using deprecated methods\n................\n  r13111 | kohsuke | 2008-11-09 11:54:23 -0800 (Sun, 09 Nov 2008) | 1 line\n  \n  added the Future<?> return parameter to Computer.launch(). To do this w/o breaking compatibility, renamed launch to connect.\n................\n  r13122 | kohsuke | 2008-11-10 14:38:03 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  allow programmatic update of the assigned label\n................\n  r13123 | kohsuke | 2008-11-10 14:38:40 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  Iterator not needed because CopyOnWriteArrayList doesn't support removal via iterator.\n................\n  r13124 | kohsuke | 2008-11-10 14:39:24 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  added another Builder for tests\n................\n  r13125 | kohsuke | 2008-11-10 14:39:48 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  simplified a bit. This TestEnvironment stuff needs some clearer story.\n................\n  r13126 | kohsuke | 2008-11-10 14:46:40 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  IDEA complains about this.\n................\n  r13127 | kohsuke | 2008-11-10 14:51:53 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  improved the error diagnostics by displaying why a provisioned node failed to launch\n................\n  r13128 | kohsuke | 2008-11-10 14:52:12 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  Started a test case for NodeProvisioner\n................\n  r13129 | kohsuke | 2008-11-10 14:52:27 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  formatting changes\n................\n  r13130 | kohsuke | 2008-11-10 15:16:02 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  report the failure as a failure.\n................\n  r13131 | kohsuke | 2008-11-10 16:34:23 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  adding a parameter to the connect method to support joining to the pending launch activity.\n................\n  r13132 | kohsuke | 2008-11-10 16:38:31 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  making members public so that it can be accessed from other classes (DummyCloudImpl was the first to do this)\n................\n  r13133 | kohsuke | 2008-11-10 16:38:58 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  split the cloud implementation to a separate class to allow reuse.\n................\n  r13134 | kohsuke | 2008-11-10 16:56:27 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  assign unique names to support multiple jobs\n................\n  r13135 | kohsuke | 2008-11-10 17:11:31 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  avoid unnecessary interruption\n................\n  r13136 | kohsuke | 2008-11-10 17:11:41 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  adding another test case\n................\n  r13137 | kohsuke | 2008-11-10 17:16:28 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  cleaned up a test case\n................\n  r13138 | kohsuke | 2008-11-10 17:36:52 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  since the setNode method is called on every Computer just by adding a new node, don't force a new launch attempt.\n................\n  r13139 | kohsuke | 2008-11-10 17:37:38 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  perform orderly shutdown by giving computers enough time to disconnect.\n................\n  r13140 | kohsuke | 2008-11-10 17:38:08 -0800 (Mon, 10 Nov 2008) | 3 lines\n  \n  return Future for synchronization.\n  \n  This breaks binary compatibility, but I checked none of the plugins in Hudson SVN uses this, so I hope this is OK.\n................\n  r13141 | kohsuke | 2008-11-10 17:38:46 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  improved diagnostics\n................\n  r13142 | kohsuke | 2008-11-10 17:39:55 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  removed compiler warning\n................\n  r13143 | kohsuke | 2008-11-10 18:02:56 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  hide the rounding related problem from Cloud by passing int instead of float.\n................\n  r13144 | kohsuke | 2008-11-10 18:10:10 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  bug fix\n................\n  r13145 | kohsuke | 2008-11-10 18:11:51 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  formatting changes\n................\n  r13146 | kohsuke | 2008-11-10 18:15:08 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  moved the slave launch code to HudsonTestCase for reuse\n................\n  r13147 | kohsuke | 2008-11-10 18:20:19 -0800 (Mon, 10 Nov 2008) | 1 line\n  \n  adding another test case\n................\n  r13150 | kohsuke | 2008-11-11 07:28:53 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  bug fix\n................\n  r13153 | kohsuke | 2008-11-11 14:04:21 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  cutting down the test size to 5 to increase the test speed\n................\n  r13154 | kohsuke | 2008-11-11 14:04:37 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  improved debuggability\n................\n  r13155 | kohsuke | 2008-11-11 14:10:04 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  added another convenience method\n................\n  r13156 | kohsuke | 2008-11-11 14:10:21 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  further reduce the test turn around time\n................\n  r13157 | kohsuke | 2008-11-11 14:22:03 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  doc improvement and clean up\n................\n  r13158 | kohsuke | 2008-11-11 14:22:28 -0800 (Tue, 11 Nov 2008) | 1 line\n  \n  added a new metho\n................\n  r13487 | kohsuke | 2008-12-09 17:17:30 -0800 (Tue, 09 Dec 2008) | 1 line\n  \n  SlaveTemplate needs to be able to computer # of executors.\n................\n  r13488 | kohsuke | 2008-12-09 17:18:05 -0800 (Tue, 09 Dec 2008) | 1 line\n  \n  fixed a compilation problem with the latest head of the branch\n................\n  r13851 | kohsuke | 2008-12-24 13:40:43 -0800 (Wed, 24 Dec 2008) | 82 lines\n  \n  fixed a dead lock reported by Jesse.\n  \n  Found one Java-level deadlock:\n  =============================\n  \"Executor #0 for master\":\n     waiting to lock monitor 0x09409bac (object 0x87474ca0, a hudson.util.CopyOnWriteMap$Hash),\n     which is held by \"main\"\n  \"main\":\n     waiting to lock monitor 0x09409b48 (object 0x87474d48, a hudson.model.Hudson$MasterComputer),\n     which is held by \"Executor #0 for master\"\n  \n  Java stack information for the threads listed above:\n  ===================================================\n  \"Executor #0 for master\":\n  \tat hudson.util.CopyOnWriteMap.remove(CopyOnWriteMap.java:78)\n  \t- waiting to lock <0x87474ca0> (a hudson.util.CopyOnWriteMap$Hash)\n  \tat hudson.model.Hudson.removeComputer(Hudson.java:717)\n  \tat hudson.model.Computer.removeExecutor(Computer.java:433)\n  \t- locked <0x87474d48> (a hudson.model.Hudson$MasterComputer)\n  \tat hudson.model.Executor.run(Executor.java:65)\n  \t- locked <0x87474d48> (a hudson.model.Hudson$MasterComputer)\n  \"main\":\n  \tat hudson.model.Computer.setNumExecutors(Computer.java:338)\n  \t- waiting to lock <0x87474d48> (a hudson.model.Hudson$MasterComputer)\n  \tat hudson.model.Computer.setNode(Computer.java:327)\n  \tat hudson.model.Hudson.updateComputer(Hudson.java:704)\n  \tat hudson.model.Hudson.updateComputerList(Hudson.java:685)\n  \t- locked <0x87474ca0> (a hudson.util.CopyOnWriteMap$Hash)\n  \tat hudson.model.Hudson.setNodes(Hudson.java:1076)\n  \tat hudson.model.Hudson.addNode(Hudson.java:1060)\n  \t- locked <0x87474cb0> (a hudson.model.Hudson)\n  \tat org.jvnet.hudson.test.HudsonTestCase.createSlave(HudsonTestCase.java:247)\n  \tat hudson.slaves.NodeProvisionerTest.testBaselineSlaveUsage(NodeProvisionerTest.java:86)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  \tat java.lang.reflect.Method.invoke(Method.java:597)\n  \tat junit.framework.TestCase.runTest(TestCase.java:154)\n  \tat org.jvnet.hudson.test.HudsonTestCase.runTest(HudsonTestCase.java:151)\n  \tat junit.framework.TestCase.runBare(TestCase.java:127)\n  \tat junit.framework.TestResult$1.protect(TestResult.java:106)\n  \tat junit.framework.TestResult.runProtected(TestResult.java:124)\n  \tat junit.framework.TestResult.run(TestResult.java:109)\n  \tat junit.framework.TestCase.run(TestCase.java:118)\n  \tat junit.framework.TestSuite.runTest(TestSuite.java:208)\n  \tat junit.framework.TestSuite.run(TestSuite.java:203)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  \tat java.lang.reflect.Method.invoke(Method.java:597)\n  \tat org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)\n  \tat org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)\n  \tat org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)\n  \tat org.apache.maven.surefire.Surefire.run(Surefire.java:177)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  \tat java.lang.reflect.Method.invoke(Method.java:597)\n  \tat org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)\n  \tat org.apache.maven.surefire.booter.SurefireBooter.run(SurefireBooter.java:241)\n  \tat org.apache.maven.plugin.surefire.SurefirePlugin.execute(SurefirePlugin.java:537)\n  \tat org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:447)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor.java:539)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifecycleExecutor.java:480)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.java:459)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultLifecycleExecutor.java:311)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleExecutor.java:278)\n  \tat org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java:143)\n  \tat org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:333)\n  \tat org.apache.maven.DefaultMaven.execute(DefaultMaven.java:126)\n  \tat org.apache.maven.cli.MavenCli.main(MavenCli.java:282)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  \tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n  \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n  \tat java.lang.reflect.Method.invoke(Method.java:597)\n  \tat org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)\n  \tat org.codehaus.classworlds.Launcher.launch(Launcher.java:255)\n  \tat org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)\n  \tat org.codehaus.classworlds.Launcher.main(Launcher.java:375)\n  \n  Found 1 deadlock.\n................\n  r13852 | kohsuke | 2008-12-24 14:32:29 -0800 (Wed, 24 Dec 2008) | 1 line\n  \n  bug fix in the test case.\n................\n  r13854 | kohsuke | 2008-12-24 15:20:22 -0800 (Wed, 24 Dec 2008) | 2 lines\n  \n  Using a new version of Rhino to get a proper exception chaining.\n................\n  r13855 | kohsuke | 2008-12-24 15:22:13 -0800 (Wed, 24 Dec 2008) | 1 line\n  \n  typo\n................\n  r13856 | kohsuke | 2008-12-24 15:37:56 -0800 (Wed, 24 Dec 2008) | 1 line\n  \n  CR shouldn't be in the repository\n................\n  r13859 | kohsuke | 2008-12-24 15:50:32 -0800 (Wed, 24 Dec 2008) | 3 lines\n  \n  Fixed svn:eol-style.\n................\n  r13866 | kohsuke | 2008-12-24 21:26:43 -0800 (Wed, 24 Dec 2008) | 3 lines\n  \n  Copying rev.13860 to retry a merge that now looks suspicious.\n................\n  r13869 | kohsuke | 2008-12-24 22:03:46 -0800 (Wed, 24 Dec 2008) | 2 lines\n  \n  The 2nd merge was successful, so adopting the successful merge as the multiple-computer-per-node branch.\n................\n  r13872 | kohsuke | 2008-12-25 07:28:37 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  fixed a test failure\n................\n  r13873 | kohsuke | 2008-12-25 08:16:49 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  expanded NodeProvisioner to work on per-label basis\n................\n  r13874 | kohsuke | 2008-12-25 08:27:32 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  bug fix\n................\n  r13875 | kohsuke | 2008-12-25 08:33:17 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  bug fix\n................\n  r13876 | kohsuke | 2008-12-25 08:45:03 -0800 (Thu, 25 Dec 2008) | 3 lines\n  \n  [HUDSON-2605] Strangely, I discovered that on some File, which is new File(\"./target/hudson-for-test\"), file.exists()==false but file.getAbsoluteFile().exists()==true.\n  \n  It looks like this happens when $PWD of the process at the OS level is different from System.getProperty(\"user.dir\")\n................\n  r13878 | kohsuke | 2008-12-25 15:52:45 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  added a marker file\n................\n  r13879 | kohsuke | 2008-12-25 15:53:13 -0800 (Thu, 25 Dec 2008) | 1 line\n  \n  use marker file to find the hudson main workspace.\n................\n  r13883 | kohsuke | 2008-12-26 07:50:44 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  avoid using a deprecated method.\n................\n  r13884 | kohsuke | 2008-12-26 07:50:59 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  adding more probes\n................\n  r13885 | kohsuke | 2008-12-26 08:15:42 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  for analyzing test failures, capturing the output is crucial.\n................\n  r13887 | kohsuke | 2008-12-26 11:25:12 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  allow sub-types to intercept mutation\n................\n  r13888 | kohsuke | 2008-12-26 11:26:01 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  clouds need to be taken into account before marking a label as pointless.\n................\n  r13889 | kohsuke | 2008-12-26 11:26:40 -0800 (Fri, 26 Dec 2008) | 3 lines\n  \n  fixing bugs in NodeProvisioner.\n  \n  Conservative estimate on idle executors have to be max, not min.\n................\n  r13890 | kohsuke | 2008-12-26 11:42:53 -0800 (Fri, 26 Dec 2008) | 1 line\n  \n  turns out the problem was that we were adding multiple slaves under the same name, which confused Hudson to no end.\n................\n  r13896 | kohsuke | 2008-12-27 07:44:20 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  formatting changes\n................\n  r13897 | kohsuke | 2008-12-27 07:45:00 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  reprot the test name to stdout so that one can easily distinguish different tests in target/surefire-reports/xyz-output.txt\n................\n  r13898 | kohsuke | 2008-12-27 07:54:53 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  doc improvement\n................\n  r13899 | kohsuke | 2008-12-27 09:59:07 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  split the functionality into two classes\n................\n  r13900 | kohsuke | 2008-12-27 10:00:29 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  doc improvement\n................\n  r13901 | kohsuke | 2008-12-27 10:06:24 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added 'tick'\n................\n  r13902 | kohsuke | 2008-12-27 10:08:04 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  adding graph rendering of the load statistics\n................\n  r13903 | kohsuke | 2008-12-27 10:19:41 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  improved graph layout\n................\n  r13904 | kohsuke | 2008-12-27 10:21:05 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  Picker -> TimeScale to better reflect what it is.\n................\n  r13905 | kohsuke | 2008-12-27 10:40:27 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  duplicate\n................\n  r13906 | kohsuke | 2008-12-27 14:39:36 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  renamed to a shorter name\n................\n  r13907 | kohsuke | 2008-12-27 15:03:25 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added icons\n................\n  r13908 | kohsuke | 2008-12-27 16:20:37 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  renamed to make 'loadStatistics' the URL binding.\n................\n  r13909 | kohsuke | 2008-12-27 16:21:01 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  exposing loadStatistics for Computer for better URL binding\n................\n  r13910 | kohsuke | 2008-12-27 16:21:16 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  adding UI support\n................\n  r13911 | kohsuke | 2008-12-27 19:31:43 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added some basic visualization\n................\n  r13912 | kohsuke | 2008-12-27 19:35:10 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  if there's no description, don't even show it.\n................\n  r13913 | kohsuke | 2008-12-27 19:39:26 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added load statistics page for the label as well.\n................\n  r13914 | kohsuke | 2008-12-27 19:48:55 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added one more convenience method.\n................\n  r13915 | kohsuke | 2008-12-27 19:54:29 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  refactored so that a different Dataset can be fed.\n................\n  r13916 | kohsuke | 2008-12-27 19:59:20 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added global load statistics lnk to the management screen.\n................\n  r13917 | kohsuke | 2008-12-27 20:31:01 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  <dt>s should use the bold font to distinguish them from <dd>s\n................\n  r13918 | kohsuke | 2008-12-27 20:35:10 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added description of what the graph means.\n................\n  r13919 | kohsuke | 2008-12-27 20:35:39 -0800 (Sat, 27 Dec 2008) | 1 line\n  \n  added description of what the graph means.\n................\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14215 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8d771bc2e335fea5369ba06066c87866494fa5e3",
        "buggy_code": "slaves.add(new Slave(\"test\",\"dummy\",dir.getAbsolutePath(),\"1\", Mode.NORMAL, \"\",",
        "fixed_code": "slaves.add(new DumbSlave(\"test\",\"dummy\",dir.getAbsolutePath(),\"1\", Mode.NORMAL, \"\",",
        "patch": "@@ -99,7 +99,7 @@ private String getJnlpLink(Computer c) throws Exception {\n     private Computer addTestSlave() throws Exception {\n         List<Slave> slaves = new ArrayList<Slave>(hudson.getSlaves());\n         File dir = Util.createTempDir();\n-        slaves.add(new Slave(\"test\",\"dummy\",dir.getAbsolutePath(),\"1\", Mode.NORMAL, \"\",\n+        slaves.add(new DumbSlave(\"test\",\"dummy\",dir.getAbsolutePath(),\"1\", Mode.NORMAL, \"\",\n                 new JNLPLauncher(), RetentionStrategy.INSTANCE));\n         hudson.setSlaves(slaves);\n         Computer c = hudson.getComputer(\"test\");"
    },
    {
        "commit_id": "3922bb2319c2b0e6916f86234bfaf839763ce60c",
        "commit_message": "    SecurityRealms can now better control the servlet filter chain.\n    (<a href=\"http://www.nabble.com/proposed-patch-to-expose-filters-through-SecurityRealms-tt21062397.html\">report</a>)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14203 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3922bb2319c2b0e6916f86234bfaf839763ce60c",
        "buggy_code": "a = HudsonFilter.AUTHENTICATION_MANAGER.authenticate(a);",
        "fixed_code": "a = this.getSecurityComponents().manager.authenticate(a);",
        "patch": "@@ -87,7 +87,7 @@ public void doCreateAccount(StaplerRequest req, StaplerResponse rsp) throws IOEx\n         if(u!=null) {\n             // ... and let him login\n             Authentication a = u.getProperty(Details.class).createAuthentication();\n-            a = HudsonFilter.AUTHENTICATION_MANAGER.authenticate(a);\n+            a = this.getSecurityComponents().manager.authenticate(a);\n             SecurityContextHolder.getContext().setAuthentication(a);\n \n             // then back to top"
    },
    {
        "commit_id": "3922bb2319c2b0e6916f86234bfaf839763ce60c",
        "commit_message": "    SecurityRealms can now better control the servlet filter chain.\n    (<a href=\"http://www.nabble.com/proposed-patch-to-expose-filters-through-SecurityRealms-tt21062397.html\">report</a>)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14203 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3922bb2319c2b0e6916f86234bfaf839763ce60c",
        "buggy_code": "LdapUserDetails details = (LdapUserDetails) HudsonFilter.USER_DETAILS_SERVICE_PROXY.loadUserByUsername(u.getId());",
        "fixed_code": "LdapUserDetails details = (LdapUserDetails) hudson.getSecurityRealm().getSecurityComponents().userDetails.loadUserByUsername(u.getId());",
        "patch": "@@ -212,7 +212,7 @@ public String findMailAddressFor(User u) {\n             if(!(hudson.getSecurityRealm() instanceof LDAPSecurityRealm))\n                 return null;\n             try {\n-                LdapUserDetails details = (LdapUserDetails) HudsonFilter.USER_DETAILS_SERVICE_PROXY.loadUserByUsername(u.getId());\n+                LdapUserDetails details = (LdapUserDetails) hudson.getSecurityRealm().getSecurityComponents().userDetails.loadUserByUsername(u.getId());\n                 Attribute mail = details.getAttributes().get(\"mail\");\n                 if(mail==null)  return null;    // not found\n                 return (String)mail.get();"
    },
    {
        "commit_id": "445603a2d103c8c38663c98c6b883282c9a6bacb",
        "commit_message": "Fix typo in css\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@14045 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/445603a2d103c8c38663c98c6b883282c9a6bacb",
        "buggy_code": "\"<body style='backgournd-color:white; color:white;'>\" +",
        "fixed_code": "\"<body style='background-color:white; color:white;'>\" +",
        "patch": "@@ -54,7 +54,7 @@ public void commence(ServletRequest request, ServletResponse response, Authentic\n                 \"<meta http-equiv='refresh' content='1;url=%1$s'/>\" +\n                 \"<script>window.location.replace('%1$s');</script>\" +\n                 \"</head>\" +\n-                \"<body style='backgournd-color:white; color:white;'>\" +\n+                \"<body style='background-color:white; color:white;'>\" +\n                 \"Authentication required</body></html>\", loginForm\n             );\n         }"
    },
    {
        "commit_id": "bf096266b9ab276dd8d9c6405228e96205322820",
        "commit_message": "If AWT doesn't work, Hudson reports an error now.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@13812 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bf096266b9ab276dd8d9c6405228e96205322820",
        "buggy_code": "if(ChartUtil.awtProblem) {",
        "fixed_code": "if(ChartUtil.awtProblem!=null) {",
        "patch": "@@ -156,7 +156,7 @@ public List<CaseResult> getFailedTests() {\n      * Generates a PNG image for the test result trend.\n      */\n     public void doGraph( StaplerRequest req, StaplerResponse rsp) throws IOException {\n-        if(ChartUtil.awtProblem) {\n+        if(ChartUtil.awtProblem!=null) {\n             // not available. send out error message\n             rsp.sendRedirect2(req.getContextPath()+\"/images/headless.png\");\n             return;"
    },
    {
        "commit_id": "76b6ae8c017773c44d6b4eb1518954007b537765",
        "commit_message": "Merged revisions 13757-13773 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/log-manager\n\n........\n  r13757 | kohsuke | 2008-12-21 08:36:43 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  work so far\n........\n  r13758 | kohsuke | 2008-12-21 11:13:59 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  added persistence for LogRecorders\n........\n  r13759 | kohsuke | 2008-12-21 11:22:04 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  bug fix\n........\n  r13760 | kohsuke | 2008-12-21 11:26:53 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  improved matching\n........\n  r13761 | kohsuke | 2008-12-21 11:27:36 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  bug fix\n........\n  r13762 | kohsuke | 2008-12-21 11:35:13 -0800 (Sun, 21 Dec 2008) | 3 lines\n  \n  added removal.\n  \n  I should really think about how to simplify CRUD operations\n........\n  r13763 | kohsuke | 2008-12-21 11:36:31 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  bug fix. Or else it will haunt us back when we restart.\n........\n  r13764 | kohsuke | 2008-12-21 11:43:13 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  added a needed image\n........\n  r13765 | kohsuke | 2008-12-21 11:49:05 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  sort log recorders\n........\n  r13766 | kohsuke | 2008-12-21 11:57:31 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  Finishing up UI\n........\n  r13767 | kohsuke | 2008-12-21 12:01:43 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  moving \"/logRss\" to \"/log/rss\"\n........\n  r13768 | kohsuke | 2008-12-21 12:08:36 -0800 (Sun, 21 Dec 2008) | 3 lines\n  \n  Moved logging code to its own package.\n........\n  r13769 | kohsuke | 2008-12-21 12:18:46 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  added RSS support\n........\n  r13770 | kohsuke | 2008-12-21 12:19:32 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  doc improvement\n........\n  r13771 | kohsuke | 2008-12-21 13:15:29 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  switched to the combobox\n........\n  r13772 | kohsuke | 2008-12-21 17:33:07 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  added help files\n........\n  r13773 | kohsuke | 2008-12-21 17:39:00 -0800 (Sun, 21 Dec 2008) | 1 line\n  \n  doc improvement\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@13776 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/76b6ae8c017773c44d6b4eb1518954007b537765",
        "buggy_code": "final class RSS {",
        "fixed_code": "public final class RSS {",
        "patch": "@@ -15,7 +15,7 @@\n  *\n  * @author Kohsuke Kawaguchi\n  */\n-final class RSS {\n+public final class RSS {\n \n     /**\n      * Parses trackback ping."
    },
    {
        "commit_id": "1641b79b45605e79e8f36be2e1fa2685a96a2d9a",
        "commit_message": "improved error reporting\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@13507 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1641b79b45605e79e8f36be2e1fa2685a96a2d9a",
        "buggy_code": "assertNull(m.mavenName);",
        "fixed_code": "assertNull(\"found \"+m.mavenName,m.mavenName);",
        "patch": "@@ -26,7 +26,7 @@ public void testConfigRoundtrip() throws Exception {\n         Maven m = (Maven)p.getBuildersList().get(Maven.DESCRIPTOR);\n         assertNotNull(m);\n         assertEquals(\"a\",m.targets);\n-        assertNull(m.mavenName);\n+        assertNull(\"found \"+m.mavenName,m.mavenName);\n         assertEquals(\"b.pom\",m.pom);\n         assertEquals(\"c=d\",m.properties);\n         assertEquals(\"-e\",m.jvmOptions);"
    },
    {
        "commit_id": "b840e13175a7adfa2e21a413e9795e5705257de4",
        "commit_message": "XPath matching numbers and booleans in the remote API will render text/plain, instead of error.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@13506 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b840e13175a7adfa2e21a413e9795e5705257de4",
        "buggy_code": "if(result instanceof String) {",
        "fixed_code": "if(result instanceof String || result instanceof Number || result instanceof Boolean) {",
        "patch": "@@ -107,7 +107,7 @@ public void doXml(StaplerRequest req, StaplerResponse rsp,\n             return;\n         }\n \n-        if(result instanceof String) {\n+        if(result instanceof String || result instanceof Number || result instanceof Boolean) {\n             rsp.setContentType(\"text/plain\");\n             rsp.getWriter().print(result.toString());\n             return;"
    },
    {
        "commit_id": "885f61061fa8a9ad394547608450e30e4e3eecbe",
        "commit_message": "FIX HUDSON-2305 - Use Project Security setting not being persisted.\n\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@13223 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/885f61061fa8a9ad394547608450e30e4e3eecbe",
        "buggy_code": "if(name!=null && name.equals(\"permission\"))",
        "fixed_code": "if(name!=null && (name.equals(\"permission\") || name.equals(\"useProjectSecurity\")))",
        "patch": "@@ -57,7 +57,7 @@ protected GlobalMatrixAuthorizationStrategy create() {\n \r\n         public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\r\n             String name = reader.peekNextChild();\r\n-            if(name!=null && name.equals(\"permission\"))\r\n+            if(name!=null && (name.equals(\"permission\") || name.equals(\"useProjectSecurity\")))\r\n                 // the proper serialization form\r\n                 return super.unmarshal(reader, context);\r\n             else\r"
    },
    {
        "commit_id": "bf63d513d5de58dbd87ddf74675b5b32502ca7dd",
        "commit_message": "FIX HUDSON-2305 - Project based Matrix Authorization Strategy reverts to\n  Global Matrix Authorization Strategy on Hudson restart.\n\n  Fixed ProjectMatrixAuthorizationStrategy.ConvertImpl.create() to return\n  a ProjectMatrixAuthorizationStrategy instance instead of GlobalMatrix-\n  AuthorizationStrategy.\n\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@13148 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bf63d513d5de58dbd87ddf74675b5b32502ca7dd",
        "buggy_code": "return new GlobalMatrixAuthorizationStrategy();",
        "fixed_code": "return new ProjectMatrixAuthorizationStrategy();",
        "patch": "@@ -52,7 +52,7 @@ public ConverterImpl(Mapper m) {\n         }\r\n \r\n         protected GlobalMatrixAuthorizationStrategy create() {\r\n-            return new GlobalMatrixAuthorizationStrategy();\r\n+            return new ProjectMatrixAuthorizationStrategy();\r\n         }\r\n \r\n         public Object unmarshal(HierarchicalStreamReader reader, UnmarshallingContext context) {\r"
    },
    {
        "commit_id": "59d5940765bfb0d47c9a275c566e0ca92c9b61f7",
        "commit_message": "[FIXED HUDSON-2256] Added two more lookups as reported in this issue.\nIn 1.261.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@13087 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/59d5940765bfb0d47c9a275c566e0ca92c9b61f7",
        "buggy_code": "private String groupSearchFilter = \"(member={0})\";",
        "fixed_code": "private String groupSearchFilter = \"(| (member={0}) (uniqueMember={0}) (memberUid={0}))\";",
        "patch": "@@ -51,7 +51,7 @@ public class DeferredCreationLdapAuthoritiesPopulator implements LdapAuthorities\n     /**\n      * The pattern to be used for the user search. {0} is the user's DN\n      */\n-    private String groupSearchFilter = \"(member={0})\";\n+    private String groupSearchFilter = \"(| (member={0}) (uniqueMember={0}) (memberUid={0}))\";\n \n     private String rolePrefix = \"ROLE_\";\n "
    },
    {
        "commit_id": "c483f1196a292f0fd95ba6620852c8b8925efe13",
        "commit_message": "[FIXED HUDSON-2587]\nNotice that the error message indicates a permission problem. The error message isn't as descriptive as it could be, but the directory that Java uses as the temporary directory doesn't seem to let the current user create files.\n\nIn 1.260 improved the code so that you can see the directory name.\n\nGo big red!\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@13013 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c483f1196a292f0fd95ba6620852c8b8925efe13",
        "buggy_code": "dir = null;",
        "fixed_code": "dir = new File(System.getProperty(\"java.io.tmpdir\"));",
        "patch": "@@ -552,7 +552,7 @@ public FilePath createTextTempFile(final String prefix, final String suffix, fin\n             return new FilePath(channel,act(new FileCallable<String>() {\n                 public String invoke(File dir, VirtualChannel channel) throws IOException {\n                     if(!inThisDirectory)\n-                        dir = null;\n+                        dir = new File(System.getProperty(\"java.io.tmpdir\"));\n                     else\n                         dir.mkdirs();\n "
    },
    {
        "commit_id": "88c67be958389a65b8f1caf04673ac04125d8280",
        "commit_message": "[HUDSON-2566] improving error message\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@12963 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/88c67be958389a65b8f1caf04673ac04125d8280",
        "buggy_code": "error(out, \"Already connected\");",
        "fixed_code": "error(out, nodeName+\" is already connected to this master. Rejecting this connection.\");",
        "patch": "@@ -168,7 +168,7 @@ private void runJnlpConnect(DataInputStream in, PrintWriter out) throws IOExcept\n             }\n \n             if(computer.getChannel()!=null) {\n-                error(out, \"Already connected\");\n+                error(out, nodeName+\" is already connected to this master. Rejecting this connection.\");\n                 return;\n             }\n "
    },
    {
        "commit_id": "1c5b745929b722f9fe115e04e3757048674f8083",
        "commit_message": "bug fix. The actual export is MoveFileExA (or W)\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@12908 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1c5b745929b722f9fe115e04e3757048674f8083",
        "buggy_code": "boolean MoveFileEx(String existingFileName, String newFileName, int flags );",
        "fixed_code": "boolean MoveFileExA(String existingFileName, String newFileName, int flags );",
        "patch": "@@ -14,7 +14,7 @@ public interface Kernel32 extends StdCallLibrary {\n     /**\n      * See http://msdn.microsoft.com/en-us/library/aa365240(VS.85).aspx\n      */\n-    boolean MoveFileEx(String existingFileName, String newFileName, int flags );\n+    boolean MoveFileExA(String existingFileName, String newFileName, int flags );\n \n     static final int MOVEFILE_COPY_ALLOWED = 2;\n     static final int MOVEFILE_CREATE_HARDLINK = 16;"
    },
    {
        "commit_id": "5dd7b2fe84147cca1dc980c163bd9b075a15e669",
        "commit_message": "Fixed issue HUDSON-2415.  Method now returns null when no permission is found instead of false.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@12409 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5dd7b2fe84147cca1dc980c163bd9b075a15e669",
        "buggy_code": "return false;",
        "fixed_code": "return null;",
        "patch": "@@ -149,7 +149,7 @@ protected Boolean hasPermission(Sid sid, Permission p) {\n \t\t\t\tif (set != null && set.contains(s))\r\n \t\t\t\t\treturn true;\r\n \t\t\t}\r\n-\t\t\treturn false;\r\n+\t\t\treturn null;\r\n \t\t}\r\n \r\n \t\tprotected Boolean _hasPermission(Authentication a, Permission permission) {\r"
    },
    {
        "commit_id": "d40527857a27eddaf1d3215112e8d0d72dbaccc8",
        "commit_message": "[Issue 2298] First implementation of SubversionSCM parameters expansion based on StringParameterValue parameters values\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@11912 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d40527857a27eddaf1d3215112e8d0d72dbaccc8",
        "buggy_code": "for (ModuleLocation l : scm.getLocations()) {",
        "fixed_code": "for (ModuleLocation l : scm.getLocations(build)) {",
        "patch": "@@ -70,7 +70,7 @@ public boolean run(Collection<SubversionSCM.External> externals, Result changeLo\n             th.setDocumentLocator(DUMMY_LOCATOR);\n             logHandler.startDocument();\n \n-            for (ModuleLocation l : scm.getLocations()) {\n+            for (ModuleLocation l : scm.getLocations(build)) {\n                 changelogFileCreated |= buildModule(l.remote, svnlc, logHandler);\n             }\n             for(SubversionSCM.External ext : externals) {"
    },
    {
        "commit_id": "e1d958555d10367b9b12dd7e069b010eddcf28c3",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@11566 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e1d958555d10367b9b12dd7e069b010eddcf28c3",
        "buggy_code": "if(!timestamp.exists() || (timestamp.lastModified()==war.lastModified())) {",
        "fixed_code": "if(!timestamp.exists() || (timestamp.lastModified()!=war.lastModified())) {",
        "patch": "@@ -31,7 +31,7 @@ private static File explode() {\n             File explodeDir = new File(\"./target/hudson-for-test\");\n             File timestamp = new File(explodeDir,\".timestamp\");\n \n-            if(!timestamp.exists() || (timestamp.lastModified()==war.lastModified())) {\n+            if(!timestamp.exists() || (timestamp.lastModified()!=war.lastModified())) {\n                 System.out.println(\"Exploding hudson.war at \"+war);\n                 new FilePath(explodeDir).deleteRecursive();\n                 new FilePath(war).unzip(new FilePath(explodeDir));"
    },
    {
        "commit_id": "5c641b933d470a8fcb46572379cbddc8cb720237",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@11562 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5c641b933d470a8fcb46572379cbddc8cb720237",
        "buggy_code": "Recipe r = a.getClass().getAnnotation(Recipe.class);",
        "fixed_code": "Recipe r = a.annotationType().getAnnotation(Recipe.class);",
        "patch": "@@ -143,7 +143,7 @@ protected void recipe() throws Exception {\n         // look for recipe meta-annotation\n         Method runMethod= getClass().getMethod(getName());\n         for( final Annotation a : runMethod.getAnnotations() ) {\n-            Recipe r = a.getClass().getAnnotation(Recipe.class);\n+            Recipe r = a.annotationType().getAnnotation(Recipe.class);\n             if(r==null)     continue;\n             final Runner runner = r.value().newInstance();\n             tearDowns.add(new LenientRunnable() {"
    },
    {
        "commit_id": "4bc5e77ff5022aa527b91df156e8f16d10b3bd87",
        "commit_message": "bug fix\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@11510 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4bc5e77ff5022aa527b91df156e8f16d10b3bd87",
        "buggy_code": "@Recipe(@PresetData.RunnerImpl.class)",
        "fixed_code": "@Recipe(PresetData.RunnerImpl.class)",
        "patch": "@@ -14,7 +14,7 @@\n  * @author Kohsuke Kawaguchi\n  */\n @Documented\n-@Recipe(@PresetData.RunnerImpl.class)\n+@Recipe(PresetData.RunnerImpl.class)\n @Target(METHOD)\n @Retention(RUNTIME)\n public @interface PresetData {"
    },
    {
        "commit_id": "b355a8c741009edb65e87a4b413b7fcc76667012",
        "commit_message": "no need to have the initialization code in a separate place.\nThis should fix the unit test failures in twitter4j I'm seeing at:\n\n-------------------------------------------------------------------------------\nTest set: hudson.plugins.twitter.ShouldIncludeURLTest\n-------------------------------------------------------------------------------\nTests run: 4, Failures: 0, Errors: 4, Skipped: 0, Time elapsed: 0.389 sec <<< FAILURE!\ntestTrueInDescriptor(hudson.plugins.twitter.ShouldIncludeURLTest)  Time elapsed: 0.358 sec  <<< ERROR!\njava.lang.ExceptionInInitializerError\n\tat hudson.plugins.twitter.ShouldIncludeURLTest.setUp(ShouldIncludeURLTest.java:41)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.junit.internal.runners.BeforeAndAfterRunner.invokeMethod(BeforeAndAfterRunner.java:74)\n\tat org.junit.internal.runners.BeforeAndAfterRunner.runBefores(BeforeAndAfterRunner.java:50)\n\tat org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:33)\n\tat org.junit.internal.runners.TestMethodRunner.runMethod(TestMethodRunner.java:75)\n\tat org.junit.internal.runners.TestMethodRunner.run(TestMethodRunner.java:45)\n\tat org.junit.internal.runners.TestClassMethodsRunner.invokeTestMethod(TestClassMethodsRunner.java:66)\n\tat org.junit.internal.runners.TestClassMethodsRunner.run(TestClassMethodsRunner.java:35)\n\tat org.junit.internal.runners.TestClassRunner$1.runUnprotected(TestClassRunner.java:42)\n\tat org.junit.internal.runners.BeforeAndAfterRunner.runProtected(BeforeAndAfterRunner.java:34)\n\tat org.junit.internal.runners.TestClassRunner.run(TestClassRunner.java:52)\n\tat org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)\n\tat org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)\n\tat org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)\n\tat org.apache.maven.surefire.Surefire.run(Surefire.java:177)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)\n\tat java.lang.reflect.Method.invoke(Method.java:597)\n\tat org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)\n\tat org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)\nCaused by: java.lang.NullPointerException\n\tat hudson.model.Queue$MaintainTask.<init>(Queue.java:928)\n\tat hudson.model.Queue.<init>(Queue.java:195)\n\tat hudson.model.Hudson.<init>(Hudson.java:144)\n\tat hudson.plugins.twitter.HudsonUtil.<clinit>(HudsonUtil.java:32)\n\t... 25 more\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@10993 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b355a8c741009edb65e87a4b413b7fcc76667012",
        "buggy_code": "public static Timer timer;",
        "fixed_code": "public static Timer timer = new Timer(\"Hudson cron thread\");",
        "patch": "@@ -203,7 +203,7 @@ public void run(AbstractProject p) {\n      * This timer is available for all the components inside Hudson to schedule\n      * some work.\n      */\n-    public static Timer timer;\n+    public static Timer timer = new Timer(\"Hudson cron thread\");\n \n     public static void init() {\n         long MIN = 1000*60;"
    },
    {
        "commit_id": "1b22943230c0d5bb5b09695aebe272a0640acbbc",
        "commit_message": "Merged revisions 9727,9739,9765-9766,9927,10332,10334-10338,10340,10416,10421,10553,10839-10845,10876 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tom\n\n........\n  r9727 | huybrechts | 2008-05-31 12:49:18 -0700 (Sat, 31 May 2008) | 3 lines\n  \n  Issue 1659\n  - cleaning up static Trigger, Hudson instances\n  - resetting commons-logging\n........\n  r9739 | huybrechts | 2008-06-01 12:05:51 -0700 (Sun, 01 Jun 2008) | 1 line\n  \n  #1770 catching and logging InstantiationError\n........\n  r9765 | huybrechts | 2008-06-02 11:34:45 -0700 (Mon, 02 Jun 2008) | 1 line\n  \n  project-based security: fixed a new isAdmin call\n........\n  r9766 | huybrechts | 2008-06-02 11:35:27 -0700 (Mon, 02 Jun 2008) | 1 line\n  \n  \"theInstance = null\" caused some reloading problems\n........\n  r9927 | huybrechts | 2008-06-07 15:31:20 -0700 (Sat, 07 Jun 2008) | 8 lines\n  \n  Initial commit of parameterized builds. Provided functionality:\n  - users can define parameters per project (only string paramters for now)\n  - if a project has parameters, the 'build' button will redirect to an input page\n  - parameter values can be used as ${variable} in Ant, Maven and CommandInterpreter builders\n  - after the build, parameter values can be viewed in a separate page\n  - tasks for parameterized builds are persisted in the queue over restarts\n  - queue persistence is now in XML (with backwards compatibility for text format)\n........\n  r10332 | huybrechts | 2008-06-23 05:32:45 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  made EmbedderLoggerImpl public for use in plugins\n........\n  r10334 | huybrechts | 2008-06-23 05:48:10 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1914] additional parameter types (job, run), bugfixes\n........\n  r10335 | huybrechts | 2008-06-23 05:49:10 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1573] initialize servlet filters\n........\n  r10336 | huybrechts | 2008-06-23 05:52:14 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1915] onStarted onevent\n........\n  r10337 | huybrechts | 2008-06-23 06:07:32 -0700 (Mon, 23 Jun 2008) | 4 lines\n  \n  [HUDSON-1504] basic ui for job-based access control\n  \n  This allows assigning permissions per user and per job.\n  It is still possible to provide defaults using a global matrix.\n........\n  r10338 | huybrechts | 2008-06-23 06:18:13 -0700 (Mon, 23 Jun 2008) | 3 lines\n  \n  [HUDSON-1504] basic ui for job-based access control\n  \n  adding it to the list...\n........\n  r10340 | huybrechts | 2008-06-23 07:23:12 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1504] fix compile error\n........\n  r10416 | huybrechts | 2008-06-25 01:13:11 -0700 (Wed, 25 Jun 2008) | 1 line\n  \n  initial commit staging plugin: supports doing a maven release to a staging repository, serving that repository for Hudson, and uploading it on demand\n........\n  r10421 | huybrechts | 2008-06-25 12:32:06 -0700 (Wed, 25 Jun 2008) | 1 line\n  \n  [HUDSON-1954] initial commit jbpm plugin and staging workflow example\n........\n  r10553 | huybrechts | 2008-07-01 14:13:57 -0700 (Tue, 01 Jul 2008) | 1 line\n  \n  moving registration for parameter definition out of registered class\n........\n  r10839 | kohsuke | 2008-07-15 13:48:05 -0700 (Tue, 15 Jul 2008) | 6 lines\n  \n  Making a few adjustments in preparation of merging back to the trunk.\n  \n  - doc updates\n  - added QueueTaskFilter as a plain delegation implementation to simplify ParameterizedProjectTask.\n  - renamed ParameterDefinition.newInstance(...) to createValue, to avoid having two newInstance methods\n    in this part of the system that does different things\n........\n  r10840 | kohsuke | 2008-07-15 13:51:16 -0700 (Tue, 15 Jul 2008) | 1 line\n  \n  Hudson's coding convention is to use WS and no TAB.\n........\n  r10841 | kohsuke | 2008-07-15 14:34:37 -0700 (Tue, 15 Jul 2008) | 2 lines\n  \n  - making ParameterValue an abstract class to allow evolution without breaking plugins in the future\n  - tweaked the UI a bit so that parameterization don't get too much visibility.\n........\n  r10842 | kohsuke | 2008-07-15 14:49:35 -0700 (Tue, 15 Jul 2008) | 2 lines\n  \n  improving the UI a bit.\n  Added an icon\n........\n  r10843 | kohsuke | 2008-07-15 15:08:28 -0700 (Tue, 15 Jul 2008) | 1 line\n  \n  adding help\n........\n  r10844 | kohsuke | 2008-07-15 15:10:42 -0700 (Tue, 15 Jul 2008) | 1 line\n  \n  TAB->WS\n........\n  r10845 | kohsuke | 2008-07-15 15:44:47 -0700 (Tue, 15 Jul 2008) | 2 lines\n  \n  - Use HTTP status code to notify the automated clients that the build triggering failed.\n  - Overload the \"/build\" URL to render the parameter entry form.\n........\n  r10876 | kohsuke | 2008-07-18 13:52:51 -0700 (Fri, 18 Jul 2008) | 10 lines\n  \n  Giving more hooks to ParameterValue to affect a build\n  \n   - abstracting the variable substitution process so that the actual syntax for marking\n     variables (e.g., %VAR% vs ${var} vs #{xyz}) and the actual resolution process are\n     orthogonal.\n  \n   - parameter values can now contribute BuildWrapper to a build.\n  \n   - parameter values can now contribute environment variables to a build.\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@10950 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1b22943230c0d5bb5b09695aebe272a0640acbbc",
        "buggy_code": "final class EmbedderLoggerImpl extends AbstractMavenEmbedderLogger {",
        "fixed_code": "public final class EmbedderLoggerImpl extends AbstractMavenEmbedderLogger {",
        "patch": "@@ -13,7 +13,7 @@\n  * \n  * @author Kohsuke Kawaguchi\n  */\n-final class EmbedderLoggerImpl extends AbstractMavenEmbedderLogger {\n+public final class EmbedderLoggerImpl extends AbstractMavenEmbedderLogger {\n     private final PrintStream logger;\n \n     public EmbedderLoggerImpl(TaskListener listener) {"
    },
    {
        "commit_id": "1b22943230c0d5bb5b09695aebe272a0640acbbc",
        "commit_message": "Merged revisions 9727,9739,9765-9766,9927,10332,10334-10338,10340,10416,10421,10553,10839-10845,10876 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tom\n\n........\n  r9727 | huybrechts | 2008-05-31 12:49:18 -0700 (Sat, 31 May 2008) | 3 lines\n  \n  Issue 1659\n  - cleaning up static Trigger, Hudson instances\n  - resetting commons-logging\n........\n  r9739 | huybrechts | 2008-06-01 12:05:51 -0700 (Sun, 01 Jun 2008) | 1 line\n  \n  #1770 catching and logging InstantiationError\n........\n  r9765 | huybrechts | 2008-06-02 11:34:45 -0700 (Mon, 02 Jun 2008) | 1 line\n  \n  project-based security: fixed a new isAdmin call\n........\n  r9766 | huybrechts | 2008-06-02 11:35:27 -0700 (Mon, 02 Jun 2008) | 1 line\n  \n  \"theInstance = null\" caused some reloading problems\n........\n  r9927 | huybrechts | 2008-06-07 15:31:20 -0700 (Sat, 07 Jun 2008) | 8 lines\n  \n  Initial commit of parameterized builds. Provided functionality:\n  - users can define parameters per project (only string paramters for now)\n  - if a project has parameters, the 'build' button will redirect to an input page\n  - parameter values can be used as ${variable} in Ant, Maven and CommandInterpreter builders\n  - after the build, parameter values can be viewed in a separate page\n  - tasks for parameterized builds are persisted in the queue over restarts\n  - queue persistence is now in XML (with backwards compatibility for text format)\n........\n  r10332 | huybrechts | 2008-06-23 05:32:45 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  made EmbedderLoggerImpl public for use in plugins\n........\n  r10334 | huybrechts | 2008-06-23 05:48:10 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1914] additional parameter types (job, run), bugfixes\n........\n  r10335 | huybrechts | 2008-06-23 05:49:10 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1573] initialize servlet filters\n........\n  r10336 | huybrechts | 2008-06-23 05:52:14 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1915] onStarted onevent\n........\n  r10337 | huybrechts | 2008-06-23 06:07:32 -0700 (Mon, 23 Jun 2008) | 4 lines\n  \n  [HUDSON-1504] basic ui for job-based access control\n  \n  This allows assigning permissions per user and per job.\n  It is still possible to provide defaults using a global matrix.\n........\n  r10338 | huybrechts | 2008-06-23 06:18:13 -0700 (Mon, 23 Jun 2008) | 3 lines\n  \n  [HUDSON-1504] basic ui for job-based access control\n  \n  adding it to the list...\n........\n  r10340 | huybrechts | 2008-06-23 07:23:12 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1504] fix compile error\n........\n  r10416 | huybrechts | 2008-06-25 01:13:11 -0700 (Wed, 25 Jun 2008) | 1 line\n  \n  initial commit staging plugin: supports doing a maven release to a staging repository, serving that repository for Hudson, and uploading it on demand\n........\n  r10421 | huybrechts | 2008-06-25 12:32:06 -0700 (Wed, 25 Jun 2008) | 1 line\n  \n  [HUDSON-1954] initial commit jbpm plugin and staging workflow example\n........\n  r10553 | huybrechts | 2008-07-01 14:13:57 -0700 (Tue, 01 Jul 2008) | 1 line\n  \n  moving registration for parameter definition out of registered class\n........\n  r10839 | kohsuke | 2008-07-15 13:48:05 -0700 (Tue, 15 Jul 2008) | 6 lines\n  \n  Making a few adjustments in preparation of merging back to the trunk.\n  \n  - doc updates\n  - added QueueTaskFilter as a plain delegation implementation to simplify ParameterizedProjectTask.\n  - renamed ParameterDefinition.newInstance(...) to createValue, to avoid having two newInstance methods\n    in this part of the system that does different things\n........\n  r10840 | kohsuke | 2008-07-15 13:51:16 -0700 (Tue, 15 Jul 2008) | 1 line\n  \n  Hudson's coding convention is to use WS and no TAB.\n........\n  r10841 | kohsuke | 2008-07-15 14:34:37 -0700 (Tue, 15 Jul 2008) | 2 lines\n  \n  - making ParameterValue an abstract class to allow evolution without breaking plugins in the future\n  - tweaked the UI a bit so that parameterization don't get too much visibility.\n........\n  r10842 | kohsuke | 2008-07-15 14:49:35 -0700 (Tue, 15 Jul 2008) | 2 lines\n  \n  improving the UI a bit.\n  Added an icon\n........\n  r10843 | kohsuke | 2008-07-15 15:08:28 -0700 (Tue, 15 Jul 2008) | 1 line\n  \n  adding help\n........\n  r10844 | kohsuke | 2008-07-15 15:10:42 -0700 (Tue, 15 Jul 2008) | 1 line\n  \n  TAB->WS\n........\n  r10845 | kohsuke | 2008-07-15 15:44:47 -0700 (Tue, 15 Jul 2008) | 2 lines\n  \n  - Use HTTP status code to notify the automated clients that the build triggering failed.\n  - Overload the \"/build\" URL to render the parameter entry form.\n........\n  r10876 | kohsuke | 2008-07-18 13:52:51 -0700 (Fri, 18 Jul 2008) | 10 lines\n  \n  Giving more hooks to ParameterValue to affect a build\n  \n   - abstracting the variable substitution process so that the actual syntax for marking\n     variables (e.g., %VAR% vs ${var} vs #{xyz}) and the actual resolution process are\n     orthogonal.\n  \n   - parameter values can now contribute BuildWrapper to a build.\n  \n   - parameter values can now contribute environment variables to a build.\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@10950 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1b22943230c0d5bb5b09695aebe272a0640acbbc",
        "buggy_code": "if(Hudson.getInstance().isTerminating())",
        "fixed_code": "if(Hudson.getInstance() == null || Hudson.getInstance().isTerminating())",
        "patch": "@@ -56,7 +56,7 @@ public void run() {\n         try {\n             finishTime = System.currentTimeMillis();\n             while(true) {\n-                if(Hudson.getInstance().isTerminating())\n+                if(Hudson.getInstance() == null || Hudson.getInstance().isTerminating())\n                     return;\n \n                 synchronized(owner) {"
    },
    {
        "commit_id": "1b22943230c0d5bb5b09695aebe272a0640acbbc",
        "commit_message": "Merged revisions 9727,9739,9765-9766,9927,10332,10334-10338,10340,10416,10421,10553,10839-10845,10876 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tom\n\n........\n  r9727 | huybrechts | 2008-05-31 12:49:18 -0700 (Sat, 31 May 2008) | 3 lines\n  \n  Issue 1659\n  - cleaning up static Trigger, Hudson instances\n  - resetting commons-logging\n........\n  r9739 | huybrechts | 2008-06-01 12:05:51 -0700 (Sun, 01 Jun 2008) | 1 line\n  \n  #1770 catching and logging InstantiationError\n........\n  r9765 | huybrechts | 2008-06-02 11:34:45 -0700 (Mon, 02 Jun 2008) | 1 line\n  \n  project-based security: fixed a new isAdmin call\n........\n  r9766 | huybrechts | 2008-06-02 11:35:27 -0700 (Mon, 02 Jun 2008) | 1 line\n  \n  \"theInstance = null\" caused some reloading problems\n........\n  r9927 | huybrechts | 2008-06-07 15:31:20 -0700 (Sat, 07 Jun 2008) | 8 lines\n  \n  Initial commit of parameterized builds. Provided functionality:\n  - users can define parameters per project (only string paramters for now)\n  - if a project has parameters, the 'build' button will redirect to an input page\n  - parameter values can be used as ${variable} in Ant, Maven and CommandInterpreter builders\n  - after the build, parameter values can be viewed in a separate page\n  - tasks for parameterized builds are persisted in the queue over restarts\n  - queue persistence is now in XML (with backwards compatibility for text format)\n........\n  r10332 | huybrechts | 2008-06-23 05:32:45 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  made EmbedderLoggerImpl public for use in plugins\n........\n  r10334 | huybrechts | 2008-06-23 05:48:10 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1914] additional parameter types (job, run), bugfixes\n........\n  r10335 | huybrechts | 2008-06-23 05:49:10 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1573] initialize servlet filters\n........\n  r10336 | huybrechts | 2008-06-23 05:52:14 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1915] onStarted onevent\n........\n  r10337 | huybrechts | 2008-06-23 06:07:32 -0700 (Mon, 23 Jun 2008) | 4 lines\n  \n  [HUDSON-1504] basic ui for job-based access control\n  \n  This allows assigning permissions per user and per job.\n  It is still possible to provide defaults using a global matrix.\n........\n  r10338 | huybrechts | 2008-06-23 06:18:13 -0700 (Mon, 23 Jun 2008) | 3 lines\n  \n  [HUDSON-1504] basic ui for job-based access control\n  \n  adding it to the list...\n........\n  r10340 | huybrechts | 2008-06-23 07:23:12 -0700 (Mon, 23 Jun 2008) | 1 line\n  \n  [HUDSON-1504] fix compile error\n........\n  r10416 | huybrechts | 2008-06-25 01:13:11 -0700 (Wed, 25 Jun 2008) | 1 line\n  \n  initial commit staging plugin: supports doing a maven release to a staging repository, serving that repository for Hudson, and uploading it on demand\n........\n  r10421 | huybrechts | 2008-06-25 12:32:06 -0700 (Wed, 25 Jun 2008) | 1 line\n  \n  [HUDSON-1954] initial commit jbpm plugin and staging workflow example\n........\n  r10553 | huybrechts | 2008-07-01 14:13:57 -0700 (Tue, 01 Jul 2008) | 1 line\n  \n  moving registration for parameter definition out of registered class\n........\n  r10839 | kohsuke | 2008-07-15 13:48:05 -0700 (Tue, 15 Jul 2008) | 6 lines\n  \n  Making a few adjustments in preparation of merging back to the trunk.\n  \n  - doc updates\n  - added QueueTaskFilter as a plain delegation implementation to simplify ParameterizedProjectTask.\n  - renamed ParameterDefinition.newInstance(...) to createValue, to avoid having two newInstance methods\n    in this part of the system that does different things\n........\n  r10840 | kohsuke | 2008-07-15 13:51:16 -0700 (Tue, 15 Jul 2008) | 1 line\n  \n  Hudson's coding convention is to use WS and no TAB.\n........\n  r10841 | kohsuke | 2008-07-15 14:34:37 -0700 (Tue, 15 Jul 2008) | 2 lines\n  \n  - making ParameterValue an abstract class to allow evolution without breaking plugins in the future\n  - tweaked the UI a bit so that parameterization don't get too much visibility.\n........\n  r10842 | kohsuke | 2008-07-15 14:49:35 -0700 (Tue, 15 Jul 2008) | 2 lines\n  \n  improving the UI a bit.\n  Added an icon\n........\n  r10843 | kohsuke | 2008-07-15 15:08:28 -0700 (Tue, 15 Jul 2008) | 1 line\n  \n  adding help\n........\n  r10844 | kohsuke | 2008-07-15 15:10:42 -0700 (Tue, 15 Jul 2008) | 1 line\n  \n  TAB->WS\n........\n  r10845 | kohsuke | 2008-07-15 15:44:47 -0700 (Tue, 15 Jul 2008) | 2 lines\n  \n  - Use HTTP status code to notify the automated clients that the build triggering failed.\n  - Overload the \"/build\" URL to render the parameter entry form.\n........\n  r10876 | kohsuke | 2008-07-18 13:52:51 -0700 (Fri, 18 Jul 2008) | 10 lines\n  \n  Giving more hooks to ParameterValue to affect a build\n  \n   - abstracting the variable substitution process so that the actual syntax for marking\n     variables (e.g., %VAR% vs ${var} vs #{xyz}) and the actual resolution process are\n     orthogonal.\n  \n   - parameter values can now contribute BuildWrapper to a build.\n  \n   - parameter values can now contribute environment variables to a build.\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@10950 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1b22943230c0d5bb5b09695aebe272a0640acbbc",
        "buggy_code": "public static final Timer timer = new Timer(\"Hudson cron thread\");",
        "fixed_code": "public static Timer timer;",
        "patch": "@@ -203,7 +203,7 @@ public void run(AbstractProject p) {\n      * This timer is available for all the components inside Hudson to schedule\n      * some work.\n      */\n-    public static final Timer timer = new Timer(\"Hudson cron thread\");\n+    public static Timer timer;\n \n     public static void init() {\n         long MIN = 1000*60;"
    },
    {
        "commit_id": "9e6bf638cb61aabea41ce572d132f3d77f1a824c",
        "commit_message": "improving error diagnostics.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@10728 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9e6bf638cb61aabea41ce572d132f3d77f1a824c",
        "buggy_code": "throw new IllegalArgumentException();",
        "fixed_code": "throw new IllegalArgumentException(\"Failed to parse \"+num+\" as version number\");",
        "patch": "@@ -70,7 +70,7 @@ public VersionNumber( String num ) {\n         StringTokenizer tokens = new StringTokenizer(num,\".\");\n         digits = new int[tokens.countTokens()];\n         if(digits.length<2)\n-            throw new IllegalArgumentException();\n+            throw new IllegalArgumentException(\"Failed to parse \"+num+\" as version number\");\n \n         int i=0;\n         while( tokens.hasMoreTokens() ) {"
    },
    {
        "commit_id": "5603ddddd99eeb7798122dd24765b2958d24f119",
        "commit_message": "Don't know exactly when this assertion error happens, but I still see reports from people. So ultimately delegating this to the Hudson object.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@10447 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5603ddddd99eeb7798122dd24765b2958d24f119",
        "buggy_code": "throw new AssertionError(); // ancestor must include Hudson, which is AccessControlled.",
        "fixed_code": "checkPermission(Hudson.getInstance(),permission);",
        "patch": "@@ -470,7 +470,7 @@ public static void checkPermission(Object object, Permission permission) throws\n                     return;\n                 }\n             }\n-            throw new AssertionError(); // ancestor must include Hudson, which is AccessControlled.\n+            checkPermission(Hudson.getInstance(),permission);\n         }\n     }\n "
    },
    {
        "commit_id": "2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "commit_message": "improving the error handling. Error page shouldn't be 200.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9872 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "buggy_code": "public class IncompatibleAntVersionDetected {",
        "fixed_code": "public class IncompatibleAntVersionDetected extends ErrorObject {",
        "patch": "@@ -14,7 +14,7 @@\n  *\n  * @author Kohsuke Kawaguchi\n  */\n-public class IncompatibleAntVersionDetected {\n+public class IncompatibleAntVersionDetected extends ErrorObject {\n     private final Class antClass;\n \n     public IncompatibleAntVersionDetected(Class antClass) {"
    },
    {
        "commit_id": "2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "commit_message": "improving the error handling. Error page shouldn't be 200.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9872 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "buggy_code": "public class IncompatibleServletVersionDetected {",
        "fixed_code": "public class IncompatibleServletVersionDetected extends ErrorObject {",
        "patch": "@@ -14,7 +14,7 @@\n  *\n  * @author Kohsuke Kawaguchi\n  */\n-public class IncompatibleServletVersionDetected {\n+public class IncompatibleServletVersionDetected extends ErrorObject {\n     private final Class servletClass;\n \n     public IncompatibleServletVersionDetected(Class servletClass) {"
    },
    {
        "commit_id": "2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "commit_message": "improving the error handling. Error page shouldn't be 200.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9872 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "buggy_code": "public class IncompatibleVMDetected {",
        "fixed_code": "public class IncompatibleVMDetected extends ErrorObject {",
        "patch": "@@ -11,7 +11,7 @@\n  *\n  * @author Kohsuke Kawaguchi\n  */\n-public class IncompatibleVMDetected {\n+public class IncompatibleVMDetected extends ErrorObject {\n \n     public Map getSystemProperties() {\n         return System.getProperties();"
    },
    {
        "commit_id": "2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "commit_message": "improving the error handling. Error page shouldn't be 200.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9872 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "buggy_code": "public class InsufficientPermissionDetected {",
        "fixed_code": "public class InsufficientPermissionDetected extends ErrorObject {",
        "patch": "@@ -12,7 +12,7 @@\n  *\n  * @author Kohsuke Kawaguchi\n  */\n-public class InsufficientPermissionDetected {\n+public class InsufficientPermissionDetected extends ErrorObject {\n     public final SecurityException exception;\n \n     public InsufficientPermissionDetected(SecurityException e) {"
    },
    {
        "commit_id": "2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "commit_message": "improving the error handling. Error page shouldn't be 200.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9872 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "buggy_code": "public class NoHomeDir {",
        "fixed_code": "public class NoHomeDir extends ErrorObject {",
        "patch": "@@ -11,7 +11,7 @@\n  *\n  * @author Kohsuke Kawaguchi\n  */\n-public class NoHomeDir {\n+public class NoHomeDir extends ErrorObject {\n     public final File home;\n \n     public NoHomeDir(File home) {"
    },
    {
        "commit_id": "2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "commit_message": "improving the error handling. Error page shouldn't be 200.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9872 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2fb7512b4392039e7574bce3dad98e49fd3e2c10",
        "buggy_code": "public class NoTempDir {",
        "fixed_code": "public class NoTempDir extends ErrorObject {",
        "patch": "@@ -13,7 +13,7 @@\n  *\n  * @author Kohsuke Kawaguchi\n  */\n-public class NoTempDir {\n+public class NoTempDir extends ErrorObject {\n     public final IOException exception;\n \n     public NoTempDir(IOException exception) {"
    },
    {
        "commit_id": "80b1011b177d171f354a40482c115f38abe80a8a",
        "commit_message": "[FIXED HUDSON-1762] this should really fix #1762.\nFilterOutputStream is evil.\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9787 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/80b1011b177d171f354a40482c115f38abe80a8a",
        "buggy_code": "new FilterOutputStream(s.getOutputStream()) {",
        "fixed_code": "new RealFilterOutputStream(s.getOutputStream()) {",
        "patch": "@@ -96,7 +96,7 @@ public void close() throws IOException {\n                                 s.shutdownInput();\n                             }\n                         },\n-                        new FilterOutputStream(s.getOutputStream()) {\n+                        new RealFilterOutputStream(s.getOutputStream()) {\n                             public void close() throws IOException {\n                                 s.shutdownOutput();\n                             }"
    },
    {
        "commit_id": "f21fa55faff43681d1ef53a39cbc1f5b005b5d11",
        "commit_message": "Merged revisions 8523-8525,8545-8556,8793,8803-8806,8858,9027-9028 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tom\n\n........\n  r8523 | huybrechts | 2008-04-11 13:41:11 -0700 (Fri, 11 Apr 2008) | 1 line\n  \n  profile to build against current snapshot of hudson-core\n........\n  r8524 | huybrechts | 2008-04-11 14:42:58 -0700 (Fri, 11 Apr 2008) | 1 line\n  \n  [#710] project option to automatically delete the svn wc if it is locked\n........\n  r8525 | huybrechts | 2008-04-11 14:53:59 -0700 (Fri, 11 Apr 2008) | 1 line\n  \n  [#710] project option to automatically delete the svn wc if it is locked\n........\n  r8545 | huybrechts | 2008-04-12 04:17:46 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  profile to build against current snapshot of hudson-core\n........\n  r8546 | huybrechts | 2008-04-12 04:19:26 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  deleting IDE-specific files\n........\n  r8547 | huybrechts | 2008-04-12 06:31:32 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8548 | huybrechts | 2008-04-12 06:42:49 -0700 (Sat, 12 Apr 2008) | 4 lines\n  \n  Issue 1158\n  - extended AuthorizationStrategy to provide ACLs for different types of objects\n  - changed several object types to use these methods\n  - changed jelly to check permissions (instead of using isAdmin check)\n........\n  r8549 | huybrechts | 2008-04-12 06:44:26 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  Issue 1110: use svn revision number in project-changes.jelly\n........\n  r8550 | huybrechts | 2008-04-12 06:46:18 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  Adding a 'My Projects' view which shows only projects the user has permission for\n........\n  r8551 | huybrechts | 2008-04-12 06:47:57 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  adding a user name resolver, like the MailAddressResolver\n........\n  r8552 | huybrechts | 2008-04-12 06:49:27 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  Adding jdom and cglib to the war, as a workaround for classloading issues\n........\n  r8553 | huybrechts | 2008-04-12 08:01:58 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  SFEE integration improvements, including links to project based security\n........\n  r8554 | huybrechts | 2008-04-12 08:27:17 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  wsdl for SFEE webservices\n........\n  r8555 | huybrechts | 2008-04-12 08:31:18 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  forgot some files...\n........\n  r8556 | huybrechts | 2008-04-12 08:34:31 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  an authorization strategy that provides project-based access control (not usable on its own)\n........\n  r8793 | huybrechts | 2008-04-22 14:39:57 -0700 (Tue, 22 Apr 2008) | 1 line\n  \n  [issue #1573] allow plugins to contribute ServletFilters\n........\n  r8803 | huybrechts | 2008-04-23 10:46:09 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8804 | huybrechts | 2008-04-23 10:52:11 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8805 | huybrechts | 2008-04-23 10:54:12 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8806 | huybrechts | 2008-04-23 10:59:13 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  Issue 1158\n........\n  r8858 | huybrechts | 2008-04-25 08:17:41 -0700 (Fri, 25 Apr 2008) | 1 line\n  \n  bugfixes\n........\n  r9027 | huybrechts | 2008-05-04 12:20:34 -0700 (Sun, 04 May 2008) | 1 line\n  \n  Issue 1158 - fixing permission checks in jelly\n........\n  r9028 | huybrechts | 2008-05-04 12:22:36 -0700 (Sun, 04 May 2008) | 1 line\n  \n  creating SFEE releases from Hudson\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9699 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f21fa55faff43681d1ef53a39cbc1f5b005b5d11",
        "buggy_code": "LOGGER.info(\"Polling SCM changes of \"+ getName());",
        "fixed_code": "LOGGER.fine(\"Polling SCM changes of \"+ getName());",
        "patch": "@@ -616,7 +616,7 @@ public boolean pollSCMChanges( TaskListener listener ) {\n             }\n \n         \tLauncher launcher = workspace != null ? workspace.createLauncher(listener) : null;\n-            LOGGER.info(\"Polling SCM changes of \"+ getName());\n+            LOGGER.fine(\"Polling SCM changes of \"+ getName());\n             return scm.pollChanges(this, launcher, workspace, listener );\n         } catch (AbortException e) {\n             listener.fatalError(Messages.AbstractProject_Aborted());"
    },
    {
        "commit_id": "f21fa55faff43681d1ef53a39cbc1f5b005b5d11",
        "commit_message": "Merged revisions 8523-8525,8545-8556,8793,8803-8806,8858,9027-9028 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tom\n\n........\n  r8523 | huybrechts | 2008-04-11 13:41:11 -0700 (Fri, 11 Apr 2008) | 1 line\n  \n  profile to build against current snapshot of hudson-core\n........\n  r8524 | huybrechts | 2008-04-11 14:42:58 -0700 (Fri, 11 Apr 2008) | 1 line\n  \n  [#710] project option to automatically delete the svn wc if it is locked\n........\n  r8525 | huybrechts | 2008-04-11 14:53:59 -0700 (Fri, 11 Apr 2008) | 1 line\n  \n  [#710] project option to automatically delete the svn wc if it is locked\n........\n  r8545 | huybrechts | 2008-04-12 04:17:46 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  profile to build against current snapshot of hudson-core\n........\n  r8546 | huybrechts | 2008-04-12 04:19:26 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  deleting IDE-specific files\n........\n  r8547 | huybrechts | 2008-04-12 06:31:32 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8548 | huybrechts | 2008-04-12 06:42:49 -0700 (Sat, 12 Apr 2008) | 4 lines\n  \n  Issue 1158\n  - extended AuthorizationStrategy to provide ACLs for different types of objects\n  - changed several object types to use these methods\n  - changed jelly to check permissions (instead of using isAdmin check)\n........\n  r8549 | huybrechts | 2008-04-12 06:44:26 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  Issue 1110: use svn revision number in project-changes.jelly\n........\n  r8550 | huybrechts | 2008-04-12 06:46:18 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  Adding a 'My Projects' view which shows only projects the user has permission for\n........\n  r8551 | huybrechts | 2008-04-12 06:47:57 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  adding a user name resolver, like the MailAddressResolver\n........\n  r8552 | huybrechts | 2008-04-12 06:49:27 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  Adding jdom and cglib to the war, as a workaround for classloading issues\n........\n  r8553 | huybrechts | 2008-04-12 08:01:58 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  SFEE integration improvements, including links to project based security\n........\n  r8554 | huybrechts | 2008-04-12 08:27:17 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  wsdl for SFEE webservices\n........\n  r8555 | huybrechts | 2008-04-12 08:31:18 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  forgot some files...\n........\n  r8556 | huybrechts | 2008-04-12 08:34:31 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  an authorization strategy that provides project-based access control (not usable on its own)\n........\n  r8793 | huybrechts | 2008-04-22 14:39:57 -0700 (Tue, 22 Apr 2008) | 1 line\n  \n  [issue #1573] allow plugins to contribute ServletFilters\n........\n  r8803 | huybrechts | 2008-04-23 10:46:09 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8804 | huybrechts | 2008-04-23 10:52:11 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8805 | huybrechts | 2008-04-23 10:54:12 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8806 | huybrechts | 2008-04-23 10:59:13 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  Issue 1158\n........\n  r8858 | huybrechts | 2008-04-25 08:17:41 -0700 (Fri, 25 Apr 2008) | 1 line\n  \n  bugfixes\n........\n  r9027 | huybrechts | 2008-05-04 12:20:34 -0700 (Sun, 04 May 2008) | 1 line\n  \n  Issue 1158 - fixing permission checks in jelly\n........\n  r9028 | huybrechts | 2008-05-04 12:22:36 -0700 (Sun, 04 May 2008) | 1 line\n  \n  creating SFEE releases from Hudson\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9699 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f21fa55faff43681d1ef53a39cbc1f5b005b5d11",
        "buggy_code": "if(!n.toComputer().isOffline())",
        "fixed_code": "if(n.toComputer() != null && !n.toComputer().isOffline())",
        "patch": "@@ -61,7 +61,7 @@ public Set<Node> getNodes() {\n      */\n     public boolean isOffline() {\n         for (Node n : getNodes()) {\n-            if(!n.toComputer().isOffline())\n+            if(n.toComputer() != null && !n.toComputer().isOffline())\n                 return false;\n         }\n         return true;"
    },
    {
        "commit_id": "f21fa55faff43681d1ef53a39cbc1f5b005b5d11",
        "commit_message": "Merged revisions 8523-8525,8545-8556,8793,8803-8806,8858,9027-9028 via svnmerge from \nhttps://www.dev.java.net/svn/hudson/branches/tom\n\n........\n  r8523 | huybrechts | 2008-04-11 13:41:11 -0700 (Fri, 11 Apr 2008) | 1 line\n  \n  profile to build against current snapshot of hudson-core\n........\n  r8524 | huybrechts | 2008-04-11 14:42:58 -0700 (Fri, 11 Apr 2008) | 1 line\n  \n  [#710] project option to automatically delete the svn wc if it is locked\n........\n  r8525 | huybrechts | 2008-04-11 14:53:59 -0700 (Fri, 11 Apr 2008) | 1 line\n  \n  [#710] project option to automatically delete the svn wc if it is locked\n........\n  r8545 | huybrechts | 2008-04-12 04:17:46 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  profile to build against current snapshot of hudson-core\n........\n  r8546 | huybrechts | 2008-04-12 04:19:26 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  deleting IDE-specific files\n........\n  r8547 | huybrechts | 2008-04-12 06:31:32 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8548 | huybrechts | 2008-04-12 06:42:49 -0700 (Sat, 12 Apr 2008) | 4 lines\n  \n  Issue 1158\n  - extended AuthorizationStrategy to provide ACLs for different types of objects\n  - changed several object types to use these methods\n  - changed jelly to check permissions (instead of using isAdmin check)\n........\n  r8549 | huybrechts | 2008-04-12 06:44:26 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  Issue 1110: use svn revision number in project-changes.jelly\n........\n  r8550 | huybrechts | 2008-04-12 06:46:18 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  Adding a 'My Projects' view which shows only projects the user has permission for\n........\n  r8551 | huybrechts | 2008-04-12 06:47:57 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  adding a user name resolver, like the MailAddressResolver\n........\n  r8552 | huybrechts | 2008-04-12 06:49:27 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  Adding jdom and cglib to the war, as a workaround for classloading issues\n........\n  r8553 | huybrechts | 2008-04-12 08:01:58 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  SFEE integration improvements, including links to project based security\n........\n  r8554 | huybrechts | 2008-04-12 08:27:17 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  wsdl for SFEE webservices\n........\n  r8555 | huybrechts | 2008-04-12 08:31:18 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  forgot some files...\n........\n  r8556 | huybrechts | 2008-04-12 08:34:31 -0700 (Sat, 12 Apr 2008) | 1 line\n  \n  an authorization strategy that provides project-based access control (not usable on its own)\n........\n  r8793 | huybrechts | 2008-04-22 14:39:57 -0700 (Tue, 22 Apr 2008) | 1 line\n  \n  [issue #1573] allow plugins to contribute ServletFilters\n........\n  r8803 | huybrechts | 2008-04-23 10:46:09 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8804 | huybrechts | 2008-04-23 10:52:11 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8805 | huybrechts | 2008-04-23 10:54:12 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  added ignores\n........\n  r8806 | huybrechts | 2008-04-23 10:59:13 -0700 (Wed, 23 Apr 2008) | 1 line\n  \n  Issue 1158\n........\n  r8858 | huybrechts | 2008-04-25 08:17:41 -0700 (Fri, 25 Apr 2008) | 1 line\n  \n  bugfixes\n........\n  r9027 | huybrechts | 2008-05-04 12:20:34 -0700 (Sun, 04 May 2008) | 1 line\n  \n  Issue 1158 - fixing permission checks in jelly\n........\n  r9028 | huybrechts | 2008-05-04 12:22:36 -0700 (Sun, 04 May 2008) | 1 line\n  \n  creating SFEE releases from Hudson\n........\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9699 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f21fa55faff43681d1ef53a39cbc1f5b005b5d11",
        "buggy_code": "Hudson.getInstance().checkPermission(Hudson.ADMINISTER);",
        "fixed_code": "checkPermission(Hudson.ADMINISTER);",
        "patch": "@@ -180,7 +180,7 @@ public List<LogRecord> call() {\n     }\r\n \r\n     public void doDoDisconnect(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {\r\n-        Hudson.getInstance().checkPermission(Hudson.ADMINISTER);\r\n+        checkPermission(Hudson.ADMINISTER);\r\n         disconnect();\r\n         rsp.sendRedirect(\".\");\r\n     }\r"
    },
    {
        "commit_id": "51b2e4bd1762c476af913b7ca3c37461b3bb4bb8",
        "commit_message": "Put URL in the error message as well\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9653 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/51b2e4bd1762c476af913b7ca3c37461b3bb4bb8",
        "buggy_code": "SVNErrorManager.authenticationFailed(\"Authentication failed for ''{0}''\", realm);",
        "fixed_code": "SVNErrorManager.authenticationFailed(\"Authentication failed for \"+url+\" realm=\"+realm, null);",
        "patch": "@@ -1114,7 +1114,7 @@ public SVNAuthentication getFirstAuthentication(String kind, String realm, SVNUR\n                      */\n                     @Override\n                     public SVNAuthentication getNextAuthentication(String kind, String realm, SVNURL url) throws SVNException {\n-                        SVNErrorManager.authenticationFailed(\"Authentication failed for ''{0}''\", realm);\n+                        SVNErrorManager.authenticationFailed(\"Authentication failed for \"+url+\" realm=\"+realm, null);\n                         return null;\n                     }\n "
    },
    {
        "commit_id": "910b3dae95e0746ae8518eea07a7ae1fb6e7a819",
        "commit_message": "Fix for incorrect test result links when project name contains spaces (ISSUE#1666).\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9224 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/910b3dae95e0746ae8518eea07a7ae1fb6e7a819",
        "buggy_code": "return Util.encodeRFC2396(request.getRootPath()+'/'+getUrl());",
        "fixed_code": "return Util.encode(request.getRootPath()+'/'+getUrl());",
        "patch": "@@ -150,7 +150,7 @@ public final String getAbsoluteUrl() {\n         StaplerRequest request = Stapler.getCurrentRequest();\n         if(request==null)\n             throw new IllegalStateException(\"Not processing a HTTP request\");\n-        return Util.encodeRFC2396(request.getRootPath()+'/'+getUrl());\n+        return Util.encode(request.getRootPath()+'/'+getUrl());\n     }\n \n     /**"
    },
    {
        "commit_id": "82780ed40eb2c92558d915e5807b608935165129",
        "commit_message": "Accessing workspace no longer throws NPE if last used slave is offline (issue #1657) \n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@9069 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/82780ed40eb2c92558d915e5807b608935165129",
        "buggy_code": "if(!ws.exists()) {",
        "fixed_code": "if ((ws == null) || (!ws.exists())) {",
        "patch": "@@ -924,7 +924,7 @@ protected final <T extends Describable<T>> List<T> buildDescribable(StaplerReque\n     public void doWs( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException, InterruptedException {\n         checkPermission(AbstractProject.WORKSPACE);\n         FilePath ws = getWorkspace();\n-        if(!ws.exists()) {\n+        if ((ws == null) || (!ws.exists())) {\n             // if there's no workspace, report a nice error message\n             req.getView(this,\"noWorkspace.jelly\").forward(req,rsp);\n         } else {"
    },
    {
        "commit_id": "d63b7025c40207b18c6544674bd785cfc8b8631f",
        "commit_message": "made just a little bit more efficient. Did this fix issue #1564?\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@8770 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d63b7025c40207b18c6544674bd785cfc8b8631f",
        "buggy_code": "return (ComputerImpl)Hudson.getInstance().getComputer(getNodeName());",
        "fixed_code": "return (ComputerImpl)Hudson.getInstance().getComputer(this);",
        "patch": "@@ -559,7 +559,7 @@ public Launcher createLauncher(TaskListener listener) {\n      * Gets the corresponding computer object.\n      */\n     public ComputerImpl getComputer() {\n-        return (ComputerImpl)Hudson.getInstance().getComputer(getNodeName());\n+        return (ComputerImpl)Hudson.getInstance().getComputer(this);\n     }\n \n     public Computer toComputer() {"
    },
    {
        "commit_id": "2841eb6f58783b024a41d892583b9daf480c6213",
        "commit_message": "fix pointed out by http://www.nabble.com/Hudson-on-OC4J-tt16742879.html\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@8729 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2841eb6f58783b024a41d892583b9daf480c6213",
        "buggy_code": "return new File(decode(new URL(resURL).getPath()));",
        "fixed_code": "return new File(decode(new URL(\"file:/\"+resURL).getPath()));",
        "patch": "@@ -35,7 +35,7 @@ public static File jarFile(Class clazz) throws IOException {\n         if(resURL.startsWith(\"code-source:/\")) {\n             // OC4J apparently uses this. See http://www.nabble.com/Hudson-on-OC4J-tt16702113.html\n             resURL = resURL.substring(\"code-source:/\".length(), resURL.lastIndexOf('!')); // cut off jar: and the file name portion\n-            return new File(decode(new URL(resURL).getPath()));\n+            return new File(decode(new URL(\"file:/\"+resURL).getPath()));\n         }\n \n         if(resURL.startsWith(\"file:\")) {"
    },
    {
        "commit_id": "1910deec90ec7841b74e9c17dfd5121d4d44757c",
        "commit_message": "[fixed] broken link when context path is not '/' (issue #1526)\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@8405 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1910deec90ec7841b74e9c17dfd5121d4d44757c",
        "buggy_code": "StringBuilder buf = new StringBuilder();",
        "fixed_code": "StringBuilder buf = new StringBuilder(Stapler.getCurrentRequest().getContextPath());",
        "patch": "@@ -690,7 +690,7 @@ public static String getViewResource(Object it, String path) {\n         if(it instanceof Descriptor)\n             clazz = ((Descriptor)it).clazz;\n \n-        StringBuilder buf = new StringBuilder();\n+        StringBuilder buf = new StringBuilder(Stapler.getCurrentRequest().getContextPath());\n         buf.append(Hudson.VIEW_RESOURCE_PATH).append('/');\n         buf.append(clazz.getName().replace('.','/').replace('$','/'));\n         buf.append('/').append(path);"
    },
    {
        "commit_id": "55a287b9ad8a5cdf358ba76aaeefa714b9f47af4",
        "commit_message": "[fixed] Perform RFC2396 style escape. I suppose the proper fix is to change the signature to return URI so that it works better with chaining (issue #1464)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@8281 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/55a287b9ad8a5cdf358ba76aaeefa714b9f47af4",
        "buggy_code": "listener.getLogger().println(\"[HUDSON] Archiving \"+ file);",
        "fixed_code": "listener.getLogger().println(\"[HUDSON] Archiving \"+ file+\" to \"+target);",
        "patch": "@@ -156,8 +156,8 @@ private FilePath getArtifactArchivePath(MavenBuildProxy build, String groupId, S\n      * Called from within Maven to archive an artifact in Hudson.\n      */\n     public void archive(MavenBuildProxy build, File file, BuildListener listener) throws IOException, InterruptedException {\n-        listener.getLogger().println(\"[HUDSON] Archiving \"+ file);\n         FilePath target = getArtifactArchivePath(build,groupId,artifactId,version);\n+        listener.getLogger().println(\"[HUDSON] Archiving \"+ file+\" to \"+target);\n         new FilePath(file).copyTo(target);\n         /* debug probe to investigate \"missing artifact\" problem typically seen like this:\n "
    },
    {
        "commit_id": "cddad997cc59abc958eddbbb98ca27a81c209ebe",
        "commit_message": "applied a patch as suggested in issue #1471\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@8241 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cddad997cc59abc958eddbbb98ca27a81c209ebe",
        "buggy_code": "if(!checkContents(new File(cvs,\"Tag\"),'T'+branch))",
        "fixed_code": "if(!checkContents(new File(cvs,\"Tag\"),(isTag()?'N':'T')+branch))",
        "patch": "@@ -577,7 +577,7 @@ private boolean isUpdatableModule(File module) {\n         if(!checkContents(new File(cvs,\"Root\"),cvsroot))\n             return false;\n         if(branch!=null) {\n-            if(!checkContents(new File(cvs,\"Tag\"),'T'+branch))\n+            if(!checkContents(new File(cvs,\"Tag\"),(isTag()?'N':'T')+branch))\n                 return false;\n         } else {\n             File tag = new File(cvs,\"Tag\");"
    },
    {
        "commit_id": "cbbdaaf6f79e9540c2783e8bc9ff04396846c29a",
        "commit_message": "Trying to fix an NPE found in my logs.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@8155 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/cbbdaaf6f79e9540c2783e8bc9ff04396846c29a",
        "buggy_code": "if(!ICON_SIZE.matcher(qs).matches())",
        "fixed_code": "if(qs==null || !ICON_SIZE.matcher(qs).matches())",
        "patch": "@@ -1964,7 +1964,7 @@ public void doSignup( StaplerRequest req, StaplerResponse rsp ) throws IOExcepti\n      */\n     public void doIconSize( StaplerRequest req, StaplerResponse rsp ) throws IOException, ServletException {\n         String qs = req.getQueryString();\n-        if(!ICON_SIZE.matcher(qs).matches())\n+        if(qs==null || !ICON_SIZE.matcher(qs).matches())\n             throw new ServletException();\n         Cookie cookie = new Cookie(\"iconSize\", qs);\n         cookie.setMaxAge(/* ~4 mo. */9999999); // #762"
    },
    {
        "commit_id": "3df134061564e19886a3ee357f4f50e04d438948",
        "commit_message": "[fixed] project relationship now works correctly with nested projects like maven modules (issue #863)\nIn 1.201\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@7968 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3df134061564e19886a3ee357f4f50e04d438948",
        "buggy_code": "names.add(j.getName());",
        "fixed_code": "names.add(j.getFullName());",
        "patch": "@@ -661,7 +661,7 @@ public List<Project> getProjects() {\n     public Collection<String> getJobNames() {\n         List<String> names = new ArrayList<String>();\n         for (Job j : getAllItems(Job.class))\n-            names.add(j.getName());\n+            names.add(j.getFullName());\n         return names;\n     }\n "
    },
    {
        "commit_id": "90e6be745db741a00969c5e5d67d7e285cff60c6",
        "commit_message": "fixing a compilation error.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@7315 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/90e6be745db741a00969c5e5d67d7e285cff60c6",
        "buggy_code": "throws FormException {",
        "fixed_code": "throws FormException, IOException, ServletException {",
        "patch": "@@ -853,7 +853,7 @@ protected void submit(StaplerRequest req, StaplerResponse rsp) throws IOExceptio\n     }\n \n     protected final <T extends Describable<T>> List<T> buildDescribable(StaplerRequest req, List<? extends Descriptor<T>> descriptors, String prefix)\n-        throws FormException {\n+            throws FormException, IOException, ServletException {\n \n         JSONObject data = StructuredForm.get(req);\n         List<T> r = new Vector<T>();"
    },
    {
        "commit_id": "3d7db047b22a2629c463fffd0cda0709f606e4a2",
        "commit_message": "fixed a bug in parsing TestNG results\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@7031 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3d7db047b22a2629c463fffd0cda0709f606e4a2",
        "buggy_code": "URL url = Hudson.getInstance().servletContext.getResource(dtdFileName);",
        "fixed_code": "URL url = Hudson.getInstance().servletContext.getResource('/'+dtdFileName);",
        "patch": "@@ -37,7 +37,7 @@ public InputSource resolveEntity(String publicId, String systemId) throws SAXExc\n \t\t\t\tLOGGER.fine( \"It's a TestNG document, will try to lookup DTD in classpath\" );\n \t\t\t\tString dtdFileName = systemId.substring( TESTNG_NAMESPACE.length() );\n \n-                URL url = Hudson.getInstance().servletContext.getResource(dtdFileName);\n+                URL url = Hudson.getInstance().servletContext.getResource('/'+dtdFileName);\n                 if(url!=null)\n                     return new InputSource(url.toString());\n             }"
    },
    {
        "commit_id": "6b0a11af9e0a79c771b446f9753ff6acc1f312f8",
        "commit_message": "applied a patch from http://www.nabble.com/-patch--allow-M2-projects-to-use-environment-variables-in-options-tp15061026p15086318.html\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@6997 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6b0a11af9e0a79c771b446f9753ff6acc1f312f8",
        "buggy_code": "opts = opts.replace(\"$\" + key, envVars.get(key));",
        "fixed_code": "opts = opts.replace(\"${\" + key + \"}\", envVars.get(key));",
        "patch": "@@ -140,7 +140,7 @@ public String getMavenOpts() {\n             return null;\n \n         for (String key : envVars.keySet())\n-            opts = opts.replace(\"$\" + key, envVars.get(key));\n+            opts = opts.replace(\"${\" + key + \"}\", envVars.get(key));\n         \n         return opts;\n     }"
    },
    {
        "commit_id": "e913faf414f175846547f9b94e1bcec446fb7d5b",
        "commit_message": "bug fix. ClassLoader needs to be set or else we won't be able to load classes in plugins correctly.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@6524 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e913faf414f175846547f9b94e1bcec446fb7d5b",
        "buggy_code": "GroovyShell shell = new GroovyShell(binding,cc);",
        "fixed_code": "GroovyShell shell = new GroovyShell(classLoader,binding,cc);",
        "patch": "@@ -129,7 +129,7 @@ public void parse(InputStream script, Binding binding) {\n         setBinding(binding);\n         CompilerConfiguration cc = new CompilerConfiguration();\n         cc.setScriptBaseClass(ClosureScript.class.getName());\n-        GroovyShell shell = new GroovyShell(binding,cc);\n+        GroovyShell shell = new GroovyShell(classLoader,binding,cc);\n \n         ClosureScript s = (ClosureScript)shell.parse(script);\n         s.setDelegate(this);"
    },
    {
        "commit_id": "f7277d80033d790d0bf68989a523c222ed8ed444",
        "commit_message": "partial fix to #1052. The problem is that the DescriptorImpl class was not public.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@6112 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f7277d80033d790d0bf68989a523c222ed8ed444",
        "buggy_code": "ViewSVN.DESCRIPTOR,",
        "fixed_code": "ViewSVN.DescriptorImpl.INSTANCE,",
        "patch": "@@ -19,7 +19,7 @@ public class RepositoryBrowsers {\n      */\n     public static final List<Descriptor<RepositoryBrowser<?>>> LIST = Descriptor.toList(\n         ViewCVS.DESCRIPTOR,\n-        ViewSVN.DESCRIPTOR,\n+        ViewSVN.DescriptorImpl.INSTANCE,\n         FishEyeSVN.DESCRIPTOR,\n         FishEyeCVS.DESCRIPTOR,\n         WebSVN.DESCRIPTOR,"
    },
    {
        "commit_id": "975f36e73a843253a209af42c190b98eaf95f04f",
        "commit_message": "fixed a bug regarding a roundtrip exporting (where side X exports an object to the other side Y, and Y re-exports that back to X.)\nWhen this happens to classloaders (that is, when the master exports its classloader to a remote machine, which re-exports this remote classloader to the master to make a callback), we end up creating a RemoteClassLoader on the master to load a duplicate copy. A duplicate copy happens when we try to load a class from plugins, because ImportedClassLoaderTable creates new RemoteClassLoader with the 'getClass().getClassLoader()' as the parent, which doesn't see the plugin classes.\nTo fix this problem, RemoteClassLoader is modified to detect the situation where a round-trip re-exporting is about to happen. Upon detecting this, it will arrange things in such a way that the other side will get the original ClassLoader instance back, instead of doubly-proxied RemoteClassLoader.\nThis fixes the problem discussed in http://www.nabble.com/Help-Kohsuke%21-m2-project-type-and-cobertura-tf4829718.html and http://www.nabble.com/MavenReporter-throws-Serialization-Exception-for-ProjectActions-when-writing-to-build.xml-tf4784290.html#a13687067\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5997 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/975f36e73a843253a209af42c190b98eaf95f04f",
        "buggy_code": "r = new RemoteClassLoader(getClass().getClassLoader(),classLoaderProxy);",
        "fixed_code": "r = RemoteClassLoader.create(getClass().getClassLoader(),classLoaderProxy);",
        "patch": "@@ -25,7 +25,7 @@ public synchronized ClassLoader get(IClassLoader classLoaderProxy) {\n         if(r==null) {\n             // we need to be able to use the same hudson.remoting classes, hence delegate\n             // to this class loader.\n-            r = new RemoteClassLoader(getClass().getClassLoader(),classLoaderProxy);\n+            r = RemoteClassLoader.create(getClass().getClassLoader(),classLoaderProxy);\n             classLoaders.put(classLoaderProxy,r);\n         }\n         return r;"
    },
    {
        "commit_id": "e66af35071c3a460fcfe28ff3d113f9a971a8323",
        "commit_message": "fix grammo in message\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5884 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e66af35071c3a460fcfe28ff3d113f9a971a8323",
        "buggy_code": "listener.error(\"No artifact founds that matches the file pattern \\\"\"+artifacts+\"\\\". Configuration error?\");",
        "fixed_code": "listener.error(\"No artifacts found that match the file pattern \\\"\"+artifacts+\"\\\". Configuration error?\");",
        "patch": "@@ -64,7 +64,7 @@ public boolean perform(AbstractBuild<?,?> build, Launcher launcher, BuildListene\n \n         try {\n             if(p.getWorkspace().copyRecursiveTo(artifacts,excludes,new FilePath(dir))==0) {\n-                listener.error(\"No artifact founds that matches the file pattern \\\"\"+artifacts+\"\\\". Configuration error?\");\n+                listener.error(\"No artifacts found that match the file pattern \\\"\"+artifacts+\"\\\". Configuration error?\");\n                 build.setResult(Result.FAILURE);\n                 return true;\n             }"
    },
    {
        "commit_id": "e419a0c7acb8bc14d9f32f2a47c746541d9ccef7",
        "commit_message": "formatting bug.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5859 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e419a0c7acb8bc14d9f32f2a47c746541d9ccef7",
        "buggy_code": "cause.printStackTrace(listener.error(\"%s slave agent was terminated\\n\"));",
        "fixed_code": "cause.printStackTrace(listener.error(\"%s slave agent was terminated\\n\",getTimestamp()));",
        "patch": "@@ -303,7 +303,7 @@ public void run() {\n                             setChannel(proc.getInputStream(),proc.getOutputStream(),launchLog,new Listener() {\n                                 public void onClosed(Channel channel, IOException cause) {\n                                     if(cause!=null)\n-                                        cause.printStackTrace(listener.error(\"%s slave agent was terminated\\n\"));\n+                                        cause.printStackTrace(listener.error(\"%s slave agent was terminated\\n\",getTimestamp()));\n                                     proc.destroy();\n                                 }\n                             });"
    },
    {
        "commit_id": "e97a31d26767896216dc96325c2f6e2f1ad3a525",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5740 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e97a31d26767896216dc96325c2f6e2f1ad3a525",
        "buggy_code": "m.put(e.substring(0,idx),e.substring(idx+1,0));",
        "fixed_code": "m.put(e.substring(0,idx),e.substring(idx+1,e.length()));",
        "patch": "@@ -87,7 +87,7 @@ private static ProcessBuilder environment(ProcessBuilder pb, String[] env) {\n             m.clear();\n             for (String e : env) {\n                 int idx = e.indexOf('=');\n-                m.put(e.substring(0,idx),e.substring(idx+1,0));\n+                m.put(e.substring(0,idx),e.substring(idx+1,e.length()));\n             }\n             return pb;\n         }"
    },
    {
        "commit_id": "b9873621d5384a70bba76afe0e1e3debe421f8fa",
        "commit_message": "adding error diagnostics as to where servlet API is loaded from.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5706 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b9873621d5384a70bba76afe0e1e3debe421f8fa",
        "buggy_code": "context.setAttribute(APP,new IncompatibleServletVersionDetected());",
        "fixed_code": "context.setAttribute(APP,new IncompatibleServletVersionDetected(ServletResponse.class));",
        "patch": "@@ -75,7 +75,7 @@ public void contextInitialized(ServletContextEvent event) {\n             try {\n                 ServletResponse.class.getMethod(\"setCharacterEncoding\",String.class);\n             } catch (NoSuchMethodException e) {\n-                context.setAttribute(APP,new IncompatibleServletVersionDetected());\n+                context.setAttribute(APP,new IncompatibleServletVersionDetected(ServletResponse.class));\n                 return;\n             }\n "
    },
    {
        "commit_id": "c4156324ef367319c87f01ea6d3cfe9c3318e089",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5541 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c4156324ef367319c87f01ea6d3cfe9c3318e089",
        "buggy_code": "if(req.getParameter(name)!=null) {",
        "fixed_code": "if(json.has(name)) {",
        "patch": "@@ -102,7 +102,7 @@ public void rebuild(StaplerRequest req, JSONObject json, List<? extends Descript\n \n         for( int i=0; i< descriptors.size(); i++ ) {\n             String name = prefix + i;\n-            if(req.getParameter(name)!=null) {\n+            if(json.has(name)) {\n                 T instance = descriptors.get(i).newInstance(req,json.getJSONObject(name));\n                 newList.add(instance);\n             }"
    },
    {
        "commit_id": "598261330018309a4858c9811585977da22b346a",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5464 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/598261330018309a4858c9811585977da22b346a",
        "buggy_code": "if(n!=-1)   return null;",
        "fixed_code": "if(n==-1)   return null;",
        "patch": "@@ -454,7 +454,7 @@ public int getUpstreamRelationship(AbstractProject that) {\n      */\n     public AbstractBuild<?,?> getUpstreamRelationshipBuild(AbstractProject<?,?> that) {\n         int n = getUpstreamRelationship(that);\n-        if(n!=-1)   return null;\n+        if(n==-1)   return null;\n         return that.getBuildByNumber(n);\n     }\n "
    },
    {
        "commit_id": "1ab6934a2d991176b4c2385fd93cc5427af9395e",
        "commit_message": "fixed a bug where the build link cannot be clicked even by an admin when the security is enabled (#944)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5418 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1ab6934a2d991176b4c2385fd93cc5427af9395e",
        "buggy_code": "if(!Hudson.getInstance().isUseSecurity() || (token!=null && token.authorizedToStartBuild(req,rsp))) {",
        "fixed_code": "if(!Hudson.getInstance().isUseSecurity() || (token!=null && token.authorizedToStartBuild(req,rsp)) || Hudson.adminCheck(req, rsp)) {",
        "patch": "@@ -29,7 +29,7 @@ public static BuildAuthorizationToken create(StaplerRequest req) {\n     }\n \n     public static void startBuildIfAuthorized(BuildAuthorizationToken token, BuildableItem job, StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {\n-        if(!Hudson.getInstance().isUseSecurity() || (token!=null && token.authorizedToStartBuild(req,rsp))) {\n+        if(!Hudson.getInstance().isUseSecurity() || (token!=null && token.authorizedToStartBuild(req,rsp)) || Hudson.adminCheck(req, rsp)) {\n             job.scheduleBuild();\n             rsp.forwardToPreviousPage(req);\n         }"
    },
    {
        "commit_id": "9eb6cee10a9c982493b6a0256c4c32b9e95853ee",
        "commit_message": "Fixed a security issue. The security should be on by default. (#926)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5364 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9eb6cee10a9c982493b6a0256c4c32b9e95853ee",
        "buggy_code": "if(token==null || token.authorizedToStartBuild(req,rsp)) {",
        "fixed_code": "if(!Hudson.getInstance().isUseSecurity() || (token!=null && token.authorizedToStartBuild(req,rsp))) {",
        "patch": "@@ -28,7 +28,7 @@ public static BuildAuthorizationToken create(StaplerRequest req) {\n     }\n \n     public static void startBuildIfAuthorized(BuildAuthorizationToken token, BuildableItem job, StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException {\n-        if(token==null || token.authorizedToStartBuild(req,rsp)) {\n+        if(!Hudson.getInstance().isUseSecurity() || (token!=null && token.authorizedToStartBuild(req,rsp))) {\n             job.scheduleBuild();\n             rsp.forwardToPreviousPage(req);\n         }"
    },
    {
        "commit_id": "96a5a2f16fd039ccc3e8fbb09580ce9d287a4b6d",
        "commit_message": "fixed a bug where matrix configuration build history ajax update was broken.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@5105 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/96a5a2f16fd039ccc3e8fbb09580ce9d287a4b6d",
        "buggy_code": "n = Math.max(n,lb.getNumber());",
        "fixed_code": "n = Math.max(n,lb.getNumber()+1);",
        "patch": "@@ -77,7 +77,7 @@ public int getNextBuildNumber() {\n \n         lb = getLastBuild();\n         if(lb!=null)\n-            n = Math.max(n,lb.getNumber());\n+            n = Math.max(n,lb.getNumber()+1);\n \n         return n;\n     }"
    },
    {
        "commit_id": "6c54eb24947c5eaae8b7cb6929444c40a6b735de",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4943 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6c54eb24947c5eaae8b7cb6929444c40a6b735de",
        "buggy_code": "protected User get(String key) { return getUser(key); }",
        "fixed_code": "protected User get(String key) { return User.get(key,false); }",
        "patch": "@@ -701,7 +701,7 @@ public SearchIndexBuilder makeSearchIndex() {\n                 protected Collection<Computer> all() { return computers.values(); }\n             })\n             .add(new CollectionSearchIndex() {// for users\n-                protected User get(String key) { return getUser(key); }\n+                protected User get(String key) { return User.get(key,false); }\n                 protected Collection<User> all() { return User.getAll(); }\n             })\n             .add(new CollectionSearchIndex() {// for views"
    },
    {
        "commit_id": "ef2e13bbf4fe31c9cb27b54fadfa55307689d34f",
        "commit_message": "Issue number:  826\nProvide a useful error message\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4813 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ef2e13bbf4fe31c9cb27b54fadfa55307689d34f",
        "buggy_code": "private static File getRevisionFile(AbstractBuild build) {",
        "fixed_code": "public static File getRevisionFile(AbstractBuild build) {",
        "patch": "@@ -555,7 +555,7 @@ public Map<String,SvnInfo> invoke(File ws, VirtualChannel channel) throws IOExce\n     /**\n      * Gets the file that stores the revision.\n      */\n-    private static File getRevisionFile(AbstractBuild build) {\n+    public static File getRevisionFile(AbstractBuild build) {\n         return new File(build.getRootDir(),\"revision.txt\");\n     }\n "
    },
    {
        "commit_id": "4ba8af4b0fb01ce3dbd0d9496937d5918a1008bb",
        "commit_message": "Issue number:  763\n\nImprove error message when project does not exist anymore\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4701 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4ba8af4b0fb01ce3dbd0d9496937d5918a1008bb",
        "buggy_code": "listener.getLogger().println(\"One or more repository locations do not exist anymore for \" + build.getProject() + \", project will be disabled.\");",
        "fixed_code": "listener.getLogger().println(\"One or more repository locations do not exist anymore for \" + build.getProject().getName() + \", project will be disabled.\");",
        "patch": "@@ -337,7 +337,7 @@ private List<String> checkout(AbstractBuild build, FilePath workspace, TaskListe\n         try {\n             if (! repositoryLocationsExist()) {\n                 // Disable this project, see issue #763\n-                listener.getLogger().println(\"One or more repository locations do not exist anymore for \" + build.getProject() + \", project will be disabled.\");\n+                listener.getLogger().println(\"One or more repository locations do not exist anymore for \" + build.getProject().getName() + \", project will be disabled.\");\n                 build.getProject().makeDisabled(true);\n                 return null;\n             }"
    },
    {
        "commit_id": "e9ffeeee48c65c42ec65d8cebb5807598448cdd3",
        "commit_message": "reimplemented a fix to #747 as the list of culprits is really not specific to e-mail.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4689 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e9ffeeee48c65c42ec65d8cebb5807598448cdd3",
        "buggy_code": "public void post(BuildListener listener) throws IOException, InterruptedException {",
        "fixed_code": "public void post2(BuildListener listener) throws Exception {",
        "patch": "@@ -343,7 +343,7 @@ listener,new ProxyImpl(),\n             }\n         }\n \n-        public void post(BuildListener listener) throws IOException, InterruptedException {\n+        public void post2(BuildListener listener) throws Exception {\n             for (MavenReporter reporter : reporters)\n                 reporter.end(MavenBuild.this,launcher,listener);\n "
    },
    {
        "commit_id": "e9ffeeee48c65c42ec65d8cebb5807598448cdd3",
        "commit_message": "reimplemented a fix to #747 as the list of culprits is really not specific to e-mail.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4689 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e9ffeeee48c65c42ec65d8cebb5807598448cdd3",
        "buggy_code": "public void post(BuildListener listener) {",
        "fixed_code": "public void post2(BuildListener listener) throws Exception {",
        "patch": "@@ -330,7 +330,7 @@ protected Result doRun(final BuildListener listener) throws Exception {\n             }\n         }\n \n-        public void post(BuildListener listener) {\n+        public void post2(BuildListener listener) throws Exception {\n             if(project.isAggregatorStyleBuild()) {\n                 // schedule downstream builds. for non aggregator style builds,\n                 // this is done by each module"
    },
    {
        "commit_id": "e9ffeeee48c65c42ec65d8cebb5807598448cdd3",
        "commit_message": "reimplemented a fix to #747 as the list of culprits is really not specific to e-mail.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4689 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e9ffeeee48c65c42ec65d8cebb5807598448cdd3",
        "buggy_code": "public void post(BuildListener listener) throws IOException, InterruptedException {",
        "fixed_code": "public void post2(BuildListener listener) throws IOException, InterruptedException {",
        "patch": "@@ -136,7 +136,7 @@ protected Result doRun(BuildListener listener) throws Exception {\n             return null;\n         }\n \n-        public void post(BuildListener listener) throws IOException, InterruptedException {\n+        public void post2(BuildListener listener) throws IOException, InterruptedException {\n             // run all of them even if one of them failed\n             for( Publisher bs : project.getPublishers().values() )\n                 bs.perform(Build.this, launcher, listener);"
    },
    {
        "commit_id": "2132acffd44394ab50ae605564f4588235a21568",
        "commit_message": "Issue number:  747\n\nChanging project configuration was resetting the 'culprits' field to null\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4676 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2132acffd44394ab50ae605564f4588235a21568",
        "buggy_code": "public transient Set<User> culprits = new HashSet<User>();",
        "fixed_code": "public transient Set<User> culprits;",
        "patch": "@@ -71,7 +71,7 @@ public abstract class AbstractProject<P extends AbstractProject<P,R>,R extends A\n      */\n     private Integer quietPeriod = null;\n \n-    public transient Set<User> culprits = new HashSet<User>();\n+    public transient Set<User> culprits;\n \n     /**\n      * If this project is configured to be only built on a certain label,"
    },
    {
        "commit_id": "829820259a38090e8522b7bdfe97552393b1bca9",
        "commit_message": "Issue number:  747\n\nTry to fix the NPE (I'm in a lack for a better idea to fix this)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4675 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/829820259a38090e8522b7bdfe97552393b1bca9",
        "buggy_code": "public volatile Set<User> culprits = new HashSet<User>();",
        "fixed_code": "public transient Set<User> culprits = new HashSet<User>();",
        "patch": "@@ -71,7 +71,7 @@ public abstract class AbstractProject<P extends AbstractProject<P,R>,R extends A\n      */\n     private Integer quietPeriod = null;\n \n-    public volatile Set<User> culprits = new HashSet<User>();\n+    public transient Set<User> culprits = new HashSet<User>();\n \n     /**\n      * If this project is configured to be only built on a certain label,"
    },
    {
        "commit_id": "077698448aafbaa4e3c09ec64a68e22be2c7dbe4",
        "commit_message": "improved error handling (#772)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4553 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/077698448aafbaa4e3c09ec64a68e22be2c7dbe4",
        "buggy_code": "String adrs = a.getProperty(Mailer.UserProperty.class).getAddress();",
        "fixed_code": "String adrs = Util.fixEmpty(a.getProperty(Mailer.UserProperty.class).getAddress());",
        "patch": "@@ -252,7 +252,7 @@ private MimeMessage createEmptyMail(B build, BuildListener listener) throws Mess\n             for (Entry change : build.getChangeSet()) {\n                 User a = change.getAuthor();\n                 if (users.add(a)) {\n-                    String adrs = a.getProperty(Mailer.UserProperty.class).getAddress();\n+                    String adrs = Util.fixEmpty(a.getProperty(Mailer.UserProperty.class).getAddress());\n                     if(debug)\n                         listener.getLogger().println(\"  User \"+a.getId()+\" -> \"+adrs);\n                     if (adrs != null)"
    },
    {
        "commit_id": "716c0de65382985414c3f0f41a16365638bc5067",
        "commit_message": "added error margin.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4409 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/716c0de65382985414c3f0f41a16365638bc5067",
        "buggy_code": "if(localTime < buildTime)",
        "fixed_code": "if(localTime < buildTime-1000) /*margin*/",
        "patch": "@@ -79,7 +79,7 @@ public TestResult(long buildTime, DirectoryScanner results) throws IOException {\n \n         if(!parsed) {\n             long localTime = System.currentTimeMillis();\n-            if(localTime < buildTime)\n+            if(localTime < buildTime-1000) /*margin*/\n                 // build time is in the the future. clock on this slave must be running behind\n                 throw new AbortException(\n                     \"Clock on this slave is out of sync with the master, and therefore \\n\" +"
    },
    {
        "commit_id": "c4d2e187c753d431274e752f462423ebb208af23",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4332 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c4d2e187c753d431274e752f462423ebb208af23",
        "buggy_code": "all.retainAll(builtinRealms);",
        "fixed_code": "all.removeAll(builtinRealms);",
        "patch": "@@ -102,7 +102,7 @@ public static int launch(String[] args) throws NoSuchMethodException, IllegalAcc\n             // so unless we discard all the realms multiple invocations\n             // that use different versions of the same plugin will fail to work correctly.\n             Set all = new HashSet(world.getRealms());\n-            all.retainAll(builtinRealms);\n+            all.removeAll(builtinRealms);\n             for (Iterator itr = all.iterator(); itr.hasNext();) {\n                 ClassRealm cr = (ClassRealm) itr.next();\n                 world.disposeRealm(cr.getId());"
    },
    {
        "commit_id": "47aa3fd134717b9828e11ff9989161a6ce9a47c3",
        "commit_message": "compilation error fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4319 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/47aa3fd134717b9828e11ff9989161a6ce9a47c3",
        "buggy_code": "record(build,pom.getArtifact(),listener,archivedFiles,true);",
        "fixed_code": "record(build,pom,pom.getArtifact(),listener,archivedFiles,true);",
        "patch": "@@ -65,7 +65,7 @@ public boolean postBuild(MavenBuildProxy build, MavenProject pom, final BuildLis\n             new FilePath(pom.getFile()).copyTo(archivedPom);\n \n             // record artifacts\n-            record(build,pom.getArtifact(),listener,archivedFiles,true);\n+            record(build,pom,pom.getArtifact(),listener,archivedFiles,true);\n             for( Object a : pom.getAttachedArtifacts() )\n                 record(build,pom,(Artifact)a,listener,archivedFiles,false);\n "
    },
    {
        "commit_id": "7c2adc22afc4597485bb9439751df51c0cf1dd9b",
        "commit_message": "changed the directory layout of the matrix project as characters like '=' and ',' are more error prone (in the sense that you are more likely to hit bugs in various tools.)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4283 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7c2adc22afc4597485bb9439751df51c0cf1dd9b",
        "buggy_code": "static XmlFile getConfigFile(File dir) {",
        "fixed_code": "public static XmlFile getConfigFile(File dir) {",
        "patch": "@@ -84,7 +84,7 @@ public static Item load(ItemGroup parent, File dir) throws IOException {\n     /**\n      * The file we save our configuration.\n      */\n-    static XmlFile getConfigFile(File dir) {\n+    public static XmlFile getConfigFile(File dir) {\n         return new XmlFile(XSTREAM,new File(dir,\"config.xml\"));\n     }\n "
    },
    {
        "commit_id": "f03d82bacf1abd86730cc701f411cbc466fcb252",
        "commit_message": "fixed the bug in the caption.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4246 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/f03d82bacf1abd86730cc701f411cbc466fcb252",
        "buggy_code": "new DirectoryBrowserSupport(this).serveFile(req, rsp, ws, \"folder.gif\", true);",
        "fixed_code": "new DirectoryBrowserSupport(this,getDisplayName()+\" workspace\").serveFile(req, rsp, ws, \"folder.gif\", true);",
        "patch": "@@ -727,7 +727,7 @@ public void doWs( StaplerRequest req, StaplerResponse rsp ) throws IOException,\n             // if there's no workspace, report a nice error message\n             rsp.forward(this,\"noWorkspace\",req);\n         } else {\n-            new DirectoryBrowserSupport(this).serveFile(req, rsp, ws, \"folder.gif\", true);\n+            new DirectoryBrowserSupport(this,getDisplayName()+\" workspace\").serveFile(req, rsp, ws, \"folder.gif\", true);\n         }\n     }\n "
    },
    {
        "commit_id": "3e98673265bcf200c7013ca00f7d9e826be48cd6",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4193 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3e98673265bcf200c7013ca00f7d9e826be48cd6",
        "buggy_code": "buf.append('/').append(req.getContextPath());",
        "fixed_code": "buf.append(req.getContextPath()).append('/');",
        "patch": "@@ -413,7 +413,7 @@ public static String inferHudsonURL(StaplerRequest req) {\n         buf.append(req.getServerName());\n         if(req.getLocalPort()!=80)\n             buf.append(':').append(req.getLocalPort());\n-        buf.append('/').append(req.getContextPath());\n+        buf.append(req.getContextPath()).append('/');\n         return buf.toString();\n     }\n "
    },
    {
        "commit_id": "66994a25e17d58b2ce664c39286dd5fb318d242c",
        "commit_message": "fixed a bug in the error message.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4180 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/66994a25e17d58b2ce664c39286dd5fb318d242c",
        "buggy_code": "e.printStackTrace(listener.error(\"Failed to parse svn info for \"+module));",
        "fixed_code": "e.printStackTrace(listener.error(\"Failed to parse svn info for \"+module.remote));",
        "patch": "@@ -485,7 +485,7 @@ public Map<String,SvnInfo> invoke(File ws, VirtualChannel channel) throws IOExce\n                         SvnInfo info = new SvnInfo(svnWc.doInfo(new File(ws,module.local),SVNRevision.WORKING));\n                         revisions.put(info.url,info);\n                     } catch (SVNException e) {\n-                        e.printStackTrace(listener.error(\"Failed to parse svn info for \"+module));\n+                        e.printStackTrace(listener.error(\"Failed to parse svn info for \"+module.remote));\n                     }\n                 }\n                 for(String local : externals){"
    },
    {
        "commit_id": "00259cc2c7369f02113efeb0518f81b2380c3519",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4073 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/00259cc2c7369f02113efeb0518f81b2380c3519",
        "buggy_code": "rsp.sendRedirect2(target.getUrl());",
        "fixed_code": "rsp.sendRedirect2(a.getUrl()+target.getUrl());",
        "patch": "@@ -27,7 +27,7 @@ public void doIndex(StaplerRequest req, StaplerResponse rsp) throws IOException\n                 SuggestedItem target = find(index, query);\n                 if(target!=null) {\n                     // found\n-                    rsp.sendRedirect2(target.getUrl());\n+                    rsp.sendRedirect2(a.getUrl()+target.getUrl());\n                 }\n             }\n         }"
    },
    {
        "commit_id": "2a7deb85ad93faa27d47121684230961ff7336cc",
        "commit_message": "bug fix\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@4063 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a7deb85ad93faa27d47121684230961ff7336cc",
        "buggy_code": "return anc.getUrl()+\"/search\";",
        "fixed_code": "return anc.getUrl()+\"/search/\";",
        "patch": "@@ -364,7 +364,7 @@ public static String getSearchURL() {\n         for( int i=list.size()-1; i>=0; i-- ) {\n             Ancestor anc = (Ancestor) list.get(i);\n             if(anc.getObject() instanceof SearchableModelObject)\n-                return anc.getUrl()+\"/search\";\n+                return anc.getUrl()+\"/search/\";\n         }\n         return null;\n     }"
    },
    {
        "commit_id": "16c4d4c88781ad92b3c82c214f4f3947a35044ed",
        "commit_message": "rename error?\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3930 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/16c4d4c88781ad92b3c82c214f4f3947a35044ed",
        "buggy_code": "return new DiskSpaceMonitor();",
        "fixed_code": "return new ClockMonitor();",
        "patch": "@@ -32,7 +32,7 @@ public String getDisplayName() {\n         }\n \n         public NodeMonitor newInstance(StaplerRequest req) throws FormException {\n-            return new DiskSpaceMonitor();\n+            return new ClockMonitor();\n         }\n     };\n }"
    },
    {
        "commit_id": "9f8958613db42d2ee60183c3e500e91f80f5782d",
        "commit_message": "improved the error message.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3810 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9f8958613db42d2ee60183c3e500e91f80f5782d",
        "buggy_code": "throw new IOException(\"No such directory exists. Did you specify the correct branch/tag?: \"+dir);",
        "fixed_code": "throw new IOException(\"No such directory exists. Did you specify the correct branch? Perhaps you specified a tag: \"+dir);",
        "patch": "@@ -312,7 +312,7 @@ private void archive(File dir,String relPath,ZipOutputStream zos, boolean isRoot\n         File[] files = dir.listFiles();\n         if(files==null) {\n             if(isRoot)\n-                throw new IOException(\"No such directory exists. Did you specify the correct branch/tag?: \"+dir);\n+                throw new IOException(\"No such directory exists. Did you specify the correct branch? Perhaps you specified a tag: \"+dir);\n             else\n                 throw new IOException(\"No such directory exists. Looks like someone is modifying the workspace concurrently: \"+dir);\n         }"
    },
    {
        "commit_id": "187f55fd2e2b3e561116003e479c1b07bd7dfc00",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3794 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/187f55fd2e2b3e561116003e479c1b07bd7dfc00",
        "buggy_code": "if(b.getNumber()>=getNumber())",
        "fixed_code": "if(b!=null && b.getNumber()>=getNumber())",
        "patch": "@@ -120,7 +120,7 @@ public Map<MavenModule,MavenBuild> getModuleLastBuilds() {\n \n         for (MavenModule m : mods) {\n             MavenBuild b = m.getNearestOldBuild(end - 1);\n-            if(b.getNumber()>=getNumber())\n+            if(b!=null && b.getNumber()>=getNumber())\n                 r.put(m,b);\n         }\n "
    },
    {
        "commit_id": "ee25ce70e8d13aafaafc52120984d774de108736",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3765 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ee25ce70e8d13aafaafc52120984d774de108736",
        "buggy_code": "if(builtOn==null)",
        "fixed_code": "if(builtOn==null || builtOn.equals(\"\"))",
        "patch": "@@ -85,7 +85,7 @@ public final P getProject() {\n      * Returns a {@link Slave} on which this build was done.\n      */\n     public Node getBuiltOn() {\n-        if(builtOn==null)\n+        if(builtOn==null || builtOn.equals(\"\"))\n             return Hudson.getInstance();\n         else\n             return Hudson.getInstance().getSlave(builtOn);"
    },
    {
        "commit_id": "97883b8325d8bcccda4612c4f70b70cd0433714f",
        "commit_message": "going back to the login error page is confusing (#641)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3733 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/97883b8325d8bcccda4612c4f70b70cd0433714f",
        "buggy_code": "if(from!=null && from.startsWith(\"/\"))",
        "fixed_code": "if(from!=null && from.startsWith(\"/\") && !from.equals(\"/loginError\"))",
        "patch": "@@ -1274,7 +1274,7 @@ public void doLoginEntry( StaplerRequest req, StaplerResponse rsp ) throws IOExc\n             rsp.sendRedirect2(\"noPrincipal\");\n \n         String from = req.getParameter(\"from\");\n-        if(from!=null && from.startsWith(\"/\"))\n+        if(from!=null && from.startsWith(\"/\") && !from.equals(\"/loginError\"))\n             rsp.sendRedirect2(from);    // I'm bit uncomfortable letting users redircted to other sites, make sure the URL falls into this domain\n         else\n             rsp.sendRedirect2(\".\");"
    },
    {
        "commit_id": "b3a4dae21ad78347cb2c1c2c9014cbed2ecf30d4",
        "commit_message": "bug fix. Subversion descriptor cannot be saved.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3704 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b3a4dae21ad78347cb2c1c2c9014cbed2ecf30d4",
        "buggy_code": "private final RemotableSVNAuthenticationProviderImpl remotableProvider = new RemotableSVNAuthenticationProviderImpl();",
        "fixed_code": "private transient final RemotableSVNAuthenticationProviderImpl remotableProvider = new RemotableSVNAuthenticationProviderImpl();",
        "patch": "@@ -687,7 +687,7 @@ private interface RemotableSVNAuthenticationProvider {\n          * There's no point in exporting multiple {@link RemotableSVNAuthenticationProviderImpl} instances,\n          * so let's just use one instance.\n          */\n-        private final RemotableSVNAuthenticationProviderImpl remotableProvider = new RemotableSVNAuthenticationProviderImpl();\n+        private transient final RemotableSVNAuthenticationProviderImpl remotableProvider = new RemotableSVNAuthenticationProviderImpl();\n \n         private final class RemotableSVNAuthenticationProviderImpl implements RemotableSVNAuthenticationProvider, Serializable {\n             public Credential getCredential(String realm) {"
    },
    {
        "commit_id": "0d3e1997fe3f652f2e21a1eb5fc6886c28f6cb13",
        "commit_message": "bug fix in svn+ssh password authentication.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3489 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/0d3e1997fe3f652f2e21a1eb5fc6886c28f6cb13",
        "buggy_code": "return new SVNSSHAuthentication(userName,password,-1,false);",
        "fixed_code": "return new SVNSSHAuthentication(userName,Scrambler.descramble(password),-1,false);",
        "patch": "@@ -632,7 +632,7 @@ public PasswordCredential(String userName, String password) {\n             @Override\n             SVNAuthentication createSVNAuthentication(String kind) {\n                 if(kind.equals(ISVNAuthenticationManager.SSH))\n-                    return new SVNSSHAuthentication(userName,password,-1,false);\n+                    return new SVNSSHAuthentication(userName,Scrambler.descramble(password),-1,false);\n                 else\n                     return new SVNPasswordAuthentication(userName,Scrambler.descramble(password),false);\n             }"
    },
    {
        "commit_id": "64fcc3e9be2f62e0298cef75b16bccee0f04b0e8",
        "commit_message": "This error contains mark-up (#604)\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3488 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/64fcc3e9be2f62e0298cef75b16bccee0f04b0e8",
        "buggy_code": "error(message);",
        "fixed_code": "errorWithMarkup(message);",
        "patch": "@@ -953,7 +953,7 @@ protected void check() throws IOException, ServletException {\n                         message += \" (Maybe you need to <a href='\"+req.getContextPath()+\"/scm/SubversionSCM/enterCredential?\"+Util.escape(url)+\"'>enter credential</a>?)\";\n                         message += \"<br>\";\n                         logger.log(Level.INFO, \"Failed to access subversion repository \"+url,e);\n-                        error(message);\n+                        errorWithMarkup(message);\n                     }\n                 }\n             }.process();"
    },
    {
        "commit_id": "dd84fa05ad454158ad7b733e04b895b2ddf391e6",
        "commit_message": "work around for #596 \"404 error when modifying System Configuration\".\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3473 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/dd84fa05ad454158ad7b733e04b895b2ddf391e6",
        "buggy_code": "rsp.sendRedirect(\".\");  // go to the top page",
        "fixed_code": "rsp.sendRedirect(req.getContextPath()+'/');  // go to the top page",
        "patch": "@@ -1101,7 +1101,7 @@ public synchronized void doConfigSubmit( StaplerRequest req, StaplerResponse rsp\n \n             save();\n             if(result)\n-                rsp.sendRedirect(\".\");  // go to the top page\n+                rsp.sendRedirect(req.getContextPath()+'/');  // go to the top page\n             else\n                 rsp.sendRedirect(\"configure\"); // back to config\n         } catch (FormException e) {"
    },
    {
        "commit_id": "9c18e5f87dfe988242809656a645147a1ada1b6d",
        "commit_message": "Distinguished error vs errorWithMarkup to make it hard to introduce XSS vulnerability.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3445 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9c18e5f87dfe988242809656a645147a1ada1b6d",
        "buggy_code": "error(\"The URL should end like <tt>.../browse/foobar/</tt>\");",
        "fixed_code": "errorWithMarkup(\"The URL should end like <tt>.../browse/foobar/</tt>\");",
        "patch": "@@ -83,7 +83,7 @@ protected void check() throws IOException, ServletException {\n                         value += '/';\n                     }\n                     if (!URL_PATTERN.matcher(value).matches()) {\n-                        error(\"The URL should end like <tt>.../browse/foobar/</tt>\");\n+                        errorWithMarkup(\"The URL should end like <tt>.../browse/foobar/</tt>\");\n                         return;\n                     }\n                     try {"
    },
    {
        "commit_id": "9c18e5f87dfe988242809656a645147a1ada1b6d",
        "commit_message": "Distinguished error vs errorWithMarkup to make it hard to introduce XSS vulnerability.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3445 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9c18e5f87dfe988242809656a645147a1ada1b6d",
        "buggy_code": "error(\"The URL should end like <tt>.../browse/foobar/</tt>\");",
        "fixed_code": "errorWithMarkup(\"The URL should end like <tt>.../browse/foobar/</tt>\");",
        "patch": "@@ -127,7 +127,7 @@ protected void check() throws IOException, ServletException {\n \n                     if(!value.endsWith(\"/\")) value+='/';\n                     if(!URL_PATTERN.matcher(value).matches()) {\n-                        error(\"The URL should end like <tt>.../browse/foobar/</tt>\");\n+                        errorWithMarkup(\"The URL should end like <tt>.../browse/foobar/</tt>\");\n                         return;\n                     }\n "
    },
    {
        "commit_id": "efa072c23273f7d8f8394eb5d498d9c5cfaf2ca2",
        "commit_message": "fixed NPE as reported in http://www.nabble.com/Possible-NPE-bug--tf3793595.html\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3351 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/efa072c23273f7d8f8394eb5d498d9c5cfaf2ca2",
        "buggy_code": "if(scm==null)   return null;",
        "fixed_code": "if(scm==null)   return new NullSCM();",
        "patch": "@@ -28,7 +28,7 @@ public class SCMS {\n      */\n     public static SCM parseSCM(StaplerRequest req) throws FormException {\n         String scm = req.getParameter(\"scm\");\n-        if(scm==null)   return null;\n+        if(scm==null)   return new NullSCM();\n \n         int scmidx = Integer.parseInt(scm);\n         SCMDescriptor<?> d = SCMS.get(scmidx);"
    },
    {
        "commit_id": "ab11e41d93a38b256ad81bb48a9326c37a1fd116",
        "commit_message": "Workaround for Eclipse JDT bug. See http://www.nabble.com/Eclipse-Compile-Error-in-Job.doConfigSubmit%28%29-tf3794908.html\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3350 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ab11e41d93a38b256ad81bb48a9326c37a1fd116",
        "buggy_code": "for (JobPropertyDescriptor d : JobPropertyDescriptor.getPropertyDescriptors(getClass())) {",
        "fixed_code": "for (JobPropertyDescriptor d : JobPropertyDescriptor.getPropertyDescriptors(Job.this.getClass())) {",
        "patch": "@@ -502,7 +502,7 @@ public synchronized void doConfigSubmit(StaplerRequest req, StaplerResponse rsp)\n \n         try {\n             properties.clear();\n-            for (JobPropertyDescriptor d : JobPropertyDescriptor.getPropertyDescriptors(getClass())) {\n+            for (JobPropertyDescriptor d : JobPropertyDescriptor.getPropertyDescriptors(Job.this.getClass())) {\n                 JobProperty prop = d.newInstance(req);\n                 if (prop != null)\n                     properties.add(prop);"
    },
    {
        "commit_id": "4fbe7fccee3c57ff2e3073250b61cb17df3205ca",
        "commit_message": "updated to a newer version of svnkit to pick up a fix for #530 \"Special characters are triple-escaped on changes view\"\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3307 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4fbe7fccee3c57ff2e3073250b61cb17df3205ca",
        "buggy_code": "return new SVNSSHAuthentication(userName, privateKey, Scrambler.descramble(passphrase),-1,false);",
        "fixed_code": "return new SVNSSHAuthentication(userName, privateKey.toCharArray(), Scrambler.descramble(passphrase),-1,false);",
        "patch": "@@ -620,7 +620,7 @@ public String call() throws IOException {\n                         } else {\n                             privateKey = FileUtils.readFileToString(getKeyFile(),\"iso-8859-1\");\n                         }\n-                        return new SVNSSHAuthentication(userName, privateKey, Scrambler.descramble(passphrase),-1,false);\n+                        return new SVNSSHAuthentication(userName, privateKey.toCharArray(), Scrambler.descramble(passphrase),-1,false);\n                     } catch (IOException e) {\n                         throw new SVNException(SVNErrorMessage.create(SVNErrorCode.AUTHN_CREDS_UNAVAILABLE,\"Unable to load private key\"),e);\n                     } catch (InterruptedException e) {"
    },
    {
        "commit_id": "ed5e20637605e9db98b33e46c12d59e4aaf71dfd",
        "commit_message": "compiling the agent with -target 1.2 so that we can detect JDK version error.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3286 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ed5e20637605e9db98b33e46c12d59e4aaf71dfd",
        "buggy_code": "remotingLauncher.getMethod(\"main\",InputStream.class,OutputStream.class).invoke(null,is,os);",
        "fixed_code": "remotingLauncher.getMethod(\"main\",new Class[]{InputStream.class,OutputStream.class}).invoke(null,new Object[]{is,os});",
        "patch": "@@ -59,7 +59,7 @@ public static void main(File m2Home, File remotingJar, File interceptorJar) thro\n         System.setIn(new ByteArrayInputStream(new byte[0]));\n \n         Class remotingLauncher = remoting.loadClass(\"hudson.remoting.Launcher\");\n-        remotingLauncher.getMethod(\"main\",InputStream.class,OutputStream.class).invoke(null,is,os);\n+        remotingLauncher.getMethod(\"main\",new Class[]{InputStream.class,OutputStream.class}).invoke(null,new Object[]{is,os});\n         System.exit(0);\n     }\n "
    },
    {
        "commit_id": "67cc565c1bb92291f4ebc86b7c175ca66321a986",
        "commit_message": "this should fix #500.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3197 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/67cc565c1bb92291f4ebc86b7c175ca66321a986",
        "buggy_code": "out, getProject().getParent().getModuleRoot(), getEnvVars());",
        "fixed_code": "out, null, getEnvVars());",
        "patch": "@@ -283,7 +283,7 @@ listener,new ProxyImpl(),\n          */\n         public Channel newProcess(BuildListener listener, OutputStream out) throws IOException, InterruptedException {\n             return launcher.launchChannel(buildMavenCmdLine(listener).toCommandArray(),\n-                out, getProject().getParent().getModuleRoot(), getEnvVars());\n+                out, null, getEnvVars());\n         }\n \n         /**"
    },
    {
        "commit_id": "3b00d9cc4a43c37a2608fc48f1f9580872168130",
        "commit_message": "bug fix. executor list was not displaying things correctly.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3184 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3b00d9cc4a43c37a2608fc48f1f9580872168130",
        "buggy_code": "public abstract class AbstractBuild<P extends AbstractProject<P,R>,R extends AbstractBuild<P,R>> extends Run<P,R> implements Runnable {",
        "fixed_code": "public abstract class AbstractBuild<P extends AbstractProject<P,R>,R extends AbstractBuild<P,R>> extends Run<P,R> implements Queue.Executable {",
        "patch": "@@ -39,7 +39,7 @@\n  * @author Kohsuke Kawaguchi\n  * @see AbstractProject\n  */\n-public abstract class AbstractBuild<P extends AbstractProject<P,R>,R extends AbstractBuild<P,R>> extends Run<P,R> implements Runnable {\n+public abstract class AbstractBuild<P extends AbstractProject<P,R>,R extends AbstractBuild<P,R>> extends Run<P,R> implements Queue.Executable {\n \n     /**\n      * PluginName of the slave this project was built on."
    },
    {
        "commit_id": "3b00d9cc4a43c37a2608fc48f1f9580872168130",
        "commit_message": "bug fix. executor list was not displaying things correctly.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3184 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3b00d9cc4a43c37a2608fc48f1f9580872168130",
        "buggy_code": "if(e.getCurrentTask()==getParent())",
        "fixed_code": "if(e.getCurrentExecutable()==this)",
        "patch": "@@ -209,7 +209,7 @@ public boolean isBuilding() {\n     public Executor getExecutor() {\n         for( Computer c : Hudson.getInstance().getComputers() ) {\n             for (Executor e : c.getExecutors()) {\n-                if(e.getCurrentTask()==getParent())\n+                if(e.getCurrentExecutable()==this)\n                     return e;\n             }\n         }"
    },
    {
        "commit_id": "9b047a879b6b71d28ff2b248726c505f0a34e239",
        "commit_message": "fixed a bug pointed out by Michal that he found out while he was working on the NetBeans plugin.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3182 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/9b047a879b6b71d28ff2b248726c505f0a34e239",
        "buggy_code": "@ExportedBean",
        "fixed_code": "@ExportedBean(defaultVisibility=999)",
        "patch": "@@ -191,7 +191,7 @@ public List<File> getFiles() {\n         }\n     }\n \n-    @ExportedBean\n+    @ExportedBean(defaultVisibility=999)\n     public static class File {\n         private String name;\n         private String fullName;"
    },
    {
        "commit_id": "2e30c3bef1a4ca666a0e9bdb09cb695ac1beccb2",
        "commit_message": "let's not eat the error message.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3160 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2e30c3bef1a4ca666a0e9bdb09cb695ac1beccb2",
        "buggy_code": "return null;",
        "fixed_code": "throw new RuntimeException(\"Failed to authorize\",e);",
        "patch": "@@ -679,7 +679,7 @@ public SVNAuthentication requestClientAuthentication(String kind, SVNURL url, St\n                     return cred.createSVNAuthentication(kind);\n                 } catch (SVNException e) {\n                     logger.log(Level.SEVERE, \"Failed to authorize\",e);\n-                    return null;\n+                    throw new RuntimeException(\"Failed to authorize\",e);\n                 }\n             }\n "
    },
    {
        "commit_id": "554a260010905731a75a562e0698696d284daea0",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3061 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/554a260010905731a75a562e0698696d284daea0",
        "buggy_code": "if(tup.isBuilding() || tup.isInQueue())",
        "fixed_code": "if(tup!=getProject() && (tup.isBuilding() || tup.isInQueue()))",
        "patch": "@@ -439,7 +439,7 @@ private AbstractProject getBuildingUpstream(DependencyGraph graph, AbstractProje\n             Set<AbstractProject> tups = graph.getTransitiveUpstream(project);\n             tups.add(project);\n             for (AbstractProject tup : tups) {\n-                if(tup.isBuilding() || tup.isInQueue())\n+                if(tup!=getProject() && (tup.isBuilding() || tup.isInQueue()))\n                     return tup;\n             }\n             return null;"
    },
    {
        "commit_id": "08ad6c84da0197c4051ad2db72b1a34b5db9f58d",
        "commit_message": "fixed a bug where a long file name fails to copy.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3058 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08ad6c84da0197c4051ad2db72b1a34b5db9f58d",
        "buggy_code": "} catch (TimeoutException x) {",
        "fixed_code": "} catch (TimeoutException _) {",
        "patch": "@@ -698,7 +698,7 @@ public Integer invoke(File f, VirtualChannel channel) throws IOException {\n                     StringWriter sw = new StringWriter();\n                     e.printStackTrace(new PrintWriter(sw));\n                     throw new IOException2(sw.toString(),x);\n-                } catch (TimeoutException x) {\n+                } catch (TimeoutException _) {\n                     // remote is hanging\n                     throw e;\n                 }"
    },
    {
        "commit_id": "d26c38ebfdf37ad3d4c61b38cb1202bd79fa76f2",
        "commit_message": "ouch. this bug hurts.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@3016 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/d26c38ebfdf37ad3d4c61b38cb1202bd79fa76f2",
        "buggy_code": "SortedMap<Integer, ? extends RunT> m = _getRuns().headMap(n);",
        "fixed_code": "SortedMap<Integer, ? extends RunT> m = _getRuns().headMap(n-1); // the map should include n, so n-1",
        "patch": "@@ -330,7 +330,7 @@ public RunT getBuildByNumber(int n) {\n      * gone (deleted, rotated, etc.)\n      */\n     public final RunT getNearestBuild(int n) {\n-        SortedMap<Integer, ? extends RunT> m = _getRuns().headMap(n);\n+        SortedMap<Integer, ? extends RunT> m = _getRuns().headMap(n-1); // the map should include n, so n-1\n         if(m.isEmpty()) return null;\n         return m.get(m.lastKey());\n     }"
    },
    {
        "commit_id": "04efee7bce2b7ab75275e7ebfa3121ad3d5e170b",
        "commit_message": "Incorrect use of the peg revision parameter in doLog() call\nThis was causing SVN exceptions reported on the mailing list\nThis fix is suggested by the svnkit author here: http://www.nabble.com/forum/ViewPost.jtp?post=9875645&framed=y\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2984 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/04efee7bce2b7ab75275e7ebfa3121ad3d5e170b",
        "buggy_code": "SVNRevision.create(prevRev), SVNRevision.create(prevRev+1),",
        "fixed_code": "SVNRevision.UNDEFINED, SVNRevision.create(prevRev+1),",
        "patch": "@@ -117,7 +117,7 @@ private boolean buildModule(String url, SVNLogClient svnlc, SVNXMLLogHandler log\n \n         try {\n             svnlc.doLog(SVNURL.parseURIEncoded(url),null,\n-            SVNRevision.create(prevRev), SVNRevision.create(prevRev+1),\n+            SVNRevision.UNDEFINED, SVNRevision.create(prevRev+1),\n                 SVNRevision.create(thisRev),\n                 false, true, Long.MAX_VALUE, logHandler);\n         } catch (SVNException e) {"
    },
    {
        "commit_id": "65dcdbc568746545c4a890e8cea8473c3e46cd5d",
        "commit_message": "crucial bug fix in remote->local copy.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2890 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/65dcdbc568746545c4a890e8cea8473c3e46cd5d",
        "buggy_code": "readFromTar(new File(remote),pipe.getIn());",
        "fixed_code": "readFromTar(new File(target.remote),pipe.getIn());",
        "patch": "@@ -674,7 +674,7 @@ public Integer invoke(File f, VirtualChannel channel) throws IOException {\n                     return writeToTar(f,fileMask,excludes,pipe);\n                 }\n             });\n-            readFromTar(new File(remote),pipe.getIn());\n+            readFromTar(new File(target.remote),pipe.getIn());\n             try {\n                 return future.get();\n             } catch (ExecutionException e) {"
    },
    {
        "commit_id": "bfc9bbda5769be4b09bde90d32623181d54b3e63",
        "commit_message": "fixed a compilation error.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2845 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bfc9bbda5769be4b09bde90d32623181d54b3e63",
        "buggy_code": "if(scm.getBrowser()!=null && scm.getDescriptor().isBrowserReusable(scm,owner))",
        "fixed_code": "if(scm.getBrowser()!=null && ((SCMDescriptor)scm.getDescriptor()).isBrowserReusable(scm,owner))",
        "patch": "@@ -44,7 +44,7 @@ private RepositoryBrowser infer() {\n         for( AbstractProject p : Hudson.getInstance().getAllItems(AbstractProject.class) ) {\n             SCM scm = p.getScm();\n             if (scm.getClass()==owner.getClass()) {\n-                if(scm.getBrowser()!=null && scm.getDescriptor().isBrowserReusable(scm,owner))\n+                if(scm.getBrowser()!=null && ((SCMDescriptor)scm.getDescriptor()).isBrowserReusable(scm,owner))\n                     return scm.getBrowser();\n             }\n         }"
    },
    {
        "commit_id": "10517aa96097097810aab123705a80f6ec03deba",
        "commit_message": "perform URL normalization so that slightly wrong input can be corrected. Reported as issue #394.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2742 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/10517aa96097097810aab123705a80f6ec03deba",
        "buggy_code": "this.url = url;",
        "fixed_code": "this.url = normalizeToEndWithSlash(url);",
        "patch": "@@ -30,7 +30,7 @@ public final class ViewCVS extends CVSRepositoryBrowser {\n      * @stapler-constructor\n      */\n     public ViewCVS(URL url) throws MalformedURLException {\n-        this.url = url;\n+        this.url = normalizeToEndWithSlash(url);\n     }\n \n     public URL getFileLink(File file) throws IOException {"
    },
    {
        "commit_id": "10517aa96097097810aab123705a80f6ec03deba",
        "commit_message": "perform URL normalization so that slightly wrong input can be corrected. Reported as issue #394.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2742 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/10517aa96097097810aab123705a80f6ec03deba",
        "buggy_code": "this.url = url;",
        "fixed_code": "this.url = normalizeToEndWithSlash(url);",
        "patch": "@@ -32,7 +32,7 @@ public class ViewSVN extends SubversionRepositoryBrowser {\n      * @stapler-constructor\n      */\n     public ViewSVN(URL url) throws MalformedURLException {\n-        this.url = url;\n+        this.url = normalizeToEndWithSlash(url);\n     }\n \n     @Override"
    },
    {
        "commit_id": "bdaacf248a6bd34a02ac8e46cf0ead34dfe91254",
        "commit_message": "compiler bug in IntelliJ?\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2740 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/bdaacf248a6bd34a02ac8e46cf0ead34dfe91254",
        "buggy_code": "for (AbstractBuild build : p.getBuilds()) {",
        "fixed_code": "for (AbstractBuild<?,?> build : p.getBuilds()) {",
        "patch": "@@ -125,7 +125,7 @@ public final List<UserInfo> getPeople() {\n             for (Job job : item.getAllJobs()) {\n                 if (job instanceof AbstractProject) {\n                     AbstractProject<?,?> p = (AbstractProject) job;\n-                    for (AbstractBuild build : p.getBuilds()) {\n+                    for (AbstractBuild<?,?> build : p.getBuilds()) {\n                         for (Entry entry : build.getChangeSet()) {\n                             User user = entry.getAuthor();\n "
    },
    {
        "commit_id": "5729a7056f991af87e4ac62bb0376d1ef5010794",
        "commit_message": "This field being mandatory is quite obvious, and the red error test draws too much attention.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2672 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5729a7056f991af87e4ac62bb0376d1ef5010794",
        "buggy_code": "error(\"Repository URL is mandatory\");",
        "fixed_code": "ok(); // not entered yet",
        "patch": "@@ -653,7 +653,7 @@ protected void check() throws IOException, ServletException {\n                     // syntax check first\n                     String url = Util.nullify(request.getParameter(\"value\"));\n                     if (url == null) {\n-                        error(\"Repository URL is mandatory\");\n+                        ok(); // not entered yet\n                         return;\n                     }\n "
    },
    {
        "commit_id": "c7e14b2bebd7bc291f37fb4be28200a2fe788173",
        "commit_message": "fixed a compilation error.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2589 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c7e14b2bebd7bc291f37fb4be28200a2fe788173",
        "buggy_code": "for (AbstractBuild build : p.getBuilds()) {",
        "fixed_code": "for (AbstractBuild<?,?> build : p.getBuilds()) {",
        "patch": "@@ -103,7 +103,7 @@ public final boolean hasPeople() {\n             for (Job job : item.getAllJobs()) {\n                 if (job instanceof AbstractProject) {\n                     AbstractProject<?,?> p = (AbstractProject) job;\n-                    for (AbstractBuild build : p.getBuilds()) {\n+                    for (AbstractBuild<?,?> build : p.getBuilds()) {\n                         for (Entry entry : build.getChangeSet()) {\n                             User user = entry.getAuthor();\n                             if(user!=null)"
    },
    {
        "commit_id": "c216ac54874dd2b1e76195dae543e2cdd64cf98d",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2385 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c216ac54874dd2b1e76195dae543e2cdd64cf98d",
        "buggy_code": "return moduleName.toFileSystemName();",
        "fixed_code": "return moduleName.toFileSystemName()+'/';",
        "patch": "@@ -144,7 +144,7 @@ public ModuleName getModuleName() {\n \n     @Override\n     public String getShortUrl() {\n-        return moduleName.toFileSystemName();\n+        return moduleName.toFileSystemName()+'/';\n     }\n \n     @Override"
    },
    {
        "commit_id": "e4de4f513920d5af229c1100267372769601979f",
        "commit_message": "bug fix in loading dependency class.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2317 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/e4de4f513920d5af229c1100267372769601979f",
        "buggy_code": "PluginWrapper p = new PluginWrapper(this, arc);",
        "fixed_code": "PluginWrapper p = new PluginWrapper(this,arc);",
        "patch": "@@ -71,7 +71,7 @@ public boolean accept(File dir, String name) {\n         }\n         for( File arc : archives ) {\n             try {\n-                PluginWrapper p = new PluginWrapper(this, arc);\n+                PluginWrapper p = new PluginWrapper(this,arc);\n                 plugins.add(p);\n                 if(p.isActive())\n                     activePlugins.add(p);"
    },
    {
        "commit_id": "5d10d42b2339bdb238794cd8159df1202a719ce6",
        "commit_message": "error message improvement.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2303 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/5d10d42b2339bdb238794cd8159df1202a719ce6",
        "buggy_code": "throw new IOException(\"No classworlds*.jar found in \"+bootDir\" -- Is this a valid maven2 directory?\");",
        "fixed_code": "throw new IOException(\"No classworlds*.jar found in \"+bootDir+\" -- Is this a valid maven2 directory?\");",
        "patch": "@@ -284,7 +284,7 @@ public boolean accept(File dir, String name) {\n                 }\n             });\n             if(classworlds==null || classworlds.length==0)\n-                throw new IOException(\"No classworlds*.jar found in \"+bootDir\" -- Is this a valid maven2 directory?\");\n+                throw new IOException(\"No classworlds*.jar found in \"+bootDir+\" -- Is this a valid maven2 directory?\");\n \n             boolean isMaster = getCurrentNode()==Hudson.getInstance();\n             FilePath slaveRoot=null;"
    },
    {
        "commit_id": "688a0c549a620edbe2a7b38fb993a61416f8a54d",
        "commit_message": "error message improvement.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2302 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/688a0c549a620edbe2a7b38fb993a61416f8a54d",
        "buggy_code": "throw new IOException(\"No classworlds*.jar found in \"+bootDir);",
        "fixed_code": "throw new IOException(\"No classworlds*.jar found in \"+bootDir\" -- Is this a valid maven2 directory?\");",
        "patch": "@@ -284,7 +284,7 @@ public boolean accept(File dir, String name) {\n                 }\n             });\n             if(classworlds==null || classworlds.length==0)\n-                throw new IOException(\"No classworlds*.jar found in \"+bootDir);\n+                throw new IOException(\"No classworlds*.jar found in \"+bootDir\" -- Is this a valid maven2 directory?\");\n \n             boolean isMaster = getCurrentNode()==Hudson.getInstance();\n             FilePath slaveRoot=null;"
    },
    {
        "commit_id": "3da8d1a64b9b077b19e49f80912f0f05dda370fb",
        "commit_message": "Trying to avoid an error message from the first successful build of a project on Unix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2285 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/3da8d1a64b9b077b19e49f80912f0f05dda370fb",
        "buggy_code": "new LocalProc(new String[]{\"rm\",\"../lastSuccessful\"},new String[0],listener.getLogger(),getProject().getBuildDir()).join();",
        "fixed_code": "new LocalProc(new String[]{\"rm\",\"-f\",\"../lastSuccessful\"},new String[0],listener.getLogger(),getProject().getBuildDir()).join();",
        "patch": "@@ -121,7 +121,7 @@ private void createLastSuccessfulLink(BuildListener listener) {\n             if(!isWindows()) {\n                 try {\n                     // ignore a failure.\n-                    new LocalProc(new String[]{\"rm\",\"../lastSuccessful\"},new String[0],listener.getLogger(),getProject().getBuildDir()).join();\n+                    new LocalProc(new String[]{\"rm\",\"-f\",\"../lastSuccessful\"},new String[0],listener.getLogger(),getProject().getBuildDir()).join();\n \n                     int r = new LocalProc(new String[]{\n                         \"ln\",\"-s\",\"builds/\"+getId()/*ugly*/,\"../lastSuccessful\"},"
    },
    {
        "commit_id": "696c4f1ac0e6916b0d0cfbe4d9f21cc044e6d506",
        "commit_message": "improved the error reporting.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2242 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/696c4f1ac0e6916b0d0cfbe4d9f21cc044e6d506",
        "buggy_code": "throw new ClassNotFoundException();",
        "fixed_code": "throw new ClassNotFoundException(className);",
        "patch": "@@ -109,7 +109,7 @@ public ClassLoaderProxy(ClassLoader cl) {\n         public byte[] fetch(String className) throws ClassNotFoundException {\n             InputStream in = cl.getResourceAsStream(className.replace('.', '/') + \".class\");\n             if(in==null)\n-                throw new ClassNotFoundException();\n+                throw new ClassNotFoundException(className);\n \n             try {\n                 return readFully(in);"
    },
    {
        "commit_id": "274ea9c68ea6b63757ca91eebc6647fa2b2bb788",
        "commit_message": "fixed a bug. when the ProxyOutputStream stream is already closed, calling write() will just cause a failure.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2214 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/274ea9c68ea6b63757ca91eebc6647fa2b2bb788",
        "buggy_code": "write(tmp.toByteArray());",
        "fixed_code": "channel.send(new Chunk(oid,tmp.toByteArray()));",
        "patch": "@@ -53,7 +53,7 @@ synchronized void connect(Channel channel, int oid) throws IOException {\n \n         // if we already have bytes to write, do so now.\n         if(tmp!=null) {\n-            write(tmp.toByteArray());\n+            channel.send(new Chunk(oid,tmp.toByteArray()));\n             tmp = null;\n         }\n         if(closed)  // already marked closed?"
    },
    {
        "commit_id": "8c0a56f4aee897c64260f0162d994d1f152c2d45",
        "commit_message": "fixed a bug in the remoting support where the proxy returned from export() didn't work correctly if it uses user-defined classes as parameter values and return types.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2202 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8c0a56f4aee897c64260f0162d994d1f152c2d45",
        "buggy_code": "return get(RemoteInvocationHandler.wrap(channel,oid,IClassLoader.class));",
        "fixed_code": "return get(RemoteInvocationHandler.wrap(channel,oid,IClassLoader.class,false));",
        "patch": "@@ -17,7 +17,7 @@ final class ImportedClassLoaderTable {\n     }\n \n     public synchronized ClassLoader get(int oid) {\n-        return get(RemoteInvocationHandler.wrap(channel,oid,IClassLoader.class));\n+        return get(RemoteInvocationHandler.wrap(channel,oid,IClassLoader.class,false));\n     }\n \n     public synchronized ClassLoader get(IClassLoader classLoaderProxy) {"
    },
    {
        "commit_id": "8c0a56f4aee897c64260f0162d994d1f152c2d45",
        "commit_message": "fixed a bug in the remoting support where the proxy returned from export() didn't work correctly if it uses user-defined classes as parameter values and return types.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2202 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/8c0a56f4aee897c64260f0162d994d1f152c2d45",
        "buggy_code": "return local.export(IClassLoader.class, new ClassLoaderProxy(cl));",
        "fixed_code": "return local.export(IClassLoader.class, new ClassLoaderProxy(cl), false);",
        "patch": "@@ -89,7 +89,7 @@ private URL makeResource(String name, byte[] image) throws IOException {\n     }\n \n     public static IClassLoader export(ClassLoader cl, Channel local) {\n-        return local.export(IClassLoader.class, new ClassLoaderProxy(cl));\n+        return local.export(IClassLoader.class, new ClassLoaderProxy(cl), false);\n     }\n \n     /**"
    },
    {
        "commit_id": "2a68134cef379bcfe9a17b29f9dc31d9b158f2e0",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2054 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/2a68134cef379bcfe9a17b29f9dc31d9b158f2e0",
        "buggy_code": "result = job.run(listener);",
        "fixed_code": "setResult(job.run(listener));",
        "patch": "@@ -530,7 +530,7 @@ protected final void run(Runner job) {\n \n                     listener.started();\n \n-                    result = job.run(listener);\n+                    setResult(job.run(listener));\n \n                     LOGGER.info(toString()+\" main build action completed: \"+result);\n                 } catch (ThreadDeath t) {"
    },
    {
        "commit_id": "1df96ee34efe4f17c91d20abfff3a1949ffbaa71",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2053 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/1df96ee34efe4f17c91d20abfff3a1949ffbaa71",
        "buggy_code": "return Result.SUCCESS;",
        "fixed_code": "return null;",
        "patch": "@@ -138,7 +138,7 @@ public Result invoke(File moduleRoot, VirtualChannel channel) throws IOException\n                         r.postBuild(buildProxy,p,listener);\n                 }\n \n-                return Result.SUCCESS;\n+                return null;\n             } catch (MavenEmbedderException e) {\n                 throw new IOException2(e);\n             } catch (ProjectBuildingException e) {"
    },
    {
        "commit_id": "7be15e4294fa9fee72bdb4c289b3b74e2b5a519e",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2050 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/7be15e4294fa9fee72bdb4c289b3b74e2b5a519e",
        "buggy_code": "return getParent().getWorkspace().child(relativePath);",
        "fixed_code": "return getParent().getModuleRoot().child(relativePath);",
        "patch": "@@ -120,7 +120,7 @@ public String getUserConfiguredGoals() {\n \n     @Override\n     public FilePath getWorkspace() {\n-        return getParent().getWorkspace().child(relativePath);\n+        return getParent().getModuleRoot().child(relativePath);\n     }\n \n     public ModuleName getModuleName() {"
    },
    {
        "commit_id": "6ef0364482941f057ef1f126b5713d648cbaa509",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2049 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/6ef0364482941f057ef1f126b5713d648cbaa509",
        "buggy_code": "List<PomInfo> poms = project.getWorkspace().act(new PomParser(listener,project.getRootPOM()));",
        "fixed_code": "List<PomInfo> poms = project.getModuleRoot().act(new PomParser(listener,project.getRootPOM()));",
        "patch": "@@ -58,7 +58,7 @@ private class RunnerImpl extends AbstractRunner {\n         protected Result doRun(final BuildListener listener) throws Exception {\n             try {\n                 listener.getLogger().println(\"Parsing POMs\");\n-                List<PomInfo> poms = project.getWorkspace().act(new PomParser(listener,project.getRootPOM()));\n+                List<PomInfo> poms = project.getModuleRoot().act(new PomParser(listener,project.getRootPOM()));\n \n                 // update the module list\n                 Map<ModuleName,MavenModule> modules = project.modules;"
    },
    {
        "commit_id": "80f6c0d9bbb79887492f61ae69900d609620791f",
        "commit_message": "bug fix. Or should I say working around a bug in Maven?\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2019 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/80f6c0d9bbb79887492f61ae69900d609620791f",
        "buggy_code": "if(file.isDirectory())",
        "fixed_code": "if(!file.exists() || file.isDirectory())",
        "patch": "@@ -52,7 +52,7 @@ private void record(MavenBuildProxy build, Artifact a, BuildListener listener, S\n         File file = a.getFile();\n         if(file==null)\n             return; // perhaps build failed and didn't leave an artifact\n-        if(file.isDirectory())\n+        if(!file.exists() || file.isDirectory())\n             return; // during a build maven sets a class folder instead of a jar file as artifact. ignore.\n \n         listener.getLogger().println(\"Archiving \"+ file);"
    },
    {
        "commit_id": "80f6c0d9bbb79887492f61ae69900d609620791f",
        "commit_message": "bug fix. Or should I say working around a bug in Maven?\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2019 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/80f6c0d9bbb79887492f61ae69900d609620791f",
        "buggy_code": "if(f==null || f.isDirectory() || !files.add(f))",
        "fixed_code": "if(f==null || !f.exists() || f.isDirectory() || !files.add(f))",
        "patch": "@@ -92,7 +92,7 @@ private boolean record(MavenBuildProxy build, boolean produced, Collection<Artif\n      */\n     private boolean record(MavenBuildProxy build, final boolean produced, Artifact a) throws IOException, InterruptedException {\n         File f = a.getFile();\n-        if(f==null || f.isDirectory() || !files.add(f))\n+        if(f==null || !f.exists() || f.isDirectory() || !files.add(f))\n             return false;\n \n         // new file"
    },
    {
        "commit_id": "b90d2e664234e72c545e48ab3f0787594a913f10",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@2017 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b90d2e664234e72c545e48ab3f0787594a913f10",
        "buggy_code": "r.put((Project)bp.getJob(),bp.getNumber());",
        "fixed_code": "r.put(bp.getJob(),bp.getNumber());",
        "patch": "@@ -258,7 +258,7 @@ public Map<AbstractProject,Integer> getDependencies() {\n                 Integer existing = r.get(bp.getJob());\n                 if(existing!=null && existing>bp.getNumber())\n                     continue;   // the record in the map is already up to date\n-                r.put((Project)bp.getJob(),bp.getNumber());\n+                r.put(bp.getJob(),bp.getNumber());\n             }\n             \n             return r;"
    },
    {
        "commit_id": "08f4075a520823e095442e96aaabb100d1da065e",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1980 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/08f4075a520823e095442e96aaabb100d1da065e",
        "buggy_code": "return getParent().getAssignedNode();",
        "fixed_code": "return getParent().getLastBuiltOn();",
        "patch": "@@ -107,7 +107,7 @@ public MavenModuleSet getParent() {\n      * so it always needs to be built on the same slave as the parent.\n      */\n     public Node getAssignedNode() {\n-        return getParent().getAssignedNode();\n+        return getParent().getLastBuiltOn();\n     }\n \n     @Override"
    },
    {
        "commit_id": "c8b483a0744ceb38bc408bdbc38737829cd20010",
        "commit_message": "compile error.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1964 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c8b483a0744ceb38bc408bdbc38737829cd20010",
        "buggy_code": "listener.getLogger().println(\"Triggering a new build of \"+p.getName());",
        "fixed_code": "listener.getLogger().println(\"Triggering a new build of \"+down.getName());",
        "patch": "@@ -186,7 +186,7 @@ public void post(BuildListener listener) {\n                         // if there's a longer dependency path to this project,\n                         // then scheduling the build now is going to be a waste,\n                         // so don't do that.\n-                        listener.getLogger().println(\"Triggering a new build of \"+p.getName());\n+                        listener.getLogger().println(\"Triggering a new build of \"+down.getName());\n                         down.scheduleBuild();\n                 }\n             }"
    },
    {
        "commit_id": "400d2b23ffa04f057567b20f5925f38459d4e8ed",
        "commit_message": "bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1956 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/400d2b23ffa04f057567b20f5925f38459d4e8ed",
        "buggy_code": "PluginName that = (PluginName) o;",
        "fixed_code": "ModuleName that = (ModuleName) o;",
        "patch": "@@ -53,7 +53,7 @@ public boolean equals(Object o) {\n         if (this == o) return true;\n         if (o == null || getClass() != o.getClass()) return false;\n \n-        PluginName that = (PluginName) o;\n+        ModuleName that = (ModuleName) o;\n \n         return artifactId.equals(that.artifactId)\n             && groupId.equals(that.groupId);"
    },
    {
        "commit_id": "4b9d924cd97fd32d2678ec33e03c6ceeb04ad316",
        "commit_message": "fixed a bug around setting up the parent pointer.\nModified so that the root directory of the children is determined by the parent.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1861 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4b9d924cd97fd32d2678ec33e03c6ceeb04ad316",
        "buggy_code": "void onLoad(String name) throws IOException;",
        "fixed_code": "void onLoad(ItemGroup<? extends Item> parent, String name) throws IOException;",
        "patch": "@@ -79,7 +79,7 @@ public interface Item extends PersistenceRoot {\n      * Called right after when a {@link Item} is loaded from disk.\n      * This is an opporunity to do a post load processing.\n      */\n-    void onLoad(String name) throws IOException;\n+    void onLoad(ItemGroup<? extends Item> parent, String name) throws IOException;\n \n     /**\n      * When a {@link Item} is copied from existing one,"
    },
    {
        "commit_id": "4b9d924cd97fd32d2678ec33e03c6ceeb04ad316",
        "commit_message": "fixed a bug around setting up the parent pointer.\nModified so that the root directory of the children is determined by the parent.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1861 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/4b9d924cd97fd32d2678ec33e03c6ceeb04ad316",
        "buggy_code": "AbstractBuild b = project.getLastBuild();",
        "fixed_code": "AbstractBuild b = (AbstractBuild)project.getLastBuild();",
        "patch": "@@ -96,7 +96,7 @@ public synchronized void abort() throws InterruptedException {\n      * Start polling if it's scheduled.\n      */\n     public synchronized void startPolling() {\n-        AbstractBuild b = project.getLastBuild();\n+        AbstractBuild b = (AbstractBuild)project.getLastBuild();\n \n         if(b!=null && b.isBuilding())\n             return; // build in progress"
    },
    {
        "commit_id": "61a522671af56958422471e8ae523551629703cc",
        "commit_message": "I messed up the branching. So merging the maven2 branch to the trunk. If we need a quick fix release for 1.74, I'll see if I can move this all to a branch again.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1808 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/61a522671af56958422471e8ae523551629703cc",
        "buggy_code": "String name = manifest.getMainAttributes().getValue(\"Long-Name\");",
        "fixed_code": "String name = manifest.getMainAttributes().getValue(\"Long-PluginName\");",
        "patch": "@@ -265,7 +265,7 @@ public String toString() {\n      * Returns a one-line descriptive name of this plugin.\n      */\n     public String getLongName() {\n-        String name = manifest.getMainAttributes().getValue(\"Long-Name\");\n+        String name = manifest.getMainAttributes().getValue(\"Long-PluginName\");\n         if(name!=null)      return name;\n         return shortName;\n     }"
    },
    {
        "commit_id": "61a522671af56958422471e8ae523551629703cc",
        "commit_message": "I messed up the branching. So merging the maven2 branch to the trunk. If we need a quick fix release for 1.74, I'll see if I can move this all to a branch again.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1808 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/61a522671af56958422471e8ae523551629703cc",
        "buggy_code": "public Action getProjectAction(MavenJob project) {",
        "fixed_code": "public Action getProjectAction(MavenModule project) {",
        "patch": "@@ -140,7 +140,7 @@ public boolean postBuild(MavenBuildProxy build, MavenProject pom, BuildListener\n      * Equivalent of {@link BuildStep#getProjectAction(Project)}\n      * for {@link MavenReporter}.\n      */\n-    public Action getProjectAction(MavenJob project) {\n+    public Action getProjectAction(MavenModule project) {\n         return null;\n     }\n }"
    },
    {
        "commit_id": "48fa40dc65cd5a91e0aafc5eb18b7238dacf60d1",
        "commit_message": "reapplying a fix for '\\' in SVN user name issue.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1362 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/48fa40dc65cd5a91e0aafc5eb18b7238dacf60d1",
        "buggy_code": "return new XmlFile(XSTREAM,new File(Hudson.getInstance().getRootDir(),\"users/\"+ safeId +\"/config.xml\"));",
        "fixed_code": "return new XmlFile(XSTREAM,new File(Hudson.getInstance().getRootDir(),\"users/\"+ id +\"/config.xml\"));",
        "patch": "@@ -177,7 +177,7 @@ public String toString() {\n      * The file we save our configuration.\n      */\n     protected final XmlFile getConfigFile() {\n-        return new XmlFile(XSTREAM,new File(Hudson.getInstance().getRootDir(),\"users/\"+ safeId +\"/config.xml\"));\n+        return new XmlFile(XSTREAM,new File(Hudson.getInstance().getRootDir(),\"users/\"+ id +\"/config.xml\"));\n     }\n \n     /**"
    },
    {
        "commit_id": "c87676decd7fef7829961944fc30b0581236f5a6",
        "commit_message": "fix to #199 is apparently not complete.\nIncreased the graph height to reduce the problem.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1327 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/c87676decd7fef7829961944fc30b0581236f5a6",
        "buggy_code": "ChartUtil.generateGraph(req,rsp,chart,500,200);",
        "fixed_code": "ChartUtil.generateGraph(req,rsp,chart,500,400);",
        "patch": "@@ -622,7 +622,7 @@ public Paint getItemPaint(int row, int column) {\n         // crop extra space around the graph\n         plot.setInsets(new RectangleInsets(0,0,0,5.0));\n \n-        ChartUtil.generateGraph(req,rsp,chart,500,200);\n+        ChartUtil.generateGraph(req,rsp,chart,500,400);\n     }\n \n     /**"
    },
    {
        "commit_id": "a80fb9de78ed13c908aabe9162fcfb8ea2e2898e",
        "commit_message": "debug log bug fix.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1189 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/a80fb9de78ed13c908aabe9162fcfb8ea2e2898e",
        "buggy_code": "log(\"[\"+m_dir+\"] $ \"+getCommand(), Project.MSG_VERBOSE);",
        "fixed_code": "log(\"Running \"+getCommand()+\" at \"+m_dir, Project.MSG_VERBOSE);",
        "patch": "@@ -273,7 +273,7 @@ public void execute() throws BuildException {\n                 new ForkOutputStream(new RedirectingOutputStream(parser),\n                     new LogOutputStream(this,Project.MSG_VERBOSE)));\n \n-            log(\"[\"+m_dir+\"] $ \"+getCommand(), Project.MSG_VERBOSE);\n+            log(\"Running \"+getCommand()+\" at \"+m_dir, Project.MSG_VERBOSE);\n \n             setDest(m_dir);\n             setExecuteStreamHandler(handler);"
    },
    {
        "commit_id": "ecfeeb2fc203f5166e7d118377e80f6f01d85af9",
        "commit_message": "Reducing the reload cycle to once in a minute, due to the high overhead caused by this.\nModern version of Hudson uses a job result submission via HTTP, so this shouldn't really be an issue at all.\n\n\ngit-svn-id: https://hudson.dev.java.net/svn/hudson/trunk/hudson/main@1120 71c3de6d-444a-0410-be80-ed276b4c234a",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/ecfeeb2fc203f5166e7d118377e80f6f01d85af9",
        "buggy_code": "nextUpdate = System.currentTimeMillis()+1000;",
        "fixed_code": "nextUpdate = System.currentTimeMillis()+1000*60;",
        "patch": "@@ -96,7 +96,7 @@ private void _reload() {\n             reload();\n         } finally {\n             reloadingInProgress = false;\n-            nextUpdate = System.currentTimeMillis()+1000;\n+            nextUpdate = System.currentTimeMillis()+1000*60;\n         }\n     }\n "
    }
]