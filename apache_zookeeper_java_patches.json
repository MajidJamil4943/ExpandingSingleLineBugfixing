[
    {
        "commit_id": "5a3c6a98f8714e46d3637b93e63d69632e411ba5",
        "commit_message": "ZOOKEEPER-4839: Fix SASL DIGEST-MD5 authenticated with last successfully logined username\n\nReviewers: kezhuw, kezhuw, kezhuw, anmolnar\nAuthor: luoxiner\nCloses #2176 from luoxiner/master",
        "commit_url": "https://github.com/apache/zookeeper/commit/5a3c6a98f8714e46d3637b93e63d69632e411ba5",
        "buggy_code": "return SecurityUtils.createSaslServer(subject, \"zookeeper\", \"zk-sasl-md5\", login.callbackHandler, LOG);",
        "fixed_code": "return SecurityUtils.createSaslServer(subject, \"zookeeper\", \"zk-sasl-md5\", login.newCallbackHandler(), LOG);",
        "patch": "@@ -41,7 +41,7 @@ public class ZooKeeperSaslServer {\n     private SaslServer createSaslServer(final Login login) {\n         synchronized (login) {\n             Subject subject = login.getSubject();\n-            return SecurityUtils.createSaslServer(subject, \"zookeeper\", \"zk-sasl-md5\", login.callbackHandler, LOG);\n+            return SecurityUtils.createSaslServer(subject, \"zookeeper\", \"zk-sasl-md5\", login.newCallbackHandler(), LOG);\n         }\n     }\n "
    },
    {
        "commit_id": "bc9afbf8ef1bc6156643d3d05c87fcf8411e9d8f",
        "commit_message": "ZOOKEEPER-4712: Fix partially shutdown of ZooKeeperServer and its processors\n\nReviewers: anmolnar, kezhuw, kezhuw, kezhuw\nAuthor: jonmv\nCloses #2154 from jonmv/jonmv/ZOOKEEPER-4541-take-2",
        "commit_url": "https://github.com/apache/zookeeper/commit/bc9afbf8ef1bc6156643d3d05c87fcf8411e9d8f",
        "buggy_code": "ZKDatabase database = new ZKDatabase(null);",
        "fixed_code": "ZKDatabase database = new ZKDatabase(mock(FileTxnSnapLog.class));",
        "patch": "@@ -97,7 +97,7 @@ public Boolean answer(InvocationOnMock invocation) throws Throwable {\n             }\n         });\n \n-        ZKDatabase database = new ZKDatabase(null);\n+        ZKDatabase database = new ZKDatabase(mock(FileTxnSnapLog.class));\n         database.setlastProcessedZxid(2L);\n         QuorumPeer quorumPeer = mock(QuorumPeer.class);\n         FileTxnSnapLog logfactory = mock(FileTxnSnapLog.class);"
    },
    {
        "commit_id": "6b70544bddadae8b40ede0f52abe30021ff47bb7",
        "commit_message": "ZOOKEEPER-4853: Fix assert in ZooKeeperQuotaTest#testQuota\n\nReviewers: maoling, shoothzj\nAuthor: 1neverknow\nCloses #2169 from 1neverknow/master",
        "commit_url": "https://github.com/apache/zookeeper/commit/6b70544bddadae8b40ede0f52abe30021ff47bb7",
        "buggy_code": "assertNotNull(server.getZKDatabase().getDataTree().getMaxPrefixWithQuota(path) != null, \"Quota is still set\");",
        "fixed_code": "assertNotNull(server.getZKDatabase().getDataTree().getMaxPrefixWithQuota(path), \"Quota is still set\");",
        "patch": "@@ -116,7 +116,7 @@ public void testQuota() throws Exception {\n         stopServer();\n         startServer();\n         ZooKeeperServer server = serverFactory.getZooKeeperServer();\n-        assertNotNull(server.getZKDatabase().getDataTree().getMaxPrefixWithQuota(path) != null, \"Quota is still set\");\n+        assertNotNull(server.getZKDatabase().getDataTree().getMaxPrefixWithQuota(path), \"Quota is still set\");\n     }\n \n     @Test"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "throw new IOException(\"Cannnot recognize language:\" + language);",
        "fixed_code": "throw new IOException(\"Cannot recognize language:\" + language);",
        "patch": "@@ -81,7 +81,7 @@ public void genCode(String language, File outputDirectory)\n                     outputDirectory);\n             gen.genCode();\n         } else {\n-            throw new IOException(\"Cannnot recognize language:\" + language);\n+            throw new IOException(\"Cannot recognize language:\" + language);\n         }\n     }\n }"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "+ \"up-to-date with the leader of last commmitted config - try invoking reconfiguration after \"",
        "fixed_code": "+ \"up-to-date with the leader of last committed config - try invoking reconfiguration after \"",
        "patch": "@@ -52,7 +52,7 @@ private static String getMessage(Throwable cause) {\n                 return \"Another reconfiguration is in progress -- concurrent \" + \"reconfigs not supported (yet)\";\n             } else if (keeperException instanceof KeeperException.NewConfigNoQuorum) {\n                 return \"No quorum of new config is connected and \"\n-                       + \"up-to-date with the leader of last commmitted config - try invoking reconfiguration after \"\n+                       + \"up-to-date with the leader of last committed config - try invoking reconfiguration after \"\n                        + \"new servers are connected and synced\";\n             } else if (keeperException instanceof KeeperException.QuotaExceededException) {\n                 return \"Quota has exceeded : \" + keeperException.getPath();"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "throw new RuntimeException(\"Incorrent format of InputArchive when deserialize DataTree - missing acls\");",
        "fixed_code": "throw new RuntimeException(\"Incorrect format of InputArchive when deserialize DataTree - missing acls\");",
        "patch": "@@ -110,7 +110,7 @@ public void deserialize(InputArchive ia) throws IOException {\n             List<ACL> aclList = new ArrayList<>();\n             Index j = ia.startVector(\"acls\");\n             if (j == null) {\n-                throw new RuntimeException(\"Incorrent format of InputArchive when deserialize DataTree - missing acls\");\n+                throw new RuntimeException(\"Incorrect format of InputArchive when deserialize DataTree - missing acls\");\n             }\n             while (!j.done()) {\n                 ACL acl = new ACL();"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "LOG.warn(\"Interrupted while wating for {} to finish\", this);",
        "fixed_code": "LOG.warn(\"Interrupted while waiting for {} to finish\", this);",
        "patch": "@@ -258,7 +258,7 @@ public void shutdown() {\n             this.join();\n             this.flush();\n         } catch (InterruptedException e) {\n-            LOG.warn(\"Interrupted while wating for {} to finish\", this);\n+            LOG.warn(\"Interrupted while waiting for {} to finish\", this);\n             Thread.currentThread().interrupt();\n         } catch (IOException e) {\n             LOG.warn(\"Got IO exception during shutdown\");"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "LOG.info(\"ZK server died. Requsting stop on JVM\");",
        "fixed_code": "LOG.info(\"ZK server died. Requesting stop on JVM\");",
        "patch": "@@ -128,7 +128,7 @@ public void run() {\n                     try {\n                         maincluster.runFromConfig(config);\n                         maincluster.close();\n-                        LOG.info(\"ZK server died. Requsting stop on JVM\");\n+                        LOG.info(\"ZK server died. Requesting stop on JVM\");\n                         if (!stopping) {\n                             ServiceUtils.requestSystemExit(ExitCode.EXECUTION_FINISHED.getValue());\n                         }"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "LOG.warn(\"Not able to load class or method for com.sun.managment.UnixOperatingSystemMXBean.\", e);",
        "fixed_code": "LOG.warn(\"Not able to load class or method for com.sun.management.UnixOperatingSystemMXBean.\", e);",
        "patch": "@@ -84,7 +84,7 @@ private Long getOSUnixMXBeanMethod(String mBeanMethodName) {\n                 return (Long) mBeanMethod.invoke(unixos);\n             }\n         } catch (Exception e) {\n-            LOG.warn(\"Not able to load class or method for com.sun.managment.UnixOperatingSystemMXBean.\", e);\n+            LOG.warn(\"Not able to load class or method for com.sun.management.UnixOperatingSystemMXBean.\", e);\n         }\n         return null;\n     }"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "LOG.info(\"Attempt to connnecting {} {} {}\", addr, closing, state);",
        "fixed_code": "LOG.info(\"Attempt to connecting {} {} {}\", addr, closing, state);",
        "patch": "@@ -316,7 +316,7 @@ void waitUntilHitUnsafeRegion() {\n         @Override\n         protected void onConnecting(InetSocketAddress addr) {\n             if (closing) {\n-                LOG.info(\"Attempt to connnecting {} {} {}\", addr, closing, state);\n+                LOG.info(\"Attempt to connecting {} {} {}\", addr, closing, state);\n                 ///////// Unsafe Region ////////\n                 // Slow down and zoom out the unsafe point to make risk\n                 // The unsafe point is that startConnect happens after sendThread.close"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "conf.setProperty(ZKConfig.JUTE_MAXBUFFER, \"InvlaidIntValue123\");",
        "fixed_code": "conf.setProperty(ZKConfig.JUTE_MAXBUFFER, \"InvalidIntValue123\");",
        "patch": "@@ -149,7 +149,7 @@ public void testIntegerRetrievalFromProperty() {\n \n         // property is set but can not be parsed to int, we should get the\n         // NumberFormatException\n-        conf.setProperty(ZKConfig.JUTE_MAXBUFFER, \"InvlaidIntValue123\");\n+        conf.setProperty(ZKConfig.JUTE_MAXBUFFER, \"InvalidIntValue123\");\n         try {\n             result = conf.getInt(ZKConfig.JUTE_MAXBUFFER, defaultValue);\n             fail(\"NumberFormatException is expected\");"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "public void testGetChildrenShouldReturnEmptySetWhenThereAreNoChidren() {",
        "fixed_code": "public void testGetChildrenShouldReturnEmptySetWhenThereAreNoChildren() {",
        "patch": "@@ -27,7 +27,7 @@\n public class DataNodeTest {\n \n     @Test\n-    public void testGetChildrenShouldReturnEmptySetWhenThereAreNoChidren() {\n+    public void testGetChildrenShouldReturnEmptySetWhenThereAreNoChildren() {\n         // create DataNode and call getChildren\n         DataNode dataNode = new DataNode();\n         Set<String> children = dataNode.getChildren();"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "fail(\"IOException is expected as error is injected in transaction log commit funtionality\");",
        "fixed_code": "fail(\"IOException is expected as error is injected in transaction log commit functionality\");",
        "patch": "@@ -210,7 +210,7 @@ public void commit() throws IOException {\n         try {\n             // do create operation, so that injected IOException is thrown\n             zk.create(\"/foo2\", \"foobar\".getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n-            fail(\"IOException is expected as error is injected in transaction log commit funtionality\");\n+            fail(\"IOException is expected as error is injected in transaction log commit functionality\");\n         } catch (Exception e) {\n             // do nothing\n         }"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "public void notifyStopping(String threadName, int erroCode) {",
        "fixed_code": "public void notifyStopping(String threadName, int errorCode) {",
        "patch": "@@ -52,7 +52,7 @@ public MyCriticalThread(String threadName) {\n             super(threadName, new ZooKeeperServerListener() {\n \n                 @Override\n-                public void notifyStopping(String threadName, int erroCode) {\n+                public void notifyStopping(String threadName, int errorCode) {\n \n                 }\n             });"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "assertArrayEquals(bytes, data, \"Missmatch data\");",
        "fixed_code": "assertArrayEquals(bytes, data, \"Mismatch data\");",
        "patch": "@@ -291,7 +291,7 @@ public void testLogSizeLimit(@TempDir File tmpDir) throws Exception {\n         for (long i = 0; i < txnCount; i++) {\n             Stat stat = new Stat();\n             byte[] data = db.getData(\"/node-\" + i, stat, null);\n-            assertArrayEquals(bytes, data, \"Missmatch data\");\n+            assertArrayEquals(bytes, data, \"Mismatch data\");\n             assertTrue(zxids.contains(stat.getMzxid()), \"Unknown zxid \");\n         }\n     }"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "fail(\"Must throw exception as 'yes' is not accpetable for parseBoolean!\");",
        "fixed_code": "fail(\"Must throw exception as 'yes' is not acceptable for parseBoolean!\");",
        "patch": "@@ -194,7 +194,7 @@ public void testParseBoolean() throws IOException, ConfigException {\n         zkProp.setProperty(\"localSessionsEnabled\", \"yes\");\n         try {\n             quorumPeerConfig.parseProperties(zkProp);\n-            fail(\"Must throw exception as 'yes' is not accpetable for parseBoolean!\");\n+            fail(\"Must throw exception as 'yes' is not acceptable for parseBoolean!\");\n         } catch (ConfigException e) {\n             // expected\n         }"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "public void testMutipleWatcherObjs() throws IOException, InterruptedException, KeeperException {",
        "fixed_code": "public void testMultipleWatcherObjs() throws IOException, InterruptedException, KeeperException {",
        "patch": "@@ -262,7 +262,7 @@ public void process(WatchedEvent event) {\n      * in the right order.\n      */\n     @Test\n-    public void testMutipleWatcherObjs() throws IOException, InterruptedException, KeeperException {\n+    public void testMultipleWatcherObjs() throws IOException, InterruptedException, KeeperException {\n         ZooKeeper zk = createClient(new CountdownWatcher(), hostPort);\n         try {\n             MyWatcher[] watchers = new MyWatcher[100];"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "public void testObserverWithStandlone() throws Exception {",
        "fixed_code": "public void testObserverWithStandalone() throws Exception {",
        "patch": "@@ -56,7 +56,7 @@ public void testObserverOnly() throws Exception {\n      * (and will not come up with standalone server).\n      */\n     @Test\n-    public void testObserverWithStandlone() throws Exception {\n+    public void testObserverWithStandalone() throws Exception {\n         ClientBase.setupTestEnv();\n         final int CLIENT_PORT_QP1 = PortAssignment.unique();\n "
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "LOG.info(\"Connnection is expired\", ioe);",
        "fixed_code": "LOG.info(\"Connection is expired\", ioe);",
        "patch": "@@ -114,7 +114,7 @@ private static StringBuilder readLine(BufferedReader reader) {\n             // After the socket is closed, when the client tries to read a\n             // line of text it will throw java.net.SocketException.\n             // @see jira issue ZOOKEEPER-1862\n-            LOG.info(\"Connnection is expired\", ioe);\n+            LOG.info(\"Connection is expired\", ioe);\n         }\n         return sb;\n     }"
    },
    {
        "commit_id": "9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "commit_message": "ZOOKEEPER-4834. fix typos in Apache ZooKeeper (#2167)\n\nSigned-off-by: ZhangJian He <shoothzj@gmail.com>",
        "commit_url": "https://github.com/apache/zookeeper/commit/9a2dc253caf5e94ec64bd65a72a35c6bc5e2042c",
        "buggy_code": "verify(spyResolver, times(3)).getAllByName(\"www.apache.org\");  // resolution occured every time",
        "fixed_code": "verify(spyResolver, times(3)).getAllByName(\"www.apache.org\");  // resolution occurred every time",
        "patch": "@@ -827,7 +827,7 @@ public InetAddress[] getAllByName(String name) {\n         assertFalse(resolvedThird.isUnresolved(), \"HostProvider should return resolved addresses\");\n         assertThat(\"Bad IP address returned\", ipList, hasItems(resolvedThird.getAddress().getHostAddress()));\n \n-        verify(spyResolver, times(3)).getAllByName(\"www.apache.org\");  // resolution occured every time\n+        verify(spyResolver, times(3)).getAllByName(\"www.apache.org\");  // resolution occurred every time\n     }\n \n     @Test"
    },
    {
        "commit_id": "bccc654e09d9e85fe3495487b9619173a2c54151",
        "commit_message": "ZOOKEEPER-4808: Fix the log statement in FastLeaderElection\n\nReviewers: maoling\nAuthor: li4wang\nCloses #2136 from li4wang/ZOOKEEPER-4808",
        "commit_url": "https://github.com/apache/zookeeper/commit/bccc654e09d9e85fe3495487b9619173a2c54151",
        "buggy_code": "\"Sending Notification: {} (n.leader), 0x{} (n.peerEpoch), 0x{} (n.zxid), 0x{} (n.round), {} (recipient),\"",
        "fixed_code": "\"Sending Notification: {} (n.leader), 0x{} (n.zxid), 0x{} (n.peerEpoch), 0x{} (n.round), {} (recipient),\"",
        "patch": "@@ -702,7 +702,7 @@ private void sendNotifications() {\n                 qv.toString().getBytes(UTF_8));\n \n             LOG.debug(\n-                \"Sending Notification: {} (n.leader), 0x{} (n.peerEpoch), 0x{} (n.zxid), 0x{} (n.round), {} (recipient),\"\n+                \"Sending Notification: {} (n.leader), 0x{} (n.zxid), 0x{} (n.peerEpoch), 0x{} (n.round), {} (recipient),\"\n                     + \" {} (myid) \",\n                 proposedLeader,\n                 Long.toHexString(proposedZxid),"
    },
    {
        "commit_id": "18c78cd10bc02d764a46ac1659b263cf69f2671d",
        "commit_message": "ZOOKEEPER-4794: Reduce the ZKDatabase#committedLog memory usage.\n\nReduce the committed log memory usage.\nFix ci.\nReviewers: eolivelli, hangc0276, anmolnar\nAuthor: horizonzy\nCloses #2115 from horizonzy/reduce-committed-log-memory-usage",
        "commit_url": "https://github.com/apache/zookeeper/commit/18c78cd10bc02d764a46ac1659b263cf69f2671d",
        "buggy_code": "proposal.packet.getData());",
        "fixed_code": "proposal.getQuorumPacket().getData());",
        "patch": "@@ -107,7 +107,7 @@ public void testGetProposalFromTxn() throws Exception {\n         while (itr.hasNext()) {\n             Proposal proposal = itr.next();\n             TxnLogEntry logEntry = SerializeUtils.deserializeTxn(\n-                    proposal.packet.getData());\n+                    proposal.getQuorumPacket().getData());\n             TxnHeader hdr = logEntry.getHeader();\n             Record rec = logEntry.getTxn();\n             if (hdr.getType() == OpCode.create) {"
    },
    {
        "commit_id": "df8a53a974e295cc6d9337800b693751ece4e440",
        "commit_message": "ZOOKEEPER-3615: Provide formal specification and verification using TLA+ for Zab (#1690)\n\n* push zab-tla into project\r\n\r\n* update experiment\r\n\r\n* modify experiment/README\r\n\r\n* update data\r\n\r\n* update experiment data\r\n\r\n* fix bugs, miss broadcast info of proposalMsgsLog in NEWLEADER, modify LocalPrimaryOrder; update pdf and README\r\n\r\n* add apache license to pass building, and updata experiment data\r\n\r\n* add testVars in ZabWithQTest.tla, update README\r\n\r\n* + handling of cepochSent in receiving NEWEPOCH to decrease meaningles\u2026 \u2026\r\n\r\n* add Apache License in tla file\r\n\r\n* Update line number of actions from tla file in README\r\n\r\n* project migration, update README, add test tla file by extending Zab.tla\r\n\r\n* modify .cfg by adding license header, delete .aux and .tex\r\n\r\n* upload zab-1.0-tla\r\n\r\n* update ZabWithFLE, update results\r\n\r\n* update zab-1.0\r\n\r\n* fix bug, modify README\r\n\r\n* modify test module\r\n\r\n* Update spec: implement phase of recovery-sync in ZabWithFLEAndSYNC.tla\r\n\r\n* update ZabWithFLEAndSYNC: Replace Value with recorder.nClientRequest, and modify actions related to TxnEqual and nClientRequest\r\n\r\n* update ZabWithFLEAndSYNC: Replace Value with recorder.nClientRequest, and modify actions related to TxnEqual and nClientRequest\r\n\r\n* update zabWithFLEAndSYNC: fix bug only occured in multiple servers(>=3), when follower may receive LEADERINFO twice.\r\n\r\n* update zab pre-1.0 in paper DSN'2011\r\n\r\n* update zookeeper-specifications: update framework and tla code",
        "commit_url": "https://github.com/apache/zookeeper/commit/df8a53a974e295cc6d9337800b693751ece4e440",
        "buggy_code": "\"Sending TRUNC zxid=0x{}  for peer sid: {}\",",
        "fixed_code": "\"Sending DIFF zxid=0x{}  for peer sid: {}\",",
        "patch": "@@ -1031,7 +1031,7 @@ protected long queueCommittedProposals(Iterator<Proposal> itr, long peerLastZxid\n             // is the catch when our history older than learner and there is\n             // no new txn since then. So we need an empty diff\n             LOG.info(\n-                \"Sending TRUNC zxid=0x{}  for peer sid: {}\",\n+                \"Sending DIFF zxid=0x{}  for peer sid: {}\",\n                 Long.toHexString(lastCommittedZxid),\n                 getSid());\n             queueOpPacket(Leader.DIFF, lastCommittedZxid);"
    },
    {
        "commit_id": "880f6064183c216d56d8c3e46a655c2b143f6d5e",
        "commit_message": "ZOOKEEPER-4655: Communicate the Zxid that triggered a WatchEvent to fire (#1950)\n\n* Fix a race condition in WatcherCleanerTest.testDeadWatcherMetrics\r\n\r\nBecause the metrics were updated _after_ the listener is invoked, the listener does not always see\r\nthe fresh metric value. This fixes it so that the test waits for the value to become what we expect.\r\n\r\n* Leverage an existing method and refactor the rest of the code to match\r\n\r\nSince there was an existing waitFor method in ZKTestCase, along with an existing implementation of a\r\nwaitForMetric LearnerMetricsTest, this commit moves waitForMetric to ZKTestCase and refactors the\r\nmetric-related usages of waitFor.\r\n\r\n* Communicate the Zxid that triggered a WatchEvent to fire\r\n\r\nWith the recent addition of persistent watches, many doors have opened up to significantly more\r\nperformant and intuitive local caches of remote state, but the actual implementation can be\r\ndifficult because to cache data locally, one needs to execute the following steps:\r\n\r\n1. Set the watch\r\n2. Bootstrap the watched subtree\r\n3. Catch up on the events that fired during the bootstrap\r\n\r\nThe issue is it's now very difficult to deduplicate and sanely resolve the remote state during step\r\n3 because it's unknown whether an event arrived during the bootstrap or after. For example,\r\nimagine that between steps 1 and 2, a node /a was deleted then re-created. By the time step 3 is\r\nexecuted, there will be a NodeDeleted event queued up followed by a NodeCreated, causing at best a\r\ndouble read (one from the bootstrap, one from the NodeCreated) or at worst some data inconsistencies\r\nin the local cache.\r\n\r\nThis change sets the Zxid in the response header whenever the watch event type is NodeCreated,\r\nNodeDeleted, NodeDataChanged or NodeChildrenChanged.",
        "commit_url": "https://github.com/apache/zookeeper/commit/880f6064183c216d56d8c3e46a655c2b143f6d5e",
        "buggy_code": "WatchedEvent we = new WatchedEvent(event);",
        "fixed_code": "WatchedEvent we = new WatchedEvent(event, replyHdr.getZxid());",
        "patch": "@@ -902,7 +902,7 @@ void readResponse(ByteBuffer incomingBuffer) throws IOException {\n                     event.setPath(clientPath);\n                 }\n \n-                WatchedEvent we = new WatchedEvent(event);\n+                WatchedEvent we = new WatchedEvent(event, replyHdr.getZxid());\n                 LOG.debug(\"Got {} for session id 0x{}\", we, Long.toHexString(sessionId));\n                 eventThread.queueEvent(we);\n                 return;"
    },
    {
        "commit_id": "880f6064183c216d56d8c3e46a655c2b143f6d5e",
        "commit_message": "ZOOKEEPER-4655: Communicate the Zxid that triggered a WatchEvent to fire (#1950)\n\n* Fix a race condition in WatcherCleanerTest.testDeadWatcherMetrics\r\n\r\nBecause the metrics were updated _after_ the listener is invoked, the listener does not always see\r\nthe fresh metric value. This fixes it so that the test waits for the value to become what we expect.\r\n\r\n* Leverage an existing method and refactor the rest of the code to match\r\n\r\nSince there was an existing waitFor method in ZKTestCase, along with an existing implementation of a\r\nwaitForMetric LearnerMetricsTest, this commit moves waitForMetric to ZKTestCase and refactors the\r\nmetric-related usages of waitFor.\r\n\r\n* Communicate the Zxid that triggered a WatchEvent to fire\r\n\r\nWith the recent addition of persistent watches, many doors have opened up to significantly more\r\nperformant and intuitive local caches of remote state, but the actual implementation can be\r\ndifficult because to cache data locally, one needs to execute the following steps:\r\n\r\n1. Set the watch\r\n2. Bootstrap the watched subtree\r\n3. Catch up on the events that fired during the bootstrap\r\n\r\nThe issue is it's now very difficult to deduplicate and sanely resolve the remote state during step\r\n3 because it's unknown whether an event arrived during the bootstrap or after. For example,\r\nimagine that between steps 1 and 2, a node /a was deleted then re-created. By the time step 3 is\r\nexecuted, there will be a NodeDeleted event queued up followed by a NodeCreated, causing at best a\r\ndouble read (one from the bootstrap, one from the NodeCreated) or at worst some data inconsistencies\r\nin the local cache.\r\n\r\nThis change sets the Zxid in the response header whenever the watch event type is NodeCreated,\r\nNodeDeleted, NodeDataChanged or NodeChildrenChanged.",
        "commit_url": "https://github.com/apache/zookeeper/commit/880f6064183c216d56d8c3e46a655c2b143f6d5e",
        "buggy_code": "ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, -1L, 0);",
        "fixed_code": "ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, event.getZxid(), 0);",
        "patch": "@@ -705,7 +705,7 @@ public int sendResponse(ReplyHeader h, Record r, String tag, String cacheKey, St\n      */\n     @Override\n     public void process(WatchedEvent event) {\n-        ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, -1L, 0);\n+        ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, event.getZxid(), 0);\n         if (LOG.isTraceEnabled()) {\n             ZooTrace.logTraceMessage(\n                 LOG,"
    },
    {
        "commit_id": "880f6064183c216d56d8c3e46a655c2b143f6d5e",
        "commit_message": "ZOOKEEPER-4655: Communicate the Zxid that triggered a WatchEvent to fire (#1950)\n\n* Fix a race condition in WatcherCleanerTest.testDeadWatcherMetrics\r\n\r\nBecause the metrics were updated _after_ the listener is invoked, the listener does not always see\r\nthe fresh metric value. This fixes it so that the test waits for the value to become what we expect.\r\n\r\n* Leverage an existing method and refactor the rest of the code to match\r\n\r\nSince there was an existing waitFor method in ZKTestCase, along with an existing implementation of a\r\nwaitForMetric LearnerMetricsTest, this commit moves waitForMetric to ZKTestCase and refactors the\r\nmetric-related usages of waitFor.\r\n\r\n* Communicate the Zxid that triggered a WatchEvent to fire\r\n\r\nWith the recent addition of persistent watches, many doors have opened up to significantly more\r\nperformant and intuitive local caches of remote state, but the actual implementation can be\r\ndifficult because to cache data locally, one needs to execute the following steps:\r\n\r\n1. Set the watch\r\n2. Bootstrap the watched subtree\r\n3. Catch up on the events that fired during the bootstrap\r\n\r\nThe issue is it's now very difficult to deduplicate and sanely resolve the remote state during step\r\n3 because it's unknown whether an event arrived during the bootstrap or after. For example,\r\nimagine that between steps 1 and 2, a node /a was deleted then re-created. By the time step 3 is\r\nexecuted, there will be a NodeDeleted event queued up followed by a NodeCreated, causing at best a\r\ndouble read (one from the bootstrap, one from the NodeCreated) or at worst some data inconsistencies\r\nin the local cache.\r\n\r\nThis change sets the Zxid in the response header whenever the watch event type is NodeCreated,\r\nNodeDeleted, NodeDataChanged or NodeChildrenChanged.",
        "commit_url": "https://github.com/apache/zookeeper/commit/880f6064183c216d56d8c3e46a655c2b143f6d5e",
        "buggy_code": "ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, -1L, 0);",
        "fixed_code": "ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, event.getZxid(), 0);",
        "patch": "@@ -162,7 +162,7 @@ public int getSessionTimeout() {\n \n     @Override\n     public void process(WatchedEvent event) {\n-        ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, -1L, 0);\n+        ReplyHeader h = new ReplyHeader(ClientCnxn.NOTIFICATION_XID, event.getZxid(), 0);\n         if (LOG.isTraceEnabled()) {\n             ZooTrace.logTraceMessage(\n                 LOG,"
    },
    {
        "commit_id": "a7e4dea7abccff018d123d54dd5d3ccc1544484e",
        "commit_message": "ZOOKEEPER-4573: Encapsulate request bytebuffer in Request\n\nThis patch is based on #1903.\n\nThis closes #1903.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Andor Molnar <andor@apache.org>, Mate Szalay-Beko <symat@apache.org>\n\nCloses #1904 from tisonkun/encapsulate-request-bytebuffer",
        "commit_url": "https://github.com/apache/zookeeper/commit/a7e4dea7abccff018d123d54dd5d3ccc1544484e",
        "buggy_code": "if (protocolManager.isReadonlyAvailable()) {",
        "fixed_code": "if (!protocolManager.isReadonlyAvailable()) {",
        "patch": "@@ -141,7 +141,7 @@ void readConnectResult() throws IOException {\n         ByteBufferInputStream bbis = new ByteBufferInputStream(incomingBuffer);\n         BinaryInputArchive bbia = BinaryInputArchive.getArchive(bbis);\n         ConnectResponse conRsp = protocolManager.deserializeConnectResponse(bbia);\n-        if (protocolManager.isReadonlyAvailable()) {\n+        if (!protocolManager.isReadonlyAvailable()) {\n             LOG.warn(\"Connected to an old server; r-o mode will be unavailable\");\n         }\n         this.sessionId = conRsp.getSessionId();"
    },
    {
        "commit_id": "794790c9f6cbacf158493867f3058a6de748b54e",
        "commit_message": "ZOOKEEPER-4308: Fix flaky test EagerACLFilterTest\n\nThere are several problems in this test:\n* It uses `ParameterizedTest` which run tests in single jvm. But\n  `ZooKeeperServer.enableEagerACLCheck` is `static` and loaded from env\n  variable.\n* It uses `assertNotSame` which assert on object reference equiality.\n* It asserts on `zkLeader.getLastLoggedZxid()` while client connect to\n  `connectedServer`. There is no happen-before between\n  `zkLeader.getLastLoggedZxid()` and successful response from other\n  server. The commit and response are routed to different servers and\n  performed asynchronous in each server.\n\nAuthor: Kezhu Wang <kezhuw@gmail.com>\n\nReviewers: maoling <maoling199210191@sina.com>, Mate Szalay-Beko <symat@apache.org>\n\nCloses #1851 from kezhuw/ZOOKEEPER-4308-EagerACLFilterTest",
        "commit_url": "https://github.com/apache/zookeeper/commit/794790c9f6cbacf158493867f3058a6de748b54e",
        "buggy_code": "private static final String LOCALADDR = \"127.0.0.1\";",
        "fixed_code": "protected static final String LOCALADDR = \"127.0.0.1\";",
        "patch": "@@ -47,7 +47,7 @@ public class QuorumBase extends ClientBase {\n \n     private static final Logger LOG = LoggerFactory.getLogger(QuorumBase.class);\n \n-    private static final String LOCALADDR = \"127.0.0.1\";\n+    protected static final String LOCALADDR = \"127.0.0.1\";\n \n     private File oracleDir;\n     private static final String oraclePath_0 = \"/oraclePath/0/mastership/\";"
    },
    {
        "commit_id": "a160981e37d2907717284ec9f6eab5e17e8aecfa",
        "commit_message": "ZOOKEEPER-4494: Fix error message format\n\ncc maoling eolivelli\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: maoling <maoling@apache.org>\n\nCloses #1838 from tisonkun/patch-2",
        "commit_url": "https://github.com/apache/zookeeper/commit/a160981e37d2907717284ec9f6eab5e17e8aecfa",
        "buggy_code": "throw new IOException(\"Unsupported Txn with type=%d\" + hdr.getType());",
        "fixed_code": "throw new IOException(\"Unsupported Txn with type=\" + hdr.getType());",
        "patch": "@@ -101,7 +101,7 @@ public static TxnLogEntry deserializeTxn(byte[] txnBytes) throws IOException {\n             txn = new MultiTxn();\n             break;\n         default:\n-            throw new IOException(\"Unsupported Txn with type=%d\" + hdr.getType());\n+            throw new IOException(\"Unsupported Txn with type=\" + hdr.getType());\n         }\n         if (txn != null) {\n             try {"
    },
    {
        "commit_id": "85551f9be5b054fa4aee0636597b12bda2ecb2e8",
        "commit_message": "ZOOKEEPER-4427: Migrate to Logback\n\nThis is the first commit of Logback migration task.\n\n1. Replaced log4j dependencies with logback alternatives,\n2. Replaced log4j.properties files with logback.xml\n3. Refactored unit tests to use logback for log capturing.\n\nThis patch doesn't cover the zookeeper-contrib projects, only the main codebase.\n\nAuthor: Andor Molnar <andor@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, Chris Nauroth <cnauroth@apache.org>, Mate Szalay-Beko <symat@apache.org>\n\nCloses #1793 from anmolnar/ZOOKEEPER-4427",
        "commit_url": "https://github.com/apache/zookeeper/commit/85551f9be5b054fa4aee0636597b12bda2ecb2e8",
        "buggy_code": "auditLoggerClass = Log4jAuditLogger.class.getName();",
        "fixed_code": "auditLoggerClass = Slf4jAuditLogger.class.getName();",
        "patch": "@@ -46,7 +46,7 @@ public class ZKAuditProvider {\n     private static AuditLogger getAuditLogger() {\n         String auditLoggerClass = System.getProperty(AUDIT_IMPL_CLASS);\n         if (auditLoggerClass == null) {\n-            auditLoggerClass = Log4jAuditLogger.class.getName();\n+            auditLoggerClass = Slf4jAuditLogger.class.getName();\n         }\n         try {\n             Constructor<?> clientCxnConstructor = Class.forName(auditLoggerClass)"
    },
    {
        "commit_id": "a43b9ef0cb2147d6a27f9285f9db02de54a0174f",
        "commit_message": "ZOOKEEPER-4435: fix a tiny typo\n\nSmall typo in the log message.\n\nAuthor: epugh@opensourceconnections.com <>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, maoling <maoling@apache.org>\n\nCloses #1792 from epugh/ZOOKEEPER-4435 and squashes the following commits:\n\nba3d78153 [epugh@opensourceconnections.com] ZOOKEEPER-4435: typo\n392b16bae [epugh@opensourceconnections.com] Revert \"typo\"\n52db6bad4 [epugh@opensourceconnections.com] typo",
        "commit_url": "https://github.com/apache/zookeeper/commit/a43b9ef0cb2147d6a27f9285f9db02de54a0174f",
        "buggy_code": "LOG.warn(\"maxCnxns should be greater than or equal to 0, using default vlaue {}.\",",
        "fixed_code": "LOG.warn(\"maxCnxns should be greater than or equal to 0, using default value {}.\",",
        "patch": "@@ -303,7 +303,7 @@ protected void initMaxCnxns() {\n         maxCnxns = Integer.getInteger(ZOOKEEPER_MAX_CONNECTION, ZOOKEEPER_MAX_CONNECTION_DEFAULT);\n         if (maxCnxns < 0) {\n             maxCnxns = ZOOKEEPER_MAX_CONNECTION_DEFAULT;\n-            LOG.warn(\"maxCnxns should be greater than or equal to 0, using default vlaue {}.\",\n+            LOG.warn(\"maxCnxns should be greater than or equal to 0, using default value {}.\",\n                     ZOOKEEPER_MAX_CONNECTION_DEFAULT);\n         } else if (maxCnxns == ZOOKEEPER_MAX_CONNECTION_DEFAULT) {\n             LOG.warn(\"maxCnxns is not configured, using default value {}.\","
    },
    {
        "commit_id": "04f3d183de5543bcde7ad2f8b99ca847677f847d",
        "commit_message": "ZOOKEEPER-3800: improve the log printing the address when QuorumCnxManager#ListenerHandler's port binds\n\nAs per [ZOOKEEPER-3800](https://issues.apache.org/jira/browse/ZOOKEEPER-3800), I updated the log message to print the address.\n\nPlease let me know if additional changes are required.\n\nAuthor: Nishanth Entoor <entoor.nishanth@gamil.com>\nAuthor: Nishanth Entoor <entoor.nishanth@gmail.com>\n\nReviewers: rabi-kumar <ravowlga@gmail.com>, maoling <maoling@apache.org>\n\nCloses #1332 from nishanth-entoor/ZOOKEEPER-3800 and squashes the following commits:\n\n6969ab93c [Nishanth Entoor] ZOOKEEPER-3800: changed log error message\n5ae7b1eb6 [Nishanth Entoor] ZOOKEEPER-3800: improve the log printing the address when QuorumCnxManager#ListenerHandler's port binds",
        "commit_url": "https://github.com/apache/zookeeper/commit/04f3d183de5543bcde7ad2f8b99ca847677f847d",
        "buggy_code": "LOG.error(\"Exception while listening\", e);",
        "fixed_code": "LOG.error(\"Exception while listening to address {}\", address, e);",
        "patch": "@@ -1096,7 +1096,7 @@ private void acceptConnections() {\n                             break;\n                         }\n \n-                        LOG.error(\"Exception while listening\", e);\n+                        LOG.error(\"Exception while listening to address {}\", address, e);\n \n                         if (e instanceof SocketException) {\n                             socketException.set(true);"
    },
    {
        "commit_id": "531bddd5b43d2f0b3afbe0051642830c47030652",
        "commit_message": "ZOOKEEPER-4384: [R] Fix 'sever' typo in ClientCnxn.\n\nHello. Not yet created a JIRA issue for this small logging change, but happy to open one if that is preferred.\n\nStumbled across this in the ZK logs; also checked via `git grep -in \"sever[^a-z]\"` that this is the only place with the typo.\n\nAuthor: Christine Poerschke <cpoerschke@bloomberg.net>\n\nReviewers: maoling <maoling@apache.org>\n\nCloses #1761 from cpoerschke/patch-1",
        "commit_url": "https://github.com/apache/zookeeper/commit/531bddd5b43d2f0b3afbe0051642830c47030652",
        "buggy_code": "\"Session 0x{} for sever {}, Closing socket connection. \"",
        "fixed_code": "\"Session 0x{} for server {}, Closing socket connection. \"",
        "patch": "@@ -1290,7 +1290,7 @@ public void run() {\n                         break;\n                     } else {\n                         LOG.warn(\n-                            \"Session 0x{} for sever {}, Closing socket connection. \"\n+                            \"Session 0x{} for server {}, Closing socket connection. \"\n                                 + \"Attempting reconnect except it is a SessionExpiredException.\",\n                             Long.toHexString(getSessionId()),\n                             serverAddress,"
    },
    {
        "commit_id": "f72ef97b66bc890ce8366533eac5be393558a8fb",
        "commit_message": "ZOOKEEPER-4346: remove never used field\n\nremove some never used field\n\nAuthor: zhongxiong.zeng <zhongxiong.zeng@za.group>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, Damien Diederen <ddiederen@apache.org>, rainsbaby, maoling <maoling@apache.org>\n\nCloses #1721 from zhongxiongzeng/remove_unused_code and squashes the following commits:\n\n54dd870e6 [zhongxiong.zeng] 1 fix with ZooTrace.java\n39279c78a [zhongxiong.zeng] remove never used field",
        "commit_url": "https://github.com/apache/zookeeper/commit/f72ef97b66bc890ce8366533eac5be393558a8fb",
        "buggy_code": "private static int shutdownTimeout = 10000;",
        "fixed_code": "private static int shutdownTimeout;",
        "patch": "@@ -68,7 +68,7 @@ public class RequestThrottler extends ZooKeeperCriticalThread {\n     private volatile boolean killed;\n \n     private static final String SHUTDOWN_TIMEOUT = \"zookeeper.request_throttler.shutdownTimeout\";\n-    private static int shutdownTimeout = 10000;\n+    private static int shutdownTimeout;\n \n     static {\n         shutdownTimeout = Integer.getInteger(SHUTDOWN_TIMEOUT, 10000);"
    },
    {
        "commit_id": "e642a325b91ab829aefa47708c7b4b45811d2d23",
        "commit_message": "ZOOKEEPER-3961: Improve error message for zookeeper.intBufferStarting\u2026\n\n\u2026SizeBytes config\n\nAuthor: Renan Tomazoni Pinzon <rpinzon@gmail.com>\n\nReviewers: Beluga Behr <dam6923@gmail.com>, maoling <maoling@apache.org>\n\nCloses #1714 from rpinzon/master and squashes the following commits:\n\n1b2c47469 [Renan Tomazoni Pinzon] ZOOKEEPER-3961: Improve error message for zookeeper.intBufferStartingSizeBytes config\nf3c5a746b [Renan Tomazoni Pinzon] ZOOKEEPER-3961: Improve error message for zookeeper.intBufferStartingSizeBytes config",
        "commit_url": "https://github.com/apache/zookeeper/commit/e642a325b91ab829aefa47708c7b4b45811d2d23",
        "buggy_code": "String msg = \"Buffer starting size must be greater than or equal to 32.\"",
        "fixed_code": "String msg = \"Buffer starting size (\" + intBufferStartingSizeBytes + \") must be greater than or equal to 32. \"",
        "patch": "@@ -253,7 +253,7 @@ protected enum State {\n         intBufferStartingSizeBytes = Integer.getInteger(INT_BUFFER_STARTING_SIZE_BYTES, DEFAULT_STARTING_BUFFER_SIZE);\n \n         if (intBufferStartingSizeBytes < 32) {\n-            String msg = \"Buffer starting size must be greater than or equal to 32.\"\n+            String msg = \"Buffer starting size (\" + intBufferStartingSizeBytes + \") must be greater than or equal to 32. \"\n                          + \"Configure with \\\"-Dzookeeper.intBufferStartingSizeBytes=<size>\\\" \";\n             LOG.error(msg);\n             throw new IllegalArgumentException(msg);"
    },
    {
        "commit_id": "96d87e2809f92460f182c66311d83d59f2ab96c3",
        "commit_message": "ZOOKEEPER-4280: fix the log format in the DataTree#deserializeZxidDigest method\n\nAuthor: fangxiao <fangxiao@kuaishou.com>\n\nReviewers: maoling <maoling@apache.org>\n\nCloses #1686 from benecdict-fang/ZOOKEEPER-4280",
        "commit_url": "https://github.com/apache/zookeeper/commit/96d87e2809f92460f182c66311d83d59f2ab96c3",
        "buggy_code": "+ \", with zxid as 0x{}, and digest value as {}\",",
        "fixed_code": "+ \"with zxid as 0x{}, and digest value as {}\",",
        "patch": "@@ -1707,7 +1707,7 @@ public boolean deserializeZxidDigest(InputArchive ia, long startZxidOfSnapshot)\n             if (zxidDigest.zxid > 0) {\n                 digestFromLoadedSnapshot = zxidDigest;\n                 LOG.info(\"The digest in the snapshot has digest version of {}, \"\n-                        + \", with zxid as 0x{}, and digest value as {}\",\n+                        + \"with zxid as 0x{}, and digest value as {}\",\n                         digestFromLoadedSnapshot.digestVersion,\n                         Long.toHexString(digestFromLoadedSnapshot.zxid),\n                         digestFromLoadedSnapshot.digest);"
    },
    {
        "commit_id": "061438e83e61692fc9e06e057a739db5327d42b9",
        "commit_message": "ZOOKEEPER-3961: Improve error message for zookeeper.intBufferStartingSizeBytes config\n\n\u2026 verification.\n\nAuthor: Ghatage <ghatageanup@gmail.com>\n\nReviewers: Damien Diederen <ddiederen@apache.org>, Andor Molnar <andor@apache.org>,Enrico Olivelli <eolivelli@apache.org>, Mate Szalay-Beko <symat@apache.org>, maoling <maoling@apache.org>\n\nCloses #1495 from Ghatage/ZOOKEEPER-3961",
        "commit_url": "https://github.com/apache/zookeeper/commit/061438e83e61692fc9e06e057a739db5327d42b9",
        "buggy_code": "String msg = \"Buffer starting size must be greater than 0.\"",
        "fixed_code": "String msg = \"Buffer starting size must be greater than or equal to 32.\"",
        "patch": "@@ -251,7 +251,7 @@ protected enum State {\n         intBufferStartingSizeBytes = Integer.getInteger(INT_BUFFER_STARTING_SIZE_BYTES, DEFAULT_STARTING_BUFFER_SIZE);\n \n         if (intBufferStartingSizeBytes < 32) {\n-            String msg = \"Buffer starting size must be greater than 0.\"\n+            String msg = \"Buffer starting size must be greater than or equal to 32.\"\n                          + \"Configure with \\\"-Dzookeeper.intBufferStartingSizeBytes=<size>\\\" \";\n             LOG.error(msg);\n             throw new IllegalArgumentException(msg);"
    },
    {
        "commit_id": "cdddda4c55acf29d4e0b2bc8f3de7b5c676e8ffc",
        "commit_message": "ZOOKEEPER-4269: acceptedEpoch.tmp rename failure will cause server startup error\n\nUsing accepted epoch from acceptedEpoch.tmp if it is available\n\nAuthor: Mohammad Arshad <arshad@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>,Damien Diederen <dd@crosstwine.com>\n\nCloses #1664 from arshadmohammad/ZOOKEEPER-4269-master and squashes the following commits:\n\nd8ae084c1 [Mohammad Arshad] Handled review comments\na2cc9a5b6 [Mohammad Arshad] Added test cases\nb56837e55 [Mohammad Arshad] ZOOKEEPER-4269: acceptedEpoch.tmp rename failure will cause server startup error Using accepted epoch from acceptedEpoch.tmp if it is available",
        "commit_url": "https://github.com/apache/zookeeper/commit/cdddda4c55acf29d4e0b2bc8f3de7b5c676e8ffc",
        "buggy_code": "private static final String TMP_EXTENSION = \".tmp\";",
        "fixed_code": "public static final String TMP_EXTENSION = \".tmp\";",
        "patch": "@@ -45,7 +45,7 @@\n  */\n public class AtomicFileOutputStream extends FilterOutputStream {\n \n-    private static final String TMP_EXTENSION = \".tmp\";\n+    public static final String TMP_EXTENSION = \".tmp\";\n \n     private static final Logger LOG = LoggerFactory.getLogger(AtomicFileOutputStream.class);\n "
    },
    {
        "commit_id": "de726d0a824582e482d4a725210fcd6051cb3bd0",
        "commit_message": "ZOOKEEPER-3128: Get CLI Command displays Authentication error for Authorization error\n\nHandled the scenario missed in ZOOKEEPER-3891\n\nAuthor: Mohammad Arshad <arshad@apache.org>\n\nReviewers: Damien Diederen <dd@crosstwine.com>\n\nCloses #1634 from arshadmohammad/ZOOKEEPER-3128-master",
        "commit_url": "https://github.com/apache/zookeeper/commit/de726d0a824582e482d4a725210fcd6051cb3bd0",
        "buggy_code": "throw new CliException(ex);",
        "fixed_code": "throw new CliWrapperException(ex);",
        "patch": "@@ -90,7 +90,7 @@ public boolean exec() throws CliException {\n         } catch (IllegalArgumentException ex) {\n             throw new MalformedPathException(ex.getMessage());\n         } catch (KeeperException | InterruptedException ex) {\n-            throw new CliException(ex);\n+            throw new CliWrapperException(ex);\n         }\n         data = (data == null) ? \"null\".getBytes() : data;\n         out.println(new String(data, UTF_8));"
    },
    {
        "commit_id": "6022e03177b21606575152ac323205af3fbbe9d8",
        "commit_message": "ZOOKEEPER-4220: Potential redundant connection attempts during leader election\n\nWe have a logic in the server code, that would try to connect to an other quorum member, based\non its server ID. We identify the address assigned to this ID first based on the last committed\nquorum configuration. If the connection attempt fails (or the server is not known in the\ncommitted configuration) then we try to find the address based on the last proposed quorum\nconfiguration. But we should do the second connection attempt, only if the address in the\nlast proposed configuration differs from the address in the last committed configuration.\nOtherwise we would just retry to connect to the same address that failed just right before.\n\nIn the current code we have a bug, because we compare the address object references (use \"!=\")\ninstead of comparing the objects themselves (using \"not equals\"). In certain edge cases (e.g.\nwhen the last proposed and last committed addresses are the same, but the address is unreachable)\nthis bug can lead to unnecessary retry of connection attempts. The normal behaviour would be to\nmark this connection attempt to be failed and wait for e.g. the next election round or wait for\nthe other server to come online and initiate a connection to us.\n\nAuthor: Mate Szalay-Beko <symat@apache.org>\n\nReviewers: Andor Molnar <anmolnar@apache.org>, Damien Diederen <ddiederen@apache.org>\n\nCloses #1615 from symat/ZOOKEEPER-4220",
        "commit_url": "https://github.com/apache/zookeeper/commit/6022e03177b21606575152ac323205af3fbbe9d8",
        "buggy_code": "|| (lastProposedView.get(sid).electionAddr != lastCommittedView.get(sid).electionAddr))) {",
        "fixed_code": "|| !lastProposedView.get(sid).electionAddr.equals(lastCommittedView.get(sid).electionAddr))) {",
        "patch": "@@ -768,7 +768,7 @@ synchronized void connectOne(long sid) {\n             if (lastSeenQV != null\n                 && lastProposedView.containsKey(sid)\n                 && (!knownId\n-                    || (lastProposedView.get(sid).electionAddr != lastCommittedView.get(sid).electionAddr))) {\n+                    || !lastProposedView.get(sid).electionAddr.equals(lastCommittedView.get(sid).electionAddr))) {\n                 knownId = true;\n                 LOG.debug(\"Server {} knows {} already, it is in the lastProposedView\", self.getId(), sid);\n "
    },
    {
        "commit_id": "3b6fefc43221fb3626740618a68562ff1ba707c0",
        "commit_message": "ZOOKEEPER-3898: Fix typos\n\nAuthor: dk.technoboy <guo.jiwei@immomo.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, maoling <maoling199210191@sina.com>\n\nCloses #1414 from Technoboy-/typos",
        "commit_url": "https://github.com/apache/zookeeper/commit/3b6fefc43221fb3626740618a68562ff1ba707c0",
        "buggy_code": "LOG.warn(\"Non-optimial configuration, consider an odd number of servers.\");",
        "fixed_code": "LOG.warn(\"Non-optimal configuration, consider an odd number of servers.\");",
        "patch": "@@ -712,7 +712,7 @@ public static QuorumVerifier parseDynamicConfig(Properties dynamicConfigProp, in\n                 if (numParticipators <= 2) {\n                     LOG.warn(\"No server failure will be tolerated. You need at least 3 servers.\");\n                 } else if (numParticipators % 2 == 0) {\n-                    LOG.warn(\"Non-optimial configuration, consider an odd number of servers.\");\n+                    LOG.warn(\"Non-optimal configuration, consider an odd number of servers.\");\n                 }\n             }\n "
    },
    {
        "commit_id": "12b4e6821997534e1ff58e2e29b9df0beab817d3",
        "commit_message": "ZOOKEEPER-3874: Official API to start ZooKeeper server from Java\n\nCreate an Official API to start a ZooKeeper server node from Java code.\nThe idea is not to run ZooKeeper server inside the same process of an application, but only to have a standard Launcher that can be used from Java and not a bash script.\n\nSee more context here\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-3874\n\nThis is how a Java launcher will look like for tests:\n```\n        int clientPort = PortAssignment.unique();\n        final Properties configZookeeper = new Properties();\n        configZookeeper.put(\"clientPort\", clientPort + \"\");\n        configZookeeper.put(\"host\", \"localhost\");\n        configZookeeper.put(\"..........................\");\n        try (ZooKeeperServerEmbedded zkServer = ZooKeeperServerEmbedded\n                .builder()\n                .baseDir(baseDir)\n                .configuration(configZookeeper)\n                .exitHandler(ExitHandler.LOG_ONLY)\n                .build()) {\n            zkServer.start();\n            //// wait.....\n      }\n```\n\nThis feature does not overlap with Curator TestingServer, this feature is meant to be used a fundation for projects like TestingServer but also to run ZooKeeper server nodes in production.\n\nThis code is running in production at https://www.mag-news.com and https://emailsuccess.com, in such products we are using a Java based process manager\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\nAuthor: Enrico Olivelli <eolivelli@gmail.com>\n\nReviewers: Damien Diederen <ddiederen@apache.org>\n\nCloses #1526 from eolivelli/fix/ZOOKEEPER-3874-embedded-api",
        "commit_url": "https://github.com/apache/zookeeper/commit/12b4e6821997534e1ff58e2e29b9df0beab817d3",
        "buggy_code": "private static Consumer<Integer> systemExitProcedure = SYSTEM_EXIT;",
        "fixed_code": "private static volatile Consumer<Integer> systemExitProcedure = SYSTEM_EXIT;",
        "patch": "@@ -51,7 +51,7 @@ private ServiceUtils() {\n                 + \"Actually System.exit is disabled\", code);\n     };\n \n-    private static Consumer<Integer> systemExitProcedure = SYSTEM_EXIT;\n+    private static volatile Consumer<Integer> systemExitProcedure = SYSTEM_EXIT;\n \n     /**\n      * Override system callback. Useful for preventing the JVM to exit in tests"
    },
    {
        "commit_id": "d8561f620fa8611e9a6819d9879b0f18e5a404a9",
        "commit_message": "ZOOKEEPER-3979: Clean up/robustify audit logs\n\nThis is a minimally disruptive mitigation for the issue reported in ZOOKEEPER-3979, \"Clients can corrupt the audit log.\"\n\nA new property allows disabling the \"legacy\" `digest` authentication mechanism, which could be used by \"an attacker\" to inject unsanitized data into audit logs.\n\nIn general, ZooKeeper administrators should disable unused authentication providers, and ensure that the ones which remain enabled to not produce user IDs susceptible to confuse audit log parsers.\n\nThe rest of the patch is made of assorted small cleanups which should not have any impact on operation or security.\n\n(Note that the patch *series* attached to https://github.com/apache/zookeeper/pull/1519 contains additional measures, such as filtering audit user IDs by authentication scheme, but those seem to be overkill for typical deployment scenarios.  That code could still be fished out and polished if the circumstances evolved.)\n\nAuthor: Damien Diederen <dd@crosstwine.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, Mate Szalay-Beko <symat@apache.org>\n\nCloses #1533 from ztzg/ZOOKEEPER-3979-robustify-audit-logs",
        "commit_url": "https://github.com/apache/zookeeper/commit/d8561f620fa8611e9a6819d9879b0f18e5a404a9",
        "buggy_code": "log(request.getUsers(), op, path, acls, createMode,",
        "fixed_code": "log(request.getUsersForAudit(), op, path, acls, createMode,",
        "patch": "@@ -179,7 +179,7 @@ private static void logMultiOperation(Request request, ProcessTxnResult rc) thro\n     }\n \n     private static void log(Request request, String path, String op, String acls, String createMode, Result result) {\n-        log(request.getUsers(), op, path, acls, createMode,\n+        log(request.getUsersForAudit(), op, path, acls, createMode,\n                 request.cnxn.getSessionIdHex(), request.cnxn.getHostAddress(), result);\n     }\n "
    },
    {
        "commit_id": "d8561f620fa8611e9a6819d9879b0f18e5a404a9",
        "commit_message": "ZOOKEEPER-3979: Clean up/robustify audit logs\n\nThis is a minimally disruptive mitigation for the issue reported in ZOOKEEPER-3979, \"Clients can corrupt the audit log.\"\n\nA new property allows disabling the \"legacy\" `digest` authentication mechanism, which could be used by \"an attacker\" to inject unsanitized data into audit logs.\n\nIn general, ZooKeeper administrators should disable unused authentication providers, and ensure that the ones which remain enabled to not produce user IDs susceptible to confuse audit log parsers.\n\nThe rest of the patch is made of assorted small cleanups which should not have any impact on operation or security.\n\n(Note that the patch *series* attached to https://github.com/apache/zookeeper/pull/1519 contains additional measures, such as filtering audit user IDs by authentication scheme, but those seem to be overkill for typical deployment scenarios.  That code could still be fished out and polished if the circumstances evolved.)\n\nAuthor: Damien Diederen <dd@crosstwine.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, Mate Szalay-Beko <symat@apache.org>\n\nCloses #1533 from ztzg/ZOOKEEPER-3979-robustify-audit-logs",
        "commit_url": "https://github.com/apache/zookeeper/commit/d8561f620fa8611e9a6819d9879b0f18e5a404a9",
        "buggy_code": "return request.getUsers();",
        "fixed_code": "return request.getUsersForAudit();",
        "patch": "@@ -301,7 +301,7 @@ private String getUser() {\n         ServerCnxn next = getServerCnxn();\n         Request request = new Request(next, -1, -1, -1, null,\n                 next.getAuthInfo());\n-        return request.getUsers();\n+        return request.getUsersForAudit();\n     }\n \n     private String getIp() {"
    },
    {
        "commit_id": "8a72a6e6c30db7dd66203dc2def1ede54882856b",
        "commit_message": "ZOOKEEPER-3891: ZKCli commands give wrong error message \"Authenticati\u2026\n\n\u2026on is not valid\" for insufficient permissions\n\nAuthor: Mohammad Arshad <arshad@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, Mate Szalay-Beko <symat@apache.org>\n\nCloses #1404 from arshadmohammad/ZOOKEEPER-3891-master",
        "commit_url": "https://github.com/apache/zookeeper/commit/8a72a6e6c30db7dd66203dc2def1ede54882856b",
        "buggy_code": "return \"Authentication is not valid : \" + keeperException.getPath();",
        "fixed_code": "return \"Insufficient permission : \" + keeperException.getPath();",
        "patch": "@@ -43,7 +43,7 @@ private static String getMessage(Throwable cause) {\n             } else if (keeperException instanceof KeeperException.InvalidACLException) {\n                 return \"Acl is not valid : \" + keeperException.getPath();\n             } else if (keeperException instanceof KeeperException.NoAuthException) {\n-                return \"Authentication is not valid : \" + keeperException.getPath();\n+                return \"Insufficient permission : \" + keeperException.getPath();\n             } else if (keeperException instanceof KeeperException.BadArgumentsException) {\n                 return \"Arguments are not valid : \" + keeperException.getPath();\n             } else if (keeperException instanceof KeeperException.BadVersionException) {"
    },
    {
        "commit_id": "e91455c1e3c50405666cd8afad71d99dceb7b340",
        "commit_message": "ZOOKEEPER-3829: fix rolling restart when dynamic reconfig is disabled\n\nIn four different Jira tickets (ZOOKEEPER-3829, ZOOKEEPER-3830, ZOOKEEPER-3814, ZOOKEEPER-3842) we saw different errors when dynamic reconfig was disabled and we used rolling restart to change the quorum membership configuration. These rolling restart sequences was working fine on 3.4 but caused errors in 3.5 or 3.6.\n\nIn worst case the rolling restart leads to the scenario that we had an elected leader which was up but unable to commit any changes. This happens, when the quorum is extended with a new member in the following sequence:\n* start server.1, server.2, server.3 (with config: 1,2,3)\n* start server.4 (with config 1,2,3,4)\n* stop server.1, then restart it with config 1,2,3,4\n* stop server.2, then restart it with config 1,2,3,4\n* stop server.3, then restart it with config 1,2,3,4\n* at this point leader is server.4, but it can not commit any transaction\n\nAn other error we saw was when we changed a host name of an existing member (removing server.5 and add a new host as server.6). In this case we found in the logs of the new server (server.6) that it is still tried to connect to the old invalid server (server.5), although it was missing from it's config. The same problem remained even after making a full rolling-restart on all the nodes.\n\nIn this patch I try to fix these issues without breaking anything. The patch contains the following changes:\n* We are making sure that neither the committed, nor the last seen config gets updated if dynamic reconfig is disabled.\n* It is not possible now to start the leader without the ability of committing transaction, when dynamic reconfig is disabled (this is only needed to avoid a reconfig edge-case).\n* I added a testcase simulating the enablement of dynamic reconfig using rolling restart\n* I added a few more unit tests to cover rolling restart scenarios. (the tests are failing without the patch but succeeding after applying it).\n* The enablement / disablement of reconfig is getting initialized now in the QuorumPeer and gets propagated to the other classes. This was needed for the rolling restart tests to be able to enable/disable reconfig only for the newly created servers without affecting the servers running already in the same JVM.\n\nI also tested the changes with docker, using: https://github.com/symat/zookeeper-docker-test\n\ntarget branches: 3.5, 3.6, master\n\nAuthor: Mate Szalay-Beko <symat@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1356 from symat/ZOOKEEPER-3829",
        "commit_url": "https://github.com/apache/zookeeper/commit/e91455c1e3c50405666cd8afad71d99dceb7b340",
        "buggy_code": "if (!QuorumPeerConfig.isReconfigEnabled()) {",
        "fixed_code": "if (!self.isReconfigEnabled()) {",
        "patch": "@@ -571,7 +571,7 @@ protected void syncWithLeader(long newLeaderZxid) throws Exception {\n                 // ZOOKEEPER-2819: overwrite config node content extracted\n                 // from leader snapshot with local config, to avoid potential\n                 // inconsistency of config node content during rolling restart.\n-                if (!QuorumPeerConfig.isReconfigEnabled()) {\n+                if (!self.isReconfigEnabled()) {\n                     LOG.debug(\"Reset config node content from local config after deserialization of snapshot.\");\n                     zk.getZKDatabase().initConfigInZKDatabase(self.getQuorumVerifier());\n                 }"
    },
    {
        "commit_id": "e91455c1e3c50405666cd8afad71d99dceb7b340",
        "commit_message": "ZOOKEEPER-3829: fix rolling restart when dynamic reconfig is disabled\n\nIn four different Jira tickets (ZOOKEEPER-3829, ZOOKEEPER-3830, ZOOKEEPER-3814, ZOOKEEPER-3842) we saw different errors when dynamic reconfig was disabled and we used rolling restart to change the quorum membership configuration. These rolling restart sequences was working fine on 3.4 but caused errors in 3.5 or 3.6.\n\nIn worst case the rolling restart leads to the scenario that we had an elected leader which was up but unable to commit any changes. This happens, when the quorum is extended with a new member in the following sequence:\n* start server.1, server.2, server.3 (with config: 1,2,3)\n* start server.4 (with config 1,2,3,4)\n* stop server.1, then restart it with config 1,2,3,4\n* stop server.2, then restart it with config 1,2,3,4\n* stop server.3, then restart it with config 1,2,3,4\n* at this point leader is server.4, but it can not commit any transaction\n\nAn other error we saw was when we changed a host name of an existing member (removing server.5 and add a new host as server.6). In this case we found in the logs of the new server (server.6) that it is still tried to connect to the old invalid server (server.5), although it was missing from it's config. The same problem remained even after making a full rolling-restart on all the nodes.\n\nIn this patch I try to fix these issues without breaking anything. The patch contains the following changes:\n* We are making sure that neither the committed, nor the last seen config gets updated if dynamic reconfig is disabled.\n* It is not possible now to start the leader without the ability of committing transaction, when dynamic reconfig is disabled (this is only needed to avoid a reconfig edge-case).\n* I added a testcase simulating the enablement of dynamic reconfig using rolling restart\n* I added a few more unit tests to cover rolling restart scenarios. (the tests are failing without the patch but succeeding after applying it).\n* The enablement / disablement of reconfig is getting initialized now in the QuorumPeer and gets propagated to the other classes. This was needed for the rolling restart tests to be able to enable/disable reconfig only for the newly created servers without affecting the servers running already in the same JVM.\n\nI also tested the changes with docker, using: https://github.com/symat/zookeeper-docker-test\n\ntarget branches: 3.5, 3.6, master\n\nAuthor: Mate Szalay-Beko <symat@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1356 from symat/ZOOKEEPER-3829",
        "commit_url": "https://github.com/apache/zookeeper/commit/e91455c1e3c50405666cd8afad71d99dceb7b340",
        "buggy_code": "LOG.info(\"Starting quorum peer\");",
        "fixed_code": "LOG.info(\"Starting quorum peer, myid=\" + config.getServerId());",
        "patch": "@@ -148,7 +148,7 @@ public void runFromConfig(QuorumPeerConfig config) throws IOException, AdminServ\n             LOG.warn(\"Unable to register log4j JMX control\", e);\n         }\n \n-        LOG.info(\"Starting quorum peer\");\n+        LOG.info(\"Starting quorum peer, myid=\" + config.getServerId());\n         MetricsProvider metricsProvider;\n         try {\n             metricsProvider = MetricsProviderBootstrap.startMetricsProvider("
    },
    {
        "commit_id": "7812399f2c34033d56267d3cd2189abefbf35172",
        "commit_message": "ZOOKEEPER-3579: Handle null default watcher gracefully\n\nSee also https://issues.apache.org/jira/browse/ZOOKEEPER-3579\n\nPrevent error logs noise like\n\n>2019-10-14 18:41:49 ERROR ClientCnxn:537 - Error while calling watcher2019-10-14 18:41:49 ERROR ClientCnxn:537 - Error while calling watcherjava.lang.NullPointerException at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:535) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:510)2019-10-14 18:41:50 ERROR ClientCnxn:537 - Error while calling watcherjava.lang.NullPointerException at org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:535) at org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:510)\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: Christopher Tubbs <ctubbsii@apache.org>, Enrico Olivelli <eolivelli@apache.org>, maoling <maoling199210191@sina.com>, Mate Szalay-Beko <symat@apache.org>\n\nCloses #1120 from TisonKun/ZOOKEEPER-3579",
        "commit_url": "https://github.com/apache/zookeeper/commit/7812399f2c34033d56267d3cd2189abefbf35172",
        "buggy_code": "LOG.error(\"Error while calling watcher \", t);",
        "fixed_code": "LOG.error(\"Error while calling watcher.\", t);",
        "patch": "@@ -576,7 +576,7 @@ private void processEvent(Object event) {\n                         try {\n                             watcher.process(pair.event);\n                         } catch (Throwable t) {\n-                            LOG.error(\"Error while calling watcher \", t);\n+                            LOG.error(\"Error while calling watcher.\", t);\n                         }\n                     }\n                 } else if (event instanceof LocalCallback) {"
    },
    {
        "commit_id": "b2db3918cb2b681e0446cfe3247730deacc0567b",
        "commit_message": "ZOOKEEPER-3733: Fix issues reported in 3.6.0rc3\n\n- metrics library LICENSE file has wrong file name\n- spotbugs is not passing when '-SNAPSHOT' suffix is removed because the Info.java interface sets a null value for \"qualifier\"\n- the name of the directory inside the source tarbal is not consistent with the file name and with 3.5 tradition\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: phunt@apache.org\n\nCloses #1258 from eolivelli/fix/ZOOKEEPER-3733\n\nChange-Id: I70f4bf96fcd3d8371e1251a60199fe5ef1fdd4d4",
        "commit_url": "https://github.com/apache/zookeeper/commit/b2db3918cb2b681e0446cfe3247730deacc0567b",
        "buggy_code": "w.write(\"    String QUALIFIER=\" + (version.qualifier == null ? null : \"\\\"\" + version.qualifier + \"\\\"\") + \";\\n\");",
        "fixed_code": "w.write(\"    String QUALIFIER=\" + (version.qualifier == null ? \"\\\"\\\"\" : \"\\\"\" + version.qualifier + \"\\\"\") + \";\\n\");",
        "patch": "@@ -80,7 +80,7 @@ public static void generateFile(File outputDir, Version version, String rev, Str\n             w.write(\"    int MAJOR=\" + version.maj + \";\\n\");\n             w.write(\"    int MINOR=\" + version.min + \";\\n\");\n             w.write(\"    int MICRO=\" + version.micro + \";\\n\");\n-            w.write(\"    String QUALIFIER=\" + (version.qualifier == null ? null : \"\\\"\" + version.qualifier + \"\\\"\") + \";\\n\");\n+            w.write(\"    String QUALIFIER=\" + (version.qualifier == null ? \"\\\"\\\"\" : \"\\\"\" + version.qualifier + \"\\\"\") + \";\\n\");\n             if (rev.equals(\"-1\")) {\n                 System.out.println(\"Unknown REVISION number, using \" + rev);\n             }"
    },
    {
        "commit_id": "6763f73cb64d87145e8e642d9e4fcc1e0d509216",
        "commit_message": "ZOOKEEPER-3715: fix Kerberos test failures for new JDK versions\n\nUsing OpenJDK 8u.242 or OpenJDK 11.0.6, we have some kerberos exceptions\nwhen running the following, Kerberos Authentication related tests:\n-\u00a0QuorumKerberosAuthTest\n-\u00a0QuorumKerberosHostBasedAuthTest\n-\u00a0SaslKerberosAuthOverSSLTest\n\nAfter trying this with different JDK versions, we see that\u00a0the problem\nseems to appear:\n- between OpenJDK 8u.232 and 8u.242 for java 8\n- and between\u00a011.0.3 and 11.0.6 for java 11\n\nThere are a lot of kerberos related changes after 8u.232:\nsee\u00a0https://hg.openjdk.java.net/jdk8u/jdk8u/jdk\n\nI didn't really found the root cause of the issue, but the problem disappeared\nafter upgrading the Apache Kerby. Kerby is used only by the tests to start a local\nembedded KDC server. I also checked the dependencies of the new Kerby version\nand there is nothing to exclude there as far as I saw.\n\nI also improved the logging of errors during Kerberos authentication problems by\nprinting out some more exceptions.\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1244 from symat/ZOOKEEPER-3715",
        "commit_url": "https://github.com/apache/zookeeper/commit/6763f73cb64d87145e8e642d9e4fcc1e0d509216",
        "buggy_code": "throw new SaslException(error);",
        "fixed_code": "throw new SaslException(error, e);",
        "patch": "@@ -335,7 +335,7 @@ public byte[] run() throws SaslException {\n                     error += \" Zookeeper Client will go to AUTH_FAILED state.\";\n                     LOG.error(error);\n                     saslState = SaslState.FAILED;\n-                    throw new SaslException(error);\n+                    throw new SaslException(error, e);\n                 }\n             }\n         } else {"
    },
    {
        "commit_id": "6763f73cb64d87145e8e642d9e4fcc1e0d509216",
        "commit_message": "ZOOKEEPER-3715: fix Kerberos test failures for new JDK versions\n\nUsing OpenJDK 8u.242 or OpenJDK 11.0.6, we have some kerberos exceptions\nwhen running the following, Kerberos Authentication related tests:\n-\u00a0QuorumKerberosAuthTest\n-\u00a0QuorumKerberosHostBasedAuthTest\n-\u00a0SaslKerberosAuthOverSSLTest\n\nAfter trying this with different JDK versions, we see that\u00a0the problem\nseems to appear:\n- between OpenJDK 8u.232 and 8u.242 for java 8\n- and between\u00a011.0.3 and 11.0.6 for java 11\n\nThere are a lot of kerberos related changes after 8u.232:\nsee\u00a0https://hg.openjdk.java.net/jdk8u/jdk8u/jdk\n\nI didn't really found the root cause of the issue, but the problem disappeared\nafter upgrading the Apache Kerby. Kerby is used only by the tests to start a local\nembedded KDC server. I also checked the dependencies of the new Kerby version\nand there is nothing to exclude there as far as I saw.\n\nI also improved the logging of errors during Kerberos authentication problems by\nprinting out some more exceptions.\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1244 from symat/ZOOKEEPER-3715",
        "commit_url": "https://github.com/apache/zookeeper/commit/6763f73cb64d87145e8e642d9e4fcc1e0d509216",
        "buggy_code": "throw new SaslException(error);",
        "fixed_code": "throw new SaslException(error, e);",
        "patch": "@@ -195,7 +195,7 @@ public byte[] run() throws SaslException {\n                                  + \" '-Dsun.net.spi.nameservice.provider.1=dns,sun' to your server's JVMFLAGS environment.\";\n                     }\n                     LOG.error(error);\n-                    throw new SaslException(error);\n+                    throw new SaslException(error, e);\n                 }\n             }\n         } else {"
    },
    {
        "commit_id": "b4c5a7fdd0f97aa5a9bf18a345b1cee5b0da967a",
        "commit_message": "ZOOKEEPER-3698: fixing NoRouteToHostException when starting large cluster locally\n\nWhen we tested RC 3.6.0, we had a problem of starting ZooKeeper cluster with large\nnumber (11+) of ensemble members locally on mac. We found exceptions in the logs\nwhen the new MultiAddress feature tries to filter the unreachable hosts from the\naddress list. This involves the calling of the InetAddress.isReachable method with\na default timeout of 500ms, which goes down to a native call in java and basically\ntry to do a ping (an ICMP echo request) to the host. Naturally, the localhost should\nbe always reachable.\n\nThe problem was that on mac we have the ICMP rate limit set to 250 by default.\n\nIn this patch we:\n- changed the reachability check behavior by disabling the check if there is only\na single address provided (so we wouldn't be able to filter the unreachable\naddresses anyway).\n- added and documented a configuration parameter to disable the reachability check\nfor testing. (default: enabled)\n- added and documented a configuration parameter to set the timeout for the\nreachability checks. (default: 1000ms)\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\n\nReviewers: eolivelli@apache.org, andor@apache.org\n\nCloses #1228 from symat/ZOOKEEPER-3698-branch-3.6\n\n(cherry picked from commit 8352f78e752a019387c1eb6095085152e7d1d4ad)\nSigned-off-by: Andor Molnar <andor@apache.org>",
        "commit_url": "https://github.com/apache/zookeeper/commit/b4c5a7fdd0f97aa5a9bf18a345b1cee5b0da967a",
        "buggy_code": "Pattern p = Pattern.compile(\".*None of the addresses .* are reachable for sid 2\");",
        "fixed_code": "Pattern p = Pattern.compile(\".*Cannot open channel to .* at election address .*\");",
        "patch": "@@ -470,7 +470,7 @@ public void testBadPeerAddressInQuorum() throws Exception {\n         LineNumberReader r = new LineNumberReader(new StringReader(os.toString()));\n         String line;\n         boolean found = false;\n-        Pattern p = Pattern.compile(\".*None of the addresses .* are reachable for sid 2\");\n+        Pattern p = Pattern.compile(\".*Cannot open channel to .* at election address .*\");\n         while ((line = r.readLine()) != null) {\n             found = p.matcher(line).matches();\n             if (found) {"
    },
    {
        "commit_id": "b2a671e6a7b7f323a2a5659222429dfcc21e17cd",
        "commit_message": "ZOOKEEPER-3546: fix missed change, default should be 0 not Long.MAX_VALUE\n\nfix missed change, default should be 0 not Long.MAX_VALUE\n\nAuthor: randgalt <jordan@jordanzimmerman.com>\n\nReviewers: eolivelli@apache.org, fangmin@apache.org\n\nCloses #1158 from Randgalt/ZOOKEEPER-3546-allow-delete-of-never-used-containers-fixit",
        "commit_url": "https://github.com/apache/zookeeper/commit/b2a671e6a7b7f323a2a5659222429dfcc21e17cd",
        "buggy_code": "this(zkDb, requestProcessor, checkIntervalMs, maxPerMinute, Long.MAX_VALUE);",
        "fixed_code": "this(zkDb, requestProcessor, checkIntervalMs, maxPerMinute, 0);",
        "patch": "@@ -59,7 +59,7 @@ public class ContainerManager {\n      *                     herding of container deletions\n      */\n     public ContainerManager(ZKDatabase zkDb, RequestProcessor requestProcessor, int checkIntervalMs, int maxPerMinute) {\n-        this(zkDb, requestProcessor, checkIntervalMs, maxPerMinute, Long.MAX_VALUE);\n+        this(zkDb, requestProcessor, checkIntervalMs, maxPerMinute, 0);\n     }\n \n     /**"
    },
    {
        "commit_id": "01e198aec9ceae52f160ddcf2e45cd234823e505",
        "commit_message": "ZOOKEEPER-3633: AdminServer commands throw NPE when only secure client port is used\n\nWhen only secureClientPort is defined in the config and there is no regular clientPort,\nthen both the stat and the conf commands on the AdminServer result in 500 Server Error caused by\nNullPointerExceptions. The problem is that no serverCnxFactory is defined in the\nZooKeeperServer in this case, we have only secureServerCnxnFactory.\n\nIn the fix we return info about both the secure and unsecure connections.\nExample of the stat command output for secure-only configuration:\n```\n{\n  \"version\" : \"3.6.0-SNAPSHOT-8e8905069f4bff670c0492fe9e28ced0f86bca00, built on 11/29/2019 08:04 GMT\",\n  \"read_only\" : false,\n  \"server_stats\" : {\n    \"packets_sent\" : 1,\n    \"packets_received\" : 1,\n    \"fsync_threshold_exceed_count\" : 0,\n    \"client_response_stats\" : {\n      \"last_buffer_size\" : -1,\n      \"min_buffer_size\" : -1,\n      \"max_buffer_size\" : -1\n    },\n    \"data_dir_size\" : 671094270,\n    \"log_dir_size\" : 671094270,\n    \"last_processed_zxid\" : 20,\n    \"outstanding_requests\" : 0,\n    \"server_state\" : \"standalone\",\n    \"avg_latency\" : 5.0,\n    \"max_latency\" : 5,\n    \"min_latency\" : 5,\n    \"num_alive_client_connections\" : 1,\n    \"provider_null\" : false,\n    \"uptime\" : 15020\n  },\n  \"client_response\" : {\n    \"last_buffer_size\" : -1,\n    \"min_buffer_size\" : -1,\n    \"max_buffer_size\" : -1\n  },\n  \"node_count\" : 6,\n  \"connections\" : [ ],\n  \"secure_connections\" : [ {\n    \"remote_socket_address\" : \"127.0.0.1:57276\",\n    \"interest_ops\" : 1,\n    \"outstanding_requests\" : 0,\n    \"packets_received\" : 1,\n    \"packets_sent\" : 1\n  } ],\n  \"command\" : \"stats\",\n  \"error\" : null\n}\n```\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\n\nReviewers: Andor Molnar <andor@apache.org>, Enrico Olivelli <eolivelli@apache.org>, Norbert Kalmar <nkalmar@apache.org>\n\nCloses #1161 from symat/ZOOKEEPER-3633",
        "commit_url": "https://github.com/apache/zookeeper/commit/01e198aec9ceae52f160ddcf2e45cd234823e505",
        "buggy_code": "serverCnxnFactory.getMaxClientCnxnsPerHost(),",
        "fixed_code": "getMaxClientCnxnsPerHost(),",
        "patch": "@@ -414,7 +414,7 @@ public ZooKeeperServerConf getConf() {\n             zkDb.snapLog.getSnapDir().getAbsolutePath(),\n             zkDb.snapLog.getDataDir().getAbsolutePath(),\n             getTickTime(),\n-            serverCnxnFactory.getMaxClientCnxnsPerHost(),\n+            getMaxClientCnxnsPerHost(),\n             getMinSessionTimeout(),\n             getMaxSessionTimeout(),\n             getServerId(),"
    },
    {
        "commit_id": "815c8f2130b8b43e11abe52b226707f707a93581",
        "commit_message": "ZOOKEEPER-3188: Improve resilience to network\n\nThis PR is the rebase of the [previous pull request](https://github.com/apache/zookeeper/pull/730), so all the kudos should go to the original authors...\n\nIn [ZOOKEEPER-3188](https://issues.apache.org/jira/browse/ZOOKEEPER-3188) we add ability to specify several addresses for quorum operations. Also added reconnection attempts if connection to leader lost.\n\nIn this PR I rebased the changes on the current master, resolving some minor conflicts with:\n- [ZOOKEEPER-3296](https://issues.apache.org/jira/browse/ZOOKEEPER-3296): Explicitly closing the sslsocket when it failed handshake to prevent issue where peers cannot join quorum\n- [ZOOKEEPER-3320](https://issues.apache.org/jira/browse/ZOOKEEPER-3320): Leader election port stop listen when hostname unresolvable for some time\n- [ZOOKEEPER-3385](https://issues.apache.org/jira/browse/ZOOKEEPER-3385): Add admin command to display leader\n- [ZOOKEEPER-3386](https://issues.apache.org/jira/browse/ZOOKEEPER-3386): Add admin command to display voting view\n- [ZOOKEEPER-3398](https://issues.apache.org/jira/browse/ZOOKEEPER-3398): Learner.connectToLeader() may take too long to time-out\n\nI still want to test the feature manually (e.g. using docker containers with multiple virtual networks / interfaces). The steps to the manual test could be recorded in the [google docs](https://docs.google.com/document/d/1iGVwxeHp57qogwfdodCh9b32P2_kOQaJZ2GDo7j36fI/edit?usp=sharing) as well.\n\nAlso I think we could add a few more unit tests where we are using multiple addresses. The current tests are using a single address only.\n\nAlso the Zookeeper documentation needs to be changed (e.g. by a follow-up Jira?) to promote the new feature and the new config format (possibly including also the admin command documentation in relation with [ZOOKEEPER-3386](https://issues.apache.org/jira/browse/ZOOKEEPER-3386) and [ZOOKEEPER-3461](https://issues.apache.org/jira/browse/ZOOKEEPER-3461))\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\nAuthor: Mate Szalay-Beko <mszalay@cloudera.com>\n\nReviewers: eolivelli@apache.org, andor@apache.org\n\nCloses #1048 from symat/ZOOKEEPER-3188 and squashes the following commits:\n\n3c6fc52d7 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n356882d46 [Mate Szalay-Beko] ZOOKEEPER-3188: document new configuration format for using multiple addresses\n45b6c0fdb [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n4b6bcea48 [Mate Szalay-Beko] ZOOKEEPER-3188: MultiAddress unit tests for Quorum TLS and Kerberos/Digest authentication\n40bc44c23 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\nf875f5c67 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n31805e79b [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n0f95678ca [Mate Szalay-Beko] ZOOKEEPER-3188: skip unreachable addresses when Learner connects to Leader\ne232c55da [Mate Szalay-Beko] ZOOKEEPER-3188: fix flaky unit MultiAddress unit test\ne892d8d8e [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n6f2ab755f [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\n2eedf2687 [Mate Szalay-Beko] ZOOKEEPER-3188: fix PR commits; handle case when Leader can not bind to port on startup\n483d2fc9c [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\na5d6bcb97 [Mate Szalay-Beko] ZOOKEEPER-3188: support for dynamic reconfig + add more unit tests\ned31d2ce9 [Mate Szalay-Beko] ZOOKEEPER-3188: better shutdown for executors (following PR comments)\n8713a5bbf [Mate Szalay-Beko] ZOOKEEPER-3188: add fixes for PR comments\n05eae83c0 [Mate Szalay-Beko] Merge remote-tracking branch 'apache/master' into ZOOKEEPER-3188\ne823af4b1 [Mate Szalay-Beko] Merge remote-tracking branch 'origin/master' into ZOOKEEPER-3188\nde7bad2a6 [Mate Szalay-Beko] Merge remote-tracking branch 'origin/master' into ZOOKEEPER-3188\nda98a8da6 [Mate Szalay-Beko] ZOOKEEPER-3188: fix JDK-13 warning\n5bd1f4e2c [Mate Szalay-Beko] ZOOKEEPER-3188: supress spotbugs warning\n42a52a688 [Mate Szalay-Beko] ZOOKEEPER-3188: improve based on code review comments\n6c4220a0d [Mate Szalay-Beko] ZOOKEEPER-3188: fix SendWorker.asyncValidateIfSocketIsStillReachable\n5b22432c1 [Mate Szalay-Beko] ZOOKEEPER-3188: fix LeaderElection to work with multiple election addresses\n7bfbe7e5c [Mate Szalay-Beko] ZOOKEEPER-3188: Improve resilience to network",
        "commit_url": "https://github.com/apache/zookeeper/commit/815c8f2130b8b43e11abe52b226707f707a93581",
        "buggy_code": "assertTrue(\"waiting for server up\", ClientBase.waitForServerUp(hp, ClientBase.CONNECTION_TIMEOUT));",
        "fixed_code": "assertTrue(\"waiting for server \" + hp + \" up\", ClientBase.waitForServerUp(hp, ClientBase.CONNECTION_TIMEOUT));",
        "patch": "@@ -148,7 +148,7 @@ public void startAll() throws IOException {\n \n         LOG.info(\"Checking ports {}\", hostPort);\n         for (String hp : hostPort.split(\",\")) {\n-            assertTrue(\"waiting for server up\", ClientBase.waitForServerUp(hp, ClientBase.CONNECTION_TIMEOUT));\n+            assertTrue(\"waiting for server \" + hp + \" up\", ClientBase.waitForServerUp(hp, ClientBase.CONNECTION_TIMEOUT));\n             LOG.info(\"{} is accepting client connections\", hp);\n         }\n "
    },
    {
        "commit_id": "ef3649f599b4213a918c7a84cfe663d6cb1fa26e",
        "commit_message": "ZOOKEEPER-3593: fix the default value of jute.maxbuffer in client side and an optimization for the documentation\n\n- The default value of `jute.maxbuffer` in client side said it's 4MB, but actually, it was never working, because when the client reads the deserialized znode data, it also calls `checkLength(BinaryInputArchive.java:127)` where  `jute.maxbuffer` default value is 1MB. It's easy to reproduce, just read a znode more than 1MB with any special configure client. Look at the stack trace I attached in the JIRA\n- Users also confused about that the doc said `jute.maxbuffer` must be set on all servers and clients, but their default value is not same in the [ZOOKEEPER-1295](https://issues.apache.org/jira/browse/ZOOKEEPER-1295)\n- more details in the [ZOOKEEPER-3593](https://issues.apache.org/jira/browse/ZOOKEEPER-3593)\n\nAuthor: maoling <maoling199210191@sina.com>\n\nReviewers: enixon@apache.org, eolivelli@apache.org\n\nCloses #1129 from maoling/ZOOKEEPER-3593",
        "commit_url": "https://github.com/apache/zookeeper/commit/ef3649f599b4213a918c7a84cfe663d6cb1fa26e",
        "buggy_code": "public static final int CLIENT_MAX_PACKET_LENGTH_DEFAULT = 4096 * 1024; /* 4 MB */",
        "fixed_code": "public static final int CLIENT_MAX_PACKET_LENGTH_DEFAULT = 0xfffff; /* 1 MB */",
        "patch": "@@ -57,7 +57,7 @@ public class ZKClientConfig extends ZKConfig {\n      */\n     @SuppressWarnings(\"deprecation\")\n     public static final String SECURE_CLIENT = ZooKeeper.SECURE_CLIENT;\n-    public static final int CLIENT_MAX_PACKET_LENGTH_DEFAULT = 4096 * 1024; /* 4 MB */\n+    public static final int CLIENT_MAX_PACKET_LENGTH_DEFAULT = 0xfffff; /* 1 MB */\n     public static final String ZOOKEEPER_REQUEST_TIMEOUT = \"zookeeper.request.timeout\";\n     public static final String ZOOKEEPER_SERVER_PRINCIPAL = \"zookeeper.server.principal\";\n     /**"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.warn(\"Unable to closeSession() for session: 0x\" + getSessionId(), e);",
        "fixed_code": "LOG.warn(\"Unable to closeSession() for session: 0x{}\", getSessionId(), e);",
        "patch": "@@ -100,7 +100,7 @@ public void terminateSession() {\n         try {\n             zk.closeSession(sessionId);\n         } catch (Exception e) {\n-            LOG.warn(\"Unable to closeSession() for session: 0x\" + getSessionId(), e);\n+            LOG.warn(\"Unable to closeSession() for session: 0x{}\", getSessionId(), e);\n         }\n     }\n "
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(String.format(\"Using checkIntervalMs=%d maxPerMinute=%d\", checkIntervalMs, maxPerMinute));",
        "fixed_code": "LOG.info(\"Using checkIntervalMs={} maxPerMinute={}\", checkIntervalMs, maxPerMinute);",
        "patch": "@@ -64,7 +64,7 @@ public ContainerManager(ZKDatabase zkDb, RequestProcessor requestProcessor, int\n         this.maxPerMinute = maxPerMinute;\n         timer = new Timer(\"ContainerManagerTask\", true);\n \n-        LOG.info(String.format(\"Using checkIntervalMs=%d maxPerMinute=%d\", checkIntervalMs, maxPerMinute));\n+        LOG.info(\"Using checkIntervalMs={} maxPerMinute={}\", checkIntervalMs, maxPerMinute);\n     }\n \n     /**"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.warn(\"Interrupted while wating for \" + this + \" to finish\");",
        "fixed_code": "LOG.warn(\"Interrupted while wating for {} to finish\", this);",
        "patch": "@@ -259,7 +259,7 @@ public void shutdown() {\n             this.join();\n             this.flush();\n         } catch (InterruptedException e) {\n-            LOG.warn(\"Interrupted while wating for \" + this + \" to finish\");\n+            LOG.warn(\"Interrupted while wating for {} to finish\", this);\n             Thread.currentThread().interrupt();\n         } catch (IOException e) {\n             LOG.warn(\"Got IO exception during shutdown\");"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Set text trace mask to 0x\" + Long.toHexString(mask));",
        "fixed_code": "LOG.info(\"Set text trace mask to 0x{}\", Long.toHexString(mask));",
        "patch": "@@ -58,7 +58,7 @@ public static synchronized long getTextTraceLevel() {\n     public static synchronized void setTextTraceLevel(long mask) {\n         traceMask = mask;\n         final Logger LOG = LoggerFactory.getLogger(ZooTrace.class);\n-        LOG.info(\"Set text trace mask to 0x\" + Long.toHexString(mask));\n+        LOG.info(\"Set text trace mask to 0x{}\", Long.toHexString(mask));\n     }\n \n     public static synchronized boolean isTraceEnabled(Logger log, long mask) {"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.warn(\"Problems loading \" + className, e);",
        "fixed_code": "LOG.warn(\"Problems loading {}\", className, e);",
        "patch": "@@ -56,7 +56,7 @@ public static void initialize() {\n                         AuthenticationProvider ap = (AuthenticationProvider) c.getDeclaredConstructor().newInstance();\n                         authenticationProviders.put(ap.getScheme(), ap);\n                     } catch (Exception e) {\n-                        LOG.warn(\"Problems loading \" + className, e);\n+                        LOG.warn(\"Problems loading {}\", className, e);\n                     }\n                 }\n             }"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.warn(size + \" is not a valid value for preAllocSize\");",
        "fixed_code": "LOG.warn(\"{} is not a valid value for preAllocSize\", size);",
        "patch": "@@ -38,7 +38,7 @@ public class FilePadding {\n             try {\n                 preAllocSize = Long.parseLong(size) * 1024;\n             } catch (NumberFormatException e) {\n-                LOG.warn(size + \" is not a valid value for preAllocSize\");\n+                LOG.warn(\"{} is not a valid value for preAllocSize\", size);\n             }\n         }\n     }"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Error creating upgrade request\", ke);",
        "fixed_code": "LOG.warn(\"Error creating upgrade request\", ke);",
        "patch": "@@ -131,7 +131,7 @@ void processRequest(Request request, boolean checkForUpgrade) {\n                         request.setTxn(new ErrorTxn(ke.code().intValue()));\n                     }\n                     request.setException(ke);\n-                    LOG.info(\"Error creating upgrade request\", ke);\n+                    LOG.warn(\"Error creating upgrade request\", ke);\n                 } catch (IOException ie) {\n                     LOG.error(\"Unexpected error in upgrade\", ie);\n                 }"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Error creating upgrade request \" + ke.getMessage());",
        "fixed_code": "LOG.warn(\"Error creating upgrade request\", ke);",
        "patch": "@@ -63,7 +63,7 @@ public void processRequest(Request request) throws RequestProcessorException {\n                 request.setTxn(new ErrorTxn(ke.code().intValue()));\n             }\n             request.setException(ke);\n-            LOG.info(\"Error creating upgrade request \" + ke.getMessage());\n+            LOG.warn(\"Error creating upgrade request\", ke);\n         } catch (IOException ie) {\n             LOG.error(\"Unexpected error in upgrade\", ie);\n         }"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"terminating learner handler connection on demand \" + toString());",
        "fixed_code": "LOG.info(\"terminating learner handler connection on demand {}\", toString());",
        "patch": "@@ -59,7 +59,7 @@ public boolean isHidden() {\n \n     @Override\n     public void terminateConnection() {\n-        LOG.info(\"terminating learner handler connection on demand \" + toString());\n+        LOG.info(\"terminating learner handler connection on demand {}\", toString());\n         learnerHandler.shutdown();\n     }\n "
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Committing global session 0x\" + Long.toHexString(sessionId));",
        "fixed_code": "LOG.info(\"Committing global session 0x{}\", Long.toHexString(sessionId));",
        "patch": "@@ -113,7 +113,7 @@ public synchronized boolean commitSession(long sessionId, int sessionTimeout) {\n         if (added) {\n             // Only do extra logging so we know what kind of session this is\n             // if we're supporting both kinds of sessions\n-            LOG.info(\"Committing global session 0x\" + Long.toHexString(sessionId));\n+            LOG.info(\"Committing global session 0x{}\", Long.toHexString(sessionId));\n         }\n \n         // If the session moved before the session upgrade finished, it's"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"syncEnabled =\" + syncRequestProcessorEnabled);",
        "fixed_code": "LOG.info(\"syncEnabled ={}\", syncRequestProcessorEnabled);",
        "patch": "@@ -52,7 +52,7 @@ public class ObserverZooKeeperServer extends LearnerZooKeeperServer {\n \n     ObserverZooKeeperServer(FileTxnSnapLog logFactory, QuorumPeer self, ZKDatabase zkDb) throws IOException {\n         super(logFactory, self.tickTime, self.minSessionTimeout, self.maxSessionTimeout, self.clientPortListenBacklog, zkDb, self);\n-        LOG.info(\"syncEnabled =\" + syncRequestProcessorEnabled);\n+        LOG.info(\"syncEnabled ={}\", syncRequestProcessorEnabled);\n     }\n \n     public Observer getObserver() {"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.warn(\"Either no config or no quorum defined in config, running \" + \" in standalone mode\");",
        "fixed_code": "LOG.warn(\"Either no config or no quorum defined in config, running in standalone mode\");",
        "patch": "@@ -128,7 +128,7 @@ protected void initializeAndRun(String[] args) throws ConfigException, IOExcepti\n         if (args.length == 1 && config.isDistributed()) {\n             runFromConfig(config);\n         } else {\n-            LOG.warn(\"Either no config or no quorum defined in config, running \" + \" in standalone mode\");\n+            LOG.warn(\"Either no config or no quorum defined in config, running in standalone mode\");\n             // there is only server in the quorum -- run as standalone\n             ZooKeeperServerMain.main(args);\n         }"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Upgrading session 0x\" + Long.toHexString(sessionId));",
        "fixed_code": "LOG.info(\"Upgrading session 0x{}\", Long.toHexString(sessionId));",
        "patch": "@@ -89,7 +89,7 @@ public int upgradeSession(long sessionId) {\n         // will get the timeout from the map\n         Integer timeout = localSessionsWithTimeouts.remove(sessionId);\n         if (timeout != null) {\n-            LOG.info(\"Upgrading session 0x\" + Long.toHexString(sessionId));\n+            LOG.info(\"Upgrading session 0x{}\", Long.toHexString(sessionId));\n             // Track global session, which will add to global session tracker\n             // on leader and do nothing on learner. Need to start track global\n             // session in leader now to update the session expire between"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Corrupting \" + snapFile);",
        "fixed_code": "LOG.info(\"Corrupting {}\", snapFile);",
        "patch": "@@ -61,7 +61,7 @@ public void testInvalidSnapshot() throws Exception {\n \n         // now corrupt the snapshot\n         File snapFile = factory.zkServer.getTxnLogFactory().findMostRecentSnapshot();\n-        LOG.info(\"Corrupting \" + snapFile);\n+        LOG.info(\"Corrupting {}\", snapFile);\n         RandomAccessFile raf = new RandomAccessFile(snapFile, \"rws\");\n         raf.setLength(3);\n         raf.close();"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"cmd \" + cmd + \" expected \" + expected + \" got \" + resp);",
        "fixed_code": "LOG.info(\"cmd {} expected {} got {}\", cmd, expected, resp);",
        "patch": "@@ -161,7 +161,7 @@ public void testFourLetterWords() throws Exception {\n \n     private void verify(String cmd, String expected) throws IOException, SSLContextException {\n         String resp = sendRequest(cmd);\n-        LOG.info(\"cmd \" + cmd + \" expected \" + expected + \" got \" + resp);\n+        LOG.info(\"cmd {} expected {} got {}\", cmd, expected, resp);\n         assertTrue(\"Unexpected response\", resp.contains(expected));\n     }\n "
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(String.format(\"match failed on %s, actual value: %d\", metricKey, actual));",
        "fixed_code": "LOG.info(\"match failed on {}, actual value: {}\", metricKey, actual);",
        "patch": "@@ -102,7 +102,7 @@ private void waitForMetric(final String metricKey, final Matcher<Long> matcher)\n         waitFor(errorMessage, () -> {\n             long actual = (long) MetricsUtils.currentServerMetrics().get(metricKey);\n             if (!matcher.matches(actual)) {\n-                LOG.info(String.format(\"match failed on %s, actual value: %d\", metricKey, actual));\n+                LOG.info(\"match failed on {}, actual value: {}\", metricKey, actual);\n                 return false;\n             }\n             return true;"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.error(\"Error in accept(): \", e);",
        "fixed_code": "LOG.error(\"Error in accept()\", e);",
        "patch": "@@ -144,7 +144,7 @@ public UnifiedServerSocket.UnifiedSocket call() throws Exception {\n                 try {\n                     return (UnifiedServerSocket.UnifiedSocket) listeningSocket.accept();\n                 } catch (IOException e) {\n-                    LOG.error(\"Error in accept(): \", e);\n+                    LOG.error(\"Error in accept()\", e);\n                     throw e;\n                 }\n             }"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Restarting server myid=\" + index);",
        "fixed_code": "LOG.info(\"Restarting server myid={}\", index);",
        "patch": "@@ -222,7 +222,7 @@ private void restartServer(\n         int index,\n         ZooKeeper zk,\n         CountdownWatcher watcher) throws IOException, KeeperException, InterruptedException, TimeoutException {\n-        LOG.info(\"Restarting server myid=\" + index);\n+        LOG.info(\"Restarting server myid={}\", index);\n         MainThread m = shutdown(index);\n         startServer(m, authConfigs);\n         assertTrue("
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Creating client \" + getTestName());",
        "fixed_code": "LOG.info(\"Creating client {}\", getTestName());",
        "patch": "@@ -46,7 +46,7 @@ public class AsyncOpsTest extends ClientBase {\n     public void setUp() throws Exception {\n         super.setUp();\n \n-        LOG.info(\"Creating client \" + getTestName());\n+        LOG.info(\"Creating client {}\", getTestName());\n \n         zk = createClient();\n         zk.addAuthInfo(\"digest\", \"ben:passwd\".getBytes());"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Successfully caught IOException: \" + e);",
        "fixed_code": "LOG.debug(\"Successfully caught IOException\", e);",
        "patch": "@@ -125,7 +125,7 @@ private void testStartupFailure(File testDir, String failureMsg) throws Exceptio\n             startServer();\n             fail(failureMsg);\n         } catch (IOException e) {\n-            LOG.info(\"Successfully caught IOException: \" + e);\n+            LOG.debug(\"Successfully caught IOException\", e);\n         } finally {\n             tmpDir = oldTmpDir;\n         }"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Creating client \" + getTestName());",
        "fixed_code": "LOG.info(\"Creating client {}\", getTestName());",
        "patch": "@@ -35,7 +35,7 @@ public void setUp() throws Exception {\n \n         super.setUp();\n \n-        LOG.info(\"Creating client \" + getTestName());\n+        LOG.info(\"Creating client {}\", getTestName());\n \n         ZooKeeper zk = createClient(hp);\n         try {"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"STARTING \" + getTestName());",
        "fixed_code": "LOG.info(\"STARTING {}\", getTestName());",
        "patch": "@@ -37,7 +37,7 @@ public void setUp() throws Exception {\n         System.out.println(hostPort);\n         super.setUp();\n \n-        LOG.info(\"STARTING \" + getTestName());\n+        LOG.info(\"STARTING {}\", getTestName());\n \n         ZooKeeper zk = createClient(hp);\n         try {"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"cmd \" + cmd + \" expected \" + expected + \" got \" + resp);",
        "fixed_code": "LOG.info(\"cmd {} expected {} got {}\", cmd, expected, resp);",
        "patch": "@@ -102,7 +102,7 @@ public void testFourLetterWords() throws Exception {\n     private void verify(String hp, String cmd, String expected) throws IOException, SSLContextException {\n         for (HostPort hpobj : parseHostPortList(hp)) {\n             String resp = send4LetterWord(hpobj.host, hpobj.port, cmd);\n-            LOG.info(\"cmd \" + cmd + \" expected \" + expected + \" got \" + resp);\n+            LOG.info(\"cmd {} expected {} got {}\", cmd, expected, resp);\n             if (cmd.equals(\"dump\")) {\n                 assertTrue(resp.contains(expected) || resp.contains(\"Sessions with Ephemerals\"));\n             } else {"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"cmd \" + cmd + \" expected \" + expected + \" got \" + resp);",
        "fixed_code": "LOG.info(\"cmd {} expected {} got {}\", cmd, expected, resp);",
        "patch": "@@ -125,7 +125,7 @@ private String sendRequest(String cmd, int timeout) throws IOException, SSLConte\n \n     private void verify(String cmd, String expected) throws IOException, SSLContextException {\n         String resp = sendRequest(cmd);\n-        LOG.info(\"cmd \" + cmd + \" expected \" + expected + \" got \" + resp);\n+        LOG.info(\"cmd {} expected {} got {}\", cmd, expected, resp);\n         assertTrue(resp.contains(expected));\n     }\n "
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(hostPorts[(i + 1) % hostPorts.length] + \" Sync returned \" + result[0]);",
        "fixed_code": "LOG.info(\"{} Sync returned {}\", hostPorts[(i + 1) % hostPorts.length], result[0]);",
        "patch": "@@ -229,7 +229,7 @@ public void processResult(int rc, String path, Object ctx) {\n                     result.wait(5000);\n                 }\n             }\n-            LOG.info(hostPorts[(i + 1) % hostPorts.length] + \" Sync returned \" + result[0]);\n+            LOG.info(\"{} Sync returned {}\", hostPorts[(i + 1) % hostPorts.length], result[0]);\n             assertTrue(result[0] == KeeperException.Code.OK.intValue());\n             try {\n                 zk.setData(\"/\", new byte[1], -1);"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Event:\" + event.getState() + \" \" + event.getType() + \" \" + event.getPath());",
        "fixed_code": "LOG.info(\"Event:{} {} {}\", event.getState(), event.getType(), event.getPath());",
        "patch": "@@ -175,7 +175,7 @@ public void testRecovery() throws Exception {\n      * @see org.apache.zookeeper.Watcher#process(org.apache.zookeeper.WatcherEvent)\n      */\n     public void process(WatchedEvent event) {\n-        LOG.info(\"Event:\" + event.getState() + \" \" + event.getType() + \" \" + event.getPath());\n+        LOG.info(\"Event:{} {} {}\", event.getState(), event.getType(), event.getPath());\n         if (event.getState() == KeeperState.SyncConnected && startSignal != null && startSignal.getCount() > 0) {\n             startSignal.countDown();\n         }"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Got exception as expected: \" + e);",
        "fixed_code": "LOG.debug(\"Got exception as expected\", e);",
        "patch": "@@ -80,7 +80,7 @@ public void testAuth() throws Exception {\n             fail(\"Should have gotten exception.\");\n         } catch (KeeperException e) {\n             // ok, exception as expected.\n-            LOG.info(\"Got exception as expected: \" + e);\n+            LOG.debug(\"Got exception as expected\", e);\n         } finally {\n             zk.close();\n         }"
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Got exception as expected: \" + e);",
        "fixed_code": "LOG.debug(\"Got exception as expected\", e);",
        "patch": "@@ -82,7 +82,7 @@ public void testAuthFail() {\n             fail(\"Should have gotten exception.\");\n         } catch (Exception e) {\n             // ok, exception as expected.\n-            LOG.info(\"Got exception as expected: \" + e);\n+            LOG.debug(\"Got exception as expected\", e);\n         }\n     }\n "
    },
    {
        "commit_id": "11c07921c15e2fb7692375327b53f26a583b77ca",
        "commit_message": "ZOOKEEPER-3509: Revisit log format\n\n1. Always wrap `.trace` with `isTraceEnabled`. It is because that some of trace calls are a bit complex.\n2. Never wrap other levels with `isXXXEnabled`. Logger already checks log level and we don't make side effect or expensive operation in log statement.\n3. Always use `{}` instead of string concatenation or `String.format`. Just for unification and it is what is recommended.\n4. Always log throwable in warn or error level or debug if omit\n5. Always log throwable as the last arg and never log `throwable.getMessage` since Logger already log stack trace.\n\nAuthor: tison <wander4096@gmail.com>\n\nReviewers: enixon@apache.org, andor@apache.org\n\nCloses #1100 from TisonKun/ZOOKEEPER-3509 and squashes the following commits:\n\n0c3a4ded8 [tison] Address comment\ndcb68eb61 [tison] ZOOKEEPER-3509: Revisit log format",
        "commit_url": "https://github.com/apache/zookeeper/commit/11c07921c15e2fb7692375327b53f26a583b77ca",
        "buggy_code": "LOG.info(\"Got exception as expected: \" + e);",
        "fixed_code": "LOG.debug(\"Got exception as expected\", e);",
        "patch": "@@ -71,7 +71,7 @@ public void testAuth() throws Exception {\n             fail(\"Should have gotten exception.\");\n         } catch (KeeperException e) {\n             // ok, exception as expected.\n-            LOG.info(\"Got exception as expected: \" + e);\n+            LOG.debug(\"Got exception as expected\", e);\n         } finally {\n             zk.close();\n         }"
    },
    {
        "commit_id": "9fa18ab0e1ce07b3cc61e8758e27d393253b81fb",
        "commit_message": "ZOOKEEPER-3470: fix flaky LearnerMetricsTest\n\nThis PR is about fixing the flaky unit test: `LearnerMetricsTest`.\nThe code changes are:\n- Replacing the `Thread.sleep(200)` with polling the metrics until the assertion succeed or timeout (this seems help in some flaky scenario)\n- Fixing the `ZKTestCase.waitFor` method\n- We are also logging the 0 millisec latency values now on the server side. We calculate these latency values between different hosts (as the difference between the server wall time and the wall time in the request header), so 0 values are possible. And in case of unittests (where all the hosts are using the same clock) it can happen relatively frequently. This situation also caused some of the flakiness. In the previous implementation the 0 latency values were not counted, so the assertion on these counters values were failing in the end of the testcase.\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\n\nReviewers: eolivelli@apache.org, andor@apache.org\n\nCloses #1040 from symat/ZOOKEEPER-3470 and squashes the following commits:\n\n65a8b5795 [Mate Szalay-Beko] ZOOKEEPER-3470: implement PR comments\n7fdf78041 [Mate Szalay-Beko] ZOOKEEPER-3470: fix flaky LearnerMetricsTest",
        "commit_url": "https://github.com/apache/zookeeper/commit/9fa18ab0e1ce07b3cc61e8758e27d393253b81fb",
        "buggy_code": "if (propagationLatency > 0) {",
        "fixed_code": "if (propagationLatency >= 0) {",
        "patch": "@@ -170,7 +170,7 @@ public void processRequest(Request request) {\n              * CLOCK_MONOTONIC.\n              */\n             long propagationLatency = Time.currentWallTime() - request.getHdr().getTime();\n-            if (propagationLatency > 0) {\n+            if (propagationLatency >= 0) {\n                 ServerMetrics.getMetrics().PROPAGATION_LATENCY.add(propagationLatency);\n             }\n         }"
    },
    {
        "commit_id": "9fa18ab0e1ce07b3cc61e8758e27d393253b81fb",
        "commit_message": "ZOOKEEPER-3470: fix flaky LearnerMetricsTest\n\nThis PR is about fixing the flaky unit test: `LearnerMetricsTest`.\nThe code changes are:\n- Replacing the `Thread.sleep(200)` with polling the metrics until the assertion succeed or timeout (this seems help in some flaky scenario)\n- Fixing the `ZKTestCase.waitFor` method\n- We are also logging the 0 millisec latency values now on the server side. We calculate these latency values between different hosts (as the difference between the server wall time and the wall time in the request header), so 0 values are possible. And in case of unittests (where all the hosts are using the same clock) it can happen relatively frequently. This situation also caused some of the flakiness. In the previous implementation the 0 latency values were not counted, so the assertion on these counters values were failing in the end of the testcase.\n\nAuthor: Mate Szalay-Beko <szalay.beko.mate@gmail.com>\n\nReviewers: eolivelli@apache.org, andor@apache.org\n\nCloses #1040 from symat/ZOOKEEPER-3470 and squashes the following commits:\n\n65a8b5795 [Mate Szalay-Beko] ZOOKEEPER-3470: implement PR comments\n7fdf78041 [Mate Szalay-Beko] ZOOKEEPER-3470: fix flaky LearnerMetricsTest",
        "commit_url": "https://github.com/apache/zookeeper/commit/9fa18ab0e1ce07b3cc61e8758e27d393253b81fb",
        "buggy_code": "if (latency > 0) {",
        "fixed_code": "if (latency >= 0) {",
        "patch": "@@ -169,7 +169,7 @@ protected void processPacket(QuorumPacket qp) throws Exception{\n                  */\n                 long now = Time.currentWallTime();\n                 long latency = now - hdr.getTime();\n-                if (latency > 0) {\n+                if (latency >= 0) {\n                     ServerMetrics.getMetrics().PROPOSAL_LATENCY.add(latency);\n                 }\n             }"
    },
    {
        "commit_id": "6281a8693c287fadca72321178023ee78cf9c818",
        "commit_message": "ZOOKEEPER-3386: Add admin command to display voting view\n\nAuthor: Brian Nixon <nixon@fb.com>\n\nReviewers: maoling <maoling199210191@sina.com>, Enrico Olivelli <eolivelli@apache.org>, Andor Molnar <andor@apache.org>\n\nCloses #940 from enixon/cmd-vote and squashes the following commits:\n\n466394264 [Brian Nixon] fix serialization logic of VotingView\n98413e38c [Brian Nixon] add getter to VotingView for serialization\nb22ccc61a [Brian Nixon] introduce a static form for voting view\n6a19ed178 [Brian Nixon] ZOOKEEPER-3386: Add admin command to display voting view",
        "commit_url": "https://github.com/apache/zookeeper/commit/6281a8693c287fadca72321178023ee78cf9c818",
        "buggy_code": "private static String delimitedHostString(InetSocketAddress addr)",
        "fixed_code": "public static String delimitedHostString(InetSocketAddress addr)",
        "patch": "@@ -319,7 +319,7 @@ private void setMyAddrs() {\n             this.myAddrs = excludedSpecialAddresses(this.myAddrs);\n         }\n \n-        private static String delimitedHostString(InetSocketAddress addr)\n+        public static String delimitedHostString(InetSocketAddress addr)\n         {\n             String host = addr.getHostString();\n             if (host.contains(\":\")) {"
    },
    {
        "commit_id": "43ce772db000721546fcd13dd8523002dfa97741",
        "commit_message": "ZOOKEEPER-3398: Learner.connectToLeader() may take too long to time-out\n\nAfter leader election happens, the followers will connect to the leader which is facilitated by the Learner.connectToLeader() method.\n\nLearner.connectToLeader() is relying on the initLimit configuration value to time-out in case the network connection is unreliable. This config may have a high value that could leave the ensemble retrying and waiting in the state of not having quorum for too long. The follower will retry up to 5 times.\n\nThis patch introduces a new configuration directive that will allow Zookeeper to use different time-out value `connectToLeaderLimit` which then could be set to lower value than `initLimit`.\n\nTest plan:\n- ant clean\n- ant test-core-java\n\nNOTE: Lots of whitespace changes, hope it helps.\n\nAuthor: Vladimir Ivic <vladimir.ivic@me.com>\n\nReviewers: eolivelli@apache.org, hanm@apache.org, andor@apache.org\n\nCloses #953 from vladimirivic/ZOOKEEPER-3398 and squashes the following commits:\n\nda4ecd055 [Vladimir Ivic] Removed redundant test, chaning LearnerTest.connectToLearnerMasterLimitTest() params and assertions\n6c413311c [Vladimir Ivic] Updating the tests with the new timeout parameter\n5a89cbd7e [Vladimir Ivic] Rewriting timeout logic inside Leader.connectToLeader\n99c065616 [Vladimir Ivic] Adding config connectToLearnerMasterLimit to prevent long connect timeout",
        "commit_url": "https://github.com/apache/zookeeper/commit/43ce772db000721546fcd13dd8523002dfa97741",
        "buggy_code": "PortAssignment.unique(), 3, 3, 1000, 2, 2);",
        "fixed_code": "PortAssignment.unique(), 3, 3, 1000, 2, 2, 2);",
        "patch": "@@ -52,7 +52,7 @@ public void setUp() throws Exception {\n                     new InetSocketAddress(\"127.0.0.1\", PortAssignment.unique())));\n         }\n         QuorumPeer peer = new QuorumPeer(peers, tmpdir, tmpdir, \n-                PortAssignment.unique(), 3, 3, 1000, 2, 2);\n+                PortAssignment.unique(), 3, 3, 1000, 2, 2, 2);\n         fle = new FastLeaderElection(peer, peer.createCnxnManager());\n     }\n "
    },
    {
        "commit_id": "43ce772db000721546fcd13dd8523002dfa97741",
        "commit_message": "ZOOKEEPER-3398: Learner.connectToLeader() may take too long to time-out\n\nAfter leader election happens, the followers will connect to the leader which is facilitated by the Learner.connectToLeader() method.\n\nLearner.connectToLeader() is relying on the initLimit configuration value to time-out in case the network connection is unreliable. This config may have a high value that could leave the ensemble retrying and waiting in the state of not having quorum for too long. The follower will retry up to 5 times.\n\nThis patch introduces a new configuration directive that will allow Zookeeper to use different time-out value `connectToLeaderLimit` which then could be set to lower value than `initLimit`.\n\nTest plan:\n- ant clean\n- ant test-core-java\n\nNOTE: Lots of whitespace changes, hope it helps.\n\nAuthor: Vladimir Ivic <vladimir.ivic@me.com>\n\nReviewers: eolivelli@apache.org, hanm@apache.org, andor@apache.org\n\nCloses #953 from vladimirivic/ZOOKEEPER-3398 and squashes the following commits:\n\nda4ecd055 [Vladimir Ivic] Removed redundant test, chaning LearnerTest.connectToLearnerMasterLimitTest() params and assertions\n6c413311c [Vladimir Ivic] Updating the tests with the new timeout parameter\n5a89cbd7e [Vladimir Ivic] Rewriting timeout logic inside Leader.connectToLeader\n99c065616 [Vladimir Ivic] Adding config connectToLearnerMasterLimit to prevent long connect timeout",
        "commit_url": "https://github.com/apache/zookeeper/commit/43ce772db000721546fcd13dd8523002dfa97741",
        "buggy_code": "PortAssignment.unique(), 3, 0, 1000, 2, 2);",
        "fixed_code": "PortAssignment.unique(), 3, 0, 1000, 2, 2, 2);",
        "patch": "@@ -75,7 +75,7 @@ public void testPredicate() throws IOException {\n         try{\n             File tmpDir = ClientBase.createTmpDir();\n             QuorumPeer peer = new QuorumPeer(peers, tmpDir, tmpDir,\n-                                        PortAssignment.unique(), 3, 0, 1000, 2, 2);\n+                                        PortAssignment.unique(), 3, 0, 1000, 2, 2, 2);\n         \n             MockFLE mock = new MockFLE(peer);\n             mock.start();"
    },
    {
        "commit_id": "43ce772db000721546fcd13dd8523002dfa97741",
        "commit_message": "ZOOKEEPER-3398: Learner.connectToLeader() may take too long to time-out\n\nAfter leader election happens, the followers will connect to the leader which is facilitated by the Learner.connectToLeader() method.\n\nLearner.connectToLeader() is relying on the initLimit configuration value to time-out in case the network connection is unreliable. This config may have a high value that could leave the ensemble retrying and waiting in the state of not having quorum for too long. The follower will retry up to 5 times.\n\nThis patch introduces a new configuration directive that will allow Zookeeper to use different time-out value `connectToLeaderLimit` which then could be set to lower value than `initLimit`.\n\nTest plan:\n- ant clean\n- ant test-core-java\n\nNOTE: Lots of whitespace changes, hope it helps.\n\nAuthor: Vladimir Ivic <vladimir.ivic@me.com>\n\nReviewers: eolivelli@apache.org, hanm@apache.org, andor@apache.org\n\nCloses #953 from vladimirivic/ZOOKEEPER-3398 and squashes the following commits:\n\nda4ecd055 [Vladimir Ivic] Removed redundant test, chaning LearnerTest.connectToLearnerMasterLimitTest() params and assertions\n6c413311c [Vladimir Ivic] Updating the tests with the new timeout parameter\n5a89cbd7e [Vladimir Ivic] Rewriting timeout logic inside Leader.connectToLeader\n99c065616 [Vladimir Ivic] Adding config connectToLearnerMasterLimit to prevent long connect timeout",
        "commit_url": "https://github.com/apache/zookeeper/commit/43ce772db000721546fcd13dd8523002dfa97741",
        "buggy_code": "QuorumPeer peer = new QuorumPeer(peers, tmpdir[i], tmpdir[i], port[i], 3, i, 1000, 2, 2, hq);",
        "fixed_code": "QuorumPeer peer = new QuorumPeer(peers, tmpdir[i], tmpdir[i], port[i], 3, i, 1000, 2, 2, 2, hq);",
        "patch": "@@ -154,7 +154,7 @@ public void testZeroWeightQuorum() throws Exception {\n \n         for(int i = 0; i < count; i++) {\n             QuorumHierarchical hq = new QuorumHierarchical(qp);\n-            QuorumPeer peer = new QuorumPeer(peers, tmpdir[i], tmpdir[i], port[i], 3, i, 1000, 2, 2, hq);\n+            QuorumPeer peer = new QuorumPeer(peers, tmpdir[i], tmpdir[i], port[i], 3, i, 1000, 2, 2, 2, hq);\n             peer.startLeaderElection();\n             LEThread thread = new LEThread(peer, i);\n             thread.start();"
    },
    {
        "commit_id": "6af151a7e44760c33165e58d3b33a4d2760283a4",
        "commit_message": "ZOOKEEPER-3366: Pluggable metrics system for ZooKeeper - move remaining metrics to MetricsProvider\n\nMigrate all remaining metrics to MetricsProvider.\nWe are introducing now *Gauges* which are callbacks to be called when the Provider needs to publish current values, a Gauge is a numeric value that can go up and down.\n\nAs during the lifecycle of a ZK server process we can have several ZooKeeperServer instances (we have several subclasses), depending on the role of the local peer, sometimes we have to clean up unused Gauges.\nThe old approach  in 4lw and on http admin  API was to hard code metrics, with multiple 'instanceof' conditions.\nSo we introduce ZooKeeperServer#registerMetrics and ZooKeeperServer#unregisterMetrics: these overridable functions enable each  ZooKeeperServer subclass to declare specific Gauges.\nWe are also introducing ZooKeeperServer#collectMonitorValues in order to push non-metrics to monitor commands (admin and 4lw), like \"server state\" or \"version\".\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: Norbert Kalmar <nkalmar@apache.org>\n\nCloses #918 from eolivelli/fix/other-metrics",
        "commit_url": "https://github.com/apache/zookeeper/commit/6af151a7e44760c33165e58d3b33a4d2760283a4",
        "buggy_code": "long get();",
        "fixed_code": "Number get();",
        "patch": "@@ -31,5 +31,5 @@ public interface Gauge {\n      *\n      * @return the current value for the gauge\n      */\n-    long get();\n+    Number get();\n }"
    },
    {
        "commit_id": "bb94aa44de61bfb2ecd5bbd12b4eb390c2cf39c1",
        "commit_message": "ZOOKEEPER-3401: Fix metric PROPOSAL_ACK_CREATION_LATENCY\n\nAuthor: Jie Huang <jiehuang@fb.com>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>, Norbert Kalmar <nkalmar@apache.org>\n\nCloses #957 from jhuan31/ZOOKEEPER-3401",
        "commit_url": "https://github.com/apache/zookeeper/commit/bb94aa44de61bfb2ecd5bbd12b4eb390c2cf39c1",
        "buggy_code": "Assert.assertEquals(8L, values.get(\"cnt_proposal_ack_creation_latency\"));",
        "fixed_code": "Assert.assertEquals(10L, values.get(\"cnt_proposal_ack_creation_latency\"));",
        "patch": "@@ -81,7 +81,7 @@ public void testLearnerMetricsTest() throws Exception {\n         Assert.assertEquals(8L, values.get(\"learner_proposal_received_count\"));\n         Assert.assertEquals(8L, values.get(\"cnt_proposal_latency\"));\n         Assert.assertThat((long)values.get(\"min_proposal_latency\"), greaterThan(0L));\n-        Assert.assertEquals(8L, values.get(\"cnt_proposal_ack_creation_latency\"));\n+        Assert.assertEquals(10L, values.get(\"cnt_proposal_ack_creation_latency\"));\n         Assert.assertThat((long)values.get(\"min_proposal_ack_creation_latency\"), greaterThan(0L));\n \n         // there are five learners, each received two commits, one for leader election, one for the create request"
    },
    {
        "commit_id": "999c834714aba859a96ba32d02e66fb63e70ab35",
        "commit_message": "ZOOKEEPER-3364: Compile with strict options in order to check code quality\n\n- Add extra compiler arguments in order to achieve better code quality.\n- Fix some minor issues reported by javac\n- Extra checks are not enabled in \"contrib\" module.\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: andor@apache.org\n\nCloses #910 from eolivelli/fix/ZOOKEEPER-3364-javac-strict and squashes the following commits:\n\n9660aff82 [Enrico Olivelli] Fix tests and fix warnings on JDK12\n52895ec9d [Enrico Olivelli] ZOOKEEPER-3364 Compile with strict options in order to check code quality",
        "commit_url": "https://github.com/apache/zookeeper/commit/999c834714aba859a96ba32d02e66fb63e70ab35",
        "buggy_code": "Long longLeader = new Long(leader);",
        "fixed_code": "Long longLeader = Long.valueOf(leader);",
        "patch": "@@ -871,7 +871,7 @@ public void testFailedTxnAsPartOfQuorumLoss() throws Exception {\n \n         // make sure it has a chance to write it to disk\n         int sleepTime = 0;\n-        Long longLeader = new Long(leader);\n+        Long longLeader = Long.valueOf(leader);\n         while (!p.qvAcksetPairs.get(0).getAckset().contains(longLeader)) {\n             if (sleepTime > 2000) {\n                 Assert.fail(\"Transaction not synced to disk within 1 second \" + p.qvAcksetPairs.get(0).getAckset()"
    },
    {
        "commit_id": "999c834714aba859a96ba32d02e66fb63e70ab35",
        "commit_message": "ZOOKEEPER-3364: Compile with strict options in order to check code quality\n\n- Add extra compiler arguments in order to achieve better code quality.\n- Fix some minor issues reported by javac\n- Extra checks are not enabled in \"contrib\" module.\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: andor@apache.org\n\nCloses #910 from eolivelli/fix/ZOOKEEPER-3364-javac-strict and squashes the following commits:\n\n9660aff82 [Enrico Olivelli] Fix tests and fix warnings on JDK12\n52895ec9d [Enrico Olivelli] ZOOKEEPER-3364 Compile with strict options in order to check code quality",
        "commit_url": "https://github.com/apache/zookeeper/commit/999c834714aba859a96ba32d02e66fb63e70ab35",
        "buggy_code": "Integer bit = new Integer(1);",
        "fixed_code": "Integer bit = 1;",
        "patch": "@@ -49,7 +49,7 @@ public void testBitSet() {\n         WatcherOrBitSet bitSet = new WatcherOrBitSet(bset);\n         Assert.assertEquals(0, bitSet.size());\n \n-        Integer bit = new Integer(1);\n+        Integer bit = 1;\n         Assert.assertFalse(bitSet.contains(1));\n         Assert.assertFalse(bitSet.contains(bit));\n "
    },
    {
        "commit_id": "999c834714aba859a96ba32d02e66fb63e70ab35",
        "commit_message": "ZOOKEEPER-3364: Compile with strict options in order to check code quality\n\n- Add extra compiler arguments in order to achieve better code quality.\n- Fix some minor issues reported by javac\n- Extra checks are not enabled in \"contrib\" module.\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: andor@apache.org\n\nCloses #910 from eolivelli/fix/ZOOKEEPER-3364-javac-strict and squashes the following commits:\n\n9660aff82 [Enrico Olivelli] Fix tests and fix warnings on JDK12\n52895ec9d [Enrico Olivelli] ZOOKEEPER-3364 Compile with strict options in order to check code quality",
        "commit_url": "https://github.com/apache/zookeeper/commit/999c834714aba859a96ba32d02e66fb63e70ab35",
        "buggy_code": "public Timeout timeout = new Timeout(30000);",
        "fixed_code": "public Timeout timeout = Timeout.millis(30000);",
        "patch": "@@ -44,7 +44,7 @@ public class FourLetterWordsTest extends ClientBase {\n         LoggerFactory.getLogger(FourLetterWordsTest.class);\n \n     @Rule\n-    public Timeout timeout = new Timeout(30000);\n+    public Timeout timeout = Timeout.millis(30000);\n \n     /** Test the various four letter words */\n     @Test"
    },
    {
        "commit_id": "999c834714aba859a96ba32d02e66fb63e70ab35",
        "commit_message": "ZOOKEEPER-3364: Compile with strict options in order to check code quality\n\n- Add extra compiler arguments in order to achieve better code quality.\n- Fix some minor issues reported by javac\n- Extra checks are not enabled in \"contrib\" module.\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: andor@apache.org\n\nCloses #910 from eolivelli/fix/ZOOKEEPER-3364-javac-strict and squashes the following commits:\n\n9660aff82 [Enrico Olivelli] Fix tests and fix warnings on JDK12\n52895ec9d [Enrico Olivelli] ZOOKEEPER-3364 Compile with strict options in order to check code quality",
        "commit_url": "https://github.com/apache/zookeeper/commit/999c834714aba859a96ba32d02e66fb63e70ab35",
        "buggy_code": "(new Integer(tokens[1])).intValue() + 1);",
        "fixed_code": "(Integer.parseInt(tokens[1])) + 1);",
        "patch": "@@ -179,7 +179,7 @@ public void testRestore() throws Exception {\n         String[] tokens = lastPath.split(\"-\");\n         String expectedPath = \"/invalidsnap/test-\"\n                 + String.format(\"%010d\",\n-                (new Integer(tokens[1])).intValue() + 1);\n+                (Integer.parseInt(tokens[1])) + 1);\n         ZooKeeperServer zks = getServer(serverFactory);\n         long eZxid = zks.getZKDatabase().getDataTreeLastProcessedZxid();\n         // force the zxid to be behind the content"
    },
    {
        "commit_id": "f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "commit_message": "ZOOKEEPER-3143: Pluggable metrics system for ZooKeeper - Data Collection on Server\n\n- Make ServerMetrics a class, not an enum.\n- Make ServerMetrics use MetricsProvider\n- After the bootstrap of the MetricsProvider reconfigure ServerMetrics in order to push data to the provider.\n- Introduce a default implementation of MetricsProvider, based on current implementation\n- Change MetricsContext interface in order to support several types of Metrics, in order to cover current metrics facilities,\n\nThe MetricsProvider API will allow ZooKeeper users to integrate ZooKeeper with other metrics systems, like Prometheus.io/Dropwizard.....\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #854 from eolivelli/fix/metrics-provider-port-static and squashes the following commits:\n\nc5714ee66 [Enrico Olivelli] Fix dump and reset for SummarySets\ned6230e51 [Enrico Olivelli] Fix build\n8e8d87bdd [Enrico Olivelli] Merge branch 'master' into fix/metrics-provider-port-static\n02722b55b [Enrico Olivelli] Fix tests\n7ebc091e6 [Enrico Olivelli] Use toString in Monitor Command\n49a5c801a [Enrico Olivelli] Add Metrics to 4lw interface - mntr command\n137bda23a [Enrico Olivelli] A few nits\n80396915f [Enrico Olivelli] Introduce MetricsUtils\n9f28747bc [Enrico Olivelli] Fix after merge master\ne380607ae [Enrico Olivelli] Fix imports\nc2d0c358c [Enrico Olivelli] Introduce SummarySet\n4674d2350 [Enrico Olivelli] Fix trailing spaces\n6580b4a53 [Enrico Olivelli] Use a global static variable\nad8d44241 [Enrico Olivelli] Make DefaultMetricsProvider the default\nd455a1c8c [Enrico Olivelli] Fix test\nf997c30f3 [Enrico Olivelli] Fix spotbugs\n228c1d268 [Enrico Olivelli] ZOOKEEPER-3143 Pluggable metrics system for ZooKeeper - Data Collection on Server",
        "commit_url": "https://github.com/apache/zookeeper/commit/f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "buggy_code": "void registerValue(long value);",
        "fixed_code": "void add(long value);",
        "patch": "@@ -30,6 +30,6 @@ public interface Summary {\n       *\n       * @param value current value\n       */\n-     void registerValue(long value);\n+     void add(long value);\n \n }"
    },
    {
        "commit_id": "f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "commit_message": "ZOOKEEPER-3143: Pluggable metrics system for ZooKeeper - Data Collection on Server\n\n- Make ServerMetrics a class, not an enum.\n- Make ServerMetrics use MetricsProvider\n- After the bootstrap of the MetricsProvider reconfigure ServerMetrics in order to push data to the provider.\n- Introduce a default implementation of MetricsProvider, based on current implementation\n- Change MetricsContext interface in order to support several types of Metrics, in order to cover current metrics facilities,\n\nThe MetricsProvider API will allow ZooKeeper users to integrate ZooKeeper with other metrics systems, like Prometheus.io/Dropwizard.....\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #854 from eolivelli/fix/metrics-provider-port-static and squashes the following commits:\n\nc5714ee66 [Enrico Olivelli] Fix dump and reset for SummarySets\ned6230e51 [Enrico Olivelli] Fix build\n8e8d87bdd [Enrico Olivelli] Merge branch 'master' into fix/metrics-provider-port-static\n02722b55b [Enrico Olivelli] Fix tests\n7ebc091e6 [Enrico Olivelli] Use toString in Monitor Command\n49a5c801a [Enrico Olivelli] Add Metrics to 4lw interface - mntr command\n137bda23a [Enrico Olivelli] A few nits\n80396915f [Enrico Olivelli] Introduce MetricsUtils\n9f28747bc [Enrico Olivelli] Fix after merge master\ne380607ae [Enrico Olivelli] Fix imports\nc2d0c358c [Enrico Olivelli] Introduce SummarySet\n4674d2350 [Enrico Olivelli] Fix trailing spaces\n6580b4a53 [Enrico Olivelli] Use a global static variable\nad8d44241 [Enrico Olivelli] Make DefaultMetricsProvider the default\nd455a1c8c [Enrico Olivelli] Fix test\nf997c30f3 [Enrico Olivelli] Fix spotbugs\n228c1d268 [Enrico Olivelli] ZOOKEEPER-3143 Pluggable metrics system for ZooKeeper - Data Collection on Server",
        "commit_url": "https://github.com/apache/zookeeper/commit/f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "buggy_code": "ServerMetrics.PROPAGATION_LATENCY.add(propagationLatency);",
        "fixed_code": "ServerMetrics.getMetrics().PROPAGATION_LATENCY.add(propagationLatency);",
        "patch": "@@ -168,7 +168,7 @@ public void processRequest(Request request) {\n              */\n             long propagationLatency = Time.currentWallTime() - request.getHdr().getTime();\n             if (propagationLatency > 0) {\n-                ServerMetrics.PROPAGATION_LATENCY.add(propagationLatency);\n+                ServerMetrics.getMetrics().PROPAGATION_LATENCY.add(propagationLatency);\n             }\n         }\n "
    },
    {
        "commit_id": "f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "commit_message": "ZOOKEEPER-3143: Pluggable metrics system for ZooKeeper - Data Collection on Server\n\n- Make ServerMetrics a class, not an enum.\n- Make ServerMetrics use MetricsProvider\n- After the bootstrap of the MetricsProvider reconfigure ServerMetrics in order to push data to the provider.\n- Introduce a default implementation of MetricsProvider, based on current implementation\n- Change MetricsContext interface in order to support several types of Metrics, in order to cover current metrics facilities,\n\nThe MetricsProvider API will allow ZooKeeper users to integrate ZooKeeper with other metrics systems, like Prometheus.io/Dropwizard.....\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #854 from eolivelli/fix/metrics-provider-port-static and squashes the following commits:\n\nc5714ee66 [Enrico Olivelli] Fix dump and reset for SummarySets\ned6230e51 [Enrico Olivelli] Fix build\n8e8d87bdd [Enrico Olivelli] Merge branch 'master' into fix/metrics-provider-port-static\n02722b55b [Enrico Olivelli] Fix tests\n7ebc091e6 [Enrico Olivelli] Use toString in Monitor Command\n49a5c801a [Enrico Olivelli] Add Metrics to 4lw interface - mntr command\n137bda23a [Enrico Olivelli] A few nits\n80396915f [Enrico Olivelli] Introduce MetricsUtils\n9f28747bc [Enrico Olivelli] Fix after merge master\ne380607ae [Enrico Olivelli] Fix imports\nc2d0c358c [Enrico Olivelli] Introduce SummarySet\n4674d2350 [Enrico Olivelli] Fix trailing spaces\n6580b4a53 [Enrico Olivelli] Use a global static variable\nad8d44241 [Enrico Olivelli] Make DefaultMetricsProvider the default\nd455a1c8c [Enrico Olivelli] Fix test\nf997c30f3 [Enrico Olivelli] Fix spotbugs\n228c1d268 [Enrico Olivelli] ZOOKEEPER-3143 Pluggable metrics system for ZooKeeper - Data Collection on Server",
        "commit_url": "https://github.com/apache/zookeeper/commit/f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "buggy_code": "ServerMetrics.CONNECTION_REJECTED.add(1);",
        "fixed_code": "ServerMetrics.getMetrics().CONNECTION_REJECTED.add(1);",
        "patch": "@@ -362,7 +362,7 @@ void doIO(SelectionKey k) throws InterruptedException {\n             close();\n         } catch (ClientCnxnLimitException e) {\n             // Common case exception, print at debug level\n-            ServerMetrics.CONNECTION_REJECTED.add(1);\n+            ServerMetrics.getMetrics().CONNECTION_REJECTED.add(1);\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Exception causing close of session 0x\"\n                           + Long.toHexString(sessionId) + \": \" + e.getMessage());"
    },
    {
        "commit_id": "f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "commit_message": "ZOOKEEPER-3143: Pluggable metrics system for ZooKeeper - Data Collection on Server\n\n- Make ServerMetrics a class, not an enum.\n- Make ServerMetrics use MetricsProvider\n- After the bootstrap of the MetricsProvider reconfigure ServerMetrics in order to push data to the provider.\n- Introduce a default implementation of MetricsProvider, based on current implementation\n- Change MetricsContext interface in order to support several types of Metrics, in order to cover current metrics facilities,\n\nThe MetricsProvider API will allow ZooKeeper users to integrate ZooKeeper with other metrics systems, like Prometheus.io/Dropwizard.....\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #854 from eolivelli/fix/metrics-provider-port-static and squashes the following commits:\n\nc5714ee66 [Enrico Olivelli] Fix dump and reset for SummarySets\ned6230e51 [Enrico Olivelli] Fix build\n8e8d87bdd [Enrico Olivelli] Merge branch 'master' into fix/metrics-provider-port-static\n02722b55b [Enrico Olivelli] Fix tests\n7ebc091e6 [Enrico Olivelli] Use toString in Monitor Command\n49a5c801a [Enrico Olivelli] Add Metrics to 4lw interface - mntr command\n137bda23a [Enrico Olivelli] A few nits\n80396915f [Enrico Olivelli] Introduce MetricsUtils\n9f28747bc [Enrico Olivelli] Fix after merge master\ne380607ae [Enrico Olivelli] Fix imports\nc2d0c358c [Enrico Olivelli] Introduce SummarySet\n4674d2350 [Enrico Olivelli] Fix trailing spaces\n6580b4a53 [Enrico Olivelli] Use a global static variable\nad8d44241 [Enrico Olivelli] Make DefaultMetricsProvider the default\nd455a1c8c [Enrico Olivelli] Fix test\nf997c30f3 [Enrico Olivelli] Fix spotbugs\n228c1d268 [Enrico Olivelli] ZOOKEEPER-3143 Pluggable metrics system for ZooKeeper - Data Collection on Server",
        "commit_url": "https://github.com/apache/zookeeper/commit/f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "buggy_code": "ServerMetrics.CONNECTION_REJECTED.add(1);",
        "fixed_code": "ServerMetrics.getMetrics().CONNECTION_REJECTED.add(1);",
        "patch": "@@ -310,7 +310,7 @@ private boolean doAccept() {\n                 acceptErrorLogger.flush();\n             } catch (IOException e) {\n                 // accept, maxClientCnxns, configureBlocking\n-                ServerMetrics.CONNECTION_REJECTED.add(1);\n+                ServerMetrics.getMetrics().CONNECTION_REJECTED.add(1);\n                 acceptErrorLogger.rateLimitLog(\n                     \"Error accepting new connection: \" + e.getMessage());\n                 fastCloseSock(sc);"
    },
    {
        "commit_id": "f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "commit_message": "ZOOKEEPER-3143: Pluggable metrics system for ZooKeeper - Data Collection on Server\n\n- Make ServerMetrics a class, not an enum.\n- Make ServerMetrics use MetricsProvider\n- After the bootstrap of the MetricsProvider reconfigure ServerMetrics in order to push data to the provider.\n- Introduce a default implementation of MetricsProvider, based on current implementation\n- Change MetricsContext interface in order to support several types of Metrics, in order to cover current metrics facilities,\n\nThe MetricsProvider API will allow ZooKeeper users to integrate ZooKeeper with other metrics systems, like Prometheus.io/Dropwizard.....\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #854 from eolivelli/fix/metrics-provider-port-static and squashes the following commits:\n\nc5714ee66 [Enrico Olivelli] Fix dump and reset for SummarySets\ned6230e51 [Enrico Olivelli] Fix build\n8e8d87bdd [Enrico Olivelli] Merge branch 'master' into fix/metrics-provider-port-static\n02722b55b [Enrico Olivelli] Fix tests\n7ebc091e6 [Enrico Olivelli] Use toString in Monitor Command\n49a5c801a [Enrico Olivelli] Add Metrics to 4lw interface - mntr command\n137bda23a [Enrico Olivelli] A few nits\n80396915f [Enrico Olivelli] Introduce MetricsUtils\n9f28747bc [Enrico Olivelli] Fix after merge master\ne380607ae [Enrico Olivelli] Fix imports\nc2d0c358c [Enrico Olivelli] Introduce SummarySet\n4674d2350 [Enrico Olivelli] Fix trailing spaces\n6580b4a53 [Enrico Olivelli] Use a global static variable\nad8d44241 [Enrico Olivelli] Make DefaultMetricsProvider the default\nd455a1c8c [Enrico Olivelli] Fix test\nf997c30f3 [Enrico Olivelli] Fix spotbugs\n228c1d268 [Enrico Olivelli] ZOOKEEPER-3143 Pluggable metrics system for ZooKeeper - Data Collection on Server",
        "commit_url": "https://github.com/apache/zookeeper/commit/f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "buggy_code": "ServerMetrics.CONNECTION_REJECTED.add(1);",
        "fixed_code": "ServerMetrics.getMetrics().CONNECTION_REJECTED.add(1);",
        "patch": "@@ -531,7 +531,7 @@ private void receiveMessage(ByteBuf message) {\n             close();\n         } catch(ClientCnxnLimitException e) {\n             // Common case exception, print at debug level\n-            ServerMetrics.CONNECTION_REJECTED.add(1);\n+            ServerMetrics.getMetrics().CONNECTION_REJECTED.add(1);\n             if (LOG.isDebugEnabled()) {\n                 LOG.debug(\"Closing connection to \" + getRemoteSocketAddress(), e);\n             }"
    },
    {
        "commit_id": "f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "commit_message": "ZOOKEEPER-3143: Pluggable metrics system for ZooKeeper - Data Collection on Server\n\n- Make ServerMetrics a class, not an enum.\n- Make ServerMetrics use MetricsProvider\n- After the bootstrap of the MetricsProvider reconfigure ServerMetrics in order to push data to the provider.\n- Introduce a default implementation of MetricsProvider, based on current implementation\n- Change MetricsContext interface in order to support several types of Metrics, in order to cover current metrics facilities,\n\nThe MetricsProvider API will allow ZooKeeper users to integrate ZooKeeper with other metrics systems, like Prometheus.io/Dropwizard.....\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #854 from eolivelli/fix/metrics-provider-port-static and squashes the following commits:\n\nc5714ee66 [Enrico Olivelli] Fix dump and reset for SummarySets\ned6230e51 [Enrico Olivelli] Fix build\n8e8d87bdd [Enrico Olivelli] Merge branch 'master' into fix/metrics-provider-port-static\n02722b55b [Enrico Olivelli] Fix tests\n7ebc091e6 [Enrico Olivelli] Use toString in Monitor Command\n49a5c801a [Enrico Olivelli] Add Metrics to 4lw interface - mntr command\n137bda23a [Enrico Olivelli] A few nits\n80396915f [Enrico Olivelli] Introduce MetricsUtils\n9f28747bc [Enrico Olivelli] Fix after merge master\ne380607ae [Enrico Olivelli] Fix imports\nc2d0c358c [Enrico Olivelli] Introduce SummarySet\n4674d2350 [Enrico Olivelli] Fix trailing spaces\n6580b4a53 [Enrico Olivelli] Use a global static variable\nad8d44241 [Enrico Olivelli] Make DefaultMetricsProvider the default\nd455a1c8c [Enrico Olivelli] Fix test\nf997c30f3 [Enrico Olivelli] Fix spotbugs\n228c1d268 [Enrico Olivelli] ZOOKEEPER-3143 Pluggable metrics system for ZooKeeper - Data Collection on Server",
        "commit_url": "https://github.com/apache/zookeeper/commit/f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "buggy_code": "ServerMetrics.CONNECTION_REJECTED.add(1);",
        "fixed_code": "ServerMetrics.getMetrics().CONNECTION_REJECTED.add(1);",
        "patch": "@@ -109,7 +109,7 @@ public void channelActive(ChannelHandlerContext ctx) throws Exception {\n             InetAddress addr = ((InetSocketAddress) channel.remoteAddress())\n                     .getAddress();\n             if (maxClientCnxns > 0 && getClientCnxnCount(addr) >= maxClientCnxns) {\n-                ServerMetrics.CONNECTION_REJECTED.add(1);\n+                ServerMetrics.getMetrics().CONNECTION_REJECTED.add(1);\n                 LOG.warn(\"Too many connections from {} - max is {}\", addr,\n                         maxClientCnxns);\n                 channel.close();"
    },
    {
        "commit_id": "f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "commit_message": "ZOOKEEPER-3143: Pluggable metrics system for ZooKeeper - Data Collection on Server\n\n- Make ServerMetrics a class, not an enum.\n- Make ServerMetrics use MetricsProvider\n- After the bootstrap of the MetricsProvider reconfigure ServerMetrics in order to push data to the provider.\n- Introduce a default implementation of MetricsProvider, based on current implementation\n- Change MetricsContext interface in order to support several types of Metrics, in order to cover current metrics facilities,\n\nThe MetricsProvider API will allow ZooKeeper users to integrate ZooKeeper with other metrics systems, like Prometheus.io/Dropwizard.....\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #854 from eolivelli/fix/metrics-provider-port-static and squashes the following commits:\n\nc5714ee66 [Enrico Olivelli] Fix dump and reset for SummarySets\ned6230e51 [Enrico Olivelli] Fix build\n8e8d87bdd [Enrico Olivelli] Merge branch 'master' into fix/metrics-provider-port-static\n02722b55b [Enrico Olivelli] Fix tests\n7ebc091e6 [Enrico Olivelli] Use toString in Monitor Command\n49a5c801a [Enrico Olivelli] Add Metrics to 4lw interface - mntr command\n137bda23a [Enrico Olivelli] A few nits\n80396915f [Enrico Olivelli] Introduce MetricsUtils\n9f28747bc [Enrico Olivelli] Fix after merge master\ne380607ae [Enrico Olivelli] Fix imports\nc2d0c358c [Enrico Olivelli] Introduce SummarySet\n4674d2350 [Enrico Olivelli] Fix trailing spaces\n6580b4a53 [Enrico Olivelli] Use a global static variable\nad8d44241 [Enrico Olivelli] Make DefaultMetricsProvider the default\nd455a1c8c [Enrico Olivelli] Fix test\nf997c30f3 [Enrico Olivelli] Fix spotbugs\n228c1d268 [Enrico Olivelli] ZOOKEEPER-3143 Pluggable metrics system for ZooKeeper - Data Collection on Server",
        "commit_url": "https://github.com/apache/zookeeper/commit/f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "buggy_code": "ServerMetrics.DB_INIT_TIME.add(loadTime);",
        "fixed_code": "ServerMetrics.getMetrics().DB_INIT_TIME.add(loadTime);",
        "patch": "@@ -255,7 +255,7 @@ public long loadDataBase() throws IOException {\n         long zxid = snapLog.restore(dataTree, sessionsWithTimeouts, commitProposalPlaybackListener);\n         initialized = true;\n         long loadTime = Time.currentElapsedTime() - startTime;\n-        ServerMetrics.DB_INIT_TIME.add(loadTime);\n+        ServerMetrics.getMetrics().DB_INIT_TIME.add(loadTime);\n         LOG.info(\"Snapshot loaded in \" + loadTime + \" ms\");\n         return zxid;\n     }"
    },
    {
        "commit_id": "f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "commit_message": "ZOOKEEPER-3143: Pluggable metrics system for ZooKeeper - Data Collection on Server\n\n- Make ServerMetrics a class, not an enum.\n- Make ServerMetrics use MetricsProvider\n- After the bootstrap of the MetricsProvider reconfigure ServerMetrics in order to push data to the provider.\n- Introduce a default implementation of MetricsProvider, based on current implementation\n- Change MetricsContext interface in order to support several types of Metrics, in order to cover current metrics facilities,\n\nThe MetricsProvider API will allow ZooKeeper users to integrate ZooKeeper with other metrics systems, like Prometheus.io/Dropwizard.....\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #854 from eolivelli/fix/metrics-provider-port-static and squashes the following commits:\n\nc5714ee66 [Enrico Olivelli] Fix dump and reset for SummarySets\ned6230e51 [Enrico Olivelli] Fix build\n8e8d87bdd [Enrico Olivelli] Merge branch 'master' into fix/metrics-provider-port-static\n02722b55b [Enrico Olivelli] Fix tests\n7ebc091e6 [Enrico Olivelli] Use toString in Monitor Command\n49a5c801a [Enrico Olivelli] Add Metrics to 4lw interface - mntr command\n137bda23a [Enrico Olivelli] A few nits\n80396915f [Enrico Olivelli] Introduce MetricsUtils\n9f28747bc [Enrico Olivelli] Fix after merge master\ne380607ae [Enrico Olivelli] Fix imports\nc2d0c358c [Enrico Olivelli] Introduce SummarySet\n4674d2350 [Enrico Olivelli] Fix trailing spaces\n6580b4a53 [Enrico Olivelli] Use a global static variable\nad8d44241 [Enrico Olivelli] Make DefaultMetricsProvider the default\nd455a1c8c [Enrico Olivelli] Fix test\nf997c30f3 [Enrico Olivelli] Fix spotbugs\n228c1d268 [Enrico Olivelli] ZOOKEEPER-3143 Pluggable metrics system for ZooKeeper - Data Collection on Server",
        "commit_url": "https://github.com/apache/zookeeper/commit/f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "buggy_code": "ServerMetrics.UNRECOVERABLE_ERROR_COUNT.add(1);",
        "fixed_code": "ServerMetrics.getMetrics().UNRECOVERABLE_ERROR_COUNT.add(1);",
        "patch": "@@ -47,6 +47,6 @@ public ZooKeeperCriticalThread(String threadName, ZooKeeperServerListener listen\n     protected void handleException(String threadName, Throwable e) {\n         LOG.error(\"Severe unrecoverable error, from thread : {}\", threadName, e);\n         listener.notifyStopping(threadName, ExitCode.UNEXPECTED_ERROR.getValue());\n-        ServerMetrics.UNRECOVERABLE_ERROR_COUNT.add(1);\n+        ServerMetrics.getMetrics().UNRECOVERABLE_ERROR_COUNT.add(1);\n     }\n }"
    },
    {
        "commit_id": "f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "commit_message": "ZOOKEEPER-3143: Pluggable metrics system for ZooKeeper - Data Collection on Server\n\n- Make ServerMetrics a class, not an enum.\n- Make ServerMetrics use MetricsProvider\n- After the bootstrap of the MetricsProvider reconfigure ServerMetrics in order to push data to the provider.\n- Introduce a default implementation of MetricsProvider, based on current implementation\n- Change MetricsContext interface in order to support several types of Metrics, in order to cover current metrics facilities,\n\nThe MetricsProvider API will allow ZooKeeper users to integrate ZooKeeper with other metrics systems, like Prometheus.io/Dropwizard.....\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #854 from eolivelli/fix/metrics-provider-port-static and squashes the following commits:\n\nc5714ee66 [Enrico Olivelli] Fix dump and reset for SummarySets\ned6230e51 [Enrico Olivelli] Fix build\n8e8d87bdd [Enrico Olivelli] Merge branch 'master' into fix/metrics-provider-port-static\n02722b55b [Enrico Olivelli] Fix tests\n7ebc091e6 [Enrico Olivelli] Use toString in Monitor Command\n49a5c801a [Enrico Olivelli] Add Metrics to 4lw interface - mntr command\n137bda23a [Enrico Olivelli] A few nits\n80396915f [Enrico Olivelli] Introduce MetricsUtils\n9f28747bc [Enrico Olivelli] Fix after merge master\ne380607ae [Enrico Olivelli] Fix imports\nc2d0c358c [Enrico Olivelli] Introduce SummarySet\n4674d2350 [Enrico Olivelli] Fix trailing spaces\n6580b4a53 [Enrico Olivelli] Use a global static variable\nad8d44241 [Enrico Olivelli] Make DefaultMetricsProvider the default\nd455a1c8c [Enrico Olivelli] Fix test\nf997c30f3 [Enrico Olivelli] Fix spotbugs\n228c1d268 [Enrico Olivelli] ZOOKEEPER-3143 Pluggable metrics system for ZooKeeper - Data Collection on Server",
        "commit_url": "https://github.com/apache/zookeeper/commit/f69ad1b0fed88da3c1b67fd73031e7248c0564f7",
        "buggy_code": "Assert.assertEquals(expectedCount, metric.getCount());",
        "fixed_code": "Assert.assertEquals(expectedCount, metric.get());",
        "patch": "@@ -99,7 +99,7 @@ private void testSimpleCounter(SimpleCounter metric, int size) {\n         }\n \n         long expectedCount = Arrays.stream(values).sum();\n-        Assert.assertEquals(expectedCount, metric.getCount());\n+        Assert.assertEquals(expectedCount, metric.get());\n \n         final Map<String, Object> results = metric.values();\n         Assert.assertEquals(expectedCount, (long)results.get(\"test\"));"
    },
    {
        "commit_id": "d0b60bd3cb4fe724fe5ed1670bb7d3e30842373a",
        "commit_message": "Fix typo in error log message, added missing space\n\nFix typo in error log message, added missing space\n\nAuthor: nicolasguyomar <nicolas.guyomar@gmail.com>\n\nReviewers: phunt@apache.org\n\nCloses #837 from nicolasguyomar/patch-1\n\nChange-Id: I6ddf782aa1397908a436b57d709e4120104bb858",
        "commit_url": "https://github.com/apache/zookeeper/commit/d0b60bd3cb4fe724fe5ed1670bb7d3e30842373a",
        "buggy_code": "errorMessage += \"in '\" + jaasFile + \"'.\";",
        "fixed_code": "errorMessage += \" in '\" + jaasFile + \"'.\";",
        "patch": "@@ -268,7 +268,7 @@ protected void configureSaslLogin() throws IOException {\n             if (securityException != null && (loginContextName != null || jaasFile != null)) {\n                 String errorMessage = \"No JAAS configuration section named '\" + serverSection +  \"' was found\";\n                 if (jaasFile != null) {\n-                    errorMessage += \"in '\" + jaasFile + \"'.\";\n+                    errorMessage += \" in '\" + jaasFile + \"'.\";\n                 }\n                 if (loginContextName != null) {\n                     errorMessage += \" But \" + ZooKeeperSaslServer.LOGIN_CONTEXT_NAME_KEY + \" was set.\";"
    },
    {
        "commit_id": "8f3fbf25c63af54e00bad927a606f79ef0bf7fbf",
        "commit_message": "ZOOKEEPER-974: Allow a configurable ZooKeeper server socket listen ba\u2026\n\n\u2026cklog\n\nIntroduces configuration property \"clientPortBacklog\". Amendment of\noriginal patch from \"Hoonmin Kim\".\n\nAuthor: Josh Elser <elserj@apache.org>\n\nReviewers: andor@apache.org\n\nCloses #784 from joshelser/974-master and squashes the following commits:\n\nfe5f66a5a [Josh Elser] Add some documentation for the new property\nbe61d1c5f [Josh Elser] Feedback from Andor\n3ed36f824 [Josh Elser] Update 'conf' 4lw for clientPortListenBacklog\nfd249939c [Josh Elser] ZOOKEEPER-974: Allow a configurable ZooKeeper server socket listen backlog",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f3fbf25c63af54e00bad927a606f79ef0bf7fbf",
        "buggy_code": "super(logFactory, self.tickTime, self.minSessionTimeout, self.maxSessionTimeout, zkDb, self);",
        "fixed_code": "super(logFactory, self.tickTime, self.minSessionTimeout, self.maxSessionTimeout, self.clientPortListenBacklog, zkDb, self);",
        "patch": "@@ -52,7 +52,7 @@ public class ObserverZooKeeperServer extends LearnerZooKeeperServer {\n         new ConcurrentLinkedQueue<Request>();\n \n     ObserverZooKeeperServer(FileTxnSnapLog logFactory, QuorumPeer self, ZKDatabase zkDb) throws IOException {\n-        super(logFactory, self.tickTime, self.minSessionTimeout, self.maxSessionTimeout, zkDb, self);\n+        super(logFactory, self.tickTime, self.minSessionTimeout, self.maxSessionTimeout, self.clientPortListenBacklog, zkDb, self);\n         LOG.info(\"syncEnabled =\" + syncRequestProcessorEnabled);\n     }\n     "
    },
    {
        "commit_id": "8f3fbf25c63af54e00bad927a606f79ef0bf7fbf",
        "commit_message": "ZOOKEEPER-974: Allow a configurable ZooKeeper server socket listen ba\u2026\n\n\u2026cklog\n\nIntroduces configuration property \"clientPortBacklog\". Amendment of\noriginal patch from \"Hoonmin Kim\".\n\nAuthor: Josh Elser <elserj@apache.org>\n\nReviewers: andor@apache.org\n\nCloses #784 from joshelser/974-master and squashes the following commits:\n\nfe5f66a5a [Josh Elser] Add some documentation for the new property\nbe61d1c5f [Josh Elser] Feedback from Andor\n3ed36f824 [Josh Elser] Update 'conf' 4lw for clientPortListenBacklog\nfd249939c [Josh Elser] ZOOKEEPER-974: Allow a configurable ZooKeeper server socket listen backlog",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f3fbf25c63af54e00bad927a606f79ef0bf7fbf",
        "buggy_code": "self.maxSessionTimeout, zkDb);",
        "fixed_code": "self.maxSessionTimeout, self.clientPortListenBacklog, zkDb);",
        "patch": "@@ -46,7 +46,7 @@ public class ReadOnlyZooKeeperServer extends ZooKeeperServer {\n     ReadOnlyZooKeeperServer(FileTxnSnapLog logFactory, QuorumPeer self,\n                             ZKDatabase zkDb) {\n         super(logFactory, self.tickTime, self.minSessionTimeout,\n-              self.maxSessionTimeout, zkDb);\n+              self.maxSessionTimeout, self.clientPortListenBacklog, zkDb);\n         this.self = self;\n     }\n "
    },
    {
        "commit_id": "8f3fbf25c63af54e00bad927a606f79ef0bf7fbf",
        "commit_message": "ZOOKEEPER-974: Allow a configurable ZooKeeper server socket listen ba\u2026\n\n\u2026cklog\n\nIntroduces configuration property \"clientPortBacklog\". Amendment of\noriginal patch from \"Hoonmin Kim\".\n\nAuthor: Josh Elser <elserj@apache.org>\n\nReviewers: andor@apache.org\n\nCloses #784 from joshelser/974-master and squashes the following commits:\n\nfe5f66a5a [Josh Elser] Add some documentation for the new property\nbe61d1c5f [Josh Elser] Feedback from Andor\n3ed36f824 [Josh Elser] Update 'conf' 4lw for clientPortListenBacklog\nfd249939c [Josh Elser] ZOOKEEPER-974: Allow a configurable ZooKeeper server socket listen backlog",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f3fbf25c63af54e00bad927a606f79ef0bf7fbf",
        "buggy_code": "super(ftsl, 2000, 2000, 2000, new ZKDatabase(ftsl), self);",
        "fixed_code": "super(ftsl, 2000, 2000, 2000, -1, new ZKDatabase(ftsl), self);",
        "patch": "@@ -51,7 +51,7 @@ static class SimpleLearnerZooKeeperServer extends LearnerZooKeeperServer {\n \n         public SimpleLearnerZooKeeperServer(FileTxnSnapLog ftsl, QuorumPeer self)\n                 throws IOException {\n-            super(ftsl, 2000, 2000, 2000, new ZKDatabase(ftsl), self);\n+            super(ftsl, 2000, 2000, 2000, -1, new ZKDatabase(ftsl), self);\n         }\n \n         @Override"
    },
    {
        "commit_id": "8f3fbf25c63af54e00bad927a606f79ef0bf7fbf",
        "commit_message": "ZOOKEEPER-974: Allow a configurable ZooKeeper server socket listen ba\u2026\n\n\u2026cklog\n\nIntroduces configuration property \"clientPortBacklog\". Amendment of\noriginal patch from \"Hoonmin Kim\".\n\nAuthor: Josh Elser <elserj@apache.org>\n\nReviewers: andor@apache.org\n\nCloses #784 from joshelser/974-master and squashes the following commits:\n\nfe5f66a5a [Josh Elser] Add some documentation for the new property\nbe61d1c5f [Josh Elser] Feedback from Andor\n3ed36f824 [Josh Elser] Update 'conf' 4lw for clientPortListenBacklog\nfd249939c [Josh Elser] ZOOKEEPER-974: Allow a configurable ZooKeeper server socket listen backlog",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f3fbf25c63af54e00bad927a606f79ef0bf7fbf",
        "buggy_code": "serverFactory.configure(new InetSocketAddress(host, port), maxCnxns, true);",
        "fixed_code": "serverFactory.configure(new InetSocketAddress(host, port), maxCnxns, -1, true);",
        "patch": "@@ -54,7 +54,7 @@ public void setUp() throws Exception {\n         hostPort = host + \":\" + port;\n \n         serverFactory = ServerCnxnFactory.createFactory();\n-        serverFactory.configure(new InetSocketAddress(host, port), maxCnxns, true);\n+        serverFactory.configure(new InetSocketAddress(host, port), maxCnxns, -1, true);\n \n         super.setUp();\n     }"
    },
    {
        "commit_id": "8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "commit_message": "ZOOKEEPER-2826: Code refactoring for `CLI` module\n\n* Fix spell issues\n* Remove unnecessary `import`\n* Make initialization block that related with `options.addOption` into static\n* Standardize `StringBuilder#append` usage\n* Using `try` clause to release the resource of stream\n\nAuthor: asdf2014 <benedictjin2016@gmail.com>\n\nReviewers: andor@apache.org\n\nCloses #298 from asdf2014/ZOOKEEPER-2826",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "buggy_code": "{",
        "fixed_code": "static {",
        "patch": "@@ -29,7 +29,7 @@ public class DeleteCommand extends CliCommand {\n     private String[] args;\n     private CommandLine cl;\n \n-    {\n+    static {\n         options.addOption(\"v\", true, \"version\");\n     }\n "
    },
    {
        "commit_id": "8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "commit_message": "ZOOKEEPER-2826: Code refactoring for `CLI` module\n\n* Fix spell issues\n* Remove unnecessary `import`\n* Make initialization block that related with `options.addOption` into static\n* Standardize `StringBuilder#append` usage\n* Using `try` clause to release the resource of stream\n\nAuthor: asdf2014 <benedictjin2016@gmail.com>\n\nReviewers: andor@apache.org\n\nCloses #298 from asdf2014/ZOOKEEPER-2826",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "buggy_code": "{",
        "fixed_code": "static {",
        "patch": "@@ -36,7 +36,7 @@ public class GetAclCommand extends CliCommand {\n     private String args[];\n     private CommandLine cl;\n \n-    {\n+    static {\n         options.addOption(\"s\", false, \"stats\");\n     }\n "
    },
    {
        "commit_id": "8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "commit_message": "ZOOKEEPER-2826: Code refactoring for `CLI` module\n\n* Fix spell issues\n* Remove unnecessary `import`\n* Make initialization block that related with `options.addOption` into static\n* Standardize `StringBuilder#append` usage\n* Using `try` clause to release the resource of stream\n\nAuthor: asdf2014 <benedictjin2016@gmail.com>\n\nReviewers: andor@apache.org\n\nCloses #298 from asdf2014/ZOOKEEPER-2826",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "buggy_code": "{",
        "fixed_code": "static {",
        "patch": "@@ -30,7 +30,7 @@ public class GetCommand extends CliCommand {\n     private String args[];\n     private CommandLine cl;\n \n-    {\n+    static {\n         options.addOption(\"s\", false, \"stats\");\n         options.addOption(\"w\", false, \"watch\");\n     }"
    },
    {
        "commit_id": "8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "commit_message": "ZOOKEEPER-2826: Code refactoring for `CLI` module\n\n* Fix spell issues\n* Remove unnecessary `import`\n* Make initialization block that related with `options.addOption` into static\n* Standardize `StringBuilder#append` usage\n* Using `try` clause to release the resource of stream\n\nAuthor: asdf2014 <benedictjin2016@gmail.com>\n\nReviewers: andor@apache.org\n\nCloses #298 from asdf2014/ZOOKEEPER-2826",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "buggy_code": "{",
        "fixed_code": "static {",
        "patch": "@@ -31,7 +31,7 @@ public class GetConfigCommand extends CliCommand {\n     private String args[];\n     private CommandLine cl;\n \n-    {\n+    static {\n         options.addOption(\"s\", false, \"stats\");\n         options.addOption(\"w\", false, \"watch\");\n         options.addOption(\"c\", false, \"client connection string\");"
    },
    {
        "commit_id": "8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "commit_message": "ZOOKEEPER-2826: Code refactoring for `CLI` module\n\n* Fix spell issues\n* Remove unnecessary `import`\n* Make initialization block that related with `options.addOption` into static\n* Standardize `StringBuilder#append` usage\n* Using `try` clause to release the resource of stream\n\nAuthor: asdf2014 <benedictjin2016@gmail.com>\n\nReviewers: andor@apache.org\n\nCloses #298 from asdf2014/ZOOKEEPER-2826",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "buggy_code": "{",
        "fixed_code": "static {",
        "patch": "@@ -33,7 +33,7 @@ public class LsCommand extends CliCommand {\n     private String args[];\n     private CommandLine cl;\n \n-    {\n+    static {\n         options.addOption(\"?\", false, \"help\");\n         options.addOption(\"s\", false, \"stat\");\n         options.addOption(\"w\", false, \"watch\");"
    },
    {
        "commit_id": "8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "commit_message": "ZOOKEEPER-2826: Code refactoring for `CLI` module\n\n* Fix spell issues\n* Remove unnecessary `import`\n* Make initialization block that related with `options.addOption` into static\n* Standardize `StringBuilder#append` usage\n* Using `try` clause to release the resource of stream\n\nAuthor: asdf2014 <benedictjin2016@gmail.com>\n\nReviewers: andor@apache.org\n\nCloses #298 from asdf2014/ZOOKEEPER-2826",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "buggy_code": "{",
        "fixed_code": "static {",
        "patch": "@@ -34,7 +34,7 @@ public class RemoveWatchesCommand extends CliCommand {\n     private String[] args;\n     private CommandLine cl;\n \n-    {\n+    static {\n         options.addOption(\"c\", false, \"child watcher type\");\n         options.addOption(\"d\", false, \"data watcher type\");\n         options.addOption(\"a\", false, \"any watcher type\");"
    },
    {
        "commit_id": "8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "commit_message": "ZOOKEEPER-2826: Code refactoring for `CLI` module\n\n* Fix spell issues\n* Remove unnecessary `import`\n* Make initialization block that related with `options.addOption` into static\n* Standardize `StringBuilder#append` usage\n* Using `try` clause to release the resource of stream\n\nAuthor: asdf2014 <benedictjin2016@gmail.com>\n\nReviewers: andor@apache.org\n\nCloses #298 from asdf2014/ZOOKEEPER-2826",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "buggy_code": "{",
        "fixed_code": "static {",
        "patch": "@@ -37,7 +37,7 @@ public class SetAclCommand extends CliCommand {\n     private String[] args;\n     private CommandLine cl;\n \n-    {\n+    static {\n         options.addOption(\"s\", false, \"stats\");\n         options.addOption(\"v\", true, \"version\");\n         options.addOption(\"R\", false, \"recursive\");"
    },
    {
        "commit_id": "8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "commit_message": "ZOOKEEPER-2826: Code refactoring for `CLI` module\n\n* Fix spell issues\n* Remove unnecessary `import`\n* Make initialization block that related with `options.addOption` into static\n* Standardize `StringBuilder#append` usage\n* Using `try` clause to release the resource of stream\n\nAuthor: asdf2014 <benedictjin2016@gmail.com>\n\nReviewers: andor@apache.org\n\nCloses #298 from asdf2014/ZOOKEEPER-2826",
        "commit_url": "https://github.com/apache/zookeeper/commit/8f62ee9740c9cdd0e4e3ec5c6d906236fe35a003",
        "buggy_code": "{",
        "fixed_code": "static {",
        "patch": "@@ -30,7 +30,7 @@ public class SetCommand extends CliCommand {\n     private String[] args;\n     private CommandLine cl;\n \n-    {\n+    static {\n         options.addOption(\"s\", false, \"stats\");\n         options.addOption(\"v\", true, \"version\");\n     }"
    },
    {
        "commit_id": "8b82c2694dc31238b04345a7bd95c6a7fb62c7f8",
        "commit_message": "ZOOKEEPER-3223: Configure spotbugs - part 2\n\n- move to spotbugs 3.1.9\n- disable spotbugs on contrib package\n- fix spotbugs warnings on recipes\n- add commons-lang 2.6 dependency in order to fix build\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: andor@apache.org\n\nCloses #779 from eolivelli/fix/ZOOKEEPER-3223-master-part2",
        "commit_url": "https://github.com/apache/zookeeper/commit/8b82c2694dc31238b04345a7bd95c6a7fb62c7f8",
        "buggy_code": "if (getDataResponse != null && getDataResponse.getStat() != null) {",
        "fixed_code": "if (getDataResponse.getStat() != null) {",
        "patch": "@@ -505,7 +505,7 @@ public void processRequest(Request request) {\n                 // so these values are passed along with the response.\n                 GetDataResponse getDataResponse = (GetDataResponse)rsp;\n                 Stat stat = null;\n-                if (getDataResponse != null && getDataResponse.getStat() != null) {\n+                if (getDataResponse.getStat() != null) {\n                     stat = getDataResponse.getStat();\n                 }\n                 cnxn.sendResponse(hdr, rsp, \"response\", path, stat);"
    },
    {
        "commit_id": "bc992480ec938a3fad4b90f75a52dd186e1b968a",
        "commit_message": "ZOOKEEPER-2641: AvgRequestLatency metric improves to be more accurate\n\n- some original review historys were included [here ](https://github.com/apache/zookeeper/pull/629)\n- more details in [ZOOKEEPER-2641](https://issues.apache.org/jira/browse/ZOOKEEPER-2641)\n\nAuthor: maoling <maoling199210191@sina.com>\n\nReviewers: andor@apache.org\n\nCloses #748 from maoling/ZOOKEEPER-2641 and squashes the following commits:\n\ne0d4fc890 [maoling] fix the flaky test in the FourLetterWordsTest.testValidateStatOutput\n1739dbf1c [maoling] fix the flaky test in the CommandsTest.testMonitor\n01af4002e [maoling] ZOOKEEPER-2641:AvgRequestLatency metric improves to be more accurate",
        "commit_url": "https://github.com/apache/zookeeper/commit/bc992480ec938a3fad4b90f75a52dd186e1b968a",
        "buggy_code": "public long getAvgLatency() {",
        "fixed_code": "public double getAvgLatency() {",
        "patch": "@@ -64,7 +64,7 @@ public long getMinLatency() {\n         return requestLatency.getMin();\n     }\n \n-    public long getAvgLatency() {\n+    public double getAvgLatency() {\n         return requestLatency.getAvg();\n     }\n "
    },
    {
        "commit_id": "bc992480ec938a3fad4b90f75a52dd186e1b968a",
        "commit_message": "ZOOKEEPER-2641: AvgRequestLatency metric improves to be more accurate\n\n- some original review historys were included [here ](https://github.com/apache/zookeeper/pull/629)\n- more details in [ZOOKEEPER-2641](https://issues.apache.org/jira/browse/ZOOKEEPER-2641)\n\nAuthor: maoling <maoling199210191@sina.com>\n\nReviewers: andor@apache.org\n\nCloses #748 from maoling/ZOOKEEPER-2641 and squashes the following commits:\n\ne0d4fc890 [maoling] fix the flaky test in the FourLetterWordsTest.testValidateStatOutput\n1739dbf1c [maoling] fix the flaky test in the CommandsTest.testMonitor\n01af4002e [maoling] ZOOKEEPER-2641:AvgRequestLatency metric improves to be more accurate",
        "commit_url": "https://github.com/apache/zookeeper/commit/bc992480ec938a3fad4b90f75a52dd186e1b968a",
        "buggy_code": "public long getAvgRequestLatency() {",
        "fixed_code": "public double getAvgRequestLatency() {",
        "patch": "@@ -59,7 +59,7 @@ public String getVersion() {\n         return Version.getFullVersion();\n     }\n     \n-    public long getAvgRequestLatency() {\n+    public double getAvgRequestLatency() {\n         return zks.serverStats().getAvgLatency();\n     }\n     "
    },
    {
        "commit_id": "bc992480ec938a3fad4b90f75a52dd186e1b968a",
        "commit_message": "ZOOKEEPER-2641: AvgRequestLatency metric improves to be more accurate\n\n- some original review historys were included [here ](https://github.com/apache/zookeeper/pull/629)\n- more details in [ZOOKEEPER-2641](https://issues.apache.org/jira/browse/ZOOKEEPER-2641)\n\nAuthor: maoling <maoling199210191@sina.com>\n\nReviewers: andor@apache.org\n\nCloses #748 from maoling/ZOOKEEPER-2641 and squashes the following commits:\n\ne0d4fc890 [maoling] fix the flaky test in the FourLetterWordsTest.testValidateStatOutput\n1739dbf1c [maoling] fix the flaky test in the CommandsTest.testMonitor\n01af4002e [maoling] ZOOKEEPER-2641:AvgRequestLatency metric improves to be more accurate",
        "commit_url": "https://github.com/apache/zookeeper/commit/bc992480ec938a3fad4b90f75a52dd186e1b968a",
        "buggy_code": "public long getAvgRequestLatency();",
        "fixed_code": "public double getAvgRequestLatency();",
        "patch": "@@ -41,7 +41,7 @@ public interface ZooKeeperServerMXBean {\n     /**\n      * @return average request latency in ms\n      */\n-    public long getAvgRequestLatency();\n+    public double getAvgRequestLatency();\n     /**\n      * @return max request latency in ms\n      */"
    },
    {
        "commit_id": "bc992480ec938a3fad4b90f75a52dd186e1b968a",
        "commit_message": "ZOOKEEPER-2641: AvgRequestLatency metric improves to be more accurate\n\n- some original review historys were included [here ](https://github.com/apache/zookeeper/pull/629)\n- more details in [ZOOKEEPER-2641](https://issues.apache.org/jira/browse/ZOOKEEPER-2641)\n\nAuthor: maoling <maoling199210191@sina.com>\n\nReviewers: andor@apache.org\n\nCloses #748 from maoling/ZOOKEEPER-2641 and squashes the following commits:\n\ne0d4fc890 [maoling] fix the flaky test in the FourLetterWordsTest.testValidateStatOutput\n1739dbf1c [maoling] fix the flaky test in the CommandsTest.testMonitor\n01af4002e [maoling] ZOOKEEPER-2641:AvgRequestLatency metric improves to be more accurate",
        "commit_url": "https://github.com/apache/zookeeper/commit/bc992480ec938a3fad4b90f75a52dd186e1b968a",
        "buggy_code": "Map<String, Long> values();",
        "fixed_code": "Map<String, Object> values();",
        "patch": "@@ -23,5 +23,5 @@\n public interface Metric {\n     void add(long value);\n     void reset();\n-    Map<String, Long> values();\n+    Map<String, Object> values();\n }"
    },
    {
        "commit_id": "bc992480ec938a3fad4b90f75a52dd186e1b968a",
        "commit_message": "ZOOKEEPER-2641: AvgRequestLatency metric improves to be more accurate\n\n- some original review historys were included [here ](https://github.com/apache/zookeeper/pull/629)\n- more details in [ZOOKEEPER-2641](https://issues.apache.org/jira/browse/ZOOKEEPER-2641)\n\nAuthor: maoling <maoling199210191@sina.com>\n\nReviewers: andor@apache.org\n\nCloses #748 from maoling/ZOOKEEPER-2641 and squashes the following commits:\n\ne0d4fc890 [maoling] fix the flaky test in the FourLetterWordsTest.testValidateStatOutput\n1739dbf1c [maoling] fix the flaky test in the CommandsTest.testMonitor\n01af4002e [maoling] ZOOKEEPER-2641:AvgRequestLatency metric improves to be more accurate",
        "commit_url": "https://github.com/apache/zookeeper/commit/bc992480ec938a3fad4b90f75a52dd186e1b968a",
        "buggy_code": "Assert.assertTrue(Pattern.matches(\"^Latency min/avg/max: \\\\d+/\\\\d+/\\\\d+$\", line));",
        "fixed_code": "Assert.assertTrue(Pattern.matches(\"^Latency min/avg/max: \\\\d+/-?[0-9]*.?[0-9]*/\\\\d+$\", line));",
        "patch": "@@ -153,7 +153,7 @@ public void testValidateStatOutput() throws Exception {\n         Assert.assertTrue(count >= 2);\n \n         line = in.readLine();\n-        Assert.assertTrue(Pattern.matches(\"^Latency min/avg/max: \\\\d+/\\\\d+/\\\\d+$\", line));\n+        Assert.assertTrue(Pattern.matches(\"^Latency min/avg/max: \\\\d+/-?[0-9]*.?[0-9]*/\\\\d+$\", line));\n         line = in.readLine();\n         Assert.assertTrue(Pattern.matches(\"^Received: \\\\d+$\", line));\n         line = in.readLine();"
    },
    {
        "commit_id": "b752ef66876a141035a42f30aad69e3166cad746",
        "commit_message": "ZOOKEEPER-3223: Configure Spotbugs\n\n- add spotbugs configuration (default)\n- make build pass spotbugs\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: andor@apache.org\n\nCloses #742 from eolivelli/fix/ZOOKEEPER-3223-spotbugs and squashes the following commits:\n\na43cecf41 [Enrico Olivelli] Fix false positive\nc00d296ad [Enrico Olivelli] Add Suppression for false positive\n35c8a4dde [Enrico Olivelli] fix tests\n1ae629bcd [Enrico Olivelli] revert file\nc0bb9d903 [Enrico Olivelli] Add spotbugs annotations to ant based build\ndabe4fafc [Enrico Olivelli] [ZOOKEEPER-3223] Configure Spotbugs - add spotbugs configuration - make build pass spotbugs",
        "commit_url": "https://github.com/apache/zookeeper/commit/b752ef66876a141035a42f30aad69e3166cad746",
        "buggy_code": "public void setServerStats(ServerStats serverStats) {",
        "fixed_code": "public synchronized void setServerStats(ServerStats serverStats) {",
        "patch": "@@ -180,7 +180,7 @@ public static void setPreallocSize(long size) {\n      * @param serverStats used to update fsyncThresholdExceedCount\n      */\n     @Override\n-    public void setServerStats(ServerStats serverStats) {\n+    public synchronized void setServerStats(ServerStats serverStats) {\n         this.serverStats = serverStats;\n     }\n "
    },
    {
        "commit_id": "2a3800f00f4c14dde97c42a54806ba3485f27183",
        "commit_message": "ZOOKEEPER-3228: [TLS] Fix key usage extension in test certs\n\nKey usage extension is wrong in test certs created by X509TestHelpers. This works with Java SSL stack because it allows sloppy certs, but breaks with Netty's OpenSSL stack. My Netty OpenSSL code is not ready for upstream yet, but fixing the test cert extensions is a prerequisite and can go in separately.\n\nAuthor: Ilya Maykov <ilyam@fb.com>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #743 from ivmaykov/ZOOKEEPER-3228",
        "commit_url": "https://github.com/apache/zookeeper/commit/2a3800f00f4c14dde97c42a54806ba3485f27183",
        "buggy_code": "Extension.keyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyAgreement));",
        "fixed_code": "Extension.keyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyEncipherment));",
        "patch": "@@ -152,7 +152,7 @@ public static X509Certificate newCert(\n                 certPublicKey);\n         builder.addExtension(Extension.basicConstraints, true, new BasicConstraints(false)); // not a CA\n         builder.addExtension(\n-                Extension.keyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyAgreement));\n+                Extension.keyUsage, true, new KeyUsage(KeyUsage.digitalSignature | KeyUsage.keyEncipherment));\n         builder.addExtension(\n                 Extension.extendedKeyUsage,\n                 true,"
    },
    {
        "commit_id": "05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "commit_message": "ZOOKEEPER-3029: add pom.xml for jute, client and server\n\nWork In Progress\nCreating the maven build for zookeeper-server, zookeeper-jute and zookeeper-client (which only contains C client right now, and it hasn't been implemented yet - maven is not calling make or autoconf)\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #708 from nkalmar/ZOOKEEPER-3029r and squashes the following commits:\n\n4b1354f41 [Norbert Kalmar] ZOOKEEPER-3029 - add java clover coverage\n9c4591ce5 [Norbert Kalmar] ZOOKEEPER-3029 - fix pom issues and clover classpath\n5b9350abd [Norbert Kalmar] ZOOKEEPER-3029 - fix C maven test classpath issues\n69a2c51b6 [Norbert Kalmar] ZOOKEEPER-3029 - change git-wip-us git to gitbox\ndaf273a7e [Norbert Kalmar] ZOOKEEPER-3029 - remove build.xml from c-client, use maven\ne328cb812 [Norbert Kalmar] ZOOKEEPER-3029 - fix cppunit tests\n5133abe46 [Norbert Kalmar] ZOOKEEPER-3029 - fix portAssigment bug with maven\neb7b4abfb [Norbert Kalmar] ZOOKEEPER-3029 - fix jute dependency import\nd786b90a2 [Norbert Kalmar] ZOOKEEPER-3029 - Build C library and fix tests\n438cd43de [Norbert Kalmar] ZOOKEEPER-3029 - add pom.xml for jute, client and server",
        "commit_url": "https://github.com/apache/zookeeper/commit/05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "buggy_code": "System.getProperty(\"test.data.dir\", \"build/test/data\"));",
        "fixed_code": "System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));",
        "patch": "@@ -39,7 +39,7 @@\n @Ignore(\"No tests in this class.\")\n public class BaseSysTest {\n     private static final File testData = new File(\n-            System.getProperty(\"test.data.dir\", \"build/test/data\"));\n+            System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));\n     private static int fakeBasePort = 33222;\n     private static String zkHostPort;\n     protected String prefix = \"/sysTest\";"
    },
    {
        "commit_id": "05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "commit_message": "ZOOKEEPER-3029: add pom.xml for jute, client and server\n\nWork In Progress\nCreating the maven build for zookeeper-server, zookeeper-jute and zookeeper-client (which only contains C client right now, and it hasn't been implemented yet - maven is not calling make or autoconf)\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #708 from nkalmar/ZOOKEEPER-3029r and squashes the following commits:\n\n4b1354f41 [Norbert Kalmar] ZOOKEEPER-3029 - add java clover coverage\n9c4591ce5 [Norbert Kalmar] ZOOKEEPER-3029 - fix pom issues and clover classpath\n5b9350abd [Norbert Kalmar] ZOOKEEPER-3029 - fix C maven test classpath issues\n69a2c51b6 [Norbert Kalmar] ZOOKEEPER-3029 - change git-wip-us git to gitbox\ndaf273a7e [Norbert Kalmar] ZOOKEEPER-3029 - remove build.xml from c-client, use maven\ne328cb812 [Norbert Kalmar] ZOOKEEPER-3029 - fix cppunit tests\n5133abe46 [Norbert Kalmar] ZOOKEEPER-3029 - fix portAssigment bug with maven\neb7b4abfb [Norbert Kalmar] ZOOKEEPER-3029 - fix jute dependency import\nd786b90a2 [Norbert Kalmar] ZOOKEEPER-3029 - Build C library and fix tests\n438cd43de [Norbert Kalmar] ZOOKEEPER-3029 - add pom.xml for jute, client and server",
        "commit_url": "https://github.com/apache/zookeeper/commit/05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "buggy_code": "System.getProperty(\"test.data.dir\", \"build/test/data\"));",
        "fixed_code": "System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));",
        "patch": "@@ -39,7 +39,7 @@\n class QuorumPeerInstance implements Instance {\n     final private static Logger LOG = LoggerFactory.getLogger(QuorumPeerInstance.class);\n     private static final File testData = new File(\n-        System.getProperty(\"test.data.dir\", \"build/test/data\"));\n+        System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));\n \n     private static final int syncLimit = 3;\n     private static final int initLimit = 3;"
    },
    {
        "commit_id": "05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "commit_message": "ZOOKEEPER-3029: add pom.xml for jute, client and server\n\nWork In Progress\nCreating the maven build for zookeeper-server, zookeeper-jute and zookeeper-client (which only contains C client right now, and it hasn't been implemented yet - maven is not calling make or autoconf)\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #708 from nkalmar/ZOOKEEPER-3029r and squashes the following commits:\n\n4b1354f41 [Norbert Kalmar] ZOOKEEPER-3029 - add java clover coverage\n9c4591ce5 [Norbert Kalmar] ZOOKEEPER-3029 - fix pom issues and clover classpath\n5b9350abd [Norbert Kalmar] ZOOKEEPER-3029 - fix C maven test classpath issues\n69a2c51b6 [Norbert Kalmar] ZOOKEEPER-3029 - change git-wip-us git to gitbox\ndaf273a7e [Norbert Kalmar] ZOOKEEPER-3029 - remove build.xml from c-client, use maven\ne328cb812 [Norbert Kalmar] ZOOKEEPER-3029 - fix cppunit tests\n5133abe46 [Norbert Kalmar] ZOOKEEPER-3029 - fix portAssigment bug with maven\neb7b4abfb [Norbert Kalmar] ZOOKEEPER-3029 - fix jute dependency import\nd786b90a2 [Norbert Kalmar] ZOOKEEPER-3029 - Build C library and fix tests\n438cd43de [Norbert Kalmar] ZOOKEEPER-3029 - add pom.xml for jute, client and server",
        "commit_url": "https://github.com/apache/zookeeper/commit/05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "buggy_code": "private static final File testData = new File(System.getProperty(\"test.data.dir\", \"build/test/data\"));",
        "fixed_code": "private static final File testData = new File(System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));",
        "patch": "@@ -47,7 +47,7 @@\n import org.junit.rules.Timeout;\n \n public class ZKClientConfigTest {\n-    private static final File testData = new File(System.getProperty(\"test.data.dir\", \"build/test/data\"));\n+    private static final File testData = new File(System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));\n     @Rule\n     public Timeout timeout = new Timeout(10, TimeUnit.SECONDS);\n "
    },
    {
        "commit_id": "05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "commit_message": "ZOOKEEPER-3029: add pom.xml for jute, client and server\n\nWork In Progress\nCreating the maven build for zookeeper-server, zookeeper-jute and zookeeper-client (which only contains C client right now, and it hasn't been implemented yet - maven is not calling make or autoconf)\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #708 from nkalmar/ZOOKEEPER-3029r and squashes the following commits:\n\n4b1354f41 [Norbert Kalmar] ZOOKEEPER-3029 - add java clover coverage\n9c4591ce5 [Norbert Kalmar] ZOOKEEPER-3029 - fix pom issues and clover classpath\n5b9350abd [Norbert Kalmar] ZOOKEEPER-3029 - fix C maven test classpath issues\n69a2c51b6 [Norbert Kalmar] ZOOKEEPER-3029 - change git-wip-us git to gitbox\ndaf273a7e [Norbert Kalmar] ZOOKEEPER-3029 - remove build.xml from c-client, use maven\ne328cb812 [Norbert Kalmar] ZOOKEEPER-3029 - fix cppunit tests\n5133abe46 [Norbert Kalmar] ZOOKEEPER-3029 - fix portAssigment bug with maven\neb7b4abfb [Norbert Kalmar] ZOOKEEPER-3029 - fix jute dependency import\nd786b90a2 [Norbert Kalmar] ZOOKEEPER-3029 - Build C library and fix tests\n438cd43de [Norbert Kalmar] ZOOKEEPER-3029 - add pom.xml for jute, client and server",
        "commit_url": "https://github.com/apache/zookeeper/commit/05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "buggy_code": "System.getProperty(\"test.data.dir\", \"build/test/data\"));",
        "fixed_code": "System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));",
        "patch": "@@ -41,7 +41,7 @@\n \n public class TxnLogToolkitTest {\n     private static final File testData = new File(\n-            System.getProperty(\"test.data.dir\", \"build/test/data\"));\n+            System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));\n \n     private final ByteArrayOutputStream outContent = new ByteArrayOutputStream();\n     private final ByteArrayOutputStream errContent = new ByteArrayOutputStream();"
    },
    {
        "commit_id": "05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "commit_message": "ZOOKEEPER-3029: add pom.xml for jute, client and server\n\nWork In Progress\nCreating the maven build for zookeeper-server, zookeeper-jute and zookeeper-client (which only contains C client right now, and it hasn't been implemented yet - maven is not calling make or autoconf)\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #708 from nkalmar/ZOOKEEPER-3029r and squashes the following commits:\n\n4b1354f41 [Norbert Kalmar] ZOOKEEPER-3029 - add java clover coverage\n9c4591ce5 [Norbert Kalmar] ZOOKEEPER-3029 - fix pom issues and clover classpath\n5b9350abd [Norbert Kalmar] ZOOKEEPER-3029 - fix C maven test classpath issues\n69a2c51b6 [Norbert Kalmar] ZOOKEEPER-3029 - change git-wip-us git to gitbox\ndaf273a7e [Norbert Kalmar] ZOOKEEPER-3029 - remove build.xml from c-client, use maven\ne328cb812 [Norbert Kalmar] ZOOKEEPER-3029 - fix cppunit tests\n5133abe46 [Norbert Kalmar] ZOOKEEPER-3029 - fix portAssigment bug with maven\neb7b4abfb [Norbert Kalmar] ZOOKEEPER-3029 - fix jute dependency import\nd786b90a2 [Norbert Kalmar] ZOOKEEPER-3029 - Build C library and fix tests\n438cd43de [Norbert Kalmar] ZOOKEEPER-3029 - add pom.xml for jute, client and server",
        "commit_url": "https://github.com/apache/zookeeper/commit/05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "buggy_code": "System.getProperty(\"test.data.dir\", \"build/test/data\"));",
        "fixed_code": "System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));",
        "patch": "@@ -43,7 +43,7 @@\n \n public class LearnerTest extends ZKTestCase {\n     private static final File testData = new File(\n-        System.getProperty(\"test.data.dir\", \"build/test/data\"));\n+        System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));\n \n     static class SimpleLearnerZooKeeperServer extends LearnerZooKeeperServer {\n "
    },
    {
        "commit_id": "05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "commit_message": "ZOOKEEPER-3029: add pom.xml for jute, client and server\n\nWork In Progress\nCreating the maven build for zookeeper-server, zookeeper-jute and zookeeper-client (which only contains C client right now, and it hasn't been implemented yet - maven is not calling make or autoconf)\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #708 from nkalmar/ZOOKEEPER-3029r and squashes the following commits:\n\n4b1354f41 [Norbert Kalmar] ZOOKEEPER-3029 - add java clover coverage\n9c4591ce5 [Norbert Kalmar] ZOOKEEPER-3029 - fix pom issues and clover classpath\n5b9350abd [Norbert Kalmar] ZOOKEEPER-3029 - fix C maven test classpath issues\n69a2c51b6 [Norbert Kalmar] ZOOKEEPER-3029 - change git-wip-us git to gitbox\ndaf273a7e [Norbert Kalmar] ZOOKEEPER-3029 - remove build.xml from c-client, use maven\ne328cb812 [Norbert Kalmar] ZOOKEEPER-3029 - fix cppunit tests\n5133abe46 [Norbert Kalmar] ZOOKEEPER-3029 - fix portAssigment bug with maven\neb7b4abfb [Norbert Kalmar] ZOOKEEPER-3029 - fix jute dependency import\nd786b90a2 [Norbert Kalmar] ZOOKEEPER-3029 - Build C library and fix tests\n438cd43de [Norbert Kalmar] ZOOKEEPER-3029 - add pom.xml for jute, client and server",
        "commit_url": "https://github.com/apache/zookeeper/commit/05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "buggy_code": "System.getProperty(\"test.data.dir\", \"build/test/data\"));",
        "fixed_code": "System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));",
        "patch": "@@ -79,7 +79,7 @@ public class Zab1_0Test extends ZKTestCase {\n     private static final Logger LOG = LoggerFactory.getLogger(Zab1_0Test.class);\n \n     private static final File testData = new File(\n-            System.getProperty(\"test.data.dir\", \"build/test/data\"));\n+            System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));\n \n     @Before\n     public void setUp() {"
    },
    {
        "commit_id": "05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "commit_message": "ZOOKEEPER-3029: add pom.xml for jute, client and server\n\nWork In Progress\nCreating the maven build for zookeeper-server, zookeeper-jute and zookeeper-client (which only contains C client right now, and it hasn't been implemented yet - maven is not calling make or autoconf)\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #708 from nkalmar/ZOOKEEPER-3029r and squashes the following commits:\n\n4b1354f41 [Norbert Kalmar] ZOOKEEPER-3029 - add java clover coverage\n9c4591ce5 [Norbert Kalmar] ZOOKEEPER-3029 - fix pom issues and clover classpath\n5b9350abd [Norbert Kalmar] ZOOKEEPER-3029 - fix C maven test classpath issues\n69a2c51b6 [Norbert Kalmar] ZOOKEEPER-3029 - change git-wip-us git to gitbox\ndaf273a7e [Norbert Kalmar] ZOOKEEPER-3029 - remove build.xml from c-client, use maven\ne328cb812 [Norbert Kalmar] ZOOKEEPER-3029 - fix cppunit tests\n5133abe46 [Norbert Kalmar] ZOOKEEPER-3029 - fix portAssigment bug with maven\neb7b4abfb [Norbert Kalmar] ZOOKEEPER-3029 - fix jute dependency import\nd786b90a2 [Norbert Kalmar] ZOOKEEPER-3029 - Build C library and fix tests\n438cd43de [Norbert Kalmar] ZOOKEEPER-3029 - add pom.xml for jute, client and server",
        "commit_url": "https://github.com/apache/zookeeper/commit/05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "buggy_code": "System.getProperty(\"test.data.dir\", \"build/test/data\"),",
        "fixed_code": "System.getProperty(\"test.data.dir\", \"src/test/resources/data\"),",
        "patch": "@@ -35,7 +35,7 @@\n public class BufferSizeTest extends ClientBase {\n     public static final int TEST_MAXBUFFER = 100;\n     private static final File TEST_DATA = new File(\n-            System.getProperty(\"test.data.dir\", \"build/test/data\"),\n+            System.getProperty(\"test.data.dir\", \"src/test/resources/data\"),\n             \"buffersize\");\n     \n     private ZooKeeper zk;"
    },
    {
        "commit_id": "05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "commit_message": "ZOOKEEPER-3029: add pom.xml for jute, client and server\n\nWork In Progress\nCreating the maven build for zookeeper-server, zookeeper-jute and zookeeper-client (which only contains C client right now, and it hasn't been implemented yet - maven is not calling make or autoconf)\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #708 from nkalmar/ZOOKEEPER-3029r and squashes the following commits:\n\n4b1354f41 [Norbert Kalmar] ZOOKEEPER-3029 - add java clover coverage\n9c4591ce5 [Norbert Kalmar] ZOOKEEPER-3029 - fix pom issues and clover classpath\n5b9350abd [Norbert Kalmar] ZOOKEEPER-3029 - fix C maven test classpath issues\n69a2c51b6 [Norbert Kalmar] ZOOKEEPER-3029 - change git-wip-us git to gitbox\ndaf273a7e [Norbert Kalmar] ZOOKEEPER-3029 - remove build.xml from c-client, use maven\ne328cb812 [Norbert Kalmar] ZOOKEEPER-3029 - fix cppunit tests\n5133abe46 [Norbert Kalmar] ZOOKEEPER-3029 - fix portAssigment bug with maven\neb7b4abfb [Norbert Kalmar] ZOOKEEPER-3029 - fix jute dependency import\nd786b90a2 [Norbert Kalmar] ZOOKEEPER-3029 - Build C library and fix tests\n438cd43de [Norbert Kalmar] ZOOKEEPER-3029 - add pom.xml for jute, client and server",
        "commit_url": "https://github.com/apache/zookeeper/commit/05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "buggy_code": "String testDataPath = System.getProperty(\"test.data.dir\", \"build/test/data\");",
        "fixed_code": "String testDataPath = System.getProperty(\"test.data.dir\", \"src/test/resources/data\");",
        "patch": "@@ -42,7 +42,7 @@ public class ClientSSLTest extends QuorumPeerTestBase {\n     @Before\n     public void setup() {\n         clientX509Util = new ClientX509Util();\n-        String testDataPath = System.getProperty(\"test.data.dir\", \"build/test/data\");\n+        String testDataPath = System.getProperty(\"test.data.dir\", \"src/test/resources/data\");\n         System.setProperty(ServerCnxnFactory.ZOOKEEPER_SERVER_CNXN_FACTORY, \"org.apache.zookeeper.server.NettyServerCnxnFactory\");\n         System.setProperty(ZKClientConfig.ZOOKEEPER_CLIENT_CNXN_SOCKET, \"org.apache.zookeeper.ClientCnxnSocketNetty\");\n         System.setProperty(ZKClientConfig.SECURE_CLIENT, \"true\");"
    },
    {
        "commit_id": "05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "commit_message": "ZOOKEEPER-3029: add pom.xml for jute, client and server\n\nWork In Progress\nCreating the maven build for zookeeper-server, zookeeper-jute and zookeeper-client (which only contains C client right now, and it hasn't been implemented yet - maven is not calling make or autoconf)\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: andor@apache.org\n\nCloses #708 from nkalmar/ZOOKEEPER-3029r and squashes the following commits:\n\n4b1354f41 [Norbert Kalmar] ZOOKEEPER-3029 - add java clover coverage\n9c4591ce5 [Norbert Kalmar] ZOOKEEPER-3029 - fix pom issues and clover classpath\n5b9350abd [Norbert Kalmar] ZOOKEEPER-3029 - fix C maven test classpath issues\n69a2c51b6 [Norbert Kalmar] ZOOKEEPER-3029 - change git-wip-us git to gitbox\ndaf273a7e [Norbert Kalmar] ZOOKEEPER-3029 - remove build.xml from c-client, use maven\ne328cb812 [Norbert Kalmar] ZOOKEEPER-3029 - fix cppunit tests\n5133abe46 [Norbert Kalmar] ZOOKEEPER-3029 - fix portAssigment bug with maven\neb7b4abfb [Norbert Kalmar] ZOOKEEPER-3029 - fix jute dependency import\nd786b90a2 [Norbert Kalmar] ZOOKEEPER-3029 - Build C library and fix tests\n438cd43de [Norbert Kalmar] ZOOKEEPER-3029 - add pom.xml for jute, client and server",
        "commit_url": "https://github.com/apache/zookeeper/commit/05b774a1b05374618300f657c9c91b0d5c6ddf71",
        "buggy_code": "System.getProperty(\"test.data.dir\", \"build/test/data\"));",
        "fixed_code": "System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));",
        "patch": "@@ -41,7 +41,7 @@ public class InvalidSnapshotTest extends ZKTestCase{\n             \"127.0.0.1:\" + PortAssignment.unique();\n \n     private static final File testData = new File(\n-            System.getProperty(\"test.data.dir\", \"build/test/data\"));\n+            System.getProperty(\"test.data.dir\", \"src/test/resources/data\"));\n \n     /**\n      * Verify the LogFormatter by running it on a known file."
    },
    {
        "commit_id": "a109b8b5034a160c3ad0f4d2b790df962ff4dc47",
        "commit_message": "ZOOKEEPER-3194: Quorum TLS - fix copy/paste bug in ZKTrustManager\n\nFix an obvious copy/paste bug. Tested by making sure ZKTrustManagerTest still passes.\n\nAuthor: Ilya Maykov <ilyam@fb.com>\n\nReviewers: andor@apache.org\n\nCloses #709 from ivmaykov/ZOOKEEPER-3194",
        "commit_url": "https://github.com/apache/zookeeper/commit/a109b8b5034a160c3ad0f4d2b790df962ff4dc47",
        "buggy_code": "x509ExtendedTrustManager.checkServerTrusted(chain, authType, engine);",
        "fixed_code": "x509ExtendedTrustManager.checkClientTrusted(chain, authType, engine);",
        "patch": "@@ -85,7 +85,7 @@ public void checkServerTrusted(X509Certificate[] chain, String authType, Socket\n \n     @Override\n     public void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine) throws CertificateException {\n-        x509ExtendedTrustManager.checkServerTrusted(chain, authType, engine);\n+        x509ExtendedTrustManager.checkClientTrusted(chain, authType, engine);\n         if (clientHostnameVerificationEnabled) {\n             try {\n                 performHostVerification(InetAddress.getByName(engine.getPeerHost()), chain[0]);"
    },
    {
        "commit_id": "faa7cec71fddfb959a7d67923acffdb67d93c953",
        "commit_message": "ZOOKEEPER-3032: MAVEN MIGRATION - move java server, client\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: hanm@apache.org, andor@apache.org\n\nCloses #633 from nkalmar/ZOOKEEPER-3032 and squashes the following commits:\n\n3f9a0eca [Norbert Kalmar] ZOOKEEPER-3032 fix flaky QuorumPeerMainTest.testLeaderElectionWithDisloyalVoter_stillHasMajority\n27295ed6 [Norbert Kalmar] ZOOKEEPER-3032 - MAVEN MIGRATION - move java server, client",
        "commit_url": "https://github.com/apache/zookeeper/commit/faa7cec71fddfb959a7d67923acffdb67d93c953",
        "buggy_code": "testLeaderElection(5, 5, 3000, 2000);",
        "fixed_code": "testLeaderElection(5, 5, 3000, 20000);",
        "patch": "@@ -1432,7 +1432,7 @@ public void testLeaderElectionWithDisloyalVoter() throws IOException {\n     @Test\n     public void testLeaderElectionWithDisloyalVoter_stillHasMajority()\n             throws IOException {\n-        testLeaderElection(5, 5, 3000, 2000);\n+        testLeaderElection(5, 5, 3000, 20000);\n     }\n \n     void testLeaderElection(int totalServers, int serversToStart,"
    },
    {
        "commit_id": "fdde8b006458f7b989c894af0eac7e124d271a1e",
        "commit_message": "ZOOKEEPER-1177: Add the memory optimized watch manager for concentrate watches scenario\n\nThe current HashSet based WatcherManager will consume more than 40GB memory when\ncreating 300M watches.\n\nThis patch optimized the memory and time complexity for concentrate watches scenario, compared to WatchManager, both the memory consumption and time complexity improved a lot. I'll post more data later with micro benchmark result.\n\nChanged made compared to WatchManager:\n* Only keep path to watches map\n* Use BitSet to save the memory used to store watches\n* Use ConcurrentHashMap and ReadWriteLock instead of synchronized to reduce lock retention\n* Lazily clean up the closed watchers\n\nAuthor: Fangmin Lyu <allenlyu@fb.com>\n\nReviewers: Andor Moln\u00e1r <andor@apache.org>, Norbert Kalmar <nkalmar@yahoo.com>, Michael Han <hanm@apache.org>\n\nCloses #590 from lvfangmin/ZOOKEEPER-1177",
        "commit_url": "https://github.com/apache/zookeeper/commit/fdde8b006458f7b989c894af0eac7e124d271a1e",
        "buggy_code": "package org.apache.zookeeper.server;",
        "fixed_code": "package org.apache.zookeeper.server.watch;",
        "patch": "@@ -15,7 +15,7 @@\n  * limitations under the License.\n  */\n \n-package org.apache.zookeeper.server;\n+package org.apache.zookeeper.server.watch;\n \n import java.util.Collections;\n import java.util.HashMap;"
    },
    {
        "commit_id": "fdde8b006458f7b989c894af0eac7e124d271a1e",
        "commit_message": "ZOOKEEPER-1177: Add the memory optimized watch manager for concentrate watches scenario\n\nThe current HashSet based WatcherManager will consume more than 40GB memory when\ncreating 300M watches.\n\nThis patch optimized the memory and time complexity for concentrate watches scenario, compared to WatchManager, both the memory consumption and time complexity improved a lot. I'll post more data later with micro benchmark result.\n\nChanged made compared to WatchManager:\n* Only keep path to watches map\n* Use BitSet to save the memory used to store watches\n* Use ConcurrentHashMap and ReadWriteLock instead of synchronized to reduce lock retention\n* Lazily clean up the closed watchers\n\nAuthor: Fangmin Lyu <allenlyu@fb.com>\n\nReviewers: Andor Moln\u00e1r <andor@apache.org>, Norbert Kalmar <nkalmar@yahoo.com>, Michael Han <hanm@apache.org>\n\nCloses #590 from lvfangmin/ZOOKEEPER-1177",
        "commit_url": "https://github.com/apache/zookeeper/commit/fdde8b006458f7b989c894af0eac7e124d271a1e",
        "buggy_code": "package org.apache.zookeeper.server;",
        "fixed_code": "package org.apache.zookeeper.server.watch;",
        "patch": "@@ -15,7 +15,7 @@\n  * limitations under the License.\n  */\n \n-package org.apache.zookeeper.server;\n+package org.apache.zookeeper.server.watch;\n \n import java.util.Collections;\n import java.util.HashMap;"
    },
    {
        "commit_id": "fdde8b006458f7b989c894af0eac7e124d271a1e",
        "commit_message": "ZOOKEEPER-1177: Add the memory optimized watch manager for concentrate watches scenario\n\nThe current HashSet based WatcherManager will consume more than 40GB memory when\ncreating 300M watches.\n\nThis patch optimized the memory and time complexity for concentrate watches scenario, compared to WatchManager, both the memory consumption and time complexity improved a lot. I'll post more data later with micro benchmark result.\n\nChanged made compared to WatchManager:\n* Only keep path to watches map\n* Use BitSet to save the memory used to store watches\n* Use ConcurrentHashMap and ReadWriteLock instead of synchronized to reduce lock retention\n* Lazily clean up the closed watchers\n\nAuthor: Fangmin Lyu <allenlyu@fb.com>\n\nReviewers: Andor Moln\u00e1r <andor@apache.org>, Norbert Kalmar <nkalmar@yahoo.com>, Michael Han <hanm@apache.org>\n\nCloses #590 from lvfangmin/ZOOKEEPER-1177",
        "commit_url": "https://github.com/apache/zookeeper/commit/fdde8b006458f7b989c894af0eac7e124d271a1e",
        "buggy_code": "package org.apache.zookeeper.server;",
        "fixed_code": "package org.apache.zookeeper.server.watch;",
        "patch": "@@ -15,7 +15,7 @@\n  * limitations under the License.\n  */\n \n-package org.apache.zookeeper.server;\n+package org.apache.zookeeper.server.watch;\n \n import java.util.LinkedHashMap;\n import java.util.Map;"
    },
    {
        "commit_id": "fdde8b006458f7b989c894af0eac7e124d271a1e",
        "commit_message": "ZOOKEEPER-1177: Add the memory optimized watch manager for concentrate watches scenario\n\nThe current HashSet based WatcherManager will consume more than 40GB memory when\ncreating 300M watches.\n\nThis patch optimized the memory and time complexity for concentrate watches scenario, compared to WatchManager, both the memory consumption and time complexity improved a lot. I'll post more data later with micro benchmark result.\n\nChanged made compared to WatchManager:\n* Only keep path to watches map\n* Use BitSet to save the memory used to store watches\n* Use ConcurrentHashMap and ReadWriteLock instead of synchronized to reduce lock retention\n* Lazily clean up the closed watchers\n\nAuthor: Fangmin Lyu <allenlyu@fb.com>\n\nReviewers: Andor Moln\u00e1r <andor@apache.org>, Norbert Kalmar <nkalmar@yahoo.com>, Michael Han <hanm@apache.org>\n\nCloses #590 from lvfangmin/ZOOKEEPER-1177",
        "commit_url": "https://github.com/apache/zookeeper/commit/fdde8b006458f7b989c894af0eac7e124d271a1e",
        "buggy_code": "package org.apache.zookeeper.server;",
        "fixed_code": "package org.apache.zookeeper.server.watch;",
        "patch": "@@ -14,7 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.zookeeper.server;\n+package org.apache.zookeeper.server.watch;\n \n import java.util.HashMap;\n import java.util.HashSet;"
    },
    {
        "commit_id": "fdde8b006458f7b989c894af0eac7e124d271a1e",
        "commit_message": "ZOOKEEPER-1177: Add the memory optimized watch manager for concentrate watches scenario\n\nThe current HashSet based WatcherManager will consume more than 40GB memory when\ncreating 300M watches.\n\nThis patch optimized the memory and time complexity for concentrate watches scenario, compared to WatchManager, both the memory consumption and time complexity improved a lot. I'll post more data later with micro benchmark result.\n\nChanged made compared to WatchManager:\n* Only keep path to watches map\n* Use BitSet to save the memory used to store watches\n* Use ConcurrentHashMap and ReadWriteLock instead of synchronized to reduce lock retention\n* Lazily clean up the closed watchers\n\nAuthor: Fangmin Lyu <allenlyu@fb.com>\n\nReviewers: Andor Moln\u00e1r <andor@apache.org>, Norbert Kalmar <nkalmar@yahoo.com>, Michael Han <hanm@apache.org>\n\nCloses #590 from lvfangmin/ZOOKEEPER-1177",
        "commit_url": "https://github.com/apache/zookeeper/commit/fdde8b006458f7b989c894af0eac7e124d271a1e",
        "buggy_code": "package org.apache.zookeeper.server;",
        "fixed_code": "package org.apache.zookeeper.server.watch;",
        "patch": "@@ -14,7 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.zookeeper.server;\n+package org.apache.zookeeper.server.watch;\n \n import java.util.HashMap;\n import java.util.HashSet;"
    },
    {
        "commit_id": "fdde8b006458f7b989c894af0eac7e124d271a1e",
        "commit_message": "ZOOKEEPER-1177: Add the memory optimized watch manager for concentrate watches scenario\n\nThe current HashSet based WatcherManager will consume more than 40GB memory when\ncreating 300M watches.\n\nThis patch optimized the memory and time complexity for concentrate watches scenario, compared to WatchManager, both the memory consumption and time complexity improved a lot. I'll post more data later with micro benchmark result.\n\nChanged made compared to WatchManager:\n* Only keep path to watches map\n* Use BitSet to save the memory used to store watches\n* Use ConcurrentHashMap and ReadWriteLock instead of synchronized to reduce lock retention\n* Lazily clean up the closed watchers\n\nAuthor: Fangmin Lyu <allenlyu@fb.com>\n\nReviewers: Andor Moln\u00e1r <andor@apache.org>, Norbert Kalmar <nkalmar@yahoo.com>, Michael Han <hanm@apache.org>\n\nCloses #590 from lvfangmin/ZOOKEEPER-1177",
        "commit_url": "https://github.com/apache/zookeeper/commit/fdde8b006458f7b989c894af0eac7e124d271a1e",
        "buggy_code": "package org.apache.zookeeper.server;",
        "fixed_code": "package org.apache.zookeeper.server.watch;",
        "patch": "@@ -14,7 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.zookeeper.server;\n+package org.apache.zookeeper.server.watch;\n \n import java.util.Map;\n import org.apache.zookeeper.ZKTestCase;"
    },
    {
        "commit_id": "181de25c0dc703eaff77dd6415b676f09564277a",
        "commit_message": "ZOOKEEPER-1990: fix Random instances\n\nSee the jira for more info.\n\nBasically we have multiple ways of creating Random instances in ZooKeeper. Since java 1.7, the default constructor is good enough even in multi-threaded environment, we get a good seed.\nBut in some places, we just create a random instance, where System.nanotime is the seed, which is not a good practice in multi-threaded environments.\n\nI only replaced those, and I also left the tests as is, because in some cases it is intentional in them.\n\nI created the PR to bring more attention to the ticket, please feel free to share your ideas on the topic!\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #617 from nkalmar/ZOOKEEPER-1990",
        "commit_url": "https://github.com/apache/zookeeper/commit/181de25c0dc703eaff77dd6415b676f09564277a",
        "buggy_code": "private Random r = new Random(System.nanoTime());",
        "fixed_code": "private Random r = new Random();",
        "patch": "@@ -801,7 +801,7 @@ public RWServerFoundException(String msg) {\n     class SendThread extends ZooKeeperThread {\n         private long lastPingSentNs;\n         private final ClientCnxnSocket clientCnxnSocket;\n-        private Random r = new Random(System.nanoTime());        \n+        private Random r = new Random();\n         private boolean isFirstConnect = true;\n \n         void readResponse(ByteBuffer incomingBuffer) throws IOException {"
    },
    {
        "commit_id": "181de25c0dc703eaff77dd6415b676f09564277a",
        "commit_message": "ZOOKEEPER-1990: fix Random instances\n\nSee the jira for more info.\n\nBasically we have multiple ways of creating Random instances in ZooKeeper. Since java 1.7, the default constructor is good enough even in multi-threaded environment, we get a good seed.\nBut in some places, we just create a random instance, where System.nanotime is the seed, which is not a good practice in multi-threaded environments.\n\nI only replaced those, and I also left the tests as is, because in some cases it is intentional in them.\n\nI created the PR to bring more attention to the ticket, please feel free to share your ideas on the topic!\n\nAuthor: Norbert Kalmar <nkalmar@yahoo.com>\n\nReviewers: fangmin@apache.org, andor@apache.org\n\nCloses #617 from nkalmar/ZOOKEEPER-1990",
        "commit_url": "https://github.com/apache/zookeeper/commit/181de25c0dc703eaff77dd6415b676f09564277a",
        "buggy_code": "private final Random r = new Random(System.nanoTime());",
        "fixed_code": "private final Random r = new Random();",
        "patch": "@@ -61,7 +61,7 @@ public class SyncRequestProcessor extends ZooKeeperCriticalThread implements\n      * invoked after flush returns successfully.\n      */\n     private final LinkedList<Request> toFlush = new LinkedList<Request>();\n-    private final Random r = new Random(System.nanoTime());\n+    private final Random r = new Random();\n     /**\n      * The number of log entries to log before starting a snapshot\n      */"
    },
    {
        "commit_id": "cd209456b67cde5aba771b1a240ebe5607398459",
        "commit_message": "ZOOKEEPER-2926: Fix potential data consistency issue due to the session management bug\n\nAuthor: Fangmin Lyu <allenlyu@fb.com>\n\nReviewers: Michael Han <hanm@apache.org>, Andor Molnar <andor@cloudera.com>\n\nCloses #447 from lvfangmin/ZOOKEEPER-2926",
        "commit_url": "https://github.com/apache/zookeeper/commit/cd209456b67cde5aba771b1a240ebe5607398459",
        "buggy_code": "abstract void sendCloseSession();",
        "fixed_code": "public abstract void sendCloseSession();",
        "patch": "@@ -92,7 +92,7 @@ public void sendResponse(ReplyHeader h, Record r, String tag) throws IOException\n     }\n \n     /* notify the client the session is closing and close/cleanup socket */\n-    abstract void sendCloseSession();\n+    public abstract void sendCloseSession();\n \n     public abstract void process(WatchedEvent event);\n "
    },
    {
        "commit_id": "ba8932dccb227b5b52de98e33c46054014f951b7",
        "commit_message": "ZOOKEEPER-3057: Fix IPv6 literal usage\n\nThis patch contains fixes for IPv6 literal usage and corresponding unit test changes.\n\nAs per discussion in ZOOKEEPER-3057 - The issue/problem is the same as ZOOKEEPER-2989, but we changed the code to pass IPv6 literal [%s]:%s, also we changed the logging and the LocalPeerBean to show this IPv6 literal as well, which makes it easier to check when using Ipv6 and we added detailed tests for this change, sending out for review to see if it's better or not.\n\nZKPatch: 88e94e6f3665353446bf70a042c8f0cd50834f7c (extract)\n\nAuthor: Mohamed Jeelani <mjeelani@fb.com>\nAuthor: Jeelani Mohamed Abdul Khader <mjeelani@devvm3360.prn2.facebook.com>\n\nReviewers: breed@apache.org, andor@apache.org\n\nCloses #548 from mjeelanimsft/fix-ipv6-literal and squashes the following commits:\n\n69c60b74 [Mohamed Jeelani] Fix method rename from splitServerConfig(s) to getHostAndPort(s)\n47f7a854 [Mohamed Jeelani] Incorporating review feedback from @maoling\nff470498 [Mohamed Jeelani] Incorporating Review Feedback - Adding Unit Tests\nf932e16e [Mohamed Jeelani] Added Unit Test and JavaDoc for splitServerConfig()\n43e19e93 [Mohamed Jeelani] Incorporating code review comments\n33f695f2 [Jeelani Mohamed Abdul Khader] Fix IPv6 literal usage",
        "commit_url": "https://github.com/apache/zookeeper/commit/ba8932dccb227b5b52de98e33c46054014f951b7",
        "buggy_code": "String ipv6 = \"0:0:0:0:0:0:0:0:\" + clientPort;",
        "fixed_code": "String ipv6 = \"[0:0:0:0:0:0:0:0]:\" + clientPort;",
        "patch": "@@ -60,7 +60,7 @@ public void testClientAddress() throws Exception {\n \n         result = remotePeerBean.getClientAddress();\n         String ipv4 = \"0.0.0.0:\" + clientPort;\n-        String ipv6 = \"0:0:0:0:0:0:0:0:\" + clientPort;\n+        String ipv6 = \"[0:0:0:0:0:0:0:0]:\" + clientPort;\n         assertTrue(result.equals(ipv4) || result.equals(ipv6));\n         // cleanup\n         cnxnFactory.shutdown();"
    },
    {
        "commit_id": "5fdd70ac49c7a5334bdcae309719ac4ada352dde",
        "commit_message": "ZOOKEEPER-3073: fix couple of typos\n\nAuthor: Christine Poerschke <cpoerschke@bloomberg.net>\n\nReviewers: Norbert Kalmar <nkalmar@cloudera.com>, \u6bdb\u86e4\u4e1d <maoling199210191@sina.com>, Benjamin Reed <breed@apache.org>\n\nCloses #554 from cpoerschke/master-ZOOKEEPER-3073",
        "commit_url": "https://github.com/apache/zookeeper/commit/5fdd70ac49c7a5334bdcae309719ac4ada352dde",
        "buggy_code": "throw new IOException(\"Packet len\" + len + \" is out of range!\");",
        "fixed_code": "throw new IOException(\"Packet len \" + len + \" is out of range!\");",
        "patch": "@@ -118,7 +118,7 @@ void updateLastSendAndHeard() {\n     protected void readLength() throws IOException {\n         int len = incomingBuffer.getInt();\n         if (len < 0 || len >= packetLen) {\n-            throw new IOException(\"Packet len\" + len + \" is out of range!\");\n+            throw new IOException(\"Packet len \" + len + \" is out of range!\");\n         }\n         incomingBuffer = ByteBuffer.allocate(len);\n     }"
    },
    {
        "commit_id": "5fdd70ac49c7a5334bdcae309719ac4ada352dde",
        "commit_message": "ZOOKEEPER-3073: fix couple of typos\n\nAuthor: Christine Poerschke <cpoerschke@bloomberg.net>\n\nReviewers: Norbert Kalmar <nkalmar@cloudera.com>, \u6bdb\u86e4\u4e1d <maoling199210191@sina.com>, Benjamin Reed <breed@apache.org>\n\nCloses #554 from cpoerschke/master-ZOOKEEPER-3073",
        "commit_url": "https://github.com/apache/zookeeper/commit/5fdd70ac49c7a5334bdcae309719ac4ada352dde",
        "buggy_code": "Assert.assertTrue(\"excepting next transaction. expected=\" + expectedZxid + \", retreived=\" + hdr.getZxid(), (hdr.getZxid() == expectedZxid));",
        "fixed_code": "Assert.assertTrue(\"excepting next transaction. expected=\" + expectedZxid + \", retrieved=\" + hdr.getZxid(), (hdr.getZxid() == expectedZxid));",
        "patch": "@@ -91,7 +91,7 @@ public void testLoad() throws Exception {\n             hdr = itr.getHeader();\n             expectedZxid++;\n             Assert.assertTrue(\"not the same transaction. lastZxid=\" + lastZxid + \", zxid=\" + hdr.getZxid(), lastZxid != hdr.getZxid());\n-            Assert.assertTrue(\"excepting next transaction. expected=\" + expectedZxid + \", retreived=\" + hdr.getZxid(), (hdr.getZxid() == expectedZxid));\n+            Assert.assertTrue(\"excepting next transaction. expected=\" + expectedZxid + \", retrieved=\" + hdr.getZxid(), (hdr.getZxid() == expectedZxid));\n             lastZxid = hdr.getZxid();\n         }while(itr.next());\n "
    },
    {
        "commit_id": "fa34d0d01e33a40465ebd72497f37d62f0a4bce0",
        "commit_message": "ZOOKEEPER-3043: QuorumKerberosHostBasedAuthTest fails on Linux box: Unable to parse:includedir /etc/krb5.conf.d/\n\nFixes QuorumKerberosHostBasedAuthTest, see ZOOKEEPER-3043\n\n - upgrade Kerby to 1.0.0\n - upgrade commons-io to 2.5, needed by Kerby\n - fix test dir in KerberosTestUtils\n\nThis should be also cherry-picked to 3.5 branch\n\nAuthor: Enrico Olivelli <eolivelli@apache.org>\n\nReviewers: phunt@apache.org\n\nCloses #524 from eolivelli/fix/ZOOKEEPER-3043 and squashes the following commits:\n\nb4f31ad67 [Enrico Olivelli] upgrade libs\ne224e823e [Enrico Olivelli] QuorumKerberosHostBasedAuthTest fails on Linux box: Unable to parse:includedir /etc/krb5.conf.d/  - upgrade Kerby to 1.0.0  - upgrade commons-io to 2.5, needed by Kerby  - fix test dir in KerberosTestUtils\n\nChange-Id: Idaa0c05d1212c936b60fa2aa5ccb9dee114cce49",
        "commit_url": "https://github.com/apache/zookeeper/commit/fa34d0d01e33a40465ebd72497f37d62f0a4bce0",
        "buggy_code": "private static String keytabFile = new File(System.getProperty(\"test.dir\", \"build\"), UUID.randomUUID().toString())",
        "fixed_code": "private static String keytabFile = new File(System.getProperty(\"build.test.dir\", \"build\"), UUID.randomUUID().toString())",
        "patch": "@@ -24,7 +24,7 @@\n import org.apache.zookeeper.util.SecurityUtils;\n \n public class KerberosTestUtils {\n-    private static String keytabFile = new File(System.getProperty(\"test.dir\", \"build\"), UUID.randomUUID().toString())\n+    private static String keytabFile = new File(System.getProperty(\"build.test.dir\", \"build\"), UUID.randomUUID().toString())\n             .getAbsolutePath();\n \n     public static String getRealm() {"
    },
    {
        "commit_id": "dacd27568c0a20244d40f42ff8ee84b5f917128e",
        "commit_message": "ZOOKEEPER-3041: Typo in error message, affects log analysis; charater --> character\n\nAuthor: Hugh O'Brien <hugh.obrien@jet.com>\n\nReviewers: phunt@apache.org\n\nCloses #498 from hughobrienjet/master\n\nChange-Id: I3f4145c5c3eb4052cd7f0859053bb3711dfdd64c",
        "commit_url": "https://github.com/apache/zookeeper/commit/dacd27568c0a20244d40f42ff8ee84b5f917128e",
        "buggy_code": "reason = \"invalid charater @\" + i;",
        "fixed_code": "reason = \"invalid character @\" + i;",
        "patch": "@@ -90,7 +90,7 @@ public static void validatePath(String path) throws IllegalArgumentException {\n                     || c >= '\\u007f' && c <= '\\u009F'\n                     || c >= '\\ud800' && c <= '\\uf8ff'\n                     || c >= '\\ufff0' && c <= '\\uffff') {\n-                reason = \"invalid charater @\" + i;\n+                reason = \"invalid character @\" + i;\n                 break;\n             }\n         }"
    },
    {
        "commit_id": "ceaeccd6e310983d37e685a9d5fff3d7e75cf125",
        "commit_message": "ZOOKEEPER-2901: TTL Nodes don't work with Server IDs > 127\n\nThere was a major oversight when TTL nodes were implemented. The session ID generator for each server is seeded with the configured Server ID in the high byte. TTL Nodes were using the highest bit to denote a TTL node when used in the ephemeral owner. This meant that Server IDs > 127 that created ephemeral nodes would have those nodes always considered TTL nodes (with the TTL being essentially a random number).\n\nThis PR fixes the issue by disabling TTL Nodes by default. They must now be enabled in zoo.cfg. When TTL Nodes are enabled, the max Server ID changes from 255 to 254. This allows the high byte of a session ID stored in the ephemeral owner to use 0xFF to denote a TTL node.\n\nAbout this change:\n\n- The doc has been updated to note that TTL nodes are disabled by default and must be enabled via config. Also, the docs explains that when TTL nodes are enabled the max Server ID becomes 254\n- The TTL implementation has been updated to use 0xFF in the high byte of the ephemeralOwner to denote a TTL node. This decreases the max TTL by an insignificant amount\n- PrepRequestProcessor now throws `KeeperException.UnimplementedException` when an attempt to create a TTL node is made but the server has not been configured to enable TTL Nodes.\n- QuorumPeer throws a `RuntimeException` if TTL Nodes are enabled but the Server ID > 254\n- Tests have been added to validate all of this\n\nIMPORTANT NOTE: TTL Nodes created in 3.5.3 will revert to EPHEMERAL with this change. We need to discuss the impact of this and consider workarounds, etc.\n\nAuthor: randgalt <jordan@jordanzimmerman.com>\nAuthor: Abraham Fine <afine@apache.org>\n\nReviewers: phunt@apache.org\n\nCloses #377 from Randgalt/ZOOKEEPER-2901\n\nChange-Id: I6923a22ecf847710d4e7151daf8c044734873f6b",
        "commit_url": "https://github.com/apache/zookeeper/commit/ceaeccd6e310983d37e685a9d5fff3d7e75cf125",
        "buggy_code": "EphemeralType.ttlToEphemeralOwner(ttl);",
        "fixed_code": "EphemeralType.TTL.toEphemeralOwner(ttl);",
        "patch": "@@ -100,7 +100,7 @@ public boolean exec() throws CliException {\n         }\n         if (hasT) {\n             try {\n-                EphemeralType.ttlToEphemeralOwner(ttl);\n+                EphemeralType.TTL.toEphemeralOwner(ttl);\n             } catch (IllegalArgumentException e) {\n                 throw new MalformedCommandException(e.getMessage());\n             }"
    },
    {
        "commit_id": "ceaeccd6e310983d37e685a9d5fff3d7e75cf125",
        "commit_message": "ZOOKEEPER-2901: TTL Nodes don't work with Server IDs > 127\n\nThere was a major oversight when TTL nodes were implemented. The session ID generator for each server is seeded with the configured Server ID in the high byte. TTL Nodes were using the highest bit to denote a TTL node when used in the ephemeral owner. This meant that Server IDs > 127 that created ephemeral nodes would have those nodes always considered TTL nodes (with the TTL being essentially a random number).\n\nThis PR fixes the issue by disabling TTL Nodes by default. They must now be enabled in zoo.cfg. When TTL Nodes are enabled, the max Server ID changes from 255 to 254. This allows the high byte of a session ID stored in the ephemeral owner to use 0xFF to denote a TTL node.\n\nAbout this change:\n\n- The doc has been updated to note that TTL nodes are disabled by default and must be enabled via config. Also, the docs explains that when TTL nodes are enabled the max Server ID becomes 254\n- The TTL implementation has been updated to use 0xFF in the high byte of the ephemeralOwner to denote a TTL node. This decreases the max TTL by an insignificant amount\n- PrepRequestProcessor now throws `KeeperException.UnimplementedException` when an attempt to create a TTL node is made but the server has not been configured to enable TTL Nodes.\n- QuorumPeer throws a `RuntimeException` if TTL Nodes are enabled but the Server ID > 254\n- Tests have been added to validate all of this\n\nIMPORTANT NOTE: TTL Nodes created in 3.5.3 will revert to EPHEMERAL with this change. We need to discuss the impact of this and consider workarounds, etc.\n\nAuthor: randgalt <jordan@jordanzimmerman.com>\nAuthor: Abraham Fine <afine@apache.org>\n\nReviewers: phunt@apache.org\n\nCloses #377 from Randgalt/ZOOKEEPER-2901\n\nChange-Id: I6923a22ecf847710d4e7151daf8c044734873f6b",
        "commit_url": "https://github.com/apache/zookeeper/commit/ceaeccd6e310983d37e685a9d5fff3d7e75cf125",
        "buggy_code": "EphemeralType.ttlToEphemeralOwner(createTtlTxn.getTtl()),",
        "fixed_code": "EphemeralType.TTL.toEphemeralOwner(createTtlTxn.getTtl()),",
        "patch": "@@ -812,7 +812,7 @@ public ProcessTxnResult processTxn(TxnHeader header, Record txn)\n                             createTtlTxn.getPath(),\n                             createTtlTxn.getData(),\n                             createTtlTxn.getAcl(),\n-                            EphemeralType.ttlToEphemeralOwner(createTtlTxn.getTtl()),\n+                            EphemeralType.TTL.toEphemeralOwner(createTtlTxn.getTtl()),\n                             createTtlTxn.getParentCVersion(),\n                             header.getZxid(), header.getTime(), stat);\n                     rc.stat = stat;"
    },
    {
        "commit_id": "f0b67b6e49acec5f022bee25e08f82a29572c97a",
        "commit_message": "ZOOKEEPER-2978: fix potential null pointer exception when deleting node\n\nAt line 518, 'existWatches.remove(clientPath)' is null because watches for clientPath is already removed.\n\nAuthor: 07c00h <07c00h@gmail.com>\n\nReviewers: Abraham Fine <afine@apache.org>\n\nCloses #461 from achimbab/master",
        "commit_url": "https://github.com/apache/zookeeper/commit/f0b67b6e49acec5f022bee25e08f82a29572c97a",
        "buggy_code": "addTo(existWatches.remove(clientPath), result);",
        "fixed_code": "addTo(list, result);",
        "patch": "@@ -515,7 +515,7 @@ public Set<Watcher> materialize(Watcher.Event.KeeperState state,\n                 synchronized (existWatches) {\n                     Set<Watcher> list = existWatches.remove(clientPath);\n                     if (list != null) {\n-                        addTo(existWatches.remove(clientPath), result);\n+                        addTo(list, result);\n                         LOG.warn(\"We are triggering an exists watch for delete! Shouldn't happen!\");\n                     }\n                 }"
    },
    {
        "commit_id": "aefb13f2b289e19e32c0fcc5714711b07989d67f",
        "commit_message": "ZOOKEEPER-2939: Added last/min/max proposal size JMX beans\n\nhttps://issues.apache.org/jira/browse/ZOOKEEPER-2939\n- Refactor proposal serialization logic to a common place (SerializeUtils),\n- Add JMX metric to monitor jute.maxbuffer setting\n- Add JMX metric to monitor min/max/last size of generated proposals\n- Add proposal stats info to 'stat' 4lw command\n- Add proposal stats resetting to 'srst' 4lw command\n- Unit tests\n\nAuthor: Andor Moln\u00e1r <andor@cloudera.com>\nAuthor: Andor Molnar <andor@cloudera.com>\n\nReviewers: Patrick Hunt <phunt@apache.org>, Abraham Fine <afine@apache.org>\n\nCloses #415 from anmolnar/ZOOKEEPER-2933 and squashes the following commits:\n\ncf6ea5ecb [Andor Molnar] ZOOKEEPER-2933. Added proposal size statistics to 'mntr' command\ncb28df6d6 [Andor Moln\u00e1r] ZOOKEEPER-2939. Fixed findbugs issue: newline in format string\n8e6b65f9f [Andor Moln\u00e1r] ZOOKEEPER-2939: Added last/min/max proposal size JMX beans",
        "commit_url": "https://github.com/apache/zookeeper/commit/aefb13f2b289e19e32c0fcc5714711b07989d67f",
        "buggy_code": "private static final String ZK_NOT_SERVING = \"This ZooKeeper instance is not currently serving requests\";",
        "fixed_code": "import static org.apache.zookeeper.server.command.AbstractFourLetterCommand.ZK_NOT_SERVING;",
        "patch": "@@ -18,6 +18,7 @@\n package org.apache.zookeeper.server;\n \n import static org.apache.zookeeper.client.FourLetterWordMain.send4LetterWord;\n+import static org.apache.zookeeper.server.command.AbstractFourLetterCommand.ZK_NOT_SERVING;\n \n import java.io.File;\n import java.io.IOException;\n@@ -45,7 +46,6 @@ public class ZooKeeperServerStartupTest extends ZKTestCase {\n     private static int PORT = PortAssignment.unique();\n     private static String HOST = \"127.0.0.1\";\n     private static String HOSTPORT = HOST + \":\" + PORT;\n-    private static final String ZK_NOT_SERVING = \"This ZooKeeper instance is not currently serving requests\";\n \n     private ServerCnxnFactory servcnxnf;\n     private ZooKeeperServer zks;"
    },
    {
        "commit_id": "75411ab34a3d53c43c2d508b12314a9788aa417d",
        "commit_message": "ZOOKEEPER-2935: [QP MutualAuth]: Port ZOOKEEPER-1045 implementation from branch-3.5 to trunk\n\nAuthor: Abraham Fine <afine@apache.org>\n\nReviewers: phunt@apache.org\n\nCloses #417 from afine/ZOOKEEPER-2935 and squashes the following commits:\n\n99bfbe94 [Abraham Fine] Add debugging line and improve ivy.xml by removing unnecessary excludes\n1d6c7de5 [Abraham Fine] Fix missing test.data.kerberos.dir in build.xml\n06d0b6fa [Abraham Fine] ZOOKEEPER-2935: [QP MutualAuth]: Port ZOOKEEPER-1045 implementation from  branch-3.5 to trunk.\n\nChange-Id: I2b88221c0006e4336a39f74fd5a87d1aded68c90",
        "commit_url": "https://github.com/apache/zookeeper/commit/75411ab34a3d53c43c2d508b12314a9788aa417d",
        "buggy_code": "LOG.info(\"successfully logged in.\");",
        "fixed_code": "LOG.info(\"{} successfully logged in.\", loginContextName);",
        "patch": "@@ -299,7 +299,7 @@ private synchronized LoginContext login(final String loginContextName) throws Lo\n         }\n         LoginContext loginContext = new LoginContext(loginContextName,callbackHandler);\n         loginContext.login();\n-        LOG.info(\"successfully logged in.\");\n+        LOG.info(\"{} successfully logged in.\", loginContextName);\n         return loginContext;\n     }\n "
    },
    {
        "commit_id": "75411ab34a3d53c43c2d508b12314a9788aa417d",
        "commit_message": "ZOOKEEPER-2935: [QP MutualAuth]: Port ZOOKEEPER-1045 implementation from branch-3.5 to trunk\n\nAuthor: Abraham Fine <afine@apache.org>\n\nReviewers: phunt@apache.org\n\nCloses #417 from afine/ZOOKEEPER-2935 and squashes the following commits:\n\n99bfbe94 [Abraham Fine] Add debugging line and improve ivy.xml by removing unnecessary excludes\n1d6c7de5 [Abraham Fine] Fix missing test.data.kerberos.dir in build.xml\n06d0b6fa [Abraham Fine] ZOOKEEPER-2935: [QP MutualAuth]: Port ZOOKEEPER-1045 implementation from  branch-3.5 to trunk.\n\nChange-Id: I2b88221c0006e4336a39f74fd5a87d1aded68c90",
        "commit_url": "https://github.com/apache/zookeeper/commit/75411ab34a3d53c43c2d508b12314a9788aa417d",
        "buggy_code": "cnxManager = new QuorumCnxManager(peer);",
        "fixed_code": "cnxManager = peer.createCnxnManager();",
        "patch": "@@ -95,7 +95,7 @@ public void testLostMessage() throws Exception {\n \n     void mockServer() throws InterruptedException, IOException {\n         QuorumPeer peer = new QuorumPeer(peers, tmpdir[0], tmpdir[0], port[0], 3, 0, 1000, 2, 2);\n-        cnxManager = new QuorumCnxManager(peer);\n+        cnxManager = peer.createCnxnManager();\n         cnxManager.listener.start();\n \n         cnxManager.toSend(1l, FLETestUtils.createMsg(ServerState.LOOKING.ordinal(), 0, 0, 0));"
    },
    {
        "commit_id": "75411ab34a3d53c43c2d508b12314a9788aa417d",
        "commit_message": "ZOOKEEPER-2935: [QP MutualAuth]: Port ZOOKEEPER-1045 implementation from branch-3.5 to trunk\n\nAuthor: Abraham Fine <afine@apache.org>\n\nReviewers: phunt@apache.org\n\nCloses #417 from afine/ZOOKEEPER-2935 and squashes the following commits:\n\n99bfbe94 [Abraham Fine] Add debugging line and improve ivy.xml by removing unnecessary excludes\n1d6c7de5 [Abraham Fine] Fix missing test.data.kerberos.dir in build.xml\n06d0b6fa [Abraham Fine] ZOOKEEPER-2935: [QP MutualAuth]: Port ZOOKEEPER-1045 implementation from  branch-3.5 to trunk.\n\nChange-Id: I2b88221c0006e4336a39f74fd5a87d1aded68c90",
        "commit_url": "https://github.com/apache/zookeeper/commit/75411ab34a3d53c43c2d508b12314a9788aa417d",
        "buggy_code": "super(peer, new QuorumCnxManager(peer));",
        "fixed_code": "super(peer, peer.createCnxnManager());",
        "patch": "@@ -41,7 +41,7 @@ public class FLEPredicateTest extends ZKTestCase {\n     \n     class MockFLE extends FastLeaderElection {\n         MockFLE(QuorumPeer peer){\n-            super(peer, new QuorumCnxManager(peer));\n+            super(peer, peer.createCnxnManager());\n         }\n         \n         boolean predicate(long newId, long newZxid, long newEpoch, long curId, long curZxid, long curEpoch){"
    },
    {
        "commit_id": "b5621c698baf5d3258ebcf9342a23aa4889d03ca",
        "commit_message": "ZOOKEEPER-2795: Change log level for \"ZKShutdownHandler is not registered\" error message\n\n`ZKShutdownHandler` may not be registered if the user creates a `ZooKeeperServer` object outside of `ZooKeeperServerMain.runFromConfig`.\n\nWe should change the log level of the message that is printed on state changes of `ZooKeeperServer` when `ZKShutdownHandler` is missing to something lower.\n\nAuthor: Abraham Fine <afine@apache.org>\n\nReviewers: phunt@apache.org\n\nCloses #273 from afine/ZOOKEEPER-2795\n\nChange-Id: I8b048f6b79870064325925a6ff52f7d1f3e5e1da\n(cherry picked from commit 86e35b5ae4e846e84dcc3ec08f724af7aa4ec2aa)\nSigned-off-by: Patrick Hunt <phunt@apache.org>",
        "commit_url": "https://github.com/apache/zookeeper/commit/b5621c698baf5d3258ebcf9342a23aa4889d03ca",
        "buggy_code": "LOG.error(\"ZKShutdownHandler is not registered, so ZooKeeper server \"",
        "fixed_code": "LOG.debug(\"ZKShutdownHandler is not registered, so ZooKeeper server \"",
        "patch": "@@ -506,7 +506,7 @@ protected void setState(State state) {\n         if (zkShutdownHandler != null) {\n             zkShutdownHandler.handle(state);\n         } else {\n-            LOG.error(\"ZKShutdownHandler is not registered, so ZooKeeper server \"\n+            LOG.debug(\"ZKShutdownHandler is not registered, so ZooKeeper server \"\n                     + \"won't take any action on ERROR or SHUTDOWN server state changes\");\n         }\n     }"
    },
    {
        "commit_id": "0706b40afad079f19fe9f76c99bbb7ec69780dbd",
        "commit_message": "ZOOKEEPER-2872: Interrupted snapshot sync causes data loss\n\nThis requires the fix in ZOOKEEPER-2870: Improve the efficiency of AtomicFileOutputStream\n\nAuthor: Brian Nixon <nixon@fb.com>\n\nReviewers: Michael Han <hanm@apache.org>\n\nCloses #333 from enixon/snap-sync",
        "commit_url": "https://github.com/apache/zookeeper/commit/0706b40afad079f19fe9f76c99bbb7ec69780dbd",
        "buggy_code": "snaplog.save(zkdb.getDataTree(), zkdb.getSessionWithTimeOuts());",
        "fixed_code": "snaplog.save(zkdb.getDataTree(), zkdb.getSessionWithTimeOuts(), false);",
        "patch": "@@ -75,7 +75,7 @@ public void testTruncationStreamReset() throws Exception {\n         ZKDatabase zkdb = new ZKDatabase(snaplog);\n         // make sure to snapshot, so that we have something there when\n         // truncateLog reloads the db\n-        snaplog.save(zkdb.getDataTree(), zkdb.getSessionWithTimeOuts());\n+        snaplog.save(zkdb.getDataTree(), zkdb.getSessionWithTimeOuts(), false);\n \n         for (int i = 1; i <= 100; i++) {\n             append(zkdb, i);"
    },
    {
        "commit_id": "41b30a74ec8b33255e99d97a102de53d315c28b3",
        "commit_message": "ZOOKEEPER-2856: ZooKeeperSaslClient#respondToServer should log exception\n\nSee https://issues.apache.org/jira/browse/ZOOKEEPER-2856 for details.\n\nWhen upstream like HBase call ZooKeeperSaslClient with security enabled, we sometimes get error in HBase logs like:\n`SASL authentication failed using login context 'Client'.`\nThis error occures when getting SaslException in ZooKeeperSaslClient#respondToServer :\n`catch (SaslException e) {`\n                `LOG.error(\"SASL authentication failed using login context '\" +`\n                       ` this.getLoginContext() + \"'.\");`\n                `saslState = SaslState.FAILED;`\n                `gotLastPacket = true;`\n`  }`\nThis error makes user confused without explicit exception message. So I think we can add exception message to the log.\n\nThe patch uses  parameterized logging to add the exception message to the log.\n\nAuthor: panyuxuan <panyuxuan@cmss.chinamobile.com>\n\nReviewers: Michael Han <hanm@apache.org>\n\nCloses #318 from pyx1990/ZOOKEEPER-2856",
        "commit_url": "https://github.com/apache/zookeeper/commit/41b30a74ec8b33255e99d97a102de53d315c28b3",
        "buggy_code": "this.getLoginContext() + \"'.\");",
        "fixed_code": "this.getLoginContext() + \"' with exception: {}\", e);",
        "patch": "@@ -361,7 +361,7 @@ public void respondToServer(byte[] serverToken, ClientCnxn cnxn) {\n                 }\n             } catch (SaslException e) {\n                 LOG.error(\"SASL authentication failed using login context '\" +\n-                        this.getLoginContext() + \"'.\");\n+                        this.getLoginContext() + \"' with exception: {}\", e);\n                 saslState = SaslState.FAILED;\n                 gotLastPacket = true;\n             }"
    },
    {
        "commit_id": "ce0aa2bac7faf1eff3a6317aa8fc889ba13e7130",
        "commit_message": "ZOOKEEPER-2796: Fix broken test testCreateNodeWithoutData caused by ZK-2757.\n\nZK-2757 introduces a new MalformedPathException which intercepts and wraps the IllegalArgumentException that this test was expecting.\n\nAuthor: Michael Han <hanm@apache.org>\n\nCloses #265 from hanm/ZOOKEEPER-2796",
        "commit_url": "https://github.com/apache/zookeeper/commit/ce0aa2bac7faf1eff3a6317aa8fc889ba13e7130",
        "buggy_code": "} catch (IllegalArgumentException e) {",
        "fixed_code": "} catch (MalformedPathException e) {",
        "patch": "@@ -293,7 +293,7 @@ public void testCreateNodeWithoutData() throws Exception {\n                     .processZKCmd(zkMain.cl));\n             Assert.fail(\"Created the node with wrong option should \"\n                     + \"throw Exception.\");\n-        } catch (IllegalArgumentException e) {\n+        } catch (MalformedPathException e) {\n             Assert.assertEquals(\"Path must start with / character\", e\n                     .getMessage());\n         }"
    },
    {
        "commit_id": "b9beabf5cfbb8e447f67a8050486ca2821132f61",
        "commit_message": "ZOOKEEPER-2628: Fix findbug warnings.\n\nThis PR fixed 19 find bug warnings and disabled one find bug warning:\n\nMalicious code vulnerability Warnings\norg.apache.zookeeper.ZooDefs$Ids.OPEN_ACL_UNSAFE is a mutable collection\nBug type MS_MUTABLE_COLLECTION (click for details)\nIn class org.apache.zookeeper.ZooDefs$Ids\nField org.apache.zookeeper.ZooDefs$Ids.OPEN_ACL_UNSAFE\nAt ZooDefs.java:[line 116]\n\nWe will use ZOOKEEPER-1362 for fixing this specific warning, which might require change to ZooDefs interface.\n\nAuthor: Michael Han <hanm@cloudera.com>\n\nReviewers: fpj <fpj@apache.org>, breed <breed@apache.org>, Edward Ribeiro <edward.ribeiro@gmail.com>, Allan Lyu <lvfangmin@gmail.com>\n\nCloses #102 from hanm/ZOOKEEPER-2628",
        "commit_url": "https://github.com/apache/zookeeper/commit/b9beabf5cfbb8e447f67a8050486ca2821132f61",
        "buggy_code": "String cmd = FourLetterCommands.cmd2String.get(len);",
        "fixed_code": "String cmd = FourLetterCommands.getCmdMapView().get(len);",
        "patch": "@@ -478,7 +478,7 @@ private boolean checkFourLetterWord(final SelectionKey k, final int len)\n     {\n         // We take advantage of the limited size of the length to look\n         // for cmds. They are all 4-bytes which fits inside of an int\n-        String cmd = FourLetterCommands.cmd2String.get(len);\n+        String cmd = FourLetterCommands.getCmdMapView().get(len);\n         if (cmd == null) {\n             return false;\n         }"
    },
    {
        "commit_id": "b9beabf5cfbb8e447f67a8050486ca2821132f61",
        "commit_message": "ZOOKEEPER-2628: Fix findbug warnings.\n\nThis PR fixed 19 find bug warnings and disabled one find bug warning:\n\nMalicious code vulnerability Warnings\norg.apache.zookeeper.ZooDefs$Ids.OPEN_ACL_UNSAFE is a mutable collection\nBug type MS_MUTABLE_COLLECTION (click for details)\nIn class org.apache.zookeeper.ZooDefs$Ids\nField org.apache.zookeeper.ZooDefs$Ids.OPEN_ACL_UNSAFE\nAt ZooDefs.java:[line 116]\n\nWe will use ZOOKEEPER-1362 for fixing this specific warning, which might require change to ZooDefs interface.\n\nAuthor: Michael Han <hanm@cloudera.com>\n\nReviewers: fpj <fpj@apache.org>, breed <breed@apache.org>, Edward Ribeiro <edward.ribeiro@gmail.com>, Allan Lyu <lvfangmin@gmail.com>\n\nCloses #102 from hanm/ZOOKEEPER-2628",
        "commit_url": "https://github.com/apache/zookeeper/commit/b9beabf5cfbb8e447f67a8050486ca2821132f61",
        "buggy_code": "String cmd = FourLetterCommands.cmd2String.get(len);",
        "fixed_code": "String cmd = FourLetterCommands.getCmdMapView().get(len);",
        "patch": "@@ -267,7 +267,7 @@ private boolean checkFourLetterWord(final Channel channel,\n     {\n         // We take advantage of the limited size of the length to look\n         // for cmds. They are all 4-bytes which fits inside of an int\n-        String cmd = FourLetterCommands.cmd2String.get(len);\n+        String cmd = FourLetterCommands.getCmdMapView().get(len);\n         if (cmd == null) {\n             return false;\n         }"
    },
    {
        "commit_id": "179c8db6df20beccd64fac2c99ca77dbe8a3242c",
        "commit_message": "ZOOKEEPER-1525: Plumb ZooKeeperServer object into auth plugins\n\nBased on patch work from https://issues.apache.org/jira/browse/ZOOKEEPER-1525\n\nCreated ServerAuthenticationProvider which has a method to accept the ZooKeeper\nserver so that auth can be done using values in the ZK database. As this is a new\ninterface, existing implementations aren't affected helping backward compatibility\n\nAuthor: randgalt <jordan@jordanzimmerman.com>\n\nReviewers: fpj <fpj@apache.org>, Allan Lyu <lvfangmin@gmail.com>\n\nCloses #84 from Randgalt/ZOOKEEPER-1525",
        "commit_url": "https://github.com/apache/zookeeper/commit/179c8db6df20beccd64fac2c99ca77dbe8a3242c",
        "buggy_code": "authInfo.add(new Id(\"ip\", addr.getHostAddress()));",
        "fixed_code": "addAuthInfo(new Id(\"ip\", addr.getHostAddress()));",
        "patch": "@@ -112,7 +112,7 @@ public NIOServerCnxn(ZooKeeperServer zk, SocketChannel sock,\n         sock.socket().setSoLinger(false, -1);\n         InetAddress addr = ((InetSocketAddress) sock.socket()\n                 .getRemoteSocketAddress()).getAddress();\n-        authInfo.add(new Id(\"ip\", addr.getHostAddress()));\n+        addAuthInfo(new Id(\"ip\", addr.getHostAddress()));\n         this.sessionTimeout = factory.sessionlessCnxnTimeout;\n     }\n "
    },
    {
        "commit_id": "9bb9b1d7016433ce98cd33be904ee1e77d484ffd",
        "commit_message": "ZOOKEEPER-2335: Java Compilation Error in ClientCnxn.java\n(Arshad Mohammad via rgs)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1718205 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/9bb9b1d7016433ce98cd33be904ee1e77d484ffd",
        "buggy_code": "import org.apache.log4j.MDC;",
        "fixed_code": "import org.slf4j.MDC;",
        "patch": "@@ -46,7 +46,6 @@\n import org.apache.jute.BinaryInputArchive;\n import org.apache.jute.BinaryOutputArchive;\n import org.apache.jute.Record;\n-import org.apache.log4j.MDC;\n import org.apache.zookeeper.AsyncCallback.ACLCallback;\n import org.apache.zookeeper.AsyncCallback.Children2Callback;\n import org.apache.zookeeper.AsyncCallback.ChildrenCallback;\n@@ -88,6 +87,7 @@\n import org.apache.zookeeper.server.ZooTrace;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.slf4j.MDC;\n \n /**\n  * This class manages the socket i/o for the client. ClientCnxn maintains a list"
    },
    {
        "commit_id": "1ea6879ba784aacc1cd0b4a91967f64f51d7aae9",
        "commit_message": "ZOOKEEPER-2279: QuorumPeer loadDataBase() error message is incorrect(Arshad Mohammad via rakeshr)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1705221 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/1ea6879ba784aacc1cd0b4a91967f64f51d7aae9",
        "buggy_code": "throw new IOException(\"The current epoch, \" + ZxidUtils.zxidToString(currentEpoch) + \" is less than the accepted epoch, \" + ZxidUtils.zxidToString(acceptedEpoch));",
        "fixed_code": "throw new IOException(\"The accepted epoch, \" + ZxidUtils.zxidToString(acceptedEpoch) + \" is less than the current epoch, \" + ZxidUtils.zxidToString(currentEpoch));",
        "patch": "@@ -762,7 +762,7 @@ private void loadDataBase() {\n             \twriteLongToFile(ACCEPTED_EPOCH_FILENAME, acceptedEpoch);\n             }\n             if (acceptedEpoch < currentEpoch) {\n-                throw new IOException(\"The current epoch, \" + ZxidUtils.zxidToString(currentEpoch) + \" is less than the accepted epoch, \" + ZxidUtils.zxidToString(acceptedEpoch));\n+                throw new IOException(\"The accepted epoch, \" + ZxidUtils.zxidToString(acceptedEpoch) + \" is less than the current epoch, \" + ZxidUtils.zxidToString(currentEpoch));\n             }\n         } catch(IOException ie) {\n             LOG.error(\"Unable to load database on disk\", ie);"
    },
    {
        "commit_id": "b90a32fa1518c4f6c46d5c7d25cda4937a4f496f",
        "commit_message": "ZOOKEEPER-2207: Enhance error logs with LearnerHandler.packetToString()\n(Hitoshi Mitake via rgs)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1683848 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/b90a32fa1518c4f6c46d5c7d25cda4937a4f496f",
        "buggy_code": "LOG.warn(\"unknown type \" + qp.getType());",
        "fixed_code": "LOG.warn(\"Unknown packet type: {}\", LearnerHandler.packetToString(qp));",
        "patch": "@@ -165,7 +165,7 @@ protected void processPacket(QuorumPacket qp) throws Exception{\n             fzk.sync();\n             break;\n         default:\n-            LOG.warn(\"unknown type \" + qp.getType());\n+            LOG.warn(\"Unknown packet type: {}\", LearnerHandler.packetToString(qp));\n             break;\n         }\n     }"
    },
    {
        "commit_id": "506a4964151a1ebff055647f9cbed7c9eaf77967",
        "commit_message": "ZOOKEEPER-2176 Unclear error message should be info not error (rgs via hdeng)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1677865 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/506a4964151a1ebff055647f9cbed7c9eaf77967",
        "buggy_code": "LOG.error(\"writeToDisk == true but configFilename == null\");",
        "fixed_code": "LOG.info(\"writeToDisk == true but configFilename == null\");",
        "patch": "@@ -1391,7 +1391,7 @@ public synchronized QuorumVerifier setQuorumVerifier(QuorumVerifier qv, boolean\n                     LOG.error(\"Error closing file: \", e.getMessage());\n                 }\n             } else {\n-                LOG.error(\"writeToDisk == true but configFilename == null\");\n+                LOG.info(\"writeToDisk == true but configFilename == null\");\n             }\n         }\n "
    },
    {
        "commit_id": "13e628085acadaa4ee32fbab094e94880fed04b0",
        "commit_message": "ZOOKEEPER-1979. Fix Performance Warnings found by Findbugs 2.0.3 (Hongchao Deng via phunt)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1612457 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/13e628085acadaa4ee32fbab094e94880fed04b0",
        "buggy_code": "this.cnxTO = new Integer(cnxToValue);",
        "fixed_code": "this.cnxTO = Integer.parseInt(cnxToValue);",
        "patch": "@@ -144,7 +144,7 @@ public QuorumCnxManager(QuorumPeer self) {\n         \n         String cnxToValue = System.getProperty(\"zookeeper.cnxTimeout\");\n         if(cnxToValue != null){\n-            this.cnxTO = new Integer(cnxToValue); \n+            this.cnxTO = Integer.parseInt(cnxToValue);\n         }\n         \n         this.self = self;"
    },
    {
        "commit_id": "b848a573d4e60cd3222adf130fb6b8942b280467",
        "commit_message": "ZOOKEEPER-1771. ZooInspector authentication (Benjamin Jaton via phunt) part 2 - fix license headers\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1530158 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/b848a573d4e60cd3222adf130fb6b8942b280467",
        "buggy_code": "if (line != null && line.length() > 0) {",
        "fixed_code": "if (line != null && line.length() > 0 && !line.startsWith(\"#\")) {",
        "patch": "@@ -732,7 +732,7 @@ public List<String> loadNodeViewersFile(File selectedFile)\n                 try {\r\n                     while (buff.ready()) {\r\n                         String line = buff.readLine();\r\n-                        if (line != null && line.length() > 0) {\r\n+                        if (line != null && line.length() > 0 && !line.startsWith(\"#\")) {\r\n                             result.add(line);\r\n                         }\r\n                     }\r"
    },
    {
        "commit_id": "52cf2242c993bb27c3305899ab86c2807ac269fc",
        "commit_message": "ZOOKEEPER-1411. Consolidate membership management, distinguish between static and dynamic configuration parameters. A small bug fix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1463329 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/52cf2242c993bb27c3305899ab86c2807ac269fc",
        "buggy_code": "} else if ((key.startsWith(\"server.\") || key.startsWith(\"group\") || key.startsWith(\"weight\")) && zkProp.entrySet().contains(\"dynamicConfigFile\")){",
        "fixed_code": "} else if ((key.startsWith(\"server.\") || key.startsWith(\"group\") || key.startsWith(\"weight\")) && zkProp.containsKey(\"dynamicConfigFile\")){",
        "patch": "@@ -225,7 +225,7 @@ public void parseProperties(Properties zkProp)\n                 snapRetainCount = Integer.parseInt(value);\n             } else if (key.equals(\"autopurge.purgeInterval\")) {\n                 purgeInterval = Integer.parseInt(value);\n-            } else if ((key.startsWith(\"server.\") || key.startsWith(\"group\") || key.startsWith(\"weight\")) && zkProp.entrySet().contains(\"dynamicConfigFile\")){                \n+            } else if ((key.startsWith(\"server.\") || key.startsWith(\"group\") || key.startsWith(\"weight\")) && zkProp.containsKey(\"dynamicConfigFile\")){                \n                throw new ConfigException(\"parameter: \" + key + \" must be in a separate dynamic config file\");\n             } else {\n                 System.setProperty(\"zookeeper.\" + key, value);"
    },
    {
        "commit_id": "9ac5756b18d377774f49064e6e1de3f39d059b87",
        "commit_message": "ZOOKEEPER-1216. Fix more eclipse compiler warnings, also in Tests (Thomas Koch via phunt)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1188523 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/9ac5756b18d377774f49064e6e1de3f39d059b87",
        "buggy_code": "@SuppressWarnings(\"unchecked\")",
        "fixed_code": "@SuppressWarnings({ \"unchecked\", \"rawtypes\" })",
        "patch": "@@ -29,7 +29,7 @@ public JLineZNodeCompletor(ZooKeeper zk) {\n         this.zk = zk;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n+    @SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n     public int complete(String buffer, int cursor, List candidates) {\n         // Guarantee that the final token is the one we're expanding\n         buffer = buffer.substring(0,cursor);"
    },
    {
        "commit_id": "9ac5756b18d377774f49064e6e1de3f39d059b87",
        "commit_message": "ZOOKEEPER-1216. Fix more eclipse compiler warnings, also in Tests (Thomas Koch via phunt)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1188523 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/9ac5756b18d377774f49064e6e1de3f39d059b87",
        "buggy_code": "EventType et = EventType.fromInt(324242);",
        "fixed_code": "EventType.fromInt(324242);",
        "patch": "@@ -40,7 +40,7 @@ public void testIntConversion() {\n     @Test\n     public void testInvalidIntConversion() {\n         try {\n-            EventType et = EventType.fromInt(324242);\n+            EventType.fromInt(324242);\n             Assert.fail(\"Was able to create an invalid EventType via an integer\");\n         } catch(RuntimeException re) {\n             // we're good."
    },
    {
        "commit_id": "9ac5756b18d377774f49064e6e1de3f39d059b87",
        "commit_message": "ZOOKEEPER-1216. Fix more eclipse compiler warnings, also in Tests (Thomas Koch via phunt)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1188523 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/9ac5756b18d377774f49064e6e1de3f39d059b87",
        "buggy_code": "KeeperState ks = KeeperState.fromInt(324142);",
        "fixed_code": "KeeperState.fromInt(324142);",
        "patch": "@@ -41,7 +41,7 @@ public void testIntConversion() {\n     @Test\n     public void testInvalidIntConversion() {\n         try {\n-            KeeperState ks = KeeperState.fromInt(324142);\n+            KeeperState.fromInt(324142);\n             Assert.fail(\"Was able to create an invalid KeeperState via an integer\");\n         } catch(RuntimeException re) {\n             // we're good."
    },
    {
        "commit_id": "9ac5756b18d377774f49064e6e1de3f39d059b87",
        "commit_message": "ZOOKEEPER-1216. Fix more eclipse compiler warnings, also in Tests (Thomas Koch via phunt)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1188523 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/9ac5756b18d377774f49064e6e1de3f39d059b87",
        "buggy_code": "import java.util.Collection;",
        "fixed_code": "@SuppressWarnings(\"deprecation\")",
        "patch": "@@ -25,7 +25,6 @@\n import java.net.InetSocketAddress;\n import java.net.SocketException;\n import java.nio.ByteBuffer;\n-import java.util.Collection;\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Map;\n@@ -49,6 +48,7 @@\n import org.junit.Before;\n import org.junit.Test;\n \n+@SuppressWarnings(\"deprecation\")\n public class LENonTerminateTest extends ZKTestCase {\n     public static class MockLeaderElection extends LeaderElection {\n         public MockLeaderElection(QuorumPeer self) {"
    },
    {
        "commit_id": "4e163743a5df20698fc4bfe1fdf76a45f2ec4ae3",
        "commit_message": "ZOOKEEPER-1169. Fix compiler (eclipse) warnings in (generated) jute code (Thomas Koch via phunt)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1164710 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/4e163743a5df20698fc4bfe1fdf76a45f2ec4ae3",
        "buggy_code": "return \"    ret = Arrays.toString(\"+fname+\").hashCode();\\n\";",
        "fixed_code": "return \"    ret = java.util.Arrays.toString(\"+fname+\").hashCode();\\n\";",
        "patch": "@@ -76,7 +76,7 @@ public String genJavaEquals(String fname, String peer) {\n     }\n     \n     public String genJavaHashCode(String fname) {\n-        return \"    ret = Arrays.toString(\"+fname+\").hashCode();\\n\";\n+        return \"    ret = java.util.Arrays.toString(\"+fname+\").hashCode();\\n\";\n     }\n     \n     public String genJavaSlurpBytes(String b, String s, String l) {"
    },
    {
        "commit_id": "eb51de49f723542a17e722fa817d81605a04c74c",
        "commit_message": "ZOOKEEPER-1046: Creating a new sequential node results in a ZNODEEXISTS error\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1138957 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/eb51de49f723542a17e722fa817d81605a04c74c",
        "buggy_code": "dt.createNode(\"/xyz\", new byte[0], null, 0, 1, 1);",
        "fixed_code": "dt.createNode(\"/xyz\", new byte[0], null, 0, dt.getNode(\"/\").stat.getCversion()+1, 1, 1);",
        "patch": "@@ -53,7 +53,7 @@ public void process(WatchedEvent event) {\n         // set a watch on the root node\n         dt.getChildren(\"/\", new Stat(), watcher);\n         // add a new node, should trigger a watch\n-        dt.createNode(\"/xyz\", new byte[0], null, 0, 1, 1);\n+        dt.createNode(\"/xyz\", new byte[0], null, 0, dt.getNode(\"/\").stat.getCversion()+1, 1, 1);\n         Assert.assertFalse(\"Root node watch not triggered\",!watcher.fired);\n     }\n "
    },
    {
        "commit_id": "eb51de49f723542a17e722fa817d81605a04c74c",
        "commit_message": "ZOOKEEPER-1046: Creating a new sequential node results in a ZNODEEXISTS error\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1138957 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/eb51de49f723542a17e722fa817d81605a04c74c",
        "buggy_code": "SerializationPerfTest.createNodes(tree, \"/\", depth, width, new byte[len]);",
        "fixed_code": "SerializationPerfTest.createNodes(tree, \"/\", depth, tree.getNode(\"/\").stat.getCversion(), width, new byte[len]);",
        "patch": "@@ -40,7 +40,7 @@ private static void deserializeTree(int depth, int width, int len)\n         int count;\n         {\n             DataTree tree = new DataTree();\n-            SerializationPerfTest.createNodes(tree, \"/\", depth, width, new byte[len]);\n+            SerializationPerfTest.createNodes(tree, \"/\", depth, tree.getNode(\"/\").stat.getCversion(), width, new byte[len]);\n             count = tree.getNodeCount();\n \n             ByteArrayOutputStream baos = new ByteArrayOutputStream();"
    },
    {
        "commit_id": "1fdcaaf4113114dbc27e1687f12efa14442a8d42",
        "commit_message": "ZOOKEEPER-1058: fix typo in opToString for getData\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/trunk@1125544 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/1fdcaaf4113114dbc27e1687f12efa14442a8d42",
        "buggy_code": "return \"getDate\";",
        "fixed_code": "return \"getData\";",
        "patch": "@@ -155,7 +155,7 @@ static String op2String(int op) {\n         case OpCode.exists:\n             return \"exists\";\n         case OpCode.getData:\n-            return \"getDate\";\n+            return \"getData\";\n         case OpCode.setData:\n             return \"setData\";\n         case OpCode.sync:"
    },
    {
        "commit_id": "f81da9fecd15be58ba45ae54c59109c4153773ae",
        "commit_message": "ZOOKEEPER-428. logging should be makred as warn rathen than error in NIOServerCnxn. (phunt via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@785019 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/f81da9fecd15be58ba45ae54c59109c4153773ae",
        "buggy_code": "LOG.error(msg);",
        "fixed_code": "LOG.warn(msg);",
        "patch": "@@ -584,7 +584,7 @@ private void readConnectRequest() throws IOException, InterruptedException {\n                 + \" our last zxid is 0x\"\n                 + Long.toHexString(zk.dataTree.lastProcessedZxid);\n \n-            LOG.error(msg);\n+            LOG.warn(msg);\n             throw new IOException(msg);\n         }\n         sessionTimeout = connReq.getTimeOut();"
    },
    {
        "commit_id": "016f8c2ab755536ccc5daf953108978e9e0e9513",
        "commit_message": "reverting ZOOKEEPER-408 patch since it breaks the build\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@781266 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/016f8c2ab755536ccc5daf953108978e9e0e9513",
        "buggy_code": "public static final int snapCount = ZooKeeperServer.getSnapCount();",
        "fixed_code": "public static int snapCount = ZooKeeperServer.getSnapCount();",
        "patch": "@@ -51,7 +51,7 @@ public class SyncRequestProcessor extends Thread implements RequestProcessor {\n     /**\n      * The number of log entries to log before starting a snapshot\n      */\n-    public static final int snapCount = ZooKeeperServer.getSnapCount();\n+    public static int snapCount = ZooKeeperServer.getSnapCount();\n \n     private Request requestOfDeath = Request.requestOfDeath;\n "
    },
    {
        "commit_id": "1b7dbc1c523d4105899340b064f169e88a727081",
        "commit_message": "ZOOKEEPER-226. fix exists calls that fail on server if node has null data. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@718799 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/1b7dbc1c523d4105899340b064f169e88a727081",
        "buggy_code": "to.setDataLength(data.length);",
        "fixed_code": "to.setDataLength(data == null ? 0 : data.length);",
        "patch": "@@ -96,7 +96,7 @@ public void copyStat(Stat to) {\n         to.setPzxid(stat.getPzxid());\n         to.setVersion(stat.getVersion());\n         to.setEphemeralOwner(stat.getEphemeralOwner());\n-        to.setDataLength(data.length);\n+        to.setDataLength(data == null ? 0 : data.length);\n         to.setNumChildren(children.size());\n     }\n "
    },
    {
        "commit_id": "ea54ef0825c6670cc6714e749d391f477420b118",
        "commit_message": "ZOOKEEPER-136.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@701369 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/ea54ef0825c6670cc6714e749d391f477420b118",
        "buggy_code": "super(\"ProcessThread\");",
        "fixed_code": "super(\"ProcessThread:\" + zks.getClientPort());",
        "patch": "@@ -76,7 +76,7 @@ public class PrepRequestProcessor extends Thread implements RequestProcessor {\n \n     public PrepRequestProcessor(ZooKeeperServer zks,\n             RequestProcessor nextProcessor) {\n-        super(\"ProcessThread\");\n+        super(\"ProcessThread:\" + zks.getClientPort());\n         this.nextProcessor = nextProcessor;\n         this.zks = zks;\n "
    },
    {
        "commit_id": "ea54ef0825c6670cc6714e749d391f477420b118",
        "commit_message": "ZOOKEEPER-136.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@701369 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/ea54ef0825c6670cc6714e749d391f477420b118",
        "buggy_code": "super(\"SyncThread\");",
        "fixed_code": "super(\"SyncThread:\" + zks.getClientPort());",
        "patch": "@@ -54,7 +54,7 @@ public class SyncRequestProcessor extends Thread implements RequestProcessor {\n \n     public SyncRequestProcessor(ZooKeeperServer zks,\n             RequestProcessor nextProcessor) {\n-        super(\"SyncThread\");\n+        super(\"SyncThread:\" + zks.getClientPort());\n         this.zks = zks;\n         this.nextProcessor = nextProcessor;\n         start();"
    },
    {
        "commit_id": "92c538d4d830d61fcaa4346c356e63d8f23bd2f3",
        "commit_message": "ZOOKEEPER-123. Fix  the wrong class specified for the logger. (Jakob Homan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@688813 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/92c538d4d830d61fcaa4346c356e63d8f23bd2f3",
        "buggy_code": "private static final Logger LOG = Logger.getLogger(ZooKeeperServer.class);",
        "fixed_code": "private static final Logger LOG = Logger.getLogger(ClientCnxn.class);",
        "patch": "@@ -73,7 +73,7 @@\n  *\n  */\n class ClientCnxn {\n-    private static final Logger LOG = Logger.getLogger(ZooKeeperServer.class);\n+    private static final Logger LOG = Logger.getLogger(ClientCnxn.class);\n \n     private ArrayList<InetSocketAddress> serverAddrs = new ArrayList<InetSocketAddress>();\n "
    },
    {
        "commit_id": "92c538d4d830d61fcaa4346c356e63d8f23bd2f3",
        "commit_message": "ZOOKEEPER-123. Fix  the wrong class specified for the logger. (Jakob Homan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@688813 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/92c538d4d830d61fcaa4346c356e63d8f23bd2f3",
        "buggy_code": "protected static final Logger LOG = Logger.getLogger(ClientBase.class);",
        "fixed_code": "protected static final Logger LOG = Logger.getLogger(ClientTest.class);",
        "patch": "@@ -44,7 +44,7 @@\n import org.junit.Test;\n \n public class ClientTest extends ClientBase implements Watcher {\n-    protected static final Logger LOG = Logger.getLogger(ClientBase.class);\n+    protected static final Logger LOG = Logger.getLogger(ClientTest.class);\n \n     LinkedBlockingQueue<WatcherEvent> events =\n         new LinkedBlockingQueue<WatcherEvent>();"
    },
    {
        "commit_id": "0da7e6a3a699284df263484496fa16ca0f67e32a",
        "commit_message": "ZOOKEEPER-68. Fix command line parsing for zookeeper barebone java client for acls. (Jakob Homan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@674665 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/0da7e6a3a699284df263484496fa16ca0f67e32a",
        "buggy_code": "int lastColon = a.indexOf(':');",
        "fixed_code": "int lastColon = a.lastIndexOf(':');",
        "patch": "@@ -1103,7 +1103,7 @@ private static List<ACL> parseACLs(String aclString) {\n         acl = new ArrayList<ACL>();\n         for (String a : acls) {\n             int firstColon = a.indexOf(':');\n-            int lastColon = a.indexOf(':');\n+            int lastColon = a.lastIndexOf(':');\n             if (firstColon == -1 || lastColon == -1 || firstColon == lastColon) {\n                 System.err\n                         .println(a + \" does not have the form scheme:id:perm\");"
    },
    {
        "commit_id": "b01624e6f0caa19f610b110902cf7c8fb911ebfb",
        "commit_message": "Need to publicize States to fix a build error.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@670907 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/b01624e6f0caa19f610b110902cf7c8fb911ebfb",
        "buggy_code": "enum States {",
        "fixed_code": "public enum States {",
        "patch": "@@ -105,7 +105,7 @@\n public class ZooKeeper {\n     Watcher watcher;\n \n-    enum States {\n+    public enum States {\n         CONNECTING, ASSOCIATING, CONNECTED, CLOSED, AUTH_FAILED;\n \n         public boolean isAlive() {"
    },
    {
        "commit_id": "d56cc9b9acb453945257a8e3b0cf8d88e5a36d35",
        "commit_message": "Leader election patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@670901 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/d56cc9b9acb453945257a8e3b0cf8d88e5a36d35",
        "buggy_code": "import com.yahoo.zookeeper.server.quorum.LeaderElection.Vote;",
        "fixed_code": "import com.yahoo.zookeeper.server.quorum.Vote;",
        "patch": "@@ -35,7 +35,7 @@\n import com.yahoo.zookeeper.server.NIOServerCnxn;\n import com.yahoo.zookeeper.server.ZooKeeperServer;\n import com.yahoo.zookeeper.server.ZooLog;\n-import com.yahoo.zookeeper.server.quorum.LeaderElection.Vote;\n+import com.yahoo.zookeeper.server.quorum.Vote;\n import com.yahoo.zookeeper.txn.TxnHeader;\n \n /**"
    },
    {
        "commit_id": "2af055275751847a8202926173a76367f6f5d853",
        "commit_message": "committing the patch to generate unique session ids on the zookeeper servers\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/zookeeper/trunk@670858 13f79535-47bb-0310-9956-ffa450edef68",
        "commit_url": "https://github.com/apache/zookeeper/commit/2af055275751847a8202926173a76367f6f5d853",
        "buggy_code": "sessionTracker = new FollowerSessionTracker(this, sessionsWithTimeouts);",
        "fixed_code": "sessionTracker = new FollowerSessionTracker(this, sessionsWithTimeouts, this.serverId);",
        "patch": "@@ -60,7 +60,7 @@ class FollowerZooKeeperServer extends ZooKeeperServer {\n     }\n \n     protected void createSessionTracker() {\n-        sessionTracker = new FollowerSessionTracker(this, sessionsWithTimeouts);\n+        sessionTracker = new FollowerSessionTracker(this, sessionsWithTimeouts, this.serverId);\n     }\n \n     protected void setupRequestProcessors() {"
    }
]