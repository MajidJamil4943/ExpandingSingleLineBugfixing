[
    {
        "commit_id": "98ae71897600a3162f529b1b30c70b8abdf0961b",
        "commit_message": "fix mypy finding",
        "commit_url": "https://github.com/pallets/flask/commit/98ae71897600a3162f529b1b30c70b8abdf0961b",
        "buggy_code": "rv.headers.update(headers)  # type: ignore[arg-type]",
        "fixed_code": "rv.headers.update(headers)",
        "patch": "@@ -1226,7 +1226,7 @@ def make_response(self, rv: ft.ResponseReturnValue) -> Response:\n \n         # extend existing headers with provided headers\n         if headers:\n-            rv.headers.update(headers)  # type: ignore[arg-type]\n+            rv.headers.update(headers)\n \n         return rv\n "
    },
    {
        "commit_id": "c62b03bcfd6e6440f8195e02f4678488e16121ac",
        "commit_message": "fix example and tutorial compatibility and update metadata (#5627)",
        "commit_url": "https://github.com/pallets/flask/commit/c62b03bcfd6e6440f8195e02f4678488e16121ac",
        "buggy_code": "(\"/\", \"xhr.html\"),",
        "fixed_code": "(\"/\", \"fetch.html\"),",
        "patch": "@@ -5,7 +5,7 @@\n @pytest.mark.parametrize(\n     (\"path\", \"template_name\"),\n     (\n-        (\"/\", \"xhr.html\"),\n+        (\"/\", \"fetch.html\"),\n         (\"/plain\", \"xhr.html\"),\n         (\"/fetch\", \"fetch.html\"),\n         (\"/jquery\", \"jquery.html\"),"
    },
    {
        "commit_id": "df201ed152b61c439ea1ace179f35b424594ba6c",
        "commit_message": "fix js example test",
        "commit_url": "https://github.com/pallets/flask/commit/df201ed152b61c439ea1ace179f35b424594ba6c",
        "buggy_code": "(\"/\", \"xhr.html\"),",
        "fixed_code": "(\"/\", \"fetch.html\"),",
        "patch": "@@ -5,7 +5,7 @@\n @pytest.mark.parametrize(\n     (\"path\", \"template_name\"),\n     (\n-        (\"/\", \"xhr.html\"),\n+        (\"/\", \"fetch.html\"),\n         (\"/plain\", \"xhr.html\"),\n         (\"/fetch\", \"fetch.html\"),\n         (\"/jquery\", \"jquery.html\"),"
    },
    {
        "commit_id": "e8b91cd38aadafdf733558bbcea4810fa65bb849",
        "commit_message": "fix pyright type errors (#5620)",
        "commit_url": "https://github.com/pallets/flask/commit/e8b91cd38aadafdf733558bbcea4810fa65bb849",
        "buggy_code": "return open(path, mode)",
        "fixed_code": "return open(path, mode)  # pyright: ignore",
        "patch": "@@ -123,6 +123,6 @@ def open_resource(\n         path = os.path.join(self.root_path, resource)\n \n         if mode == \"rb\":\n-            return open(path, mode)\n+            return open(path, mode)  # pyright: ignore\n \n         return open(path, mode, encoding=encoding)"
    },
    {
        "commit_id": "e8b91cd38aadafdf733558bbcea4810fa65bb849",
        "commit_message": "fix pyright type errors (#5620)",
        "commit_url": "https://github.com/pallets/flask/commit/e8b91cd38aadafdf733558bbcea4810fa65bb849",
        "buggy_code": "filepath = loader.get_filename(import_name)",
        "fixed_code": "filepath = loader.get_filename(import_name)  # pyright: ignore",
        "patch": "@@ -599,7 +599,7 @@ def get_root_path(import_name: str) -> str:\n         return os.getcwd()\n \n     if hasattr(loader, \"get_filename\"):\n-        filepath = loader.get_filename(import_name)\n+        filepath = loader.get_filename(import_name)  # pyright: ignore\n     else:\n         # Fall back to imports.\n         __import__(import_name)"
    },
    {
        "commit_id": "e8b91cd38aadafdf733558bbcea4810fa65bb849",
        "commit_message": "fix pyright type errors (#5620)",
        "commit_url": "https://github.com/pallets/flask/commit/e8b91cd38aadafdf733558bbcea4810fa65bb849",
        "buggy_code": "required_methods = set(getattr(view_func, \"required_methods\", ()))",
        "fixed_code": "required_methods: set[str] = set(getattr(view_func, \"required_methods\", ()))",
        "patch": "@@ -628,7 +628,7 @@ def add_url_rule(\n         methods = {item.upper() for item in methods}\n \n         # Methods that should always be added\n-        required_methods = set(getattr(view_func, \"required_methods\", ()))\n+        required_methods: set[str] = set(getattr(view_func, \"required_methods\", ()))\n \n         # starting with Flask 0.8 the view_func object can disable and\n         # force-enable the automatic options handling."
    },
    {
        "commit_id": "9e831e915fa875423af0c0de8f53a3780055919e",
        "commit_message": "fix pyright type errors",
        "commit_url": "https://github.com/pallets/flask/commit/9e831e915fa875423af0c0de8f53a3780055919e",
        "buggy_code": "return open(path, mode)",
        "fixed_code": "return open(path, mode)  # pyright: ignore",
        "patch": "@@ -123,6 +123,6 @@ def open_resource(\n         path = os.path.join(self.root_path, resource)\n \n         if mode == \"rb\":\n-            return open(path, mode)\n+            return open(path, mode)  # pyright: ignore\n \n         return open(path, mode, encoding=encoding)"
    },
    {
        "commit_id": "9e831e915fa875423af0c0de8f53a3780055919e",
        "commit_message": "fix pyright type errors",
        "commit_url": "https://github.com/pallets/flask/commit/9e831e915fa875423af0c0de8f53a3780055919e",
        "buggy_code": "filepath = loader.get_filename(import_name)",
        "fixed_code": "filepath = loader.get_filename(import_name)  # pyright: ignore",
        "patch": "@@ -599,7 +599,7 @@ def get_root_path(import_name: str) -> str:\n         return os.getcwd()\n \n     if hasattr(loader, \"get_filename\"):\n-        filepath = loader.get_filename(import_name)\n+        filepath = loader.get_filename(import_name)  # pyright: ignore\n     else:\n         # Fall back to imports.\n         __import__(import_name)"
    },
    {
        "commit_id": "9e831e915fa875423af0c0de8f53a3780055919e",
        "commit_message": "fix pyright type errors",
        "commit_url": "https://github.com/pallets/flask/commit/9e831e915fa875423af0c0de8f53a3780055919e",
        "buggy_code": "required_methods = set(getattr(view_func, \"required_methods\", ()))",
        "fixed_code": "required_methods: set[str] = set(getattr(view_func, \"required_methods\", ()))",
        "patch": "@@ -628,7 +628,7 @@ def add_url_rule(\n         methods = {item.upper() for item in methods}\n \n         # Methods that should always be added\n-        required_methods = set(getattr(view_func, \"required_methods\", ()))\n+        required_methods: set[str] = set(getattr(view_func, \"required_methods\", ()))\n \n         # starting with Flask 0.8 the view_func object can disable and\n         # force-enable the automatic options handling."
    },
    {
        "commit_id": "dffe3034825edc4f84aded013fc9c6590e545ed5",
        "commit_message": "fix mypy findings",
        "commit_url": "https://github.com/pallets/flask/commit/dffe3034825edc4f84aded013fc9c6590e545ed5",
        "buggy_code": "return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type, return-value]",
        "fixed_code": "return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type]",
        "patch": "@@ -103,7 +103,7 @@ def decorator(*args: t.Any, **kwargs: t.Any) -> t.Any:\n             gen = generator_or_function(*args, **kwargs)  # type: ignore[operator]\n             return stream_with_context(gen)\n \n-        return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type, return-value]\n+        return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type]\n \n     def generator() -> t.Iterator[t.AnyStr | None]:\n         ctx = _cv_request.get(None)"
    },
    {
        "commit_id": "176fdfa0002360670f698d3828cfff11f97349f0",
        "commit_message": "fix mypy findings",
        "commit_url": "https://github.com/pallets/flask/commit/176fdfa0002360670f698d3828cfff11f97349f0",
        "buggy_code": "return dataclasses.asdict(o)",
        "fixed_code": "return dataclasses.asdict(o)  # type: ignore[call-overload]",
        "patch": "@@ -113,7 +113,7 @@ def _default(o: t.Any) -> t.Any:\n         return str(o)\n \n     if dataclasses and dataclasses.is_dataclass(o):\n-        return dataclasses.asdict(o)\n+        return dataclasses.asdict(o)  # type: ignore[call-overload]\n \n     if hasattr(o, \"__html__\"):\n         return str(o.__html__())"
    },
    {
        "commit_id": "860a25c390eba8e6c089a818b02800dd9d789864",
        "commit_message": "fix mypy finding",
        "commit_url": "https://github.com/pallets/flask/commit/860a25c390eba8e6c089a818b02800dd9d789864",
        "buggy_code": "return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type]",
        "fixed_code": "return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type, return-value]",
        "patch": "@@ -91,7 +91,7 @@ def decorator(*args: t.Any, **kwargs: t.Any) -> t.Any:\n             gen = generator_or_function(*args, **kwargs)  # type: ignore[operator]\n             return stream_with_context(gen)\n \n-        return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type]\n+        return update_wrapper(decorator, generator_or_function)  # type: ignore[arg-type, return-value]\n \n     def generator() -> t.Iterator[t.AnyStr | None]:\n         ctx = _cv_request.get(None)"
    },
    {
        "commit_id": "a363642a32880114c7944b1017f2f69bd4cc00eb",
        "commit_message": "fix mypy finding with new werkzeug endpoint type",
        "commit_url": "https://github.com/pallets/flask/commit/a363642a32880114c7944b1017f2f69bd4cc00eb",
        "buggy_code": "return self.url_rule.endpoint",
        "fixed_code": "return self.url_rule.endpoint  # type: ignore[no-any-return]",
        "patch": "@@ -71,7 +71,7 @@ def endpoint(self) -> str | None:\n         reconstruct the same URL or a modified URL.\n         \"\"\"\n         if self.url_rule is not None:\n-            return self.url_rule.endpoint\n+            return self.url_rule.endpoint  # type: ignore[no-any-return]\n \n         return None\n "
    },
    {
        "commit_id": "ccf125bf30102beedafb3ecef72376bfb6c90a4d",
        "commit_message": "fix mypy findings",
        "commit_url": "https://github.com/pallets/flask/commit/ccf125bf30102beedafb3ecef72376bfb6c90a4d",
        "buggy_code": "val,  # type: ignore",
        "fixed_code": "val,",
        "patch": "@@ -368,7 +368,7 @@ def save_session(\n         val = self.get_signing_serializer(app).dumps(dict(session))  # type: ignore\n         response.set_cookie(\n             name,\n-            val,  # type: ignore\n+            val,\n             expires=expires,\n             httponly=httponly,\n             domain=domain,"
    },
    {
        "commit_id": "87d5f5b9a9697434e6d972b021201105eabb54e6",
        "commit_message": "update project files (#5457)\n\n* update pre-commit hook\r\n* upgrade pip with venv\r\n* update description and version\r\n* show url in publish environment\r\n* update versions\r\n* update versions, separate typing job\r\n* use dependabot grouped updates\r\n  ignore upload/download-artifact until slsa updates\r\n* use sphinx.ext.extlinks instead of sphinx-issues\r\n* update dev dependencies\r\n* update editorconfig\r\n* update gitignore\r\n* update .readthedocs.yaml\r\n* license is txt, readme is md\r\n* update pyproject.toml\r\n  add typed classifier\r\n  add pyright config\r\n  simplify urls\r\n* tox builds docs in place\r\n* update min test py version\r\n* add tox env to update all dev dependencies\r\n* update issue and pr templates\r\n* rename security docs page to not conflict with org policy file\r\n* simplify matrix",
        "commit_url": "https://github.com/pallets/flask/commit/87d5f5b9a9697434e6d972b021201105eabb54e6",
        "buggy_code": "test_uuid = uuid.UUID(bytes=b\"\\xDE\\xAD\\xBE\\xEF\" * 4)",
        "fixed_code": "test_uuid = uuid.UUID(bytes=b\"\\xde\\xad\\xbe\\xef\" * 4)",
        "patch": "@@ -176,7 +176,7 @@ def test_jsonify_aware_datetimes(tz):\n def test_jsonify_uuid_types(app, client):\n     \"\"\"Test jsonify with uuid.UUID types\"\"\"\n \n-    test_uuid = uuid.UUID(bytes=b\"\\xDE\\xAD\\xBE\\xEF\" * 4)\n+    test_uuid = uuid.UUID(bytes=b\"\\xde\\xad\\xbe\\xef\" * 4)\n     url = \"/uuid_test\"\n     app.add_url_rule(url, url, lambda: flask.jsonify(x=test_uuid))\n "
    },
    {
        "commit_id": "b55ccae72aba110ae08e8ef0a9cfb8649750594a",
        "commit_message": "Bump the python-requirements group in /requirements with 3 updates\n\nBumps the python-requirements group in /requirements with 3 updates: [cryptography](https://github.com/pyca/cryptography), [mypy](https://github.com/python/mypy) and [tox](https://github.com/tox-dev/tox).\n\nUpdates `cryptography` from 41.0.5 to 41.0.7\n- [Changelog](https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst)\n- [Commits](https://github.com/pyca/cryptography/compare/41.0.5...41.0.7)\n\nUpdates `mypy` from 1.6.1 to 1.7.1\n- [Changelog](https://github.com/python/mypy/blob/master/CHANGELOG.md)\n- [Commits](https://github.com/python/mypy/compare/v1.6.1...v1.7.1)\n\nUpdates `tox` from 4.11.3 to 4.11.4\n- [Release notes](https://github.com/tox-dev/tox/releases)\n- [Changelog](https://github.com/tox-dev/tox/blob/main/docs/changelog.rst)\n- [Commits](https://github.com/tox-dev/tox/compare/4.11.3...4.11.4)\n\n---\nupdated-dependencies:\n- dependency-name: cryptography\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n- dependency-name: mypy\n  dependency-type: direct:production\n  update-type: version-update:semver-minor\n  dependency-group: python-requirements\n- dependency-name: tox\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n  dependency-group: python-requirements\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>",
        "commit_url": "https://github.com/pallets/flask/commit/b55ccae72aba110ae08e8ef0a9cfb8649750594a",
        "buggy_code": "return current_app.make_response(args)  # type: ignore",
        "fixed_code": "return current_app.make_response(args)",
        "patch": "@@ -171,7 +171,7 @@ def index():\n         return current_app.response_class()\n     if len(args) == 1:\n         args = args[0]\n-    return current_app.make_response(args)  # type: ignore\n+    return current_app.make_response(args)\n \n \n def url_for("
    },
    {
        "commit_id": "b97165db75c6f4e99c3307b4a5a1f3b0d9f4de25",
        "commit_message": "type hint fix for flask.send_file (#5336)",
        "commit_url": "https://github.com/pallets/flask/commit/b97165db75c6f4e99c3307b4a5a1f3b0d9f4de25",
        "buggy_code": "path_or_file: os.PathLike | str | t.BinaryIO,",
        "fixed_code": "path_or_file: os.PathLike[t.AnyStr] | str | t.BinaryIO,",
        "patch": "@@ -387,7 +387,7 @@ def _prepare_send_file_kwargs(**kwargs: t.Any) -> dict[str, t.Any]:\n \n \n def send_file(\n-    path_or_file: os.PathLike | str | t.BinaryIO,\n+    path_or_file: os.PathLike[t.AnyStr] | str | t.BinaryIO,\n     mimetype: str | None = None,\n     as_attachment: bool = False,\n     download_name: str | None = None,"
    },
    {
        "commit_id": "4104f29956b16f3e351462651ec3c6cc5a0dd069",
        "commit_message": "type hint fix for flask.send_file",
        "commit_url": "https://github.com/pallets/flask/commit/4104f29956b16f3e351462651ec3c6cc5a0dd069",
        "buggy_code": "path_or_file: os.PathLike | str | t.BinaryIO,",
        "fixed_code": "path_or_file: os.PathLike[t.AnyStr] | str | t.BinaryIO,",
        "patch": "@@ -387,7 +387,7 @@ def _prepare_send_file_kwargs(**kwargs: t.Any) -> dict[str, t.Any]:\n \n \n def send_file(\n-    path_or_file: os.PathLike | str | t.BinaryIO,\n+    path_or_file: os.PathLike[t.AnyStr] | str | t.BinaryIO,\n     mimetype: str | None = None,\n     as_attachment: bool = False,\n     download_name: str | None = None,"
    },
    {
        "commit_id": "9532cba45d2339e90ebf04f178b1e4f2064e7328",
        "commit_message": "fix mypy finding",
        "commit_url": "https://github.com/pallets/flask/commit/9532cba45d2339e90ebf04f178b1e4f2064e7328",
        "buggy_code": "rv.headers.update(headers)",
        "fixed_code": "rv.headers.update(headers)  # type: ignore[arg-type]",
        "patch": "@@ -1852,7 +1852,7 @@ def make_response(self, rv: ft.ResponseReturnValue) -> Response:\n \n         # extend existing headers with provided headers\n         if headers:\n-            rv.headers.update(headers)\n+            rv.headers.update(headers)  # type: ignore[arg-type]\n \n         return rv\n "
    },
    {
        "commit_id": "0867dce42c1a193bfe7fb5f92f0ccaa622643f48",
        "commit_message": "Merge pull request #5085 from lucaswerkmeister/patch-1\n\nFix importing Markup from flask",
        "commit_url": "https://github.com/pallets/flask/commit/0867dce42c1a193bfe7fb5f92f0ccaa622643f48",
        "buggy_code": "if name == \"escape\":",
        "fixed_code": "if name == \"Markup\":",
        "patch": "@@ -76,7 +76,7 @@ def __getattr__(name):\n         )\n         return escape\n \n-    if name == \"escape\":\n+    if name == \"Markup\":\n         import warnings\n         from markupsafe import Markup\n "
    },
    {
        "commit_id": "0ec9192cf25f5187d6521f2539489fa8d55336bb",
        "commit_message": "fix importing Markup from flask",
        "commit_url": "https://github.com/pallets/flask/commit/0ec9192cf25f5187d6521f2539489fa8d55336bb",
        "buggy_code": "if name == \"escape\":",
        "fixed_code": "if name == \"Markup\":",
        "patch": "@@ -76,7 +76,7 @@ def __getattr__(name):\n         )\n         return escape\n \n-    if name == \"escape\":\n+    if name == \"Markup\":\n         import warnings\n         from markupsafe import Markup\n "
    },
    {
        "commit_id": "631b6dd54619f5e71134297e3daa9bdbd1bc123b",
        "commit_message": "Merge pull request #4921 from ivanovmg/fix/template_folder\n\nAllow pathlib.Path for template_folder",
        "commit_url": "https://github.com/pallets/flask/commit/631b6dd54619f5e71134297e3daa9bdbd1bc123b",
        "buggy_code": "template_folder: t.Optional[str] = \"templates\",",
        "fixed_code": "template_folder: t.Optional[t.Union[str, os.PathLike]] = \"templates\",",
        "patch": "@@ -558,7 +558,7 @@ def __init__(\n         static_host: t.Optional[str] = None,\n         host_matching: bool = False,\n         subdomain_matching: bool = False,\n-        template_folder: t.Optional[str] = \"templates\",\n+        template_folder: t.Optional[t.Union[str, os.PathLike]] = \"templates\",\n         instance_path: t.Optional[str] = None,\n         instance_relative_config: bool = False,\n         root_path: t.Optional[str] = None,"
    },
    {
        "commit_id": "631b6dd54619f5e71134297e3daa9bdbd1bc123b",
        "commit_message": "Merge pull request #4921 from ivanovmg/fix/template_folder\n\nAllow pathlib.Path for template_folder",
        "commit_url": "https://github.com/pallets/flask/commit/631b6dd54619f5e71134297e3daa9bdbd1bc123b",
        "buggy_code": "template_folder: t.Optional[str] = None,",
        "fixed_code": "template_folder: t.Optional[t.Union[str, os.PathLike]] = None,",
        "patch": "@@ -250,7 +250,7 @@ def __init__(\n         import_name: str,\n         static_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n         static_url_path: t.Optional[str] = None,\n-        template_folder: t.Optional[str] = None,\n+        template_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n         url_prefix: t.Optional[str] = None,\n         subdomain: t.Optional[str] = None,\n         url_defaults: t.Optional[dict] = None,"
    },
    {
        "commit_id": "631b6dd54619f5e71134297e3daa9bdbd1bc123b",
        "commit_message": "Merge pull request #4921 from ivanovmg/fix/template_folder\n\nAllow pathlib.Path for template_folder",
        "commit_url": "https://github.com/pallets/flask/commit/631b6dd54619f5e71134297e3daa9bdbd1bc123b",
        "buggy_code": "template_folder: t.Optional[str] = None,",
        "fixed_code": "template_folder: t.Optional[t.Union[str, os.PathLike]] = None,",
        "patch": "@@ -93,7 +93,7 @@ def __init__(\n         import_name: str,\n         static_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n         static_url_path: t.Optional[str] = None,\n-        template_folder: t.Optional[str] = None,\n+        template_folder: t.Optional[t.Union[str, os.PathLike]] = None,\n         root_path: t.Optional[str] = None,\n     ):\n         #: The name of the package or module that this object belongs"
    },
    {
        "commit_id": "0d8c8ba71bc6362e6ea9af08146dc97e1a0a8abc",
        "commit_message": "Fix docstring of test_request_context (#4821)\n\nAdd missing `app.`.",
        "commit_url": "https://github.com/pallets/flask/commit/0d8c8ba71bc6362e6ea9af08146dc97e1a0a8abc",
        "buggy_code": "with test_request_context(...):",
        "fixed_code": "with app.test_request_context(...):",
        "patch": "@@ -2448,7 +2448,7 @@ def test_request_context(self, *args: t.Any, **kwargs: t.Any) -> RequestContext:\n         :data:`request` point at the request for the created\n         environment. ::\n \n-            with test_request_context(...):\n+            with app.test_request_context(...):\n                 generate_report()\n \n         When using the shell, it may be easier to push and pop the"
    },
    {
        "commit_id": "45b2c99c1f6a884376d54bbb25223edad65596c5",
        "commit_message": "Merge pull request #4742 from pallets/env-default\n\nfix default value of app.env",
        "commit_url": "https://github.com/pallets/flask/commit/45b2c99c1f6a884376d54bbb25223edad65596c5",
        "buggy_code": "defaults[\"ENV\"] = os.environ.get(\"FLASK_ENV\") or \"development\"",
        "fixed_code": "defaults[\"ENV\"] = os.environ.get(\"FLASK_ENV\") or \"production\"",
        "patch": "@@ -827,7 +827,7 @@ def make_config(self, instance_relative: bool = False) -> Config:\n         if instance_relative:\n             root_path = self.instance_path\n         defaults = dict(self.default_config)\n-        defaults[\"ENV\"] = os.environ.get(\"FLASK_ENV\") or \"development\"\n+        defaults[\"ENV\"] = os.environ.get(\"FLASK_ENV\") or \"production\"\n         defaults[\"DEBUG\"] = get_debug_flag()\n         return self.config_class(root_path, defaults)\n "
    },
    {
        "commit_id": "a6a7a57380cd8f7410753c3b819ba6d09198d8c9",
        "commit_message": "fix default value of app.env",
        "commit_url": "https://github.com/pallets/flask/commit/a6a7a57380cd8f7410753c3b819ba6d09198d8c9",
        "buggy_code": "defaults[\"ENV\"] = os.environ.get(\"FLASK_ENV\") or \"development\"",
        "fixed_code": "defaults[\"ENV\"] = os.environ.get(\"FLASK_ENV\") or \"production\"",
        "patch": "@@ -827,7 +827,7 @@ def make_config(self, instance_relative: bool = False) -> Config:\n         if instance_relative:\n             root_path = self.instance_path\n         defaults = dict(self.default_config)\n-        defaults[\"ENV\"] = os.environ.get(\"FLASK_ENV\") or \"development\"\n+        defaults[\"ENV\"] = os.environ.get(\"FLASK_ENV\") or \"production\"\n         defaults[\"DEBUG\"] = get_debug_flag()\n         return self.config_class(root_path, defaults)\n "
    },
    {
        "commit_id": "5d8e35653fca0d7ee01519d556c7851089de82ea",
        "commit_message": "refactor lazy loading\n\nRemove the `--eager-loading/--lazy-loading` options and the\n`DispatchingApp` middleware. The `run` command handles loading\nexceptions directly. The reloader always prints out tracebacks\nimmediately and always defers raising the error.",
        "commit_url": "https://github.com/pallets/flask/commit/5d8e35653fca0d7ee01519d556c7851089de82ea",
        "buggy_code": "cli.show_server_banner(self.env, self.debug, self.name, False)",
        "fixed_code": "cli.show_server_banner(self.env, self.debug, self.name)",
        "patch": "@@ -998,7 +998,7 @@ def run(\n         options.setdefault(\"use_debugger\", self.debug)\n         options.setdefault(\"threaded\", True)\n \n-        cli.show_server_banner(self.env, self.debug, self.name, False)\n+        cli.show_server_banner(self.env, self.debug, self.name)\n \n         from werkzeug.serving import run_simple\n "
    },
    {
        "commit_id": "cd4ab005a92ff996e9104c92017fe1e6daeccd46",
        "commit_message": "fix typing",
        "commit_url": "https://github.com/pallets/flask/commit/cd4ab005a92ff996e9104c92017fe1e6daeccd46",
        "buggy_code": "def on_json_loading_failed(self, e: ValueError) -> t.Any:",
        "fixed_code": "def on_json_loading_failed(self, e: t.Optional[ValueError]) -> t.Any:",
        "patch": "@@ -123,7 +123,7 @@ def _load_form_data(self) -> None:\n \n             attach_enctype_error_multidict(self)\n \n-    def on_json_loading_failed(self, e: ValueError) -> t.Any:\n+    def on_json_loading_failed(self, e: t.Optional[ValueError]) -> t.Any:\n         try:\n             return super().on_json_loading_failed(e)\n         except BadRequest as e:"
    },
    {
        "commit_id": "06cf349bb8b69d9946c3a6a64d32eb552cc7c28b",
        "commit_message": "Merge pull request #4152 from Yourun-proger/fix\n\n`static_folder` can be a `pathlib.Path` object",
        "commit_url": "https://github.com/pallets/flask/commit/06cf349bb8b69d9946c3a6a64d32eb552cc7c28b",
        "buggy_code": "static_folder: t.Optional[str] = \"static\",",
        "fixed_code": "static_folder: t.Optional[t.Union[str, os.PathLike]] = \"static\",",
        "patch": "@@ -389,7 +389,7 @@ def __init__(\n         self,\n         import_name: str,\n         static_url_path: t.Optional[str] = None,\n-        static_folder: t.Optional[str] = \"static\",\n+        static_folder: t.Optional[t.Union[str, os.PathLike]] = \"static\",\n         static_host: t.Optional[str] = None,\n         host_matching: bool = False,\n         subdomain_matching: bool = False,"
    },
    {
        "commit_id": "e7b16b5ef2b22e2f4e76dc1be5747e21196fcbc5",
        "commit_message": "Merge pull request #4193 from Elahi-cs/sql-fix\n\nSmall SQL formatting fix",
        "commit_url": "https://github.com/pallets/flask/commit/e7b16b5ef2b22e2f4e76dc1be5747e21196fcbc5",
        "buggy_code": "get_db().execute(\"select * from user where username = 'a'\").fetchone()",
        "fixed_code": "get_db().execute(\"SELECT * FROM user WHERE username = 'a'\").fetchone()",
        "patch": "@@ -16,7 +16,7 @@ def test_register(client, app):\n     # test that the user was inserted into the database\n     with app.app_context():\n         assert (\n-            get_db().execute(\"select * from user where username = 'a'\").fetchone()\n+            get_db().execute(\"SELECT * FROM user WHERE username = 'a'\").fetchone()\n             is not None\n         )\n "
    },
    {
        "commit_id": "3127c304ecbc54387792c9ddff3c266645b67b8a",
        "commit_message": "Small SQL formatting fix",
        "commit_url": "https://github.com/pallets/flask/commit/3127c304ecbc54387792c9ddff3c266645b67b8a",
        "buggy_code": "get_db().execute(\"select * from user where username = 'a'\").fetchone()",
        "fixed_code": "get_db().execute(\"SELECT * FROM user WHERE username = 'a'\").fetchone()",
        "patch": "@@ -16,7 +16,7 @@ def test_register(client, app):\n     # test that the user was inserted into the database\n     with app.app_context():\n         assert (\n-            get_db().execute(\"select * from user where username = 'a'\").fetchone()\n+            get_db().execute(\"SELECT * FROM user WHERE username = 'a'\").fetchone()\n             is not None\n         )\n "
    },
    {
        "commit_id": "6e1b72096d5ae1e2cc4d8592ff8271b62548d9cf",
        "commit_message": "Fix typo in docs",
        "commit_url": "https://github.com/pallets/flask/commit/6e1b72096d5ae1e2cc4d8592ff8271b62548d9cf",
        "buggy_code": "``HTTPExcpetion`` subclasses can be handled with a catch-all",
        "fixed_code": "``HTTPException`` subclasses can be handled with a catch-all",
        "patch": "@@ -1306,7 +1306,7 @@ def handle_http_exception(\n \n         .. versionchanged:: 1.0\n             Exceptions are looked up by code *and* by MRO, so\n-            ``HTTPExcpetion`` subclasses can be handled with a catch-all\n+            ``HTTPException`` subclasses can be handled with a catch-all\n             handler for the base ``HTTPException``.\n \n         .. versionadded:: 0.3"
    },
    {
        "commit_id": "bf982718cf30615f2dd17fa71fe17d565ebb1d3e",
        "commit_message": "Make add_url_rule() signature consistent\n\nThis caused a mypy error when I was making another typing improvement,\nso I am fixing it before committing my other changes.",
        "commit_url": "https://github.com/pallets/flask/commit/bf982718cf30615f2dd17fa71fe17d565ebb1d3e",
        "buggy_code": ") -> t.Callable:",
        "fixed_code": ") -> None:",
        "patch": "@@ -443,7 +443,7 @@ def add_url_rule(\n         view_func: t.Optional[t.Callable] = None,\n         provide_automatic_options: t.Optional[bool] = None,\n         **options: t.Any,\n-    ) -> t.Callable:\n+    ) -> None:\n         \"\"\"Register a rule for routing incoming requests and building\n         URLs. The :meth:`route` decorator is a shortcut to call this\n         with the ``view_func`` argument. These are equivalent:"
    },
    {
        "commit_id": "5f8d3ea2fcb4a17373653d900b060259fefb11bb",
        "commit_message": "Merge pull request #4049 from brettlangdon/fix.os.fspath\n\nUse compat fspath instead of os.fspath in static_folder",
        "commit_url": "https://github.com/pallets/flask/commit/5f8d3ea2fcb4a17373653d900b060259fefb11bb",
        "buggy_code": "__version__ = \"1.1.3\"",
        "fixed_code": "__version__ = \"1.1.4.dev0\"",
        "patch": "@@ -57,4 +57,4 @@\n from .templating import render_template\n from .templating import render_template_string\n \n-__version__ = \"1.1.3\"\n+__version__ = \"1.1.4.dev0\""
    },
    {
        "commit_id": "5f8d3ea2fcb4a17373653d900b060259fefb11bb",
        "commit_message": "Merge pull request #4049 from brettlangdon/fix.os.fspath\n\nUse compat fspath instead of os.fspath in static_folder",
        "commit_url": "https://github.com/pallets/flask/commit/5f8d3ea2fcb4a17373653d900b060259fefb11bb",
        "buggy_code": "value = os.fspath(value).rstrip(r\"\\/\")",
        "fixed_code": "value = fspath(value).rstrip(r\"\\/\")",
        "patch": "@@ -1001,7 +1001,7 @@ def static_folder(self):\n     @static_folder.setter\n     def static_folder(self, value):\n         if value is not None:\n-            value = os.fspath(value).rstrip(r\"\\/\")\n+            value = fspath(value).rstrip(r\"\\/\")\n         self._static_folder = value\n \n     @property"
    },
    {
        "commit_id": "444550ab0c2ba8b1e003dee198b5628bc58302ce",
        "commit_message": "Merge pull request #3862 from huimingz/patch-1\n\nDocument json.loads parameter description error",
        "commit_url": "https://github.com/pallets/flask/commit/444550ab0c2ba8b1e003dee198b5628bc58302ce",
        "buggy_code": ":param kwargs: Extra arguments passed to :func:`json.dumps`.",
        "fixed_code": ":param kwargs: Extra arguments passed to :func:`json.loads`.",
        "patch": "@@ -237,7 +237,7 @@ def loads(s, app=None, **kwargs):\n     :param app: App instance to use to configure the JSON decoder.\n         Uses ``current_app`` if not given, and falls back to the default\n         encoder when not in an app context.\n-    :param kwargs: Extra arguments passed to :func:`json.dumps`.\n+    :param kwargs: Extra arguments passed to :func:`json.loads`.\n \n     .. versionchanged:: 1.0.3\n "
    },
    {
        "commit_id": "aff21fd8bc4d168caf481de87bb5447adccd18ad",
        "commit_message": "Document parameter description error\n\nThe loads function has the wrong 'kwargs' parameter description",
        "commit_url": "https://github.com/pallets/flask/commit/aff21fd8bc4d168caf481de87bb5447adccd18ad",
        "buggy_code": ":param kwargs: Extra arguments passed to :func:`json.dumps`.",
        "fixed_code": ":param kwargs: Extra arguments passed to :func:`json.loads`.",
        "patch": "@@ -237,7 +237,7 @@ def loads(s, app=None, **kwargs):\n     :param app: App instance to use to configure the JSON decoder.\n         Uses ``current_app`` if not given, and falls back to the default\n         encoder when not in an app context.\n-    :param kwargs: Extra arguments passed to :func:`json.dumps`.\n+    :param kwargs: Extra arguments passed to :func:`json.loads`.\n \n     .. versionchanged:: 1.0.3\n "
    },
    {
        "commit_id": "1c6dc15420b21fc325833ab2955375e9736f2e74",
        "commit_message": "fix response bases order",
        "commit_url": "https://github.com/pallets/flask/commit/1c6dc15420b21fc325833ab2955375e9736f2e74",
        "buggy_code": "class Response(ResponseBase, JSONMixin):",
        "fixed_code": "class Response(JSONMixin, ResponseBase):",
        "patch": "@@ -90,7 +90,7 @@ def _load_form_data(self):\n             attach_enctype_error_multidict(self)\n \n \n-class Response(ResponseBase, JSONMixin):\n+class Response(JSONMixin, ResponseBase):\n     \"\"\"The response object that is used by default in Flask.  Works like the\n     response object from Werkzeug but is set to have an HTML mimetype by\n     default.  Quite often you don't have to create this object yourself because"
    },
    {
        "commit_id": "5bfe236fb531045497396bc85ee5026c6c9c68eb",
        "commit_message": "fix typo in flask shell help (#3744)",
        "commit_url": "https://github.com/pallets/flask/commit/5bfe236fb531045497396bc85ee5026c6c9c68eb",
        "buggy_code": "namespace of this shell according to it's configuration.",
        "fixed_code": "namespace of this shell according to its configuration.",
        "patch": "@@ -859,7 +859,7 @@ def run_command(\n def shell_command():\n     \"\"\"Run an interactive Python shell in the context of a given\n     Flask application.  The application will populate the default\n-    namespace of this shell according to it's configuration.\n+    namespace of this shell according to its configuration.\n \n     This is useful for executing small snippets of management code\n     without having to manually configure the application."
    },
    {
        "commit_id": "8952a178715c0f47f71a3600e9cfd49dd518096e",
        "commit_message": "Merge pull request #3739 from WolframAlph/typo-fix\n\nfixed #3738 typo in src/flask/blueprints.py",
        "commit_url": "https://github.com/pallets/flask/commit/8952a178715c0f47f71a3600e9cfd49dd518096e",
        "buggy_code": ":param root_path: By default, the blueprint will automatically this",
        "fixed_code": ":param root_path: By default, the blueprint will automatically set this",
        "patch": "@@ -121,7 +121,7 @@ class Blueprint(Scaffold):\n         default.\n     :param url_defaults: A dict of default values that blueprint routes\n         will receive by default.\n-    :param root_path: By default, the blueprint will automatically this\n+    :param root_path: By default, the blueprint will automatically set this\n         based on ``import_name``. In certain situations this automatic\n         detection can fail, so the path can be specified manually\n         instead."
    },
    {
        "commit_id": "fd0f89ebf3ef44fd40372db48f25009bdad6d162",
        "commit_message": "Merge pull request #3723 from greyli/fix-intersphinx-link\n\nFix bad intersphinx link",
        "commit_url": "https://github.com/pallets/flask/commit/fd0f89ebf3ef44fd40372db48f25009bdad6d162",
        "buggy_code": "\"wtforms\": (\"https://wtforms.readthedocs.io/en/stable/\", None),",
        "fixed_code": "\"wtforms\": (\"https://wtforms.readthedocs.io/\", None),",
        "patch": "@@ -26,7 +26,7 @@\n     \"jinja\": (\"https://jinja.palletsprojects.com/\", None),\n     \"itsdangerous\": (\"https://itsdangerous.palletsprojects.com/\", None),\n     \"sqlalchemy\": (\"https://docs.sqlalchemy.org/\", None),\n-    \"wtforms\": (\"https://wtforms.readthedocs.io/en/stable/\", None),\n+    \"wtforms\": (\"https://wtforms.readthedocs.io/\", None),\n     \"blinker\": (\"https://pythonhosted.org/blinker/\", None),\n }\n issues_github_path = \"pallets/flask\""
    },
    {
        "commit_id": "414b30b2ec8ae365ca311b697d44578394371ff6",
        "commit_message": "Fix bad intersphinx link",
        "commit_url": "https://github.com/pallets/flask/commit/414b30b2ec8ae365ca311b697d44578394371ff6",
        "buggy_code": "\"wtforms\": (\"https://wtforms.readthedocs.io/en/stable/\", None),",
        "fixed_code": "\"wtforms\": (\"https://wtforms.readthedocs.io/\", None),",
        "patch": "@@ -26,7 +26,7 @@\n     \"jinja\": (\"https://jinja.palletsprojects.com/\", None),\n     \"itsdangerous\": (\"https://itsdangerous.palletsprojects.com/\", None),\n     \"sqlalchemy\": (\"https://docs.sqlalchemy.org/\", None),\n-    \"wtforms\": (\"https://wtforms.readthedocs.io/en/stable/\", None),\n+    \"wtforms\": (\"https://wtforms.readthedocs.io/\", None),\n     \"blinker\": (\"https://pythonhosted.org/blinker/\", None),\n }\n issues_github_path = \"pallets/flask\""
    },
    {
        "commit_id": "a40c381ffdc4c28a19a0910c4da8ec54e3ae63cf",
        "commit_message": "Merge pull request #3560 from greyli/fix-env-chdir\n\nStop change CWD to .env/.flaskenv location",
        "commit_url": "https://github.com/pallets/flask/commit/a40c381ffdc4c28a19a0910c4da8ec54e3ae63cf",
        "buggy_code": "monkeypatch.chdir(os.path.join(test_path, \"cliapp\", \"inner1\"))",
        "fixed_code": "monkeypatch.chdir(test_path)",
        "patch": "@@ -504,7 +504,7 @@ def test_load_dotenv(monkeypatch):\n         monkeypatch._setitem.append((os.environ, item, notset))\n \n     monkeypatch.setenv(\"EGGS\", \"3\")\n-    monkeypatch.chdir(os.path.join(test_path, \"cliapp\", \"inner1\"))\n+    monkeypatch.chdir(test_path)\n     assert load_dotenv()\n     assert os.getcwd() == test_path\n     # .flaskenv doesn't overwrite .env"
    },
    {
        "commit_id": "986871bf4eb85ae62124e71ed579b6baa0ddaeae",
        "commit_message": "Merge pull request #3453 from noviluni/remove_redundant_parentheses\n\nfix docstring and remove redundant parentheses",
        "commit_url": "https://github.com/pallets/flask/commit/986871bf4eb85ae62124e71ed579b6baa0ddaeae",
        "buggy_code": ":param: default: Value to set and return if the attribute is not",
        "fixed_code": ":param default: Value to set and return if the attribute is not",
        "patch": "@@ -75,7 +75,7 @@ def setdefault(self, name, default=None):\n         set and return a default value. Like :meth:`dict.setdefault`.\n \n         :param name: Name of attribute to get.\n-        :param: default: Value to set and return if the attribute is not\n+        :param default: Value to set and return if the attribute is not\n             present.\n \n         .. versionadded:: 0.11"
    },
    {
        "commit_id": "986871bf4eb85ae62124e71ed579b6baa0ddaeae",
        "commit_message": "Merge pull request #3453 from noviluni/remove_redundant_parentheses\n\nfix docstring and remove redundant parentheses",
        "commit_url": "https://github.com/pallets/flask/commit/986871bf4eb85ae62124e71ed579b6baa0ddaeae",
        "buggy_code": "assert (\"Make sure to directly send your POST-request to this URL\") in str(",
        "fixed_code": "assert \"Make sure to directly send your POST-request to this URL\" in str(",
        "patch": "@@ -1689,7 +1689,7 @@ def foo():\n         with pytest.raises(AssertionError) as e:\n             client.post(\"/foo\", data={})\n         assert \"http://localhost/foo/\" in str(e.value)\n-        assert (\"Make sure to directly send your POST-request to this URL\") in str(\n+        assert \"Make sure to directly send your POST-request to this URL\" in str(\n             e.value\n         )\n "
    },
    {
        "commit_id": "5da342e4dd7dfcc16aa25928ea91d69c2d362f73",
        "commit_message": "fix docstring and remove redundant parentheses",
        "commit_url": "https://github.com/pallets/flask/commit/5da342e4dd7dfcc16aa25928ea91d69c2d362f73",
        "buggy_code": ":param: default: Value to set and return if the attribute is not",
        "fixed_code": ":param default: Value to set and return if the attribute is not",
        "patch": "@@ -75,7 +75,7 @@ def setdefault(self, name, default=None):\n         set and return a default value. Like :meth:`dict.setdefault`.\n \n         :param name: Name of attribute to get.\n-        :param: default: Value to set and return if the attribute is not\n+        :param default: Value to set and return if the attribute is not\n             present.\n \n         .. versionadded:: 0.11"
    },
    {
        "commit_id": "5da342e4dd7dfcc16aa25928ea91d69c2d362f73",
        "commit_message": "fix docstring and remove redundant parentheses",
        "commit_url": "https://github.com/pallets/flask/commit/5da342e4dd7dfcc16aa25928ea91d69c2d362f73",
        "buggy_code": "assert (\"Make sure to directly send your POST-request to this URL\") in str(",
        "fixed_code": "assert \"Make sure to directly send your POST-request to this URL\" in str(",
        "patch": "@@ -1689,7 +1689,7 @@ def foo():\n         with pytest.raises(AssertionError) as e:\n             client.post(\"/foo\", data={})\n         assert \"http://localhost/foo/\" in str(e.value)\n-        assert (\"Make sure to directly send your POST-request to this URL\") in str(\n+        assert \"Make sure to directly send your POST-request to this URL\" in str(\n             e.value\n         )\n "
    },
    {
        "commit_id": "0586188f22a8a6de4cd9d5e13e116aa1ef594201",
        "commit_message": "Merge pull request #3425 from homeworkprod/patch-1\n\nUpdate `versionadded` for `Config.from_file`",
        "commit_url": "https://github.com/pallets/flask/commit/0586188f22a8a6de4cd9d5e13e116aa1ef594201",
        "buggy_code": ".. versionadded:: 1.2",
        "fixed_code": ".. versionadded:: 2.0",
        "patch": "@@ -194,7 +194,7 @@ def from_file(self, filename, load, silent=False):\n             implements a ``read`` method.\n         :param silent: Ignore the file if it doesn't exist.\n \n-        .. versionadded:: 1.2\n+        .. versionadded:: 2.0\n         \"\"\"\n         filename = os.path.join(self.root_path, filename)\n "
    },
    {
        "commit_id": "96726f6a04251bde39ec802080c9008060e0b5b9",
        "commit_message": "Merge pull request #3336 from arnavb/patch-1\n\nFix typo in pop documentation",
        "commit_url": "https://github.com/pallets/flask/commit/96726f6a04251bde39ec802080c9008060e0b5b9",
        "buggy_code": "instead of raise a ``KeyError``.",
        "fixed_code": "instead of raising a ``KeyError``.",
        "patch": "@@ -61,7 +61,7 @@ def pop(self, name, default=_sentinel):\n \n         :param name: Name of attribute to pop.\n         :param default: Value to return if the attribute is not present,\n-            instead of raise a ``KeyError``.\n+            instead of raising a ``KeyError``.\n \n         .. versionadded:: 0.11\n         \"\"\""
    },
    {
        "commit_id": "553b26f8579a21a2d3644cb3bc5cb2ed8cedabc5",
        "commit_message": "Fix typo in pop documentation",
        "commit_url": "https://github.com/pallets/flask/commit/553b26f8579a21a2d3644cb3bc5cb2ed8cedabc5",
        "buggy_code": "instead of raise a ``KeyError``.",
        "fixed_code": "instead of raising a ``KeyError``.",
        "patch": "@@ -61,7 +61,7 @@ def pop(self, name, default=_sentinel):\n \n         :param name: Name of attribute to pop.\n         :param default: Value to return if the attribute is not present,\n-            instead of raise a ``KeyError``.\n+            instead of raising a ``KeyError``.\n \n         .. versionadded:: 0.11\n         \"\"\""
    },
    {
        "commit_id": "353d891561659a754ee92bb5e6576e82be58934a",
        "commit_message": "fixed typo in logging docstring (#3328)\n\n* fixed typo in logging docstring\r\n\r\n* second typo fix",
        "commit_url": "https://github.com/pallets/flask/commit/353d891561659a754ee92bb5e6576e82be58934a",
        "buggy_code": "\"\"\"Get the the Flask apps's logger and configure it if needed.",
        "fixed_code": "\"\"\"Get the Flask app's logger and configure it if needed.",
        "patch": "@@ -72,7 +72,7 @@ def _has_config(logger):\n \n \n def create_logger(app):\n-    \"\"\"Get the the Flask apps's logger and configure it if needed.\n+    \"\"\"Get the Flask app's logger and configure it if needed.\n \n     The logger name will be the same as\n     :attr:`app.import_name <flask.Flask.name>`."
    },
    {
        "commit_id": "cf4923bf586c51365970ee11a33771104241cf60",
        "commit_message": "Merge pull request #3274 from abhinavsagar/patch-1\n\nFix typo",
        "commit_url": "https://github.com/pallets/flask/commit/cf4923bf586c51365970ee11a33771104241cf60",
        "buggy_code": "shell commands wil be added.",
        "fixed_code": "shell commands will be added.",
        "patch": "@@ -459,7 +459,7 @@ class FlaskGroup(AppGroup):\n     For information as of why this is useful see :ref:`custom-scripts`.\n \n     :param add_default_commands: if this is True then the default run and\n-        shell commands wil be added.\n+        shell commands will be added.\n     :param add_version_option: adds the ``--version`` option.\n     :param create_app: an optional callback that is passed the script info and\n         returns the loaded app."
    },
    {
        "commit_id": "54519ef028660da63c3b2bab51c1f18e7b7c9fa2",
        "commit_message": "document behavior of very generic error handlers",
        "commit_url": "https://github.com/pallets/flask/commit/54519ef028660da63c3b2bab51c1f18e7b7c9fa2",
        "buggy_code": "always have a ``original_exception`` attribute. Use",
        "fixed_code": "always have an ``original_exception`` attribute. Use",
        "patch": "@@ -1829,7 +1829,7 @@ def handle_exception(self, e):\n \n         .. note::\n             Prior to Werkzeug 1.0.0, ``InternalServerError`` will not\n-            always have a ``original_exception`` attribute. Use\n+            always have an ``original_exception`` attribute. Use\n             ``getattr(e, \"original_exception\", None)`` to simulate the\n             behavior for compatibility.\n "
    },
    {
        "commit_id": "46a67b6789ceb3ba814afdb72ed7770033858a73",
        "commit_message": "Merge pull request #3261 from pallets/fix-server-name-warnings\n\nfix tests failing with server name warnings",
        "commit_url": "https://github.com/pallets/flask/commit/46a67b6789ceb3ba814afdb72ed7770033858a73",
        "buggy_code": "def test_send_file_xsendfile(self, app, req_ctx, catch_deprecation_warnings):",
        "fixed_code": "def test_send_file_xsendfile(self, app, req_ctx):",
        "patch": "@@ -443,7 +443,7 @@ def test_send_file_regular(self, app, req_ctx):\n             assert rv.data == f.read()\n         rv.close()\n \n-    def test_send_file_xsendfile(self, app, req_ctx, catch_deprecation_warnings):\n+    def test_send_file_xsendfile(self, app, req_ctx):\n         app.use_x_sendfile = True\n         rv = flask.send_file('static/index.html')\n         assert rv.direct_passthrough"
    },
    {
        "commit_id": "dbd4520ccbe0954d8ff4f926ba5f16c4f5291533",
        "commit_message": "fix tests failing with server name warnings\n\nAfter pallets/werkzeug#1577, mismatched configured and real server\nnames will show a warning in addition to raising 404. This caused\ntests that did this deliberately to fail.\n\nThis patch removes the pytest fixture we were using to fail on\nwarnings, instead using the standard `-Werror` option. This speeds\nup the tests by ~3x.",
        "commit_url": "https://github.com/pallets/flask/commit/dbd4520ccbe0954d8ff4f926ba5f16c4f5291533",
        "buggy_code": "def test_send_file_xsendfile(self, app, req_ctx, catch_deprecation_warnings):",
        "fixed_code": "def test_send_file_xsendfile(self, app, req_ctx):",
        "patch": "@@ -443,7 +443,7 @@ def test_send_file_regular(self, app, req_ctx):\n             assert rv.data == f.read()\n         rv.close()\n \n-    def test_send_file_xsendfile(self, app, req_ctx, catch_deprecation_warnings):\n+    def test_send_file_xsendfile(self, app, req_ctx):\n         app.use_x_sendfile = True\n         rv = flask.send_file('static/index.html')\n         assert rv.direct_passthrough"
    },
    {
        "commit_id": "d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "commit_message": "Merge pull request #3247 from pallets/join-strings\n\nfix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "buggy_code": "\"INSERT INTO post (title, body, author_id)\" \" VALUES (?, ?, ?)\",",
        "fixed_code": "\"INSERT INTO post (title, body, author_id) VALUES (?, ?, ?)\",",
        "patch": "@@ -74,7 +74,7 @@ def create():\n         else:\n             db = get_db()\n             db.execute(\n-                \"INSERT INTO post (title, body, author_id)\" \" VALUES (?, ?, ?)\",\n+                \"INSERT INTO post (title, body, author_id) VALUES (?, ?, ?)\",\n                 (title, body, g.user[\"id\"]),\n             )\n             db.commit()"
    },
    {
        "commit_id": "d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "commit_message": "Merge pull request #3247 from pallets/join-strings\n\nfix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "buggy_code": "\"Request finalizing failed with an \" \"error while handling an error\"",
        "fixed_code": "\"Request finalizing failed with an error while handling an error\"",
        "patch": "@@ -1931,7 +1931,7 @@ def finalize_request(self, rv, from_error_handler=False):\n             if not from_error_handler:\n                 raise\n             self.logger.exception(\n-                \"Request finalizing failed with an \" \"error while handling an error\"\n+                \"Request finalizing failed with an error while handling an error\"\n             )\n         return response\n "
    },
    {
        "commit_id": "d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "commit_message": "Merge pull request #3247 from pallets/join-strings\n\nfix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "buggy_code": "message = \"Python %(python)s\\n\" \"Flask %(flask)s\\n\" \"Werkzeug %(werkzeug)s\"",
        "fixed_code": "message = \"Python %(python)s\\nFlask %(flask)s\\nWerkzeug %(werkzeug)s\"",
        "patch": "@@ -266,7 +266,7 @@ def get_version(ctx, param, value):\n     import werkzeug\n     from . import __version__\n \n-    message = \"Python %(python)s\\n\" \"Flask %(flask)s\\n\" \"Werkzeug %(werkzeug)s\"\n+    message = \"Python %(python)s\\nFlask %(flask)s\\nWerkzeug %(werkzeug)s\"\n     click.echo(\n         message\n         % {"
    },
    {
        "commit_id": "d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "commit_message": "Merge pull request #3247 from pallets/join-strings\n\nfix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "buggy_code": "assert (\"Make sure to directly send \" \"your POST-request to this URL\") in str(e)",
        "fixed_code": "assert (\"Make sure to directly send your POST-request to this URL\") in str(e)",
        "patch": "@@ -1726,7 +1726,7 @@ def foo():\n         with pytest.raises(AssertionError) as e:\n             client.post(\"/foo\", data={})\n         assert \"http://localhost/foo/\" in str(e)\n-        assert (\"Make sure to directly send \" \"your POST-request to this URL\") in str(e)\n+        assert (\"Make sure to directly send your POST-request to this URL\") in str(e)\n \n         rv = client.get(\"/foo\", data={}, follow_redirects=True)\n         assert rv.data == b\"success\""
    },
    {
        "commit_id": "d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "commit_message": "Merge pull request #3247 from pallets/join-strings\n\nfix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "buggy_code": "\"import flask\\n\" \"app = flask.Flask(__name__)\\n\"",
        "fixed_code": "\"import flask\\napp = flask.Flask(__name__)\\n\"",
        "patch": "@@ -69,7 +69,7 @@ def test_installed_module_paths(\n     modules_tmpdir, modules_tmpdir_prefix, purge_module, site_packages, limit_loader\n ):\n     site_packages.join(\"site_app.py\").write(\n-        \"import flask\\n\" \"app = flask.Flask(__name__)\\n\"\n+        \"import flask\\napp = flask.Flask(__name__)\\n\"\n     )\n     purge_module(\"site_app\")\n "
    },
    {
        "commit_id": "d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "commit_message": "Merge pull request #3247 from pallets/join-strings\n\nfix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/d4b688bd035b9704b3168b28fed39c8fcfe3b997",
        "buggy_code": "rv = flask.render_template_string(\"Hello {{ config.WORLD_NAME }} \" \"{{ foo }}\")",
        "fixed_code": "rv = flask.render_template_string(\"Hello {{ config.WORLD_NAME }} {{ foo }}\")",
        "patch": "@@ -46,7 +46,7 @@ def test_request_less_rendering(app, app_ctx):\n     def context_processor():\n         return dict(foo=42)\n \n-    rv = flask.render_template_string(\"Hello {{ config.WORLD_NAME }} \" \"{{ foo }}\")\n+    rv = flask.render_template_string(\"Hello {{ config.WORLD_NAME }} {{ foo }}\")\n     assert rv == \"Hello Special World 42\"\n \n "
    },
    {
        "commit_id": "53c893b646252d610e877eb9385e9e250a1ae5e1",
        "commit_message": "fix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/53c893b646252d610e877eb9385e9e250a1ae5e1",
        "buggy_code": "\"INSERT INTO post (title, body, author_id)\" \" VALUES (?, ?, ?)\",",
        "fixed_code": "\"INSERT INTO post (title, body, author_id) VALUES (?, ?, ?)\",",
        "patch": "@@ -74,7 +74,7 @@ def create():\n         else:\n             db = get_db()\n             db.execute(\n-                \"INSERT INTO post (title, body, author_id)\" \" VALUES (?, ?, ?)\",\n+                \"INSERT INTO post (title, body, author_id) VALUES (?, ?, ?)\",\n                 (title, body, g.user[\"id\"]),\n             )\n             db.commit()"
    },
    {
        "commit_id": "53c893b646252d610e877eb9385e9e250a1ae5e1",
        "commit_message": "fix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/53c893b646252d610e877eb9385e9e250a1ae5e1",
        "buggy_code": "\"Request finalizing failed with an \" \"error while handling an error\"",
        "fixed_code": "\"Request finalizing failed with an error while handling an error\"",
        "patch": "@@ -1931,7 +1931,7 @@ def finalize_request(self, rv, from_error_handler=False):\n             if not from_error_handler:\n                 raise\n             self.logger.exception(\n-                \"Request finalizing failed with an \" \"error while handling an error\"\n+                \"Request finalizing failed with an error while handling an error\"\n             )\n         return response\n "
    },
    {
        "commit_id": "53c893b646252d610e877eb9385e9e250a1ae5e1",
        "commit_message": "fix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/53c893b646252d610e877eb9385e9e250a1ae5e1",
        "buggy_code": "message = \"Python %(python)s\\n\" \"Flask %(flask)s\\n\" \"Werkzeug %(werkzeug)s\"",
        "fixed_code": "message = \"Python %(python)s\\nFlask %(flask)s\\nWerkzeug %(werkzeug)s\"",
        "patch": "@@ -266,7 +266,7 @@ def get_version(ctx, param, value):\n     import werkzeug\n     from . import __version__\n \n-    message = \"Python %(python)s\\n\" \"Flask %(flask)s\\n\" \"Werkzeug %(werkzeug)s\"\n+    message = \"Python %(python)s\\nFlask %(flask)s\\nWerkzeug %(werkzeug)s\"\n     click.echo(\n         message\n         % {"
    },
    {
        "commit_id": "53c893b646252d610e877eb9385e9e250a1ae5e1",
        "commit_message": "fix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/53c893b646252d610e877eb9385e9e250a1ae5e1",
        "buggy_code": "assert (\"Make sure to directly send \" \"your POST-request to this URL\") in str(e)",
        "fixed_code": "assert (\"Make sure to directly send your POST-request to this URL\") in str(e)",
        "patch": "@@ -1726,7 +1726,7 @@ def foo():\n         with pytest.raises(AssertionError) as e:\n             client.post(\"/foo\", data={})\n         assert \"http://localhost/foo/\" in str(e)\n-        assert (\"Make sure to directly send \" \"your POST-request to this URL\") in str(e)\n+        assert (\"Make sure to directly send your POST-request to this URL\") in str(e)\n \n         rv = client.get(\"/foo\", data={}, follow_redirects=True)\n         assert rv.data == b\"success\""
    },
    {
        "commit_id": "53c893b646252d610e877eb9385e9e250a1ae5e1",
        "commit_message": "fix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/53c893b646252d610e877eb9385e9e250a1ae5e1",
        "buggy_code": "\"import flask\\n\" \"app = flask.Flask(__name__)\\n\"",
        "fixed_code": "\"import flask\\napp = flask.Flask(__name__)\\n\"",
        "patch": "@@ -69,7 +69,7 @@ def test_installed_module_paths(\n     modules_tmpdir, modules_tmpdir_prefix, purge_module, site_packages, limit_loader\n ):\n     site_packages.join(\"site_app.py\").write(\n-        \"import flask\\n\" \"app = flask.Flask(__name__)\\n\"\n+        \"import flask\\napp = flask.Flask(__name__)\\n\"\n     )\n     purge_module(\"site_app\")\n "
    },
    {
        "commit_id": "53c893b646252d610e877eb9385e9e250a1ae5e1",
        "commit_message": "fix string concats left over by black",
        "commit_url": "https://github.com/pallets/flask/commit/53c893b646252d610e877eb9385e9e250a1ae5e1",
        "buggy_code": "rv = flask.render_template_string(\"Hello {{ config.WORLD_NAME }} \" \"{{ foo }}\")",
        "fixed_code": "rv = flask.render_template_string(\"Hello {{ config.WORLD_NAME }} {{ foo }}\")",
        "patch": "@@ -46,7 +46,7 @@ def test_request_less_rendering(app, app_ctx):\n     def context_processor():\n         return dict(foo=42)\n \n-    rv = flask.render_template_string(\"Hello {{ config.WORLD_NAME }} \" \"{{ foo }}\")\n+    rv = flask.render_template_string(\"Hello {{ config.WORLD_NAME }} {{ foo }}\")\n     assert rv == \"Hello Special World 42\"\n \n "
    },
    {
        "commit_id": "524f9c32c7292d00818e17a714d062d1fb24f129",
        "commit_message": "Merge pull request #3233 from rtilk89/unused_werkzerg_import\n\nIssue #3226: Remove unused werkzeug datastructure import",
        "commit_url": "https://github.com/pallets/flask/commit/524f9c32c7292d00818e17a714d062d1fb24f129",
        "buggy_code": "from werkzeug.datastructures import Headers, Range",
        "fixed_code": "from werkzeug.datastructures import Headers",
        "patch": "@@ -23,7 +23,7 @@\n from functools import update_wrapper\n \n from werkzeug.urls import url_quote\n-from werkzeug.datastructures import Headers, Range\n+from werkzeug.datastructures import Headers\n from werkzeug.exceptions import BadRequest, NotFound, RequestedRangeNotSatisfiable\n \n from werkzeug.wsgi import wrap_file"
    },
    {
        "commit_id": "cd14adbc1e834b0accc3b593a77d60d3cadddc8b",
        "commit_message": "Issue #3226: Remove unused werkzeug datastructure import",
        "commit_url": "https://github.com/pallets/flask/commit/cd14adbc1e834b0accc3b593a77d60d3cadddc8b",
        "buggy_code": "from werkzeug.datastructures import Headers, Range",
        "fixed_code": "from werkzeug.datastructures import Headers",
        "patch": "@@ -23,7 +23,7 @@\n from functools import update_wrapper\n \n from werkzeug.urls import url_quote\n-from werkzeug.datastructures import Headers, Range\n+from werkzeug.datastructures import Headers\n from werkzeug.exceptions import BadRequest, NotFound, RequestedRangeNotSatisfiable\n \n from werkzeug.wsgi import wrap_file"
    },
    {
        "commit_id": "240e398c8d2b46607f6e5c87b6e39eab50ad7796",
        "commit_message": "Merge pull request #3229 from lordmauve/style-fix\n\nFix style issues on master using Black",
        "commit_url": "https://github.com/pallets/flask/commit/240e398c8d2b46607f6e5c87b6e39eab50ad7796",
        "buggy_code": "assert not load_dotenv('non-existent-file')",
        "fixed_code": "assert not load_dotenv(\"non-existent-file\")",
        "patch": "@@ -525,7 +525,7 @@ def test_load_dotenv(monkeypatch):\n     assert os.environ[\"EGGS\"] == \"3\"\n \n     # Non existent file should not load\n-    assert not load_dotenv('non-existent-file')\n+    assert not load_dotenv(\"non-existent-file\")\n \n \n @need_dotenv"
    },
    {
        "commit_id": "a5ff3cd01b8a78b5ed2961a8095290fed4e2a0d5",
        "commit_message": "Fix style issues on master using Black",
        "commit_url": "https://github.com/pallets/flask/commit/a5ff3cd01b8a78b5ed2961a8095290fed4e2a0d5",
        "buggy_code": "assert not load_dotenv('non-existent-file')",
        "fixed_code": "assert not load_dotenv(\"non-existent-file\")",
        "patch": "@@ -525,7 +525,7 @@ def test_load_dotenv(monkeypatch):\n     assert os.environ[\"EGGS\"] == \"3\"\n \n     # Non existent file should not load\n-    assert not load_dotenv('non-existent-file')\n+    assert not load_dotenv(\"non-existent-file\")\n \n \n @need_dotenv"
    },
    {
        "commit_id": "754b72957854e0b955fe973d169daa27a2f98ef1",
        "commit_message": "Merge pull request #3124 from elbeardmorez/fix_static_url_path\n\nfix 'static_url_path' defaulting for empty paths",
        "commit_url": "https://github.com/pallets/flask/commit/754b72957854e0b955fe973d169daa27a2f98ef1",
        "buggy_code": "self.static_url_path.rstrip(\"/\") + \"/<path:filename>\",",
        "fixed_code": "self.static_url_path + \"/<path:filename>\",",
        "patch": "@@ -208,7 +208,7 @@ def register(self, app, options, first_registration=False):\n \n         if self.has_static_folder:\n             state.add_url_rule(\n-                self.static_url_path.rstrip(\"/\") + \"/<path:filename>\",\n+                self.static_url_path + \"/<path:filename>\",\n                 view_func=self.send_static_file,\n                 endpoint=\"static\",\n             )"
    },
    {
        "commit_id": "dbd38404108f5c3c3cc31310a3eff24aa6b262c9",
        "commit_message": "Merge pull request #3182 from qil026/issue-3134-url-join\n\nRemove ending slash from static_url_path",
        "commit_url": "https://github.com/pallets/flask/commit/dbd38404108f5c3c3cc31310a3eff24aa6b262c9",
        "buggy_code": "self.static_url_path + \"/<path:filename>\",",
        "fixed_code": "self.static_url_path.rstrip(\"/\") + \"/<path:filename>\",",
        "patch": "@@ -587,7 +587,7 @@ def __init__(\n                 bool(static_host) == host_matching\n             ), \"Invalid static_host/host_matching combination\"\n             self.add_url_rule(\n-                self.static_url_path + \"/<path:filename>\",\n+                self.static_url_path.rstrip(\"/\") + \"/<path:filename>\",\n                 endpoint=\"static\",\n                 host=static_host,\n                 view_func=self.send_static_file,"
    },
    {
        "commit_id": "dbd38404108f5c3c3cc31310a3eff24aa6b262c9",
        "commit_message": "Merge pull request #3182 from qil026/issue-3134-url-join\n\nRemove ending slash from static_url_path",
        "commit_url": "https://github.com/pallets/flask/commit/dbd38404108f5c3c3cc31310a3eff24aa6b262c9",
        "buggy_code": "self.static_url_path + \"/<path:filename>\",",
        "fixed_code": "self.static_url_path.rstrip(\"/\") + \"/<path:filename>\",",
        "patch": "@@ -198,7 +198,7 @@ def register(self, app, options, first_registration=False):\n \n         if self.has_static_folder:\n             state.add_url_rule(\n-                self.static_url_path + \"/<path:filename>\",\n+                self.static_url_path.rstrip(\"/\") + \"/<path:filename>\",\n                 view_func=self.send_static_file,\n                 endpoint=\"static\",\n             )"
    },
    {
        "commit_id": "b765e0db509eadd6d35093dafbc3b9814ba109d4",
        "commit_message": "Merge pull request #3196 from jakseb/fix-docs-paren\n\nFix misplaced paren in docs",
        "commit_url": "https://github.com/pallets/flask/commit/b765e0db509eadd6d35093dafbc3b9814ba109d4",
        "buggy_code": "(such as :class:`request` or :class:`g` for truthness)::",
        "fixed_code": "(such as :class:`request` or :class:`g`) for truthness::",
        "patch": "@@ -170,7 +170,7 @@ def __init__(self, username, remote_addr=None):\n                 self.remote_addr = remote_addr\n \n     Alternatively you can also just test any of the context bound objects\n-    (such as :class:`request` or :class:`g` for truthness)::\n+    (such as :class:`request` or :class:`g`) for truthness::\n \n         class User(db.Model):\n "
    },
    {
        "commit_id": "c88e4634a5fa4460f582a8e9315dc78da41543e8",
        "commit_message": "Merge pull request #3096 from RyanSquared/master\n\nhelpers.py: Fix docs of url_for(..., _external=True)",
        "commit_url": "https://github.com/pallets/flask/commit/c88e4634a5fa4460f582a8e9315dc78da41543e8",
        "buggy_code": "defaults to `localhost`.",
        "fixed_code": "falls back to the `Host` header, then to the IP and port of the request.",
        "patch": "@@ -276,7 +276,7 @@ def external_url_handler(error, endpoint, values):\n     :param values: the variable arguments of the URL rule\n     :param _external: if set to ``True``, an absolute URL is generated. Server\n       address can be changed via ``SERVER_NAME`` configuration variable which\n-      defaults to `localhost`.\n+      falls back to the `Host` header, then to the IP and port of the request.\n     :param _scheme: a string specifying the desired URL scheme. The `_external`\n       parameter must be set to ``True`` or a :exc:`ValueError` is raised. The default\n       behavior uses the same scheme as the current request, or"
    },
    {
        "commit_id": "d23b160e6df5d13e7db7a5e53afab6db306efe3c",
        "commit_message": "helpers.py: Fix docs of url_for(..., _external=True)",
        "commit_url": "https://github.com/pallets/flask/commit/d23b160e6df5d13e7db7a5e53afab6db306efe3c",
        "buggy_code": "defaults to `localhost`.",
        "fixed_code": "falls back to the `Host` header, then to the IP and port of the request.",
        "patch": "@@ -276,7 +276,7 @@ def external_url_handler(error, endpoint, values):\n     :param values: the variable arguments of the URL rule\n     :param _external: if set to ``True``, an absolute URL is generated. Server\n       address can be changed via ``SERVER_NAME`` configuration variable which\n-      defaults to `localhost`.\n+      falls back to the `Host` header, then to the IP and port of the request.\n     :param _scheme: a string specifying the desired URL scheme. The `_external`\n       parameter must be set to ``True`` or a :exc:`ValueError` is raised. The default\n       behavior uses the same scheme as the current request, or"
    },
    {
        "commit_id": "205c943deda542b0c0df2f1b9ce3bbe72d80eef8",
        "commit_message": "Fix misplaced paren in docs",
        "commit_url": "https://github.com/pallets/flask/commit/205c943deda542b0c0df2f1b9ce3bbe72d80eef8",
        "buggy_code": "(such as :class:`request` or :class:`g` for truthness)::",
        "fixed_code": "(such as :class:`request` or :class:`g`) for truthness::",
        "patch": "@@ -170,7 +170,7 @@ def __init__(self, username, remote_addr=None):\n                 self.remote_addr = remote_addr\n \n     Alternatively you can also just test any of the context bound objects\n-    (such as :class:`request` or :class:`g` for truthness)::\n+    (such as :class:`request` or :class:`g`) for truthness::\n \n         class User(db.Model):\n "
    },
    {
        "commit_id": "de01dfb70206f8dbb55724b7abfc515ead3ca283",
        "commit_message": "Bump Jinja2 requirements\n\nThe 2.10.1 version was released 2019-04-06 and contains important security fix.\nThis change allows flask users to avoid implicit insecure dependency.",
        "commit_url": "https://github.com/pallets/flask/commit/de01dfb70206f8dbb55724b7abfc515ead3ca283",
        "buggy_code": "'Jinja2>=2.10',",
        "fixed_code": "'Jinja2>=2.10.1',",
        "patch": "@@ -35,7 +35,7 @@\n     python_requires='>=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*',\n     install_requires=[\n         'Werkzeug>=0.14',\n-        'Jinja2>=2.10',\n+        'Jinja2>=2.10.1',\n         'itsdangerous>=0.24',\n         'click>=5.1',\n     ],"
    },
    {
        "commit_id": "15c079f500967543c033ddeb113febc1d84abc87",
        "commit_message": "Merge pull request #3063 from pallets/key-error\n\nclear KeyError in production for Werkzeug 0.15",
        "commit_url": "https://github.com/pallets/flask/commit/15c079f500967543c033ddeb113febc1d84abc87",
        "buggy_code": "assert 'missing_key' in e.value.description",
        "fixed_code": "assert 'missing_key' in e.value.get_description()",
        "patch": "@@ -1045,7 +1045,7 @@ def allow_abort():\n     with pytest.raises(KeyError) as e:\n         client.get(\"/key\")\n     assert e.errisinstance(BadRequest)\n-    assert 'missing_key' in e.value.description\n+    assert 'missing_key' in e.value.get_description()\n     rv = client.get('/abort')\n     assert rv.status_code == 400\n "
    },
    {
        "commit_id": "0038a6796feaea05d9839520eb7f31f7f976fc47",
        "commit_message": "Merge pull request #2963 from garenchan/bugfix-#2961\n\nFix #2961\uff1aignore colon followed by slash when split app_import_path",
        "commit_url": "https://github.com/pallets/flask/commit/0038a6796feaea05d9839520eb7f31f7f976fc47",
        "buggy_code": "path, name = (self.app_import_path.split(':', 1) + [None])[:2]",
        "fixed_code": "path, name = (re.split(r':(?![\\\\/])', self.app_import_path, 1) + [None])[:2]",
        "patch": "@@ -369,7 +369,7 @@ def load_app(self):\n             app = call_factory(self, self.create_app)\n         else:\n             if self.app_import_path:\n-                path, name = (self.app_import_path.split(':', 1) + [None])[:2]\n+                path, name = (re.split(r':(?![\\\\/])', self.app_import_path, 1) + [None])[:2]\n                 import_name = prepare_import(path)\n                 app = locate_app(self, import_name, name)\n             else:"
    },
    {
        "commit_id": "c38499bbf26cfa9683e30c52139a94dc5a50dcc4",
        "commit_message": "ignore colon with slash when split app_import_path\nFlask currently supports importing app through a combination of module\npath and app variable name, such as '/usr/app.py:my_app'. When the\nmodule path contains a colon, it will conflict with this import way and\na `flask.cli.NoAppException` will be raised.\n\nA file path on a Windows system may contain a colon followed by a slash.\nSo we solved this problem on Windows by ignoring the colon followed by a\nslash when we split app_import_path.\n\nFix issue #2961.",
        "commit_url": "https://github.com/pallets/flask/commit/c38499bbf26cfa9683e30c52139a94dc5a50dcc4",
        "buggy_code": "path, name = (self.app_import_path.split(':', 1) + [None])[:2]",
        "fixed_code": "path, name = (re.split(r':(?![\\\\/])', self.app_import_path, 1) + [None])[:2]",
        "patch": "@@ -369,7 +369,7 @@ def load_app(self):\n             app = call_factory(self, self.create_app)\n         else:\n             if self.app_import_path:\n-                path, name = (self.app_import_path.split(':', 1) + [None])[:2]\n+                path, name = (re.split(r':(?![\\\\/])', self.app_import_path, 1) + [None])[:2]\n                 import_name = prepare_import(path)\n                 app = locate_app(self, import_name, name)\n             else:"
    },
    {
        "commit_id": "0559f7c86bfe3a5b2895c949630799a72859ab01",
        "commit_message": "Merge pull request #2828 from greyli/patch-9\n\nUpdate cli tips for .flaskenv",
        "commit_url": "https://github.com/pallets/flask/commit/0559f7c86bfe3a5b2895c949630799a72859ab01",
        "buggy_code": "' * Tip: There are .env files present.'",
        "fixed_code": "' * Tip: There are .env or .flaskenv files present.'",
        "patch": "@@ -591,7 +591,7 @@ def load_dotenv(path=None):\n     if dotenv is None:\n         if path or os.path.isfile('.env') or os.path.isfile('.flaskenv'):\n             click.secho(\n-                ' * Tip: There are .env files present.'\n+                ' * Tip: There are .env or .flaskenv files present.'\n                 ' Do \"pip install python-dotenv\" to use them.',\n                 fg='yellow')\n         return"
    },
    {
        "commit_id": "b2ec6a33a235dbd9f57bd6265ec54cfb675243f7",
        "commit_message": "Merge pull request #2827 from schafle/fix-2823\n\n[Fixed 2823] Checking if .env is file before prompting to install dotenv",
        "commit_url": "https://github.com/pallets/flask/commit/b2ec6a33a235dbd9f57bd6265ec54cfb675243f7",
        "buggy_code": "if path or os.path.exists('.env') or os.path.exists('.flaskenv'):",
        "fixed_code": "if path or os.path.isfile('.env') or os.path.isfile('.flaskenv'):",
        "patch": "@@ -584,7 +584,7 @@ def load_dotenv(path=None):\n     .. versionadded:: 1.0\n     \"\"\"\n     if dotenv is None:\n-        if path or os.path.exists('.env') or os.path.exists('.flaskenv'):\n+        if path or os.path.isfile('.env') or os.path.isfile('.flaskenv'):\n             click.secho(\n                 ' * Tip: There are .env files present.'\n                 ' Do \"pip install python-dotenv\" to use them.',"
    },
    {
        "commit_id": "d4fb9d564e4c0afe978e5953b58dfc6ce0fd08fb",
        "commit_message": "Merge pull request #2737 from jesseops/master\n\nfix #2736 - remove explicit check for list as a return value in make_response",
        "commit_url": "https://github.com/pallets/flask/commit/d4fb9d564e4c0afe978e5953b58dfc6ce0fd08fb",
        "buggy_code": "if isinstance(rv, (tuple, list)):",
        "fixed_code": "if isinstance(rv, tuple):",
        "patch": "@@ -1923,7 +1923,7 @@ def make_response(self, rv):\n         status = headers = None\n \n         # unpack tuple returns\n-        if isinstance(rv, (tuple, list)):\n+        if isinstance(rv, tuple):\n             len_rv = len(rv)\n \n             # a 3-tuple is unpacked directly"
    },
    {
        "commit_id": "3666a584fd24dc14585648f215a82ce1e8b71baa",
        "commit_message": "fix #2736 - allow lists to be passed through to response_class init",
        "commit_url": "https://github.com/pallets/flask/commit/3666a584fd24dc14585648f215a82ce1e8b71baa",
        "buggy_code": "if isinstance(rv, (tuple, list)):",
        "fixed_code": "if isinstance(rv, tuple):",
        "patch": "@@ -1923,7 +1923,7 @@ def make_response(self, rv):\n         status = headers = None\n \n         # unpack tuple returns\n-        if isinstance(rv, (tuple, list)):\n+        if isinstance(rv, tuple):\n             len_rv = len(rv)\n \n             # a 3-tuple is unpacked directly"
    },
    {
        "commit_id": "6663bf1f7d5a43633e6434a5dd8ea8f8eccdd616",
        "commit_message": "Fix registering partials as view functions",
        "commit_url": "https://github.com/pallets/flask/commit/6663bf1f7d5a43633e6434a5dd8ea8f8eccdd616",
        "buggy_code": "if view_func:",
        "fixed_code": "if view_func and hasattr(view_func, '__name__'):",
        "patch": "@@ -201,7 +201,7 @@ def add_url_rule(self, rule, endpoint=None, view_func=None, **options):\n         \"\"\"\n         if endpoint:\n             assert '.' not in endpoint, \"Blueprint endpoints should not contain dots\"\n-        if view_func:\n+        if view_func and hasattr(view_func, '__name__'):\n             assert '.' not in view_func.__name__, \"Blueprint view function name should not contain dots\"\n         self.record(lambda s:\n             s.add_url_rule(rule, endpoint, view_func, **options))"
    },
    {
        "commit_id": "eaedb9320c7aad581daa05f1510b64393c082dbb",
        "commit_message": "Fix index example for TaggedJSONSerializer.register()\n\nMade the example use a keyword, rather than a positional argument, as\nthe intent here is to show how to insert a tag with higher precedence.\nAs a positional argument, this would have been passed to ``force``\ninstead of ``index``.",
        "commit_url": "https://github.com/pallets/flask/commit/eaedb9320c7aad581daa05f1510b64393c082dbb",
        "buggy_code": "app.session_interface.serializer.register(TagOrderedDict, 0)",
        "fixed_code": "app.session_interface.serializer.register(TagOrderedDict, index=0)",
        "patch": "@@ -36,7 +36,7 @@ def to_json(self, value):\n         def to_python(self, value):\n             return OrderedDict(value)\n \n-    app.session_interface.serializer.register(TagOrderedDict, 0)\n+    app.session_interface.serializer.register(TagOrderedDict, index=0)\n \n :copyright: \u00a9 2010 by the Pallets team.\n :license: BSD, see LICENSE for more details."
    },
    {
        "commit_id": "213afec771a92e20516e5ea468bdd2186915f186",
        "commit_message": "add rst extension for changelog\nfix changelog version",
        "commit_url": "https://github.com/pallets/flask/commit/213afec771a92e20516e5ea468bdd2186915f186",
        "buggy_code": "with open('CHANGES') as f:",
        "fixed_code": "with open('CHANGES.rst') as f:",
        "patch": "@@ -21,7 +21,7 @@\n \n \n def parse_changelog():\n-    with open('CHANGES') as f:\n+    with open('CHANGES.rst') as f:\n         lineiter = iter(f)\n         for line in lineiter:\n             match = re.search('^Version\\s+(.*)', line.strip())"
    },
    {
        "commit_id": "e3c853e60401bccf1564bee19dda7a3b41602ff9",
        "commit_message": "Fix typo in cli.py (#2502)",
        "commit_url": "https://github.com/pallets/flask/commit/e3c853e60401bccf1564bee19dda7a3b41602ff9",
        "buggy_code": "without having to manually configuring the application.",
        "fixed_code": "without having to manually configure the application.",
        "patch": "@@ -644,7 +644,7 @@ def shell_command():\n     namespace of this shell according to it's configuration.\n \n     This is useful for executing small snippets of management code\n-    without having to manually configuring the application.\n+    without having to manually configure the application.\n     \"\"\"\n     import code\n     from flask.globals import _app_ctx_stack"
    },
    {
        "commit_id": "706e67ed9e28b676f99d896c5c93f3f9cd74370b",
        "commit_message": "Merge pull request #2361 from greyli/patch-3\n\nInclude flask.json package in setup()",
        "commit_url": "https://github.com/pallets/flask/commit/706e67ed9e28b676f99d896c5c93f3f9cd74370b",
        "buggy_code": "packages=['flask', 'flask.ext'],",
        "fixed_code": "packages=['flask', 'flask.ext', 'flask.json'],",
        "patch": "@@ -64,7 +64,7 @@ def hello():\n     description='A microframework based on Werkzeug, Jinja2 '\n                 'and good intentions',\n     long_description=__doc__,\n-    packages=['flask', 'flask.ext'],\n+    packages=['flask', 'flask.ext', 'flask.json'],\n     include_package_data=True,\n     zip_safe=False,\n     platforms='any',"
    },
    {
        "commit_id": "8f3563cf79024056987864ad4229f03e6c1aec99",
        "commit_message": "fix operator precedence",
        "commit_url": "https://github.com/pallets/flask/commit/8f3563cf79024056987864ad4229f03e6c1aec99",
        "buggy_code": "self.debug or self.config['TRAP_BAD_REQUEST_ERRORS']",
        "fixed_code": "(self.debug or self.config['TRAP_BAD_REQUEST_ERRORS'])",
        "patch": "@@ -1585,7 +1585,7 @@ def handle_user_exception(self, e):\n         # when generating the response message. Set an informative\n         # description for key errors in debug mode or when trapping errors.\n         if (\n-            self.debug or self.config['TRAP_BAD_REQUEST_ERRORS']\n+            (self.debug or self.config['TRAP_BAD_REQUEST_ERRORS'])\n             and isinstance(e, BadRequestKeyError)\n             # only set it if it's still the default description\n             and e.description is BadRequestKeyError.description"
    },
    {
        "commit_id": "31174fecd2dccd48aa56d4eefc7c808ae93d9262",
        "commit_message": "resolve merge conflicts",
        "commit_url": "https://github.com/pallets/flask/commit/31174fecd2dccd48aa56d4eefc7c808ae93d9262",
        "buggy_code": "return 'http://www.gravatar.com/avatar/%s?d=identicon&s=%d' % \\",
        "fixed_code": "return 'https://www.gravatar.com/avatar/%s?d=identicon&s=%d' % \\",
        "patch": "@@ -85,7 +85,7 @@ def format_datetime(timestamp):\n \n def gravatar_url(email, size=80):\n     \"\"\"Return the gravatar image for the given email address.\"\"\"\n-    return 'http://www.gravatar.com/avatar/%s?d=identicon&s=%d' % \\\n+    return 'https://www.gravatar.com/avatar/%s?d=identicon&s=%d' % \\\n         (md5(email.strip().lower().encode('utf-8')).hexdigest(), size)\n \n "
    },
    {
        "commit_id": "65b22926f7673b419a9da82f3213d7243c968af1",
        "commit_message": "reduce number of tox and travis envs\nbump minimum werkzeug version to fix tests\ncache pip pacakges on travis\ncollect branch coverage\ncollect coverage of test code\nreport coverage across envs\ntest building docs\nenable codecov integration",
        "commit_url": "https://github.com/pallets/flask/commit/65b22926f7673b419a9da82f3213d7243c968af1",
        "buggy_code": "'Werkzeug>=0.7',",
        "fixed_code": "'Werkzeug>=0.9',",
        "patch": "@@ -71,7 +71,7 @@ def hello():\n     zip_safe=False,\n     platforms='any',\n     install_requires=[\n-        'Werkzeug>=0.7',\n+        'Werkzeug>=0.9',\n         'Jinja2>=2.4',\n         'itsdangerous>=0.21',\n         'click>=4.0',"
    },
    {
        "commit_id": "701faf0724d8aa18d7ed2907b63c143725dd3e7d",
        "commit_message": "Merge pull request #2320 from markshannon/fix-click-dependency-info\n\nUpdate click dependency info.",
        "commit_url": "https://github.com/pallets/flask/commit/701faf0724d8aa18d7ed2907b63c143725dd3e7d",
        "buggy_code": "'click>=2.0',",
        "fixed_code": "'click>=4.0',",
        "patch": "@@ -74,7 +74,7 @@ def hello():\n         'Werkzeug>=0.7',\n         'Jinja2>=2.4',\n         'itsdangerous>=0.21',\n-        'click>=2.0',\n+        'click>=4.0',\n     ],\n     classifiers=[\n         'Development Status :: 4 - Beta',"
    },
    {
        "commit_id": "81c2440a054a0aa9110ec1d5aa0955055c08050e",
        "commit_message": "Merge pull request #2318 from bovarysme/fix-testing-docs\n\nFix a small oversight in the testing docs",
        "commit_url": "https://github.com/pallets/flask/commit/81c2440a054a0aa9110ec1d5aa0955055c08050e",
        "buggy_code": "def client(request):",
        "fixed_code": "def client():",
        "patch": "@@ -16,7 +16,7 @@\n \n \n @pytest.fixture\n-def client(request):\n+def client():\n     db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()\n     flaskr.app.config['TESTING'] = True\n     client = flaskr.app.test_client()"
    },
    {
        "commit_id": "fe27d04cc196d65af17ac6cf67574fa61d5b4828",
        "commit_message": "Fix a small oversight in the testing docs",
        "commit_url": "https://github.com/pallets/flask/commit/fe27d04cc196d65af17ac6cf67574fa61d5b4828",
        "buggy_code": "def client(request):",
        "fixed_code": "def client():",
        "patch": "@@ -16,7 +16,7 @@\n \n \n @pytest.fixture\n-def client(request):\n+def client():\n     db_fd, flaskr.app.config['DATABASE'] = tempfile.mkstemp()\n     flaskr.app.config['TESTING'] = True\n     client = flaskr.app.test_client()"
    },
    {
        "commit_id": "6ef45f30ab0e95d80ee2a29168f098e9037b9e0b",
        "commit_message": "Fix previous commits to work with python 2 and python 3\n\nAlso, parse_options_header seems to interpret filename* so we better\ntest the actual value used in the headers (and since it's valid\nin any order, use a set to compare)",
        "commit_url": "https://github.com/pallets/flask/commit/6ef45f30ab0e95d80ee2a29168f098e9037b9e0b",
        "buggy_code": "'filename': unidecode(attachment_filename),",
        "fixed_code": "'filename': unidecode(text_type(attachment_filename)),",
        "patch": "@@ -536,7 +536,7 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n             raise TypeError('filename unavailable, required for '\n                             'sending as attachment')\n         filename_dict = {\n-            'filename': unidecode(attachment_filename),\n+            'filename': unidecode(text_type(attachment_filename)),\n             'filename*': \"UTF-8''%s\" % url_quote(attachment_filename)}\n         headers.add('Content-Disposition', 'attachment',\n                     **filename_dict)"
    },
    {
        "commit_id": "19d7e6532f9187ba8a81b2d2ad9afe03e5e5500a",
        "commit_message": "Merge pull request #2217 from edbrannin/patch-1\n\nshorten output when ImportError due to app bug.",
        "commit_url": "https://github.com/pallets/flask/commit/19d7e6532f9187ba8a81b2d2ad9afe03e5e5500a",
        "buggy_code": "pytest.raises(ImportError, locate_app, \"cliapp.importerrorapp\")",
        "fixed_code": "pytest.raises(NoAppException, locate_app, \"cliapp.importerrorapp\")",
        "patch": "@@ -83,7 +83,7 @@ def test_locate_app(test_apps):\n     pytest.raises(NoAppException, locate_app, \"notanpp.py\")\n     pytest.raises(NoAppException, locate_app, \"cliapp/app\")\n     pytest.raises(RuntimeError, locate_app, \"cliapp.app:notanapp\")\n-    pytest.raises(ImportError, locate_app, \"cliapp.importerrorapp\")\n+    pytest.raises(NoAppException, locate_app, \"cliapp.importerrorapp\")\n \n \n def test_find_default_import_path(test_apps, monkeypatch, tmpdir):"
    },
    {
        "commit_id": "6e5250ab5dcdbf1e6d47e8481ba80de4f44f20f9",
        "commit_message": "Fix CLI test for ImportError -> NoAppException",
        "commit_url": "https://github.com/pallets/flask/commit/6e5250ab5dcdbf1e6d47e8481ba80de4f44f20f9",
        "buggy_code": "pytest.raises(ImportError, locate_app, \"cliapp.importerrorapp\")",
        "fixed_code": "pytest.raises(NoAppException, locate_app, \"cliapp.importerrorapp\")",
        "patch": "@@ -83,7 +83,7 @@ def test_locate_app(test_apps):\n     pytest.raises(NoAppException, locate_app, \"notanpp.py\")\n     pytest.raises(NoAppException, locate_app, \"cliapp/app\")\n     pytest.raises(RuntimeError, locate_app, \"cliapp.app:notanapp\")\n-    pytest.raises(ImportError, locate_app, \"cliapp.importerrorapp\")\n+    pytest.raises(NoAppException, locate_app, \"cliapp.importerrorapp\")\n \n \n def test_find_default_import_path(test_apps, monkeypatch, tmpdir):"
    },
    {
        "commit_id": "a7f1a21c1204828388eaed1e3903a74c904c8147",
        "commit_message": "Don't rely on X-Requested-With for pretty print json response (#2193)\n\n* Don't rely on X-Requested-With for pretty print json response\r\n\r\n* Fix test cases for pretty print json patch\r\n\r\n* Fix gramma error in docs for pretty print json config\r\n\r\n* Add changelog for JSONIFY_PRETTYPRINT_REGULAR",
        "commit_url": "https://github.com/pallets/flask/commit/a7f1a21c1204828388eaed1e3903a74c904c8147",
        "buggy_code": "'JSONIFY_PRETTYPRINT_REGULAR':          True,",
        "fixed_code": "'JSONIFY_PRETTYPRINT_REGULAR':          False,",
        "patch": "@@ -314,7 +314,7 @@ def _set_request_globals_class(self, value):\n         'PREFERRED_URL_SCHEME':                 'http',\n         'JSON_AS_ASCII':                        True,\n         'JSON_SORT_KEYS':                       True,\n-        'JSONIFY_PRETTYPRINT_REGULAR':          True,\n+        'JSONIFY_PRETTYPRINT_REGULAR':          False,\n         'JSONIFY_MIMETYPE':                     'application/json',\n         'TEMPLATES_AUTO_RELOAD':                None,\n     })"
    },
    {
        "commit_id": "a7f1a21c1204828388eaed1e3903a74c904c8147",
        "commit_message": "Don't rely on X-Requested-With for pretty print json response (#2193)\n\n* Don't rely on X-Requested-With for pretty print json response\r\n\r\n* Fix test cases for pretty print json patch\r\n\r\n* Fix gramma error in docs for pretty print json config\r\n\r\n* Add changelog for JSONIFY_PRETTYPRINT_REGULAR",
        "commit_url": "https://github.com/pallets/flask/commit/a7f1a21c1204828388eaed1e3903a74c904c8147",
        "buggy_code": "if current_app.config['JSONIFY_PRETTYPRINT_REGULAR'] and not request.is_xhr:",
        "fixed_code": "if current_app.config['JSONIFY_PRETTYPRINT_REGULAR'] or current_app.debug:",
        "patch": "@@ -248,7 +248,7 @@ def get_current_user():\n     indent = None\n     separators = (',', ':')\n \n-    if current_app.config['JSONIFY_PRETTYPRINT_REGULAR'] and not request.is_xhr:\n+    if current_app.config['JSONIFY_PRETTYPRINT_REGULAR'] or current_app.debug:\n         indent = 2\n         separators = (', ', ': ')\n "
    },
    {
        "commit_id": "a7f1a21c1204828388eaed1e3903a74c904c8147",
        "commit_message": "Don't rely on X-Requested-With for pretty print json response (#2193)\n\n* Don't rely on X-Requested-With for pretty print json response\r\n\r\n* Fix test cases for pretty print json patch\r\n\r\n* Fix gramma error in docs for pretty print json config\r\n\r\n* Add changelog for JSONIFY_PRETTYPRINT_REGULAR",
        "commit_url": "https://github.com/pallets/flask/commit/a7f1a21c1204828388eaed1e3903a74c904c8147",
        "buggy_code": "assert rv.data == b'{\\n  \"msg\": \"W00t\"\\n}\\n'",
        "fixed_code": "assert rv.data == b'{\"msg\":\"W00t\"}\\n'",
        "patch": "@@ -995,7 +995,7 @@ def test_make_response_with_response_instance():\n         rv = flask.make_response(\n             flask.jsonify({'msg': 'W00t'}), 400)\n         assert rv.status_code == 400\n-        assert rv.data == b'{\\n  \"msg\": \"W00t\"\\n}\\n'\n+        assert rv.data == b'{\"msg\":\"W00t\"}\\n'\n         assert rv.mimetype == 'application/json'\n \n         rv = flask.make_response("
    },
    {
        "commit_id": "f5adb61b28f240effbba5a4686647c2af6e85b94",
        "commit_message": "Fix typos/grammar in docs (#2201)",
        "commit_url": "https://github.com/pallets/flask/commit/f5adb61b28f240effbba5a4686647c2af6e85b94",
        "buggy_code": "output an unified diff with all the changes that are necessary to easily",
        "fixed_code": "output a unified diff with all the changes that are necessary to easily",
        "patch": "@@ -5,7 +5,7 @@\n     ~~~~~~~~~~~~~~~~\n \n     This command line script scans a whole application tree and attempts to\n-    output an unified diff with all the changes that are necessary to easily\n+    output a unified diff with all the changes that are necessary to easily\n     upgrade the application to 0.7 and to not yield deprecation warnings.\n \n     This will also attempt to find `after_request` functions that don't modify"
    },
    {
        "commit_id": "789715adb9949f58b7b0272bed1a58d7cd0fad30",
        "commit_message": "Fix config.from_pyfile on Python 3 (#2123)\n\n* Fix config.from_pyfile on Python 3\r\n\r\nFix #2118\r\n\r\n* Support Python 2.6\r\n\r\n* Fix tests on Python 2",
        "commit_url": "https://github.com/pallets/flask/commit/789715adb9949f58b7b0272bed1a58d7cd0fad30",
        "buggy_code": "with open(filename) as config_file:",
        "fixed_code": "with open(filename, mode='rb') as config_file:",
        "patch": "@@ -126,7 +126,7 @@ def from_pyfile(self, filename, silent=False):\n         d = types.ModuleType('config')\n         d.__file__ = filename\n         try:\n-            with open(filename) as config_file:\n+            with open(filename, mode='rb') as config_file:\n                 exec(compile(config_file.read(), filename, 'exec'), d.__dict__)\n         except IOError as e:\n             if silent and e.errno in (errno.ENOENT, errno.EISDIR):"
    },
    {
        "commit_id": "7e1a13ffbd212e928e866c2e4cf5d92d85660f86",
        "commit_message": "Fix import error",
        "commit_url": "https://github.com/pallets/flask/commit/7e1a13ffbd212e928e866c2e4cf5d92d85660f86",
        "buggy_code": "from minitwit import app",
        "fixed_code": "from .minitwit import app",
        "patch": "@@ -1 +1 @@\n-from minitwit import app\n\\ No newline at end of file\n+from .minitwit import app"
    },
    {
        "commit_id": "fa087c89298e0c91abff45b3ee7033889d2dd5d7",
        "commit_message": "Fixes import statement in flaskr (#2068)\n\n- `from flaskr.flaskr import app` in flaskr/__init__.py\r\n  causes an import error with Python 2\r\n- The relative import now used works for py2 and py3",
        "commit_url": "https://github.com/pallets/flask/commit/fa087c89298e0c91abff45b3ee7033889d2dd5d7",
        "buggy_code": "from flaskr import app",
        "fixed_code": "from .flaskr import app",
        "patch": "@@ -1 +1 @@\n-from flaskr import app\n\\ No newline at end of file\n+from .flaskr import app\n\\ No newline at end of file"
    },
    {
        "commit_id": "cd13a5cf6215914ba4c3e0963d2189fe19fed508",
        "commit_message": "Fix #2051: Fix flaskr import in flaskr/__init__.py (#2052)",
        "commit_url": "https://github.com/pallets/flask/commit/cd13a5cf6215914ba4c3e0963d2189fe19fed508",
        "buggy_code": "from flaskr import app",
        "fixed_code": "from flaskr.flaskr import app",
        "patch": "@@ -1 +1 @@\n-from flaskr import app\n\\ No newline at end of file\n+from flaskr.flaskr import app\n\\ No newline at end of file"
    },
    {
        "commit_id": "dbeed240674ed7a7160ae82a603eaa930dd1fd00",
        "commit_message": "Fix typo in MethodView doc (#2028)",
        "commit_url": "https://github.com/pallets/flask/commit/dbeed240674ed7a7160ae82a603eaa930dd1fd00",
        "buggy_code": ":meth:`get` it means you will response to ``'GET'`` requests and",
        "fixed_code": ":meth:`get` it means it will respond to ``'GET'`` requests and",
        "patch": "@@ -123,7 +123,7 @@ def __new__(cls, name, bases, d):\n class MethodView(with_metaclass(MethodViewType, View)):\n     \"\"\"Like a regular class-based view but that dispatches requests to\n     particular methods.  For instance if you implement a method called\n-    :meth:`get` it means you will response to ``'GET'`` requests and\n+    :meth:`get` it means it will respond to ``'GET'`` requests and\n     the :meth:`dispatch_request` implementation will automatically\n     forward your request to that.  Also :attr:`options` is set for you\n     automatically::"
    },
    {
        "commit_id": "c687ffb1921ce755eb32e105c4f689c0cb4afd81",
        "commit_message": "Fixed error in errorhandler doc string. (#2014)",
        "commit_url": "https://github.com/pallets/flask/commit/c687ffb1921ce755eb32e105c4f689c0cb4afd81",
        "buggy_code": "\"\"\"A decorator that is used to register a function give a given",
        "fixed_code": "\"\"\"A decorator that is used to register a function given an",
        "patch": "@@ -1115,7 +1115,7 @@ def _get_exc_class_and_code(exc_class_or_code):\n \n     @setupmethod\n     def errorhandler(self, code_or_exception):\n-        \"\"\"A decorator that is used to register a function give a given\n+        \"\"\"A decorator that is used to register a function given an\n         error code.  Example::\n \n             @app.errorhandler(404)"
    },
    {
        "commit_id": "67e391921c50f02190be8407d4a02efe8d2d28f6",
        "commit_message": "fix docs: name of url_value_preprocessor method (#1932)\n\nThis typo got introduced in 5da1fc22153032923b1560a34a0f346d6517a12d,\r\nthe original commit for the url_value_preprocessor decorator.",
        "commit_url": "https://github.com/pallets/flask/commit/67e391921c50f02190be8407d4a02efe8d2d28f6",
        "buggy_code": "This also triggers the :meth:`url_value_processor` functions before",
        "fixed_code": "This also triggers the :meth:`url_value_preprocessor` functions before",
        "patch": "@@ -1804,7 +1804,7 @@ def preprocess_request(self):\n         if it was the return value from the view and further\n         request handling is stopped.\n \n-        This also triggers the :meth:`url_value_processor` functions before\n+        This also triggers the :meth:`url_value_preprocessor` functions before\n         the actual :meth:`before_request` functions are called.\n         \"\"\"\n         bp = _request_ctx_stack.top.request.blueprint"
    },
    {
        "commit_id": "92f63a1c1d483c1a1636efb20cadb1c2932b33ff",
        "commit_message": "fix docstring (#1818)\n\nchange string to docstring",
        "commit_url": "https://github.com/pallets/flask/commit/92f63a1c1d483c1a1636efb20cadb1c2932b33ff",
        "buggy_code": "\"Make sure the CLI object's name is the app's name and not the app itself\"",
        "fixed_code": "\"\"\"Make sure the CLI object's name is the app's name and not the app itself\"\"\"",
        "patch": "@@ -23,7 +23,7 @@\n \n \n def test_cli_name(test_apps):\n-    \"Make sure the CLI object's name is the app's name and not the app itself\"\n+    \"\"\"Make sure the CLI object's name is the app's name and not the app itself\"\"\"\n     from cliapp.app import testapp\n     assert testapp.cli.name == testapp.name\n "
    },
    {
        "commit_id": "88500f5cc709e2e931e6547ed9b58033a50215a8",
        "commit_message": "Forward ported CLI tests from Flask-CLI and fixed a bug with the CLI's name. (#1806)\n\n* Forward port the CLI tests from Flask-CLI.\r\n\r\n* Make sure the parameter passed to the CLI's AppGroup is the app's name, not the app itself.",
        "commit_url": "https://github.com/pallets/flask/commit/88500f5cc709e2e931e6547ed9b58033a50215a8",
        "buggy_code": "self.cli = cli.AppGroup(self)",
        "fixed_code": "self.cli = cli.AppGroup(self.name)",
        "patch": "@@ -546,7 +546,7 @@ def __init__(self, import_name, static_path=None, static_url_path=None,\n         #: provided by Flask itself and can be overridden.\n         #:\n         #: This is an instance of a :class:`click.Group` object.\n-        self.cli = cli.AppGroup(self)\n+        self.cli = cli.AppGroup(self.name)\n \n     def _get_error_handlers(self):\n         from warnings import warn"
    },
    {
        "commit_id": "da0ebb9b7822017ca125c865bb9f321ed4d78801",
        "commit_message": "Merge pull request #1760 from mattrobenolt/patch-1\n\nRun bdist_wheel as a part of release process",
        "commit_url": "https://github.com/pallets/flask/commit/da0ebb9b7822017ca125c865bb9f321ed4d78801",
        "buggy_code": "Popen([sys.executable, 'setup.py', 'release', 'sdist', 'upload']).wait()",
        "fixed_code": "Popen([sys.executable, 'setup.py', 'release', 'sdist', 'bdist_wheel', 'upload']).wait()",
        "patch": "@@ -86,7 +86,7 @@ def set_setup_version(version):\n \n \n def build_and_upload():\n-    Popen([sys.executable, 'setup.py', 'release', 'sdist', 'upload']).wait()\n+    Popen([sys.executable, 'setup.py', 'release', 'sdist', 'bdist_wheel', 'upload']).wait()\n \n \n def fail(message, *args):"
    },
    {
        "commit_id": "d5308bb80c47a645dfcc06588bf173b5c3a3887f",
        "commit_message": "Merge pull request #1716 from lord63-forks/fix-typo\n\nFix typo",
        "commit_url": "https://github.com/pallets/flask/commit/d5308bb80c47a645dfcc06588bf173b5c3a3887f",
        "buggy_code": "The resulting dictionary `image_store` would look like::",
        "fixed_code": "The resulting dictionary `image_store_config` would look like::",
        "patch": "@@ -222,7 +222,7 @@ def get_namespace(self, namespace, lowercase=True, trim_namespace=True):\n             app.config['IMAGE_STORE_BASE_URL'] = 'http://img.website.com'\n             image_store_config = app.config.get_namespace('IMAGE_STORE_')\n \n-        The resulting dictionary `image_store` would look like::\n+        The resulting dictionary `image_store_config` would look like::\n \n             {\n                 'type': 'fs',"
    },
    {
        "commit_id": "6d0bbd627c8ff7b6339c894342d00eae11deb7ec",
        "commit_message": "Fix typo\n\n* Use the compatible way to handle the exception. You can find the\nsource code wsgi_app in app.py, and it use the compatible way, so update it\n* Fix typo in config.py\n* Fix typo in app.py",
        "commit_url": "https://github.com/pallets/flask/commit/6d0bbd627c8ff7b6339c894342d00eae11deb7ec",
        "buggy_code": "The resulting dictionary `image_store` would look like::",
        "fixed_code": "The resulting dictionary `image_store_config` would look like::",
        "patch": "@@ -222,7 +222,7 @@ def get_namespace(self, namespace, lowercase=True, trim_namespace=True):\n             app.config['IMAGE_STORE_BASE_URL'] = 'http://img.website.com'\n             image_store_config = app.config.get_namespace('IMAGE_STORE_')\n \n-        The resulting dictionary `image_store` would look like::\n+        The resulting dictionary `image_store_config` would look like::\n \n             {\n                 'type': 'fs',"
    },
    {
        "commit_id": "22270d0f7d4c794f6959d92fdb1b1e6ffd48fc46",
        "commit_message": "Merge pull request #1715 from ThiefMaster/patch-1\n\nAdd missing return to g.setdefault",
        "commit_url": "https://github.com/pallets/flask/commit/22270d0f7d4c794f6959d92fdb1b1e6ffd48fc46",
        "buggy_code": "self.__dict__.setdefault(name, default)",
        "fixed_code": "return self.__dict__.setdefault(name, default)",
        "patch": "@@ -36,7 +36,7 @@ def pop(self, name, default=_sentinel):\n             return self.__dict__.pop(name, default)\n \n     def setdefault(self, name, default=None):\n-        self.__dict__.setdefault(name, default)\n+        return self.__dict__.setdefault(name, default)\n \n     def __contains__(self, item):\n         return item in self.__dict__"
    },
    {
        "commit_id": "db09c6798eb4304aa3e6e937517bf94acd449c8f",
        "commit_message": "Merge branch 'alanhamlett-master'\n\nFix #1515",
        "commit_url": "https://github.com/pallets/flask/commit/db09c6798eb4304aa3e6e937517bf94acd449c8f",
        "buggy_code": "with the given context.",
        "fixed_code": "with the given context. Template variables will be autoescaped.",
        "patch": "@@ -127,7 +127,7 @@ def render_template(template_name_or_list, **context):\n \n def render_template_string(source, **context):\n     \"\"\"Renders a template from the given template source string\n-    with the given context.\n+    with the given context. Template variables will be autoescaped.\n \n     :param source: the source code of the template to be\n                    rendered"
    },
    {
        "commit_id": "87222087b333c4f9ccc665e787fdf304cabeba73",
        "commit_message": "Merge branch 'alexpantyukhin-master'\n\nFix #1390",
        "commit_url": "https://github.com/pallets/flask/commit/87222087b333c4f9ccc665e787fdf304cabeba73",
        "buggy_code": "appcontext_popped, message_flashed",
        "fixed_code": "appcontext_popped, message_flashed, before_render_template",
        "patch": "@@ -34,7 +34,7 @@\n from .signals import signals_available, template_rendered, request_started, \\\n      request_finished, got_request_exception, request_tearing_down, \\\n      appcontext_tearing_down, appcontext_pushed, \\\n-     appcontext_popped, message_flashed\n+     appcontext_popped, message_flashed, before_render_template\n \n # We're not exposing the actual json module but a convenient wrapper around\n # it."
    },
    {
        "commit_id": "eae37b575d2106ae80edea823d50c0e4ebfebec3",
        "commit_message": "fix test_signals",
        "commit_url": "https://github.com/pallets/flask/commit/eae37b575d2106ae80edea823d50c0e4ebfebec3",
        "buggy_code": "assert rv.data == 'Not template string'",
        "fixed_code": "assert rv.data == b'Not template string'",
        "patch": "@@ -86,7 +86,7 @@ def record(sender, template, context):\n     flask.before_render_template.connect(record, app)\n     try:\n         rv = app.test_client().get('/')\n-        assert rv.data == 'Not template string'\n+        assert rv.data == b'Not template string'\n     finally:\n        flask.before_render_template.disconnect(record, app) \n "
    },
    {
        "commit_id": "cc6bf7c18ac14397e5ee35493b3788536a85e3cd",
        "commit_message": "Merge pull request #1496 from Hardtack/patch-1\n\nUpdate title of docstring in flask.cli",
        "commit_url": "https://github.com/pallets/flask/commit/cc6bf7c18ac14397e5ee35493b3788536a85e3cd",
        "buggy_code": "flask.run",
        "fixed_code": "flask.cli",
        "patch": "@@ -1,6 +1,6 @@\n # -*- coding: utf-8 -*-\n \"\"\"\n-    flask.run\n+    flask.cli\n     ~~~~~~~~~\n \n     A simple command line application to run flask apps."
    },
    {
        "commit_id": "348bf52188b9f7bef1096d8fe70edf2e62ea04a8",
        "commit_message": "Handle empty deque on errorhandler lookup.\n\nAfter registering a custom errorhandler by exception class, raising any\nunhandled exception in a view function swallows the error and instead\nthrows an `IndexError` on trying to look up the appropriate handler.\nThis patch avoids the uninformative `IndexError` and preserves the\noriginal exception by looping until the deque of classes is empty, not\nforever.",
        "commit_url": "https://github.com/pallets/flask/commit/348bf52188b9f7bef1096d8fe70edf2e62ea04a8",
        "buggy_code": "while True:",
        "fixed_code": "while queue:",
        "patch": "@@ -1421,7 +1421,7 @@ def find_handler(handler_map):\n             # __mro__\n             done = set()\n \n-            while True:\n+            while queue:\n                 cls = queue.popleft()\n                 if cls in done:\n                     continue"
    },
    {
        "commit_id": "0d19fa0a061d91f0a6fec5cc60af4a4c1b46aa9b",
        "commit_message": "Clarify some docs\n\nFix #1476",
        "commit_url": "https://github.com/pallets/flask/commit/0d19fa0a061d91f0a6fec5cc60af4a4c1b46aa9b",
        "buggy_code": "folder named ``'static'``.",
        "fixed_code": "folder for static files.",
        "patch": "@@ -814,7 +814,7 @@ def _set_static_url_path(self, value):\n     @property\n     def has_static_folder(self):\n         \"\"\"This is ``True`` if the package bound object's container has a\n-        folder named ``'static'``.\n+        folder for static files.\n \n         .. versionadded:: 0.5\n         \"\"\""
    },
    {
        "commit_id": "0d19fa0a061d91f0a6fec5cc60af4a4c1b46aa9b",
        "commit_message": "Clarify some docs\n\nFix #1476",
        "commit_url": "https://github.com/pallets/flask/commit/0d19fa0a061d91f0a6fec5cc60af4a4c1b46aa9b",
        "buggy_code": "the default simplejson encoder.  Consult the :mod:`json` documentation",
        "fixed_code": "the default simplejson decoder.  Consult the :mod:`json` documentation",
        "patch": "@@ -85,7 +85,7 @@ def default(self, o):\n \n class JSONDecoder(_json.JSONDecoder):\n     \"\"\"The default JSON decoder.  This one does not change the behavior from\n-    the default simplejson encoder.  Consult the :mod:`json` documentation\n+    the default simplejson decoder.  Consult the :mod:`json` documentation\n     for more information.  This decoder is not only used for the load\n     functions of this module but also :attr:`~flask.Request`.\n     \"\"\""
    },
    {
        "commit_id": "20f62e828b2ed100f7aa907b60880c8938593740",
        "commit_message": "Fix Possible Typo\n\nLooks like that was meant to be `config_key`. It works by accident because the function is defined in the same scope as the look that passes `config_key` to `apprunner`.",
        "commit_url": "https://github.com/pallets/flask/commit/20f62e828b2ed100f7aa907b60880c8938593740",
        "buggy_code": "def apprunner(configkey):",
        "fixed_code": "def apprunner(config_key):",
        "patch": "@@ -1181,7 +1181,7 @@ def subdomain():\n \n \n def test_exception_propagation():\n-    def apprunner(configkey):\n+    def apprunner(config_key):\n         app = flask.Flask(__name__)\n         app.config['LOGGER_HANDLER_POLICY'] = 'never'\n "
    },
    {
        "commit_id": "1cd9e91810fcfc3b3ca4e8c157593af28de427d6",
        "commit_message": "Changed error message to include actual exception contents",
        "commit_url": "https://github.com/pallets/flask/commit/1cd9e91810fcfc3b3ca4e8c157593af28de427d6",
        "buggy_code": "raise BadRequest('No JSON object could be decoded')",
        "fixed_code": "raise BadRequest('Failed to decode JSON object: {}'.format(e))",
        "patch": "@@ -177,7 +177,7 @@ def on_json_loading_failed(self, e):\n         ctx = _request_ctx_stack.top\n         if ctx is not None:\n             if ctx.app.config.get('DEBUG', False):\n-                raise BadRequest('No JSON object could be decoded')\n+                raise BadRequest('Failed to decode JSON object: {}'.format(e))\n         raise BadRequest()\n \n     def _load_form_data(self):"
    },
    {
        "commit_id": "1158e229589f39a140829bbd02e2f721ea9b5d26",
        "commit_message": "Fix test under Python 3",
        "commit_url": "https://github.com/pallets/flask/commit/1158e229589f39a140829bbd02e2f721ea9b5d26",
        "buggy_code": "assert rv == 'hello'",
        "fixed_code": "assert rv == b'hello'",
        "patch": "@@ -589,7 +589,7 @@ def index():\n         return \"damnit\"\n \n     rv = app.test_client().get('/').data.strip()\n-    assert rv == 'hello'\n+    assert rv == b'hello'\n     assert not evts\n \n "
    },
    {
        "commit_id": "2ab91446f608755affba035650c1dd74b825a018",
        "commit_message": "Merge pull request #1237 from Winnetou/patch-3\n\nexplain_template_loading_attempts: docstring",
        "commit_url": "https://github.com/pallets/flask/commit/2ab91446f608755affba035650c1dd74b825a018",
        "buggy_code": "\"\"\"This should help developers understand what \"\"\"",
        "fixed_code": "\"\"\"This should help developers understand what failed\"\"\"",
        "patch": "@@ -108,7 +108,7 @@ def _dump_loader_info(loader):\n \n \n def explain_template_loading_attempts(app, template, attempts):\n-    \"\"\"This should help developers understand what \"\"\"\n+    \"\"\"This should help developers understand what failed\"\"\"\n     info = ['Locating template \"%s\":' % template]\n     total_found = 0\n     blueprint = None"
    },
    {
        "commit_id": "0f3f476dcfd2974aa73a3c741e0f6d94d662885e",
        "commit_message": "Fix a typo in the description of SecureCookieSession.\n\nThe term \"base class\" (with a space) is used in another file, so use it here as well to make the wording consistent across the whole project.",
        "commit_url": "https://github.com/pallets/flask/commit/0f3f476dcfd2974aa73a3c741e0f6d94d662885e",
        "buggy_code": "\"\"\"Baseclass for sessions based on signed cookies.\"\"\"",
        "fixed_code": "\"\"\"Base class for sessions based on signed cookies.\"\"\"",
        "patch": "@@ -110,7 +110,7 @@ def object_hook(obj):\n \n \n class SecureCookieSession(CallbackDict, SessionMixin):\n-    \"\"\"Baseclass for sessions based on signed cookies.\"\"\"\n+    \"\"\"Base class for sessions based on signed cookies.\"\"\"\n \n     def __init__(self, initial=None):\n         def on_update(self):"
    },
    {
        "commit_id": "97dc6877931d7c72f0740f4634d6a3be9658d036",
        "commit_message": "Merge pull request #619 from QuentinRoy/master\n\nFix missing argument in find_module of flaskext_compat.py",
        "commit_url": "https://github.com/pallets/flask/commit/97dc6877931d7c72f0740f4634d6a3be9658d036",
        "buggy_code": "def find_module(self, fullname):",
        "fixed_code": "def find_module(self, fullname, path=None):",
        "patch": "@@ -44,7 +44,7 @@ def __ne__(self, other):\n     def install(self):\n         sys.meta_path[:] = [x for x in sys.meta_path if self != x] + [self]\n \n-    def find_module(self, fullname):\n+    def find_module(self, fullname, path=None):\n         if fullname.startswith(self.prefix):\n             return self\n "
    },
    {
        "commit_id": "7e8f1053bb07f4f73914b5784a87de6dcaea6bcb",
        "commit_message": "Fix assertion error",
        "commit_url": "https://github.com/pallets/flask/commit/7e8f1053bb07f4f73914b5784a87de6dcaea6bcb",
        "buggy_code": "assert res.data == u''",
        "fixed_code": "assert res.data == b''",
        "patch": "@@ -111,7 +111,7 @@ def index():\n         c = app.test_client()\n         res = c.get('/')\n         assert res.status_code == 200\n-        assert res.data == u''\n+        assert res.data == b''\n         assert called == ['request', 'app']\n \n "
    },
    {
        "commit_id": "bb0084f5bef9b871a82f0451ed71131ffb7a43b3",
        "commit_message": "Fix Py3 compat bug\n\nAlso don't use unicode string here because the assertions below are\nwritten for native strings.",
        "commit_url": "https://github.com/pallets/flask/commit/bb0084f5bef9b871a82f0451ed71131ffb7a43b3",
        "buggy_code": "text = unicode(record.msg)",
        "fixed_code": "text = str(record.msg)",
        "patch": "@@ -313,7 +313,7 @@ def test_template_loader_debugging(self):\n         class _TestHandler(logging.Handler):\n             def handle(x, record):\n                 called.append(True)\n-                text = unicode(record.msg)\n+                text = str(record.msg)\n                 self.assert_('1: trying loader of application '\n                              '\"blueprintapp\"' in text)\n                 self.assert_('2: trying loader of blueprint \"admin\" '"
    },
    {
        "commit_id": "0f8f6b5130419159709a976d66b133e4e298e17c",
        "commit_message": "Merge pull request #1162 from ajschumacher/patch-1\n\ntypo: \"weather\" -> \"whether\"",
        "commit_url": "https://github.com/pallets/flask/commit/0f8f6b5130419159709a976d66b133e4e298e17c",
        "buggy_code": "\"\"\"Indicates weather a cookie should be set now or not.  This is",
        "fixed_code": "\"\"\"Indicates whether a cookie should be set now or not.  This is",
        "patch": "@@ -255,7 +255,7 @@ def get_expiration_time(self, app, session):\n             return datetime.utcnow() + app.permanent_session_lifetime\n \n     def should_set_cookie(self, app, session):\n-        \"\"\"Indicates weather a cookie should be set now or not.  This is\n+        \"\"\"Indicates whether a cookie should be set now or not.  This is\n         used by session backends to figure out if they should emit a\n         set-cookie header or not.  The default behavior is controlled by\n         the ``SESSION_REFRESH_EACH_REQUEST`` config variable.  If"
    },
    {
        "commit_id": "7d57c29f7afa7712d4af195bef3cbb5dd083123d",
        "commit_message": "Merge pull request #1156 from brwr/brwr/fix-documentation-typo\n\nAdd missing `of` to documentation.",
        "commit_url": "https://github.com/pallets/flask/commit/7d57c29f7afa7712d4af195bef3cbb5dd083123d",
        "buggy_code": "The idea of the first parameter is to give Flask an idea what",
        "fixed_code": "The idea of the first parameter is to give Flask an idea of what",
        "patch": "@@ -84,7 +84,7 @@ class Flask(_PackageBoundObject):\n \n     .. admonition:: About the First Parameter\n \n-        The idea of the first parameter is to give Flask an idea what\n+        The idea of the first parameter is to give Flask an idea of what\n         belongs to your application.  This name is used to find resources\n         on the file system, can be used by extensions to improve debugging\n         information and a lot more."
    },
    {
        "commit_id": "9fb52d5e02b4936df89ce6803f22a53045156ada",
        "commit_message": "Merge pull request #1086 from fengsp/patch-1\n\nFixed typo in _compat.py",
        "commit_url": "https://github.com/pallets/flask/commit/9fb52d5e02b4936df89ce6803f22a53045156ada",
        "buggy_code": "integer_types = (int, )",
        "fixed_code": "integer_types = (int,)",
        "patch": "@@ -19,7 +19,7 @@\n if not PY2:\n     text_type = str\n     string_types = (str,)\n-    integer_types = (int, )\n+    integer_types = (int,)\n \n     iterkeys = lambda d: iter(d.keys())\n     itervalues = lambda d: iter(d.values())"
    },
    {
        "commit_id": "e3a81497f9b6415b077b4eb1796c29ec1aff26fe",
        "commit_message": "Merge pull request #1040 from schlamar/patch-1\n\nFixed typo.",
        "commit_url": "https://github.com/pallets/flask/commit/e3a81497f9b6415b077b4eb1796c29ec1aff26fe",
        "buggy_code": "'is active is debug is enabled.')",
        "fixed_code": "'is active if debug is enabled.')",
        "patch": "@@ -334,7 +334,7 @@ def callback(ctx, value):\n               help='The port to bind to.')\n @click.option('--reload/--no-reload', default=None,\n               help='Enable or disable the reloader.  By default the reloader '\n-              'is active is debug is enabled.')\n+              'is active if debug is enabled.')\n @click.option('--debugger/--no-debugger', default=None,\n               help='Enable or disable the debugger.  By default the debugger '\n               'is active if debug is enabled.')"
    },
    {
        "commit_id": "9213e77957654235626a5a3253319504a9bbd32f",
        "commit_message": "Merge pull request #1039 from erikrose/patch-1\n\nFix a docstring type in cli.py.",
        "commit_url": "https://github.com/pallets/flask/commit/9213e77957654235626a5a3253319504a9bbd32f",
        "buggy_code": "\"\"\"Special applicationt that dispatches to a flask application which",
        "fixed_code": "\"\"\"Special application that dispatches to a flask application which",
        "patch": "@@ -99,7 +99,7 @@ def locate_app(app_id, debug=None):\n \n \n class DispatchingApp(object):\n-    \"\"\"Special applicationt that dispatches to a flask application which\n+    \"\"\"Special application that dispatches to a flask application which\n     is imported by name on first request.  This is safer than importing\n     the application upfront because it means that we can forward all\n     errors for import problems into the browser as error."
    },
    {
        "commit_id": "ed9e458850a548ceb6027bf25a657f26595656ff",
        "commit_message": "Fix a docstring type in cli.py.",
        "commit_url": "https://github.com/pallets/flask/commit/ed9e458850a548ceb6027bf25a657f26595656ff",
        "buggy_code": "\"\"\"Special applicationt that dispatches to a flask application which",
        "fixed_code": "\"\"\"Special application that dispatches to a flask application which",
        "patch": "@@ -99,7 +99,7 @@ def locate_app(app_id, debug=None):\n \n \n class DispatchingApp(object):\n-    \"\"\"Special applicationt that dispatches to a flask application which\n+    \"\"\"Special application that dispatches to a flask application which\n     is imported by name on first request.  This is safer than importing\n     the application upfront because it means that we can forward all\n     errors for import problems into the browser as error."
    },
    {
        "commit_id": "01e831f08279d69f29984abf74c0eeaa12579915",
        "commit_message": "Merge pull request #1019 from raimu/master\n\nfix typo",
        "commit_url": "https://github.com/pallets/flask/commit/01e831f08279d69f29984abf74c0eeaa12579915",
        "buggy_code": "and can be overriden by the simplejson ``ensure_ascii`` parameter.",
        "fixed_code": "and can be overridden by the simplejson ``ensure_ascii`` parameter.",
        "patch": "@@ -119,7 +119,7 @@ def dumps(obj, **kwargs):\n     This function can return ``unicode`` strings or ascii-only bytestrings by\n     default which coerce into unicode strings automatically.  That behavior by\n     default is controlled by the ``JSON_AS_ASCII`` configuration variable\n-    and can be overriden by the simplejson ``ensure_ascii`` parameter.\n+    and can be overridden by the simplejson ``ensure_ascii`` parameter.\n     \"\"\"\n     _dump_arg_defaults(kwargs)\n     encoding = kwargs.pop('encoding', None)"
    },
    {
        "commit_id": "01e831f08279d69f29984abf74c0eeaa12579915",
        "commit_message": "Merge pull request #1019 from raimu/master\n\nfix typo",
        "commit_url": "https://github.com/pallets/flask/commit/01e831f08279d69f29984abf74c0eeaa12579915",
        "buggy_code": "but this can be overriden by the `force` parameter.",
        "fixed_code": "but this can be overridden by the `force` parameter.",
        "patch": "@@ -127,7 +127,7 @@ def get_json(self, force=False, silent=False, cache=True):\n         parsing fails the :meth:`on_json_loading_failed` method on the\n         request object will be invoked.  By default this function will\n         only load the json data if the mimetype is ``application/json``\n-        but this can be overriden by the `force` parameter.\n+        but this can be overridden by the `force` parameter.\n \n         :param force: if set to `True` the mimetype is ignored.\n         :param silent: if set to `True` this method will fail silently"
    },
    {
        "commit_id": "00679eab93049728bba6ece883c01afbab0449ed",
        "commit_message": "Merge pull request #1022 from mjfroehlich/patch-1\n\nFix minor typo",
        "commit_url": "https://github.com/pallets/flask/commit/00679eab93049728bba6ece883c01afbab0449ed",
        "buggy_code": "\"\"\"Registers a module with this application.  The keyword argument",
        "fixed_code": "\"\"\"Registers a module with this application.  The keyword arguments",
        "patch": "@@ -874,7 +874,7 @@ def make_null_session(self):\n         return self.session_interface.make_null_session(self)\n \n     def register_module(self, module, **options):\n-        \"\"\"Registers a module with this application.  The keyword argument\n+        \"\"\"Registers a module with this application.  The keyword arguments\n         of this function are the same as the ones for the constructor of the\n         :class:`Module` class and will override the values of the module if\n         provided."
    },
    {
        "commit_id": "15d8af52dbb091f198664bedc5dfc3d5d9ffdea0",
        "commit_message": "Fix minor typo",
        "commit_url": "https://github.com/pallets/flask/commit/15d8af52dbb091f198664bedc5dfc3d5d9ffdea0",
        "buggy_code": "\"\"\"Registers a module with this application.  The keyword argument",
        "fixed_code": "\"\"\"Registers a module with this application.  The keyword arguments",
        "patch": "@@ -874,7 +874,7 @@ def make_null_session(self):\n         return self.session_interface.make_null_session(self)\n \n     def register_module(self, module, **options):\n-        \"\"\"Registers a module with this application.  The keyword argument\n+        \"\"\"Registers a module with this application.  The keyword arguments\n         of this function are the same as the ones for the constructor of the\n         :class:`Module` class and will override the values of the module if\n         provided."
    },
    {
        "commit_id": "fbda3f94baa6d7dba8f773309121284c6e6c5a6d",
        "commit_message": "fix typo",
        "commit_url": "https://github.com/pallets/flask/commit/fbda3f94baa6d7dba8f773309121284c6e6c5a6d",
        "buggy_code": "and can be overriden by the simplejson ``ensure_ascii`` parameter.",
        "fixed_code": "and can be overridden by the simplejson ``ensure_ascii`` parameter.",
        "patch": "@@ -119,7 +119,7 @@ def dumps(obj, **kwargs):\n     This function can return ``unicode`` strings or ascii-only bytestrings by\n     default which coerce into unicode strings automatically.  That behavior by\n     default is controlled by the ``JSON_AS_ASCII`` configuration variable\n-    and can be overriden by the simplejson ``ensure_ascii`` parameter.\n+    and can be overridden by the simplejson ``ensure_ascii`` parameter.\n     \"\"\"\n     _dump_arg_defaults(kwargs)\n     encoding = kwargs.pop('encoding', None)"
    },
    {
        "commit_id": "fbda3f94baa6d7dba8f773309121284c6e6c5a6d",
        "commit_message": "fix typo",
        "commit_url": "https://github.com/pallets/flask/commit/fbda3f94baa6d7dba8f773309121284c6e6c5a6d",
        "buggy_code": "but this can be overriden by the `force` parameter.",
        "fixed_code": "but this can be overridden by the `force` parameter.",
        "patch": "@@ -127,7 +127,7 @@ def get_json(self, force=False, silent=False, cache=True):\n         parsing fails the :meth:`on_json_loading_failed` method on the\n         request object will be invoked.  By default this function will\n         only load the json data if the mimetype is ``application/json``\n-        but this can be overriden by the `force` parameter.\n+        but this can be overridden by the `force` parameter.\n \n         :param force: if set to `True` the mimetype is ignored.\n         :param silent: if set to `True` this method will fail silently"
    },
    {
        "commit_id": "a71b65cb151c2a455a481d073b571e1f4b0134bc",
        "commit_message": "Merge pull request #877 from yoloseem/patch-1\n\nFix a typo on blueprints module name.",
        "commit_url": "https://github.com/pallets/flask/commit/a71b65cb151c2a455a481d073b571e1f4b0134bc",
        "buggy_code": ":class:`~flask.blueprint.BlueprintSetupState` later to register functions",
        "fixed_code": ":class:`~flask.blueprints.BlueprintSetupState` later to register functions",
        "patch": "@@ -79,7 +79,7 @@ def add_url_rule(self, rule, endpoint=None, view_func=None, **options):\n class Blueprint(_PackageBoundObject):\n     \"\"\"Represents a blueprint.  A blueprint is an object that records\n     functions that will be called with the\n-    :class:`~flask.blueprint.BlueprintSetupState` later to register functions\n+    :class:`~flask.blueprints.BlueprintSetupState` later to register functions\n     or other things on the main application.  See :ref:`blueprints` for more\n     information.\n "
    },
    {
        "commit_id": "7a353a7d1b5f7f23bc96bd8d4c17c80695e141dd",
        "commit_message": "Merge pull request #980 from grampajoe/patch-1\n\nUpdate docs copyright date",
        "commit_url": "https://github.com/pallets/flask/commit/7a353a7d1b5f7f23bc96bd8d4c17c80695e141dd",
        "buggy_code": "copyright = u'2013, Armin Ronacher'",
        "fixed_code": "copyright = u'2014, Armin Ronacher'",
        "patch": "@@ -43,7 +43,7 @@\n \n # General information about the project.\n project = u'Flask'\n-copyright = u'2013, Armin Ronacher'\n+copyright = u'2014, Armin Ronacher'\n \n # The version info for the project you're documenting, acts as replacement for\n # |version| and |release|, also used in various other places throughout the"
    },
    {
        "commit_id": "17a3056be4bceaf0c1f4c309b66c5d6e8d50def0",
        "commit_message": "Merge pull request #961 from GCorbel/patch-1\n\nRemove the extra \"1\"",
        "commit_url": "https://github.com/pallets/flask/commit/17a3056be4bceaf0c1f4c309b66c5d6e8d50def0",
        "buggy_code": "1   :copyright: (c) 2014 by Armin Ronacher.",
        "fixed_code": ":copyright: (c) 2014 by Armin Ronacher.",
        "patch": "@@ -5,7 +5,7 @@\n \n     Various helpers to make the development experience better.\n \n-1   :copyright: (c) 2014 by Armin Ronacher.\n+    :copyright: (c) 2014 by Armin Ronacher.\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n from ._compat import implements_to_string"
    },
    {
        "commit_id": "5ecca4c0dae52c7645f9dbda6cbfc32ec76a3498",
        "commit_message": "Fix a typo on blueprints module name.",
        "commit_url": "https://github.com/pallets/flask/commit/5ecca4c0dae52c7645f9dbda6cbfc32ec76a3498",
        "buggy_code": ":class:`~flask.blueprint.BlueprintSetupState` later to register functions",
        "fixed_code": ":class:`~flask.blueprints.BlueprintSetupState` later to register functions",
        "patch": "@@ -79,7 +79,7 @@ def add_url_rule(self, rule, endpoint=None, view_func=None, **options):\n class Blueprint(_PackageBoundObject):\n     \"\"\"Represents a blueprint.  A blueprint is an object that records\n     functions that will be called with the\n-    :class:`~flask.blueprint.BlueprintSetupState` later to register functions\n+    :class:`~flask.blueprints.BlueprintSetupState` later to register functions\n     or other things on the main application.  See :ref:`blueprints` for more\n     information.\n "
    },
    {
        "commit_id": "b7337080e48990393cf960890504710bc7cbc136",
        "commit_message": "Fix test_send_file_object\n\nstatic/index.html now opens in binary mode, and therefore newline conversion does not take place.",
        "commit_url": "https://github.com/pallets/flask/commit/b7337080e48990393cf960890504710bc7cbc136",
        "buggy_code": "f = open(os.path.join(app.root_path, 'static/index.html'))",
        "fixed_code": "f = open(os.path.join(app.root_path, 'static/index.html'), mode='rb')",
        "patch": "@@ -260,7 +260,7 @@ def test_send_file_object(self):\n         app = flask.Flask(__name__)\n         with catch_warnings() as captured:\n             with app.test_request_context():\n-                f = open(os.path.join(app.root_path, 'static/index.html'))\n+                f = open(os.path.join(app.root_path, 'static/index.html'), mode='rb')\n                 rv = flask.send_file(f)\n                 rv.direct_passthrough = False\n                 with app.open_resource('static/index.html') as f:"
    },
    {
        "commit_id": "be73233a553456b0b2e75322ac7c5a341ed9942e",
        "commit_message": "Merge pull request #840 from mhils/master\n\nFix typo in docstring",
        "commit_url": "https://github.com/pallets/flask/commit/be73233a553456b0b2e75322ac7c5a341ed9942e",
        "buggy_code": "or an integer and `headers` is a list of",
        "fixed_code": "or an integer and `headers` is a list or",
        "patch": "@@ -1547,7 +1547,7 @@ def make_response(self, rv):\n         :class:`tuple`          A tuple in the form ``(response, status,\n                                 headers)`` where `response` is any of the\n                                 types defined here, `status` is a string\n-                                or an integer and `headers` is a list of\n+                                or an integer and `headers` is a list or\n                                 a dictionary with header values.\n         ======================= ===========================================\n "
    },
    {
        "commit_id": "17e5fb365d7bde8fc795311bb37fe6358e258dc5",
        "commit_message": "Fix typo in docstring",
        "commit_url": "https://github.com/pallets/flask/commit/17e5fb365d7bde8fc795311bb37fe6358e258dc5",
        "buggy_code": "or an integer and `headers` is a list of",
        "fixed_code": "or an integer and `headers` is a list or",
        "patch": "@@ -1547,7 +1547,7 @@ def make_response(self, rv):\n         :class:`tuple`          A tuple in the form ``(response, status,\n                                 headers)`` where `response` is any of the\n                                 types defined here, `status` is a string\n-                                or an integer and `headers` is a list of\n+                                or an integer and `headers` is a list or\n                                 a dictionary with header values.\n         ======================= ===========================================\n "
    },
    {
        "commit_id": "f5d38dc4fcdf1d8edb3e42c67b6e0e1127cd00c7",
        "commit_message": "Update sessions.py\n\nget_cookie_path: fix docstring",
        "commit_url": "https://github.com/pallets/flask/commit/f5d38dc4fcdf1d8edb3e42c67b6e0e1127cd00c7",
        "buggy_code": "default implementation uses the value from the SESSION_COOKIE_PATH``",
        "fixed_code": "default implementation uses the value from the ``SESSION_COOKIE_PATH``",
        "patch": "@@ -223,7 +223,7 @@ def get_cookie_domain(self, app):\n \n     def get_cookie_path(self, app):\n         \"\"\"Returns the path for which the cookie should be valid.  The\n-        default implementation uses the value from the SESSION_COOKIE_PATH``\n+        default implementation uses the value from the ``SESSION_COOKIE_PATH``\n         config var if it's set, and falls back to ``APPLICATION_ROOT`` or\n         uses ``/`` if it's `None`.\n         \"\"\""
    },
    {
        "commit_id": "f88cc2d2f9d14d97e33ddd2bbaa4b1885db06e1c",
        "commit_message": "Fix broken test_appcontext_signals test case\n\nThis fixes #781 and ensures that Flask is tested with blinker installed.",
        "commit_url": "https://github.com/pallets/flask/commit/f88cc2d2f9d14d97e33ddd2bbaa4b1885db06e1c",
        "buggy_code": "recorded.append('push')",
        "fixed_code": "recorded.append('pop')",
        "patch": "@@ -102,7 +102,7 @@ def test_appcontext_signals(self):\n         def record_push(sender, **kwargs):\n             recorded.append('push')\n         def record_pop(sender, **kwargs):\n-            recorded.append('push')\n+            recorded.append('pop')\n \n         @app.route('/')\n         def index():"
    },
    {
        "commit_id": "c7a683d2fdb9ee7bd66347ce1cd5a7b7cadc9756",
        "commit_message": "Merge pull request #764 from marksteve/docs\n\nFix typo",
        "commit_url": "https://github.com/pallets/flask/commit/c7a683d2fdb9ee7bd66347ce1cd5a7b7cadc9756",
        "buggy_code": "The default port is now picked from the ``SEVER_NAME`` variable.",
        "fixed_code": "The default port is now picked from the ``SERVER_NAME`` variable.",
        "patch": "@@ -740,7 +740,7 @@ def run(self, host=None, port=None, debug=None, **options):\n            catch.\n \n         .. versionchanged:: 0.10\n-           The default port is now picked from the ``SEVER_NAME`` variable.\n+           The default port is now picked from the ``SERVER_NAME`` variable.\n \n         :param host: the hostname to listen on. Set this to ``'0.0.0.0'`` to\n                      have the server available externally as well. Defaults to"
    },
    {
        "commit_id": "6565bd848e68097fd827040af6c9e712f759d07b",
        "commit_message": "Fix typo",
        "commit_url": "https://github.com/pallets/flask/commit/6565bd848e68097fd827040af6c9e712f759d07b",
        "buggy_code": "The default port is now picked from the ``SEVER_NAME`` variable.",
        "fixed_code": "The default port is now picked from the ``SERVER_NAME`` variable.",
        "patch": "@@ -740,7 +740,7 @@ def run(self, host=None, port=None, debug=None, **options):\n            catch.\n \n         .. versionchanged:: 0.10\n-           The default port is now picked from the ``SEVER_NAME`` variable.\n+           The default port is now picked from the ``SERVER_NAME`` variable.\n \n         :param host: the hostname to listen on. Set this to ``'0.0.0.0'`` to\n                      have the server available externally as well. Defaults to"
    },
    {
        "commit_id": "7f35fc293559e5c809de78909872896236100189",
        "commit_message": "Merge pull request #751 from ThomasWaldmann/sprint-branch\n\nfixing issues found while debugging, fix error in 1 test",
        "commit_url": "https://github.com/pallets/flask/commit/7f35fc293559e5c809de78909872896236100189",
        "buggy_code": "if isinstance(rv, string_types):",
        "fixed_code": "if isinstance(rv, string_types + (bytes, )):",
        "patch": "@@ -1551,7 +1551,7 @@ def make_response(self, rv):\n             # set the headers and status.  We do this because there can be\n             # some extra logic involved when creating these objects with\n             # specific values (like default content type selection).\n-            if isinstance(rv, string_types):\n+            if isinstance(rv, string_types + (bytes, )):\n                 rv = self.response_class(rv, headers=headers, status=status)\n                 headers = status = None\n             else:"
    },
    {
        "commit_id": "915d7180fcd0defd23384e30b630e2cb31a39222",
        "commit_message": "Merge pull request #747 from ThomasWaldmann/sprint-branch\n\nreplace 1/0 by 1 // 0 to get rid of DeprecationWarning (and PEP8 issue)",
        "commit_url": "https://github.com/pallets/flask/commit/915d7180fcd0defd23384e30b630e2cb31a39222",
        "buggy_code": "1/0",
        "fixed_code": "1 // 0",
        "patch": "@@ -83,7 +83,7 @@ def test_request_exception_signal(self):\n \n         @app.route('/')\n         def index():\n-            1/0\n+            1 // 0\n \n         def record(sender, exception):\n             recorded.append(exception)"
    },
    {
        "commit_id": "915d7180fcd0defd23384e30b630e2cb31a39222",
        "commit_message": "Merge pull request #747 from ThomasWaldmann/sprint-branch\n\nreplace 1/0 by 1 // 0 to get rid of DeprecationWarning (and PEP8 issue)",
        "commit_url": "https://github.com/pallets/flask/commit/915d7180fcd0defd23384e30b630e2cb31a39222",
        "buggy_code": "1/0",
        "fixed_code": "1 // 0",
        "patch": "@@ -30,7 +30,7 @@ def log_exception(self, exc_info):\n \n         @app.route('/')\n         def index():\n-            1/0\n+            1 // 0\n \n         rv = app.test_client().get('/')\n         self.assert_equal(rv.status_code, 500)"
    },
    {
        "commit_id": "915d7180fcd0defd23384e30b630e2cb31a39222",
        "commit_message": "Merge pull request #747 from ThomasWaldmann/sprint-branch\n\nreplace 1/0 by 1 // 0 to get rid of DeprecationWarning (and PEP8 issue)",
        "commit_url": "https://github.com/pallets/flask/commit/915d7180fcd0defd23384e30b630e2cb31a39222",
        "buggy_code": "1/0",
        "fixed_code": "1 // 0",
        "patch": "@@ -143,7 +143,7 @@ def index():\n \n         @app.route('/other')\n         def other():\n-            1/0\n+            1 // 0\n \n         with app.test_client() as c:\n             resp = c.get('/')"
    },
    {
        "commit_id": "ac04bc78361d5562f8289e8efe16a2e9a97b0d01",
        "commit_message": "replace 1/0 by 1 // 0 to get rid of DeprecationWarning (and PEP8 issue)",
        "commit_url": "https://github.com/pallets/flask/commit/ac04bc78361d5562f8289e8efe16a2e9a97b0d01",
        "buggy_code": "1/0",
        "fixed_code": "1 // 0",
        "patch": "@@ -83,7 +83,7 @@ def test_request_exception_signal(self):\n \n         @app.route('/')\n         def index():\n-            1/0\n+            1 // 0\n \n         def record(sender, exception):\n             recorded.append(exception)"
    },
    {
        "commit_id": "ac04bc78361d5562f8289e8efe16a2e9a97b0d01",
        "commit_message": "replace 1/0 by 1 // 0 to get rid of DeprecationWarning (and PEP8 issue)",
        "commit_url": "https://github.com/pallets/flask/commit/ac04bc78361d5562f8289e8efe16a2e9a97b0d01",
        "buggy_code": "1/0",
        "fixed_code": "1 // 0",
        "patch": "@@ -30,7 +30,7 @@ def log_exception(self, exc_info):\n \n         @app.route('/')\n         def index():\n-            1/0\n+            1 // 0\n \n         rv = app.test_client().get('/')\n         self.assert_equal(rv.status_code, 500)"
    },
    {
        "commit_id": "ac04bc78361d5562f8289e8efe16a2e9a97b0d01",
        "commit_message": "replace 1/0 by 1 // 0 to get rid of DeprecationWarning (and PEP8 issue)",
        "commit_url": "https://github.com/pallets/flask/commit/ac04bc78361d5562f8289e8efe16a2e9a97b0d01",
        "buggy_code": "1/0",
        "fixed_code": "1 // 0",
        "patch": "@@ -143,7 +143,7 @@ def index():\n \n         @app.route('/other')\n         def other():\n-            1/0\n+            1 // 0\n \n         with app.test_client() as c:\n             resp = c.get('/')"
    },
    {
        "commit_id": "77753e9b73a8ed8f908e2877455f629ea6e7a6a4",
        "commit_message": "Merge pull request #746 from ThomasWaldmann/sprint-branch\n\nfix typos",
        "commit_url": "https://github.com/pallets/flask/commit/77753e9b73a8ed8f908e2877455f629ea6e7a6a4",
        "buggy_code": ":param attribute: the name of the variable of macro to acccess",
        "fixed_code": ":param attribute: the name of the variable of macro to access",
        "patch": "@@ -330,7 +330,7 @@ def get_template_attribute(template_name, attribute):\n     .. versionadded:: 0.2\n \n     :param template_name: the name of the template\n-    :param attribute: the name of the variable of macro to acccess\n+    :param attribute: the name of the variable of macro to access\n     \"\"\"\n     return getattr(current_app.jinja_env.get_template(template_name).module,\n                    attribute)"
    },
    {
        "commit_id": "13cc69911c6b5c742489ffe6e8c6458dec32e230",
        "commit_message": "fix typos",
        "commit_url": "https://github.com/pallets/flask/commit/13cc69911c6b5c742489ffe6e8c6458dec32e230",
        "buggy_code": ":param attribute: the name of the variable of macro to acccess",
        "fixed_code": ":param attribute: the name of the variable of macro to access",
        "patch": "@@ -330,7 +330,7 @@ def get_template_attribute(template_name, attribute):\n     .. versionadded:: 0.2\n \n     :param template_name: the name of the template\n-    :param attribute: the name of the variable of macro to acccess\n+    :param attribute: the name of the variable of macro to access\n     \"\"\"\n     return getattr(current_app.jinja_env.get_template(template_name).module,\n                    attribute)"
    },
    {
        "commit_id": "ffbcad1e46ff88981e9f787f29234de49d31a54f",
        "commit_message": "Merge pull request #742 from ThomasWaldmann/sprint-branch\n\nfix minitwit/flaskr test errors, improve docs about file open mode",
        "commit_url": "https://github.com/pallets/flask/commit/ffbcad1e46ff88981e9f787f29234de49d31a54f",
        "buggy_code": "with app.open_resource('schema.sql') as f:",
        "fixed_code": "with app.open_resource('schema.sql', mode='r') as f:",
        "patch": "@@ -31,7 +31,7 @@ def init_db():\n     \"\"\"Creates the database tables.\"\"\"\n     with app.app_context():\n         db = get_db()\n-        with app.open_resource('schema.sql') as f:\n+        with app.open_resource('schema.sql', mode='r') as f:\n             db.cursor().executescript(f.read())\n         db.commit()\n "
    },
    {
        "commit_id": "ffbcad1e46ff88981e9f787f29234de49d31a54f",
        "commit_message": "Merge pull request #742 from ThomasWaldmann/sprint-branch\n\nfix minitwit/flaskr test errors, improve docs about file open mode",
        "commit_url": "https://github.com/pallets/flask/commit/ffbcad1e46ff88981e9f787f29234de49d31a54f",
        "buggy_code": "with app.open_resource('schema.sql') as f:",
        "fixed_code": "with app.open_resource('schema.sql', mode='r') as f:",
        "patch": "@@ -53,7 +53,7 @@ def init_db():\n     \"\"\"Creates the database tables.\"\"\"\n     with app.app_context():\n         db = get_db()\n-        with app.open_resource('schema.sql') as f:\n+        with app.open_resource('schema.sql', mode='r') as f:\n             db.cursor().executescript(f.read())\n         db.commit()\n "
    },
    {
        "commit_id": "8bb972e5ae647650457bc4e94ff51cb5e34951dd",
        "commit_message": "fix minitwit/flaskr test errors, improve docs about file open mode\n\napp.open_resource needs to get called with the correct mode param (python3\nwill read bytes [not str] if the wrong mode is used), add mode param docs.\n\nrv.data is bytes, fix the data type we compare it with to be also bytes",
        "commit_url": "https://github.com/pallets/flask/commit/8bb972e5ae647650457bc4e94ff51cb5e34951dd",
        "buggy_code": "with app.open_resource('schema.sql') as f:",
        "fixed_code": "with app.open_resource('schema.sql', mode='r') as f:",
        "patch": "@@ -31,7 +31,7 @@ def init_db():\n     \"\"\"Creates the database tables.\"\"\"\n     with app.app_context():\n         db = get_db()\n-        with app.open_resource('schema.sql') as f:\n+        with app.open_resource('schema.sql', mode='r') as f:\n             db.cursor().executescript(f.read())\n         db.commit()\n "
    },
    {
        "commit_id": "8bb972e5ae647650457bc4e94ff51cb5e34951dd",
        "commit_message": "fix minitwit/flaskr test errors, improve docs about file open mode\n\napp.open_resource needs to get called with the correct mode param (python3\nwill read bytes [not str] if the wrong mode is used), add mode param docs.\n\nrv.data is bytes, fix the data type we compare it with to be also bytes",
        "commit_url": "https://github.com/pallets/flask/commit/8bb972e5ae647650457bc4e94ff51cb5e34951dd",
        "buggy_code": "with app.open_resource('schema.sql') as f:",
        "fixed_code": "with app.open_resource('schema.sql', mode='r') as f:",
        "patch": "@@ -53,7 +53,7 @@ def init_db():\n     \"\"\"Creates the database tables.\"\"\"\n     with app.app_context():\n         db = get_db()\n-        with app.open_resource('schema.sql') as f:\n+        with app.open_resource('schema.sql', mode='r') as f:\n             db.cursor().executescript(f.read())\n         db.commit()\n "
    },
    {
        "commit_id": "26a9e907343389bf5c752615e0c99e5ec8a8833e",
        "commit_message": "Merge pull request #734 from ThomasWaldmann/methodattrs\n\nautomated change using python-modernize: fix methodattrs",
        "commit_url": "https://github.com/pallets/flask/commit/26a9e907343389bf5c752615e0c99e5ec8a8833e",
        "buggy_code": "Flask.init_jinja_globals.im_func:",
        "fixed_code": "Flask.init_jinja_globals.__func__:",
        "patch": "@@ -590,7 +590,7 @@ def jinja_env(self):\n         # Hack to support the init_jinja_globals method which is supported\n         # until 1.0 but has an API deficiency.\n         if getattr(self.init_jinja_globals, 'im_func', None) is not \\\n-           Flask.init_jinja_globals.im_func:\n+           Flask.init_jinja_globals.__func__:\n             from warnings import warn\n             warn(DeprecationWarning('This flask class uses a customized '\n                 'init_jinja_globals() method which is deprecated. '"
    },
    {
        "commit_id": "b8b769ad41edeb2320774d88502dd998df272397",
        "commit_message": "automated change using python-modernize: fix methodattrs",
        "commit_url": "https://github.com/pallets/flask/commit/b8b769ad41edeb2320774d88502dd998df272397",
        "buggy_code": "Flask.init_jinja_globals.im_func:",
        "fixed_code": "Flask.init_jinja_globals.__func__:",
        "patch": "@@ -590,7 +590,7 @@ def jinja_env(self):\n         # Hack to support the init_jinja_globals method which is supported\n         # until 1.0 but has an API deficiency.\n         if getattr(self.init_jinja_globals, 'im_func', None) is not \\\n-           Flask.init_jinja_globals.im_func:\n+           Flask.init_jinja_globals.__func__:\n             from warnings import warn\n             warn(DeprecationWarning('This flask class uses a customized '\n                 'init_jinja_globals() method which is deprecated. '"
    },
    {
        "commit_id": "c5f938bc55455e90a83b7c1b458a440f2e2ab129",
        "commit_message": "Merge pull request #583 from d1ffuz0r/issue_524\n\nfixed issue #524",
        "commit_url": "https://github.com/pallets/flask/commit/c5f938bc55455e90a83b7c1b458a440f2e2ab129",
        "buggy_code": "def find_module(self, fullname, path=None):",
        "fixed_code": "def find_module(self, fullname):",
        "patch": "@@ -44,7 +44,7 @@ def __ne__(self, other):\n     def install(self):\n         sys.meta_path[:] = [x for x in sys.meta_path if self != x] + [self]\n \n-    def find_module(self, fullname, path=None):\n+    def find_module(self, fullname):\n         if fullname.startswith(self.prefix):\n             return self\n "
    },
    {
        "commit_id": "3b9fe7c48606dc865950fa683f70eb1946c643cf",
        "commit_message": "Merge pull request #603 from rmacy/patch-1\n\nFixed typo occours to occurs",
        "commit_url": "https://github.com/pallets/flask/commit/3b9fe7c48606dc865950fa683f70eb1946c643cf",
        "buggy_code": "occours that is not caught.  In debug mode the exception will",
        "fixed_code": "occurs that is not caught.  In debug mode the exception will",
        "patch": "@@ -1265,7 +1265,7 @@ def handle_user_exception(self, e):\n \n     def handle_exception(self, e):\n         \"\"\"Default exception handling that kicks in when an exception\n-        occours that is not caught.  In debug mode the exception will\n+        occurs that is not caught.  In debug mode the exception will\n         be re-raised immediately, otherwise it is logged and the handler\n         for a 500 internal server error is used.  If no such handler\n         exists, a default 500 internal server error message is displayed."
    },
    {
        "commit_id": "8d330a368a7f0aa6ba8508cb2b4b64f6415a0c7b",
        "commit_message": "fixed issue #524",
        "commit_url": "https://github.com/pallets/flask/commit/8d330a368a7f0aa6ba8508cb2b4b64f6415a0c7b",
        "buggy_code": "def find_module(self, fullname, path=None):",
        "fixed_code": "def find_module(self, fullname):",
        "patch": "@@ -44,7 +44,7 @@ def __ne__(self, other):\n     def install(self):\n         sys.meta_path[:] = [x for x in sys.meta_path if self != x] + [self]\n \n-    def find_module(self, fullname, path=None):\n+    def find_module(self, fullname):\n         if fullname.startswith(self.prefix):\n             return self\n "
    },
    {
        "commit_id": "e3b3e05052ea36456cb557b8799b7b0ed00865bd",
        "commit_message": "Docs: Fix docstring formatting",
        "commit_url": "https://github.com/pallets/flask/commit/e3b3e05052ea36456cb557b8799b7b0ed00865bd",
        "buggy_code": "Alternatively it can also be used around a specific generator:",
        "fixed_code": "Alternatively it can also be used around a specific generator::",
        "patch": "@@ -113,7 +113,7 @@ def generate():\n                 yield '!'\n             return Response(generate())\n \n-    Alternatively it can also be used around a specific generator:\n+    Alternatively it can also be used around a specific generator::\n \n         from flask import stream_with_context, request, Response\n "
    },
    {
        "commit_id": "1beb0f2e7f8c60df41cd7b198c1ed1748a0fea3d",
        "commit_message": "Fixed a syntax error",
        "commit_url": "https://github.com/pallets/flask/commit/1beb0f2e7f8c60df41cd7b198c1ed1748a0fea3d",
        "buggy_code": "Alternatively it can also be used around a specific generator:",
        "fixed_code": "Alternatively it can also be used around a specific generator::",
        "patch": "@@ -113,7 +113,7 @@ def generate():\n                 yield '!'\n             return Response(generate())\n \n-    Alternatively it can also be used around a specific generator:\n+    Alternatively it can also be used around a specific generator::\n \n         from flask import stream_with_context, request, Response\n "
    },
    {
        "commit_id": "d4415dd6653adb25b89b6276dd140141266ba46b",
        "commit_message": "Fixed an rst syntax error",
        "commit_url": "https://github.com/pallets/flask/commit/d4415dd6653adb25b89b6276dd140141266ba46b",
        "buggy_code": "Alternatively it can also be used around a specific generator:",
        "fixed_code": "Alternatively it can also be used around a specific generator::",
        "patch": "@@ -113,7 +113,7 @@ def generate():\n                 yield '!'\n             return Response(generate())\n \n-    Alternatively it can also be used around a specific generator:\n+    Alternatively it can also be used around a specific generator::\n \n         from flask import stream_with_context, request, Response\n "
    },
    {
        "commit_id": "274d1a82f8242229b8060afafdce53a7dbd0a435",
        "commit_message": "Merge pull request #530 from mattupstate/master\n\nFix documention for `after_this_request`",
        "commit_url": "https://github.com/pallets/flask/commit/274d1a82f8242229b8060afafdce53a7dbd0a435",
        "buggy_code": "def add_header():",
        "fixed_code": "def add_header(response):",
        "patch": "@@ -41,7 +41,7 @@ def after_this_request(f):\n         @app.route('/')\n         def index():\n             @after_this_request\n-            def add_header():\n+            def add_header(response):\n                 response.headers['X-Foo'] = 'Parachute'\n                 return response\n             return 'Hello World!'"
    },
    {
        "commit_id": "1f3e667b5d9ffb60c218c250df27144793a5acdb",
        "commit_message": "Fix documention for `after_this_request`",
        "commit_url": "https://github.com/pallets/flask/commit/1f3e667b5d9ffb60c218c250df27144793a5acdb",
        "buggy_code": "def add_header():",
        "fixed_code": "def add_header(response):",
        "patch": "@@ -41,7 +41,7 @@ def after_this_request(f):\n         @app.route('/')\n         def index():\n             @after_this_request\n-            def add_header():\n+            def add_header(response):\n                 response.headers['X-Foo'] = 'Parachute'\n                 return response\n             return 'Hello World!'"
    },
    {
        "commit_id": "a9e753f7064e38e40819b49a51491e681dd0f42c",
        "commit_message": "Merge pull request #497 from ekoka/master\n\nfix for https://github.com/mitsuhiko/flask/issues/494",
        "commit_url": "https://github.com/pallets/flask/commit/a9e753f7064e38e40819b49a51491e681dd0f42c",
        "buggy_code": "bp = endpoint.split('.', 1)[0]",
        "fixed_code": "bp = endpoint.rsplit('.', 1)[0]",
        "patch": "@@ -1490,7 +1490,7 @@ def inject_url_defaults(self, endpoint, values):\n         \"\"\"\n         funcs = self.url_default_functions.get(None, ())\n         if '.' in endpoint:\n-            bp = endpoint.split('.', 1)[0]\n+            bp = endpoint.rsplit('.', 1)[0]\n             funcs = chain(funcs, self.url_default_functions.get(bp, ()))\n         for func in funcs:\n             func(endpoint, values)"
    },
    {
        "commit_id": "35312be63c633cbad76a790f47b1b50a94f07eb4",
        "commit_message": "Merge pull request #527 from mapio/patch-1\n\ncache_timeout should be always checked not Null",
        "commit_url": "https://github.com/pallets/flask/commit/35312be63c633cbad76a790f47b1b50a94f07eb4",
        "buggy_code": "if cache_timeout:",
        "fixed_code": "if cache_timeout is not None:",
        "patch": "@@ -533,7 +533,7 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n     rv.cache_control.public = True\n     if cache_timeout is None:\n         cache_timeout = current_app.get_send_file_max_age(filename)\n-    if cache_timeout:\n+    if cache_timeout is not None:\n         rv.cache_control.max_age = cache_timeout\n         rv.expires = int(time() + cache_timeout)\n "
    },
    {
        "commit_id": "38187bcd9f42d630d05ffcecd810fbc7220d7847",
        "commit_message": "Merge pull request #464 from passy/patch-1\n\nRemove triple-quotes from print statement in setup.py",
        "commit_url": "https://github.com/pallets/flask/commit/38187bcd9f42d630d05ffcecd810fbc7220d7847",
        "buggy_code": "print \"Audit requires PyFlakes installed in your system.\"\"\"",
        "fixed_code": "print \"Audit requires PyFlakes installed in your system.\"",
        "patch": "@@ -59,7 +59,7 @@ def run(self):\n         try:\n             import pyflakes.scripts.pyflakes as flakes\n         except ImportError:\n-            print \"Audit requires PyFlakes installed in your system.\"\"\"\n+            print \"Audit requires PyFlakes installed in your system.\"\n             sys.exit(-1)\n \n         warns = 0"
    },
    {
        "commit_id": "476f8d57a27d96ce5d099541bd9368de540bea0e",
        "commit_message": "Merge pull request #390 from jfinkels/patch-1\n\nAdded PATCH method to the list of HTTP method functions for MethodView",
        "commit_url": "https://github.com/pallets/flask/commit/476f8d57a27d96ce5d099541bd9368de540bea0e",
        "buggy_code": "'delete', 'put', 'trace'])",
        "fixed_code": "'delete', 'put', 'trace', 'patch'])",
        "patch": "@@ -12,7 +12,7 @@\n \n \n http_method_funcs = frozenset(['get', 'post', 'head', 'options',\n-                               'delete', 'put', 'trace'])\n+                               'delete', 'put', 'trace', 'patch'])\n \n \n class View(object):"
    },
    {
        "commit_id": "c5ebf9a97d0443bff59ff6a37aee8afd870ceabb",
        "commit_message": "Added PATCH method to the list of HTTP method functions for use in the flask.views.MethodView class.",
        "commit_url": "https://github.com/pallets/flask/commit/c5ebf9a97d0443bff59ff6a37aee8afd870ceabb",
        "buggy_code": "'delete', 'put', 'trace'])",
        "fixed_code": "'delete', 'put', 'trace', 'patch'])",
        "patch": "@@ -12,7 +12,7 @@\n \n \n http_method_funcs = frozenset(['get', 'post', 'head', 'options',\n-                               'delete', 'put', 'trace'])\n+                               'delete', 'put', 'trace', 'patch'])\n \n \n class View(object):"
    },
    {
        "commit_id": "a59cbd4f5256a356fcb7858bf0a5a0ad535e8e6d",
        "commit_message": "Minor grammar fix",
        "commit_url": "https://github.com/pallets/flask/commit/a59cbd4f5256a356fcb7858bf0a5a0ad535e8e6d",
        "buggy_code": "assert meth is not None, 'Not implemented method %r' % request.method",
        "fixed_code": "assert meth is not None, 'Unimplemented method %r' % request.method",
        "patch": "@@ -146,5 +146,5 @@ def dispatch_request(self, *args, **kwargs):\n         # retry with GET\n         if meth is None and request.method == 'HEAD':\n             meth = getattr(self, 'get', None)\n-        assert meth is not None, 'Not implemented method %r' % request.method\n+        assert meth is not None, 'Unimplemented method %r' % request.method\n         return meth(*args, **kwargs)"
    },
    {
        "commit_id": "0dd9dc37b6618b8091c2a0f849f5f3143dc6eafc",
        "commit_message": "Fixed an issue with an unused module for Python 2.5 (flask.session)",
        "commit_url": "https://github.com/pallets/flask/commit/0dd9dc37b6618b8091c2a0f849f5f3143dc6eafc",
        "buggy_code": "from .sessions import *",
        "fixed_code": "from .sessions import SecureCookieSession, NullSession",
        "patch": "@@ -13,7 +13,7 @@\n from warnings import warn\n warn(DeprecationWarning('please use flask.sessions instead'))\n \n-from .sessions import *\n+from .sessions import SecureCookieSession, NullSession\n \n Session = SecureCookieSession\n _NullSession = NullSession"
    },
    {
        "commit_id": "436d24ee665a39d48bd0b915f63bc5fd22997e25",
        "commit_message": "Merge pull request #327 from SimonSapin/patch-2\n\nAdd to sys.path, not sys.path_info",
        "commit_url": "https://github.com/pallets/flask/commit/436d24ee665a39d48bd0b915f63bc5fd22997e25",
        "buggy_code": "\"\"\"Adds an entry to sys.path_info if it's not already there.  This does",
        "fixed_code": "\"\"\"Adds an entry to sys.path if it's not already there.  This does",
        "patch": "@@ -24,7 +24,7 @@\n \n \n def add_to_path(path):\n-    \"\"\"Adds an entry to sys.path_info if it's not already there.  This does\n+    \"\"\"Adds an entry to sys.path if it's not already there.  This does\n     not append it but moves it to the front so that we can be sure it\n     is loaded.\n     \"\"\""
    },
    {
        "commit_id": "899f8cdf51570376298472c2118001f226e1a20e",
        "commit_message": "Merge pull request #322 from jperras/patch-1\n\nFixed typo in docstring of dispatch_request method of flask.views.View",
        "commit_url": "https://github.com/pallets/flask/commit/899f8cdf51570376298472c2118001f226e1a20e",
        "buggy_code": "actual view functionc ode.  This method is called with all",
        "fixed_code": "actual view function code.  This method is called with all",
        "patch": "@@ -64,7 +64,7 @@ def dispatch_request(self):\n \n     def dispatch_request(self):\n         \"\"\"Subclasses have to override this method to implement the\n-        actual view functionc ode.  This method is called with all\n+        actual view function code.  This method is called with all\n         the arguments from the URL rule.\n         \"\"\"\n         raise NotImplementedError()"
    },
    {
        "commit_id": "7b899c85103996d861360a7ce42ab9a21bae3f48",
        "commit_message": "Merge pull request #309 from embe/master\n\nFix session loading in flask.testing.TestClient.session_transaction()",
        "commit_url": "https://github.com/pallets/flask/commit/7b899c85103996d861360a7ce42ab9a21bae3f48",
        "buggy_code": "environ_overrides = kwargs.pop('environ_overrides', {})",
        "fixed_code": "environ_overrides = kwargs.setdefault('environ_overrides', {})",
        "patch": "@@ -59,7 +59,7 @@ def session_transaction(self, *args, **kwargs):\n             raise RuntimeError('Session transactions only make sense '\n                                'with cookies enabled.')\n         app = self.application\n-        environ_overrides = kwargs.pop('environ_overrides', {})\n+        environ_overrides = kwargs.setdefault('environ_overrides', {})\n         self.cookie_jar.inject_wsgi(environ_overrides)\n         outer_reqctx = _request_ctx_stack.top\n         with app.test_request_context(*args, **kwargs) as c:"
    },
    {
        "commit_id": "fbd6776e68a12aa7bf7d646ca03d568cedc616f3",
        "commit_message": "Fixed a bug in the testsuite that caused problems when dots where in directory names",
        "commit_url": "https://github.com/pallets/flask/commit/fbd6776e68a12aa7bf7d646ca03d568cedc616f3",
        "buggy_code": "self.assert_(os.path.basename(__file__.rsplit('.')[0] + '.py') in out)",
        "fixed_code": "self.assert_(os.path.basename(__file__.rsplit('.', 1)[0] + '.py') in out)",
        "patch": "@@ -231,7 +231,7 @@ def exc():\n                 c.get('/')\n                 out = err.getvalue()\n                 self.assert_('WARNING in helpers [' in out)\n-                self.assert_(os.path.basename(__file__.rsplit('.')[0] + '.py') in out)\n+                self.assert_(os.path.basename(__file__.rsplit('.', 1)[0] + '.py') in out)\n                 self.assert_('the standard library is dead' in out)\n                 self.assert_('this is a debug statement' in out)\n "
    },
    {
        "commit_id": "c9a2ad2b8d079c0ecca701f4c0b15390437c4843",
        "commit_message": "Fixed a bug in list_templates",
        "commit_url": "https://github.com/pallets/flask/commit/c9a2ad2b8d079c0ecca701f4c0b15390437c4843",
        "buggy_code": "frontend = Blueprint(__name__)",
        "fixed_code": "frontend = Blueprint('frontend', __name__, template_folder='templates')",
        "patch": "@@ -1,6 +1,6 @@\n from flask import Blueprint, render_template\n \n-frontend = Blueprint(__name__)\n+frontend = Blueprint('frontend', __name__, template_folder='templates')\n \n \n @frontend.route('/')"
    },
    {
        "commit_id": "21d4a054e399a42ac448814116580a5c62991fce",
        "commit_message": "Fixed a bug in the release script\n\nSigned-off-by: Armin Ronacher <armin.ronacher@active-4.com>",
        "commit_url": "https://github.com/pallets/flask/commit/21d4a054e399a42ac448814116580a5c62991fce",
        "buggy_code": "match = re.match(r'^released on (\\w+\\s+\\d+\\w+\\s+\\d+)'",
        "fixed_code": "match = re.match(r'released on (\\w+\\s+\\d+\\w+\\s+\\d+)'",
        "patch": "@@ -33,7 +33,7 @@ def parse_changelog():\n                 if change_info:\n                     break\n \n-            match = re.match(r'^released on (\\w+\\s+\\d+\\w+\\s+\\d+)'\n+            match = re.match(r'released on (\\w+\\s+\\d+\\w+\\s+\\d+)'\n                              r'(?:, codename (.*))?(?i)', change_info)\n             if match is None:\n                 continue"
    },
    {
        "commit_id": "db28217574c119b65f4a5c9dcc7922656d60f22b",
        "commit_message": "Fixed a bug, view_args not values",
        "commit_url": "https://github.com/pallets/flask/commit/db28217574c119b65f4a5c9dcc7922656d60f22b",
        "buggy_code": "func(request.endpoint, request.values)",
        "fixed_code": "func(request.endpoint, request.view_args)",
        "patch": "@@ -1043,7 +1043,7 @@ def preprocess_request(self):\n         if bp is not None and bp in self.url_value_preprocessors:\n             funcs = chain(funcs, self.url_value_preprocessors[bp])\n         for func in funcs:\n-            func(request.endpoint, request.values)\n+            func(request.endpoint, request.view_args)\n \n         funcs = self.before_request_funcs.get(None, ())\n         if bp is not None and bp in self.before_request_funcs:"
    },
    {
        "commit_id": "1643e5c39157e4f43d20b965c9967eeec8e90700",
        "commit_message": "Fixing a word usage issue in docs.\n\nSigned-off-by: Armin Ronacher <armin.ronacher@active-4.com>",
        "commit_url": "https://github.com/pallets/flask/commit/1643e5c39157e4f43d20b965c9967eeec8e90700",
        "buggy_code": "occours that is not catched.  In debug mode the exception will",
        "fixed_code": "occours that is not caught.  In debug mode the exception will",
        "patch": "@@ -715,7 +715,7 @@ def handle_http_exception(self, e):\n \n     def handle_exception(self, e):\n         \"\"\"Default exception handling that kicks in when an exception\n-        occours that is not catched.  In debug mode the exception will\n+        occours that is not caught.  In debug mode the exception will\n         be re-raised immediately, otherwise it is logged and the handler\n         for a 500 internal server error is used.  If no such handler\n         exists, a default 500 internal server error message is displayed."
    },
    {
        "commit_id": "4a45345fc44f60275b91c47031dd44abce02f596",
        "commit_message": "Fix typo in send_file docs\n\nSigned-off-by: Armin Ronacher <armin.ronacher@active-4.com>",
        "commit_url": "https://github.com/pallets/flask/commit/4a45345fc44f60275b91c47031dd44abce02f596",
        "buggy_code": "to sent certain files as attachment (HTML for instance).  The mimetype",
        "fixed_code": "to send certain files as attachment (HTML for instance).  The mimetype",
        "patch": "@@ -266,7 +266,7 @@ def send_file(filename_or_fp, mimetype=None, as_attachment=False,\n \n     By default it will try to guess the mimetype for you, but you can\n     also explicitly provide one.  For extra security you probably want\n-    to sent certain files as attachment (HTML for instance).  The mimetype\n+    to send certain files as attachment (HTML for instance).  The mimetype\n     guessing requires a `filename` or an `attachment_filename` to be\n     provided.\n "
    },
    {
        "commit_id": "9ae4eba9861bfa959bac6adfaf5842ef7d937eb6",
        "commit_message": "fix subdomain for static rule on registering module\n\nSigned-off-by: Armin Ronacher <armin.ronacher@active-4.com>",
        "commit_url": "https://github.com/pallets/flask/commit/9ae4eba9861bfa959bac6adfaf5842ef7d937eb6",
        "buggy_code": "subdomain=module.subdomain)",
        "fixed_code": "subdomain=state.subdomain)",
        "patch": "@@ -32,7 +32,7 @@ def _register(state):\n         state.app.add_url_rule(path + '/<path:filename>',\n                                endpoint='%s.static' % module.name,\n                                view_func=module.send_static_file,\n-                               subdomain=module.subdomain)\n+                               subdomain=state.subdomain)\n     return _register\n \n "
    },
    {
        "commit_id": "549af6229039e7fed7bcb2079737e45c27af998e",
        "commit_message": "Fix some typos in the docstrings",
        "commit_url": "https://github.com/pallets/flask/commit/549af6229039e7fed7bcb2079737e45c27af998e",
        "buggy_code": "Here some examples:",
        "fixed_code": "Here are some examples:",
        "patch": "@@ -146,7 +146,7 @@ def url_for(endpoint, **values):\n     \"\"\"Generates a URL to the given endpoint with the method provided.\n     The endpoint is relative to the active module if modules are in use.\n \n-    Here some examples:\n+    Here are some examples:\n \n     ==================== ======================= =============================\n     Active Module        Target Endpoint         Target Function"
    },
    {
        "commit_id": "51a89bf35ec6231d55f5caa8e12484e801f593fe",
        "commit_message": "Restored 2.5 compatibility and actual fix for the json problem",
        "commit_url": "https://github.com/pallets/flask/commit/51a89bf35ec6231d55f5caa8e12484e801f593fe",
        "buggy_code": "from flask.helpers import _PackageBoundObject",
        "fixed_code": "from .helpers import _PackageBoundObject",
        "patch": "@@ -9,7 +9,7 @@\n     :license: BSD, see LICENSE for more details.\n \"\"\"\n \n-from flask.helpers import _PackageBoundObject\n+from .helpers import _PackageBoundObject\n \n \n def _register_module(module, static_path):"
    },
    {
        "commit_id": "dd59d7241d0ebc713d51ab939f53ebd0df8b2dac",
        "commit_message": "Ported a typo fix from master",
        "commit_url": "https://github.com/pallets/flask/commit/dd59d7241d0ebc713d51ab939f53ebd0df8b2dac",
        "buggy_code": ":param subdomain: specifies the rule for the subdoain in case",
        "fixed_code": ":param subdomain: specifies the rule for the subdomain in case",
        "patch": "@@ -550,7 +550,7 @@ def show_post(post_id):\n         :param methods: a list of methods this rule should be limited\n                         to (``GET``, ``POST`` etc.).  By default a rule\n                         just listens for ``GET`` (and implicitly ``HEAD``).\n-        :param subdomain: specifies the rule for the subdoain in case\n+        :param subdomain: specifies the rule for the subdomain in case\n                           subdomain matching is in use.\n         :param strict_slashes: can be used to disable the strict slashes\n                                setting for this rule.  See above."
    },
    {
        "commit_id": "e67903d134039b2452b2a3806e10451491ce768d",
        "commit_message": "Fixing another article error, in handle_http_exception.",
        "commit_url": "https://github.com/pallets/flask/commit/e67903d134039b2452b2a3806e10451491ce768d",
        "buggy_code": "\"\"\"Handles an HTTP exception.  By default this will invoke the",
        "fixed_code": "\"\"\"Handles a HTTP exception.  By default this will invoke the",
        "patch": "@@ -1287,7 +1287,7 @@ def context_processor(self, f):\n         return f\n \n     def handle_http_exception(self, e):\n-        \"\"\"Handles an HTTP exception.  By default this will invoke the\n+        \"\"\"Handles a HTTP exception.  By default this will invoke the\n         registered error handlers and fall back to returning the\n         exception as response.\n "
    },
    {
        "commit_id": "cc7876f97fbc787ac7702453bdc62541f8ea47f6",
        "commit_message": "Fix in docs for handle_exception: \"A\" before nouns pronounced with an initial consonant sound",
        "commit_url": "https://github.com/pallets/flask/commit/cc7876f97fbc787ac7702453bdc62541f8ea47f6",
        "buggy_code": "for an 500 internal server error is used.  If no such handler",
        "fixed_code": "for a 500 internal server error is used.  If no such handler",
        "patch": "@@ -1302,7 +1302,7 @@ def handle_exception(self, e):\n         \"\"\"Default exception handling that kicks in when an exception\n         occours that is not catched.  In debug mode the exception will\n         be re-raised immediately, otherwise it is logged and the handler\n-        for an 500 internal server error is used.  If no such handler\n+        for a 500 internal server error is used.  If no such handler\n         exists, a default 500 internal server error message is displayed.\n \n         .. versionadded: 0.3"
    },
    {
        "commit_id": "931dcc4c80331d372d70d7a0a5c8e6d49223e2bf",
        "commit_message": "Fixed a doc bug and added distribtue docs.",
        "commit_url": "https://github.com/pallets/flask/commit/931dcc4c80331d372d70d7a0a5c8e6d49223e2bf",
        "buggy_code": "kind of string and be used as category.",
        "fixed_code": "kind of string can be used as category.",
        "patch": "@@ -230,7 +230,7 @@ def flash(message, category='message'):\n                      are recommended: ``'message'`` for any kind of message,\n                      ``'error'`` for errors, ``'info'`` for information\n                      messages and ``'warning'`` for warnings.  However any\n-                     kind of string and be used as category.\n+                     kind of string can be used as category.\n     \"\"\"\n     session.setdefault('_flashes', []).append((category, message))\n "
    },
    {
        "commit_id": "a5a41d40aaa9f6ed70b487133ddaf48ceb3d054f",
        "commit_message": "Fix typo.",
        "commit_url": "https://github.com/pallets/flask/commit/a5a41d40aaa9f6ed70b487133ddaf48ceb3d054f",
        "buggy_code": "set :attr:`~flask.Flask.request_class` to your subclass.",
        "fixed_code": "set :attr:`~flask.Flask.response_class` to your subclass.",
        "patch": "@@ -85,7 +85,7 @@ class Response(ResponseBase):\n     :meth:`~flask.Flask.make_response` will take care of that for you.\n \n     If you want to replace the response object used you can subclass this and\n-    set :attr:`~flask.Flask.request_class` to your subclass.\n+    set :attr:`~flask.Flask.response_class` to your subclass.\n     \"\"\"\n     default_mimetype = 'text/html'\n "
    },
    {
        "commit_id": "574e81f9c8bbdc41958e1e7a7613633b091101f8",
        "commit_message": "Fixed a bug in setup.py",
        "commit_url": "https://github.com/pallets/flask/commit/574e81f9c8bbdc41958e1e7a7613633b091101f8",
        "buggy_code": "modules=['flask'],",
        "fixed_code": "py_modules=['flask'],",
        "patch": "@@ -9,7 +9,7 @@\n     author='Armin Ronacher',\n     author_email='armin.ronacher@active-4.com',\n     description='A microframework based on Werkzeug, Jinja2 and good intentions',\n-    modules=['flask'],\n+    py_modules=['flask'],\n     zip_safe=False,\n     platforms='any',\n     install_requires=["
    }
]